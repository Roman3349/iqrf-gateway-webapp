!function(I){var g={};function n(e){if(g[e])return g[e].exports;var i=g[e]={i:e,l:!1,exports:{}};return I[e].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=I,n.c=g,n.d=function(I,g,e){n.o(I,g)||Object.defineProperty(I,g,{enumerable:!0,get:e})},n.r=function(I){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(I,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(I,"__esModule",{value:!0})},n.t=function(I,g){if(1&g&&(I=n(I)),8&g)return I;if(4&g&&"object"==typeof I&&I&&I.__esModule)return I;var e=Object.create(null);if(n.r(e),Object.defineProperty(e,"default",{enumerable:!0,value:I}),2&g&&"string"!=typeof I)for(var i in I)n.d(e,i,function(g){return I[g]}.bind(null,i));return e},n.n=function(I){var g=I&&I.__esModule?function(){return I.default}:function(){return I};return n.d(g,"a",g),g},n.o=function(I,g){return Object.prototype.hasOwnProperty.call(I,g)},n.p="",n(n.s=98)}({29:function(module,exports,__webpack_require__){eval('(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory();\n\telse {}\n})(typeof self !== \'undefined\' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== \'undefined\' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: \'Module\' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, \'__esModule\', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === \'object\' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, \'default\', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != \'string\') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module[\'default\']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, \'a\', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = "";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 4);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n"use strict";\n\nObject.defineProperty(exports, "__esModule", { value: true });\nexports.ExpressionDescriptor = void 0;\nvar stringUtilities_1 = __webpack_require__(1);\nvar cronParser_1 = __webpack_require__(2);\nvar ExpressionDescriptor = (function () {\n    function ExpressionDescriptor(expression, options) {\n        this.expression = expression;\n        this.options = options;\n        this.expressionParts = new Array(5);\n        if (ExpressionDescriptor.locales[options.locale]) {\n            this.i18n = ExpressionDescriptor.locales[options.locale];\n        }\n        else {\n            console.warn("Locale \'" + options.locale + "\' could not be found; falling back to \'en\'.");\n            this.i18n = ExpressionDescriptor.locales["en"];\n        }\n        if (options.use24HourTimeFormat === undefined) {\n            options.use24HourTimeFormat = this.i18n.use24HourTimeFormatByDefault();\n        }\n    }\n    ExpressionDescriptor.toString = function (expression, _a) {\n        var _b = _a === void 0 ? {} : _a, _c = _b.throwExceptionOnParseError, throwExceptionOnParseError = _c === void 0 ? true : _c, _d = _b.verbose, verbose = _d === void 0 ? false : _d, _e = _b.dayOfWeekStartIndexZero, dayOfWeekStartIndexZero = _e === void 0 ? true : _e, use24HourTimeFormat = _b.use24HourTimeFormat, _f = _b.locale, locale = _f === void 0 ? "en" : _f;\n        var options = {\n            throwExceptionOnParseError: throwExceptionOnParseError,\n            verbose: verbose,\n            dayOfWeekStartIndexZero: dayOfWeekStartIndexZero,\n            use24HourTimeFormat: use24HourTimeFormat,\n            locale: locale,\n        };\n        var descripter = new ExpressionDescriptor(expression, options);\n        return descripter.getFullDescription();\n    };\n    ExpressionDescriptor.initialize = function (localesLoader) {\n        ExpressionDescriptor.specialCharacters = ["/", "-", ",", "*"];\n        localesLoader.load(ExpressionDescriptor.locales);\n    };\n    ExpressionDescriptor.prototype.getFullDescription = function () {\n        var description = "";\n        try {\n            var parser = new cronParser_1.CronParser(this.expression, this.options.dayOfWeekStartIndexZero);\n            this.expressionParts = parser.parse();\n            var timeSegment = this.getTimeOfDayDescription();\n            var dayOfMonthDesc = this.getDayOfMonthDescription();\n            var monthDesc = this.getMonthDescription();\n            var dayOfWeekDesc = this.getDayOfWeekDescription();\n            var yearDesc = this.getYearDescription();\n            description += timeSegment + dayOfMonthDesc + dayOfWeekDesc + monthDesc + yearDesc;\n            description = this.transformVerbosity(description, this.options.verbose);\n            description = description.charAt(0).toLocaleUpperCase() + description.substr(1);\n        }\n        catch (ex) {\n            if (!this.options.throwExceptionOnParseError) {\n                description = this.i18n.anErrorOccuredWhenGeneratingTheExpressionD();\n            }\n            else {\n                throw "" + ex;\n            }\n        }\n        return description;\n    };\n    ExpressionDescriptor.prototype.getTimeOfDayDescription = function () {\n        var secondsExpression = this.expressionParts[0];\n        var minuteExpression = this.expressionParts[1];\n        var hourExpression = this.expressionParts[2];\n        var description = "";\n        if (!stringUtilities_1.StringUtilities.containsAny(minuteExpression, ExpressionDescriptor.specialCharacters) &&\n            !stringUtilities_1.StringUtilities.containsAny(hourExpression, ExpressionDescriptor.specialCharacters) &&\n            !stringUtilities_1.StringUtilities.containsAny(secondsExpression, ExpressionDescriptor.specialCharacters)) {\n            description += this.i18n.atSpace() + this.formatTime(hourExpression, minuteExpression, secondsExpression);\n        }\n        else if (!secondsExpression &&\n            minuteExpression.indexOf("-") > -1 &&\n            !(minuteExpression.indexOf(",") > -1) &&\n            !(minuteExpression.indexOf("/") > -1) &&\n            !stringUtilities_1.StringUtilities.containsAny(hourExpression, ExpressionDescriptor.specialCharacters)) {\n            var minuteParts = minuteExpression.split("-");\n            description += stringUtilities_1.StringUtilities.format(this.i18n.everyMinuteBetweenX0AndX1(), this.formatTime(hourExpression, minuteParts[0], ""), this.formatTime(hourExpression, minuteParts[1], ""));\n        }\n        else if (!secondsExpression &&\n            hourExpression.indexOf(",") > -1 &&\n            hourExpression.indexOf("-") == -1 &&\n            hourExpression.indexOf("/") == -1 &&\n            !stringUtilities_1.StringUtilities.containsAny(minuteExpression, ExpressionDescriptor.specialCharacters)) {\n            var hourParts = hourExpression.split(",");\n            description += this.i18n.at();\n            for (var i = 0; i < hourParts.length; i++) {\n                description += " ";\n                description += this.formatTime(hourParts[i], minuteExpression, "");\n                if (i < hourParts.length - 2) {\n                    description += ",";\n                }\n                if (i == hourParts.length - 2) {\n                    description += this.i18n.spaceAnd();\n                }\n            }\n        }\n        else {\n            var secondsDescription = this.getSecondsDescription();\n            var minutesDescription = this.getMinutesDescription();\n            var hoursDescription = this.getHoursDescription();\n            description += secondsDescription;\n            if (description.length > 0 && minutesDescription.length > 0) {\n                description += ", ";\n            }\n            description += minutesDescription;\n            if (description.length > 0 && hoursDescription.length > 0) {\n                description += ", ";\n            }\n            description += hoursDescription;\n        }\n        return description;\n    };\n    ExpressionDescriptor.prototype.getSecondsDescription = function () {\n        var _this = this;\n        var description = this.getSegmentDescription(this.expressionParts[0], this.i18n.everySecond(), function (s) {\n            return s;\n        }, function (s) {\n            return stringUtilities_1.StringUtilities.format(_this.i18n.everyX0Seconds(), s);\n        }, function (s) {\n            return _this.i18n.secondsX0ThroughX1PastTheMinute();\n        }, function (s) {\n            return s == "0"\n                ? ""\n                : parseInt(s) < 20\n                    ? _this.i18n.atX0SecondsPastTheMinute()\n                    : _this.i18n.atX0SecondsPastTheMinuteGt20() || _this.i18n.atX0SecondsPastTheMinute();\n        });\n        return description;\n    };\n    ExpressionDescriptor.prototype.getMinutesDescription = function () {\n        var _this = this;\n        var secondsExpression = this.expressionParts[0];\n        var hourExpression = this.expressionParts[2];\n        var description = this.getSegmentDescription(this.expressionParts[1], this.i18n.everyMinute(), function (s) {\n            return s;\n        }, function (s) {\n            return stringUtilities_1.StringUtilities.format(_this.i18n.everyX0Minutes(), s);\n        }, function (s) {\n            return _this.i18n.minutesX0ThroughX1PastTheHour();\n        }, function (s) {\n            try {\n                return s == "0" && hourExpression.indexOf("/") == -1 && secondsExpression == ""\n                    ? _this.i18n.everyHour()\n                    : parseInt(s) < 20\n                        ? _this.i18n.atX0MinutesPastTheHour()\n                        : _this.i18n.atX0MinutesPastTheHourGt20() || _this.i18n.atX0MinutesPastTheHour();\n            }\n            catch (e) {\n                return _this.i18n.atX0MinutesPastTheHour();\n            }\n        });\n        return description;\n    };\n    ExpressionDescriptor.prototype.getHoursDescription = function () {\n        var _this = this;\n        var expression = this.expressionParts[2];\n        var description = this.getSegmentDescription(expression, this.i18n.everyHour(), function (s) {\n            return _this.formatTime(s, "0", "");\n        }, function (s) {\n            return stringUtilities_1.StringUtilities.format(_this.i18n.everyX0Hours(), s);\n        }, function (s) {\n            return _this.i18n.betweenX0AndX1();\n        }, function (s) {\n            return _this.i18n.atX0();\n        });\n        return description;\n    };\n    ExpressionDescriptor.prototype.getDayOfWeekDescription = function () {\n        var _this = this;\n        var daysOfWeekNames = this.i18n.daysOfTheWeek();\n        var description = null;\n        if (this.expressionParts[5] == "*") {\n            description = "";\n        }\n        else {\n            description = this.getSegmentDescription(this.expressionParts[5], this.i18n.commaEveryDay(), function (s) {\n                var exp = s;\n                if (s.indexOf("#") > -1) {\n                    exp = s.substr(0, s.indexOf("#"));\n                }\n                else if (s.indexOf("L") > -1) {\n                    exp = exp.replace("L", "");\n                }\n                return daysOfWeekNames[parseInt(exp)];\n            }, function (s) {\n                if (parseInt(s) == 1) {\n                    return "";\n                }\n                else {\n                    return stringUtilities_1.StringUtilities.format(_this.i18n.commaEveryX0DaysOfTheWeek(), s);\n                }\n            }, function (s) {\n                return _this.i18n.commaX0ThroughX1();\n            }, function (s) {\n                var format = null;\n                if (s.indexOf("#") > -1) {\n                    var dayOfWeekOfMonthNumber = s.substring(s.indexOf("#") + 1);\n                    var dayOfWeekOfMonthDescription = null;\n                    switch (dayOfWeekOfMonthNumber) {\n                        case "1":\n                            dayOfWeekOfMonthDescription = _this.i18n.first();\n                            break;\n                        case "2":\n                            dayOfWeekOfMonthDescription = _this.i18n.second();\n                            break;\n                        case "3":\n                            dayOfWeekOfMonthDescription = _this.i18n.third();\n                            break;\n                        case "4":\n                            dayOfWeekOfMonthDescription = _this.i18n.fourth();\n                            break;\n                        case "5":\n                            dayOfWeekOfMonthDescription = _this.i18n.fifth();\n                            break;\n                    }\n                    format = _this.i18n.commaOnThe() + dayOfWeekOfMonthDescription + _this.i18n.spaceX0OfTheMonth();\n                }\n                else if (s.indexOf("L") > -1) {\n                    format = _this.i18n.commaOnTheLastX0OfTheMonth();\n                }\n                else {\n                    var domSpecified = _this.expressionParts[3] != "*";\n                    format = domSpecified ? _this.i18n.commaAndOnX0() : _this.i18n.commaOnlyOnX0();\n                }\n                return format;\n            });\n        }\n        return description;\n    };\n    ExpressionDescriptor.prototype.getMonthDescription = function () {\n        var _this = this;\n        var monthNames = this.i18n.monthsOfTheYear();\n        var description = this.getSegmentDescription(this.expressionParts[4], "", function (s) {\n            return monthNames[parseInt(s) - 1];\n        }, function (s) {\n            if (parseInt(s) == 1) {\n                return "";\n            }\n            else {\n                return stringUtilities_1.StringUtilities.format(_this.i18n.commaEveryX0Months(), s);\n            }\n        }, function (s) {\n            return _this.i18n.commaMonthX0ThroughMonthX1() || _this.i18n.commaX0ThroughX1();\n        }, function (s) {\n            return _this.i18n.commaOnlyInMonthX0 ? _this.i18n.commaOnlyInMonthX0() : _this.i18n.commaOnlyInX0();\n        });\n        return description;\n    };\n    ExpressionDescriptor.prototype.getDayOfMonthDescription = function () {\n        var _this = this;\n        var description = null;\n        var expression = this.expressionParts[3];\n        switch (expression) {\n            case "L":\n                description = this.i18n.commaOnTheLastDayOfTheMonth();\n                break;\n            case "WL":\n            case "LW":\n                description = this.i18n.commaOnTheLastWeekdayOfTheMonth();\n                break;\n            default:\n                var weekDayNumberMatches = expression.match(/(\\d{1,2}W)|(W\\d{1,2})/);\n                if (weekDayNumberMatches) {\n                    var dayNumber = parseInt(weekDayNumberMatches[0].replace("W", ""));\n                    var dayString = dayNumber == 1\n                        ? this.i18n.firstWeekday()\n                        : stringUtilities_1.StringUtilities.format(this.i18n.weekdayNearestDayX0(), dayNumber.toString());\n                    description = stringUtilities_1.StringUtilities.format(this.i18n.commaOnTheX0OfTheMonth(), dayString);\n                    break;\n                }\n                else {\n                    var lastDayOffSetMatches = expression.match(/L-(\\d{1,2})/);\n                    if (lastDayOffSetMatches) {\n                        var offSetDays = lastDayOffSetMatches[1];\n                        description = stringUtilities_1.StringUtilities.format(this.i18n.commaDaysBeforeTheLastDayOfTheMonth(), offSetDays);\n                        break;\n                    }\n                    else if (expression == "*" && this.expressionParts[5] != "*") {\n                        return "";\n                    }\n                    else {\n                        description = this.getSegmentDescription(expression, this.i18n.commaEveryDay(), function (s) {\n                            return s == "L"\n                                ? _this.i18n.lastDay()\n                                : _this.i18n.dayX0\n                                    ? stringUtilities_1.StringUtilities.format(_this.i18n.dayX0(), s)\n                                    : s;\n                        }, function (s) {\n                            return s == "1" ? _this.i18n.commaEveryDay() : _this.i18n.commaEveryX0Days();\n                        }, function (s) {\n                            return _this.i18n.commaBetweenDayX0AndX1OfTheMonth();\n                        }, function (s) {\n                            return _this.i18n.commaOnDayX0OfTheMonth();\n                        });\n                    }\n                    break;\n                }\n        }\n        return description;\n    };\n    ExpressionDescriptor.prototype.getYearDescription = function () {\n        var _this = this;\n        var description = this.getSegmentDescription(this.expressionParts[6], "", function (s) {\n            return /^\\d+$/.test(s) ? new Date(parseInt(s), 1).getFullYear().toString() : s;\n        }, function (s) {\n            return stringUtilities_1.StringUtilities.format(_this.i18n.commaEveryX0Years(), s);\n        }, function (s) {\n            return _this.i18n.commaYearX0ThroughYearX1() || _this.i18n.commaX0ThroughX1();\n        }, function (s) {\n            return _this.i18n.commaOnlyInYearX0 ? _this.i18n.commaOnlyInYearX0() : _this.i18n.commaOnlyInX0();\n        });\n        return description;\n    };\n    ExpressionDescriptor.prototype.getSegmentDescription = function (expression, allDescription, getSingleItemDescription, getIncrementDescriptionFormat, getRangeDescriptionFormat, getDescriptionFormat) {\n        var description = null;\n        var doesExpressionContainIncrement = expression.indexOf("/") > -1;\n        var doesExpressionContainRange = expression.indexOf("-") > -1;\n        var doesExpressionContainMultipleValues = expression.indexOf(",") > -1;\n        if (!expression) {\n            description = "";\n        }\n        else if (expression === "*") {\n            description = allDescription;\n        }\n        else if (!doesExpressionContainIncrement && !doesExpressionContainRange && !doesExpressionContainMultipleValues) {\n            description = stringUtilities_1.StringUtilities.format(getDescriptionFormat(expression), getSingleItemDescription(expression));\n        }\n        else if (doesExpressionContainMultipleValues) {\n            var segments = expression.split(",");\n            var descriptionContent = "";\n            for (var i = 0; i < segments.length; i++) {\n                if (i > 0 && segments.length > 2) {\n                    descriptionContent += ",";\n                    if (i < segments.length - 1) {\n                        descriptionContent += " ";\n                    }\n                }\n                if (i > 0 && segments.length > 1 && (i == segments.length - 1 || segments.length == 2)) {\n                    descriptionContent += this.i18n.spaceAnd() + " ";\n                }\n                if (segments[i].indexOf("/") > -1 || segments[i].indexOf("-") > -1) {\n                    var isSegmentRangeWithoutIncrement = segments[i].indexOf("-") > -1 && segments[i].indexOf("/") == -1;\n                    var currentDescriptionContent = this.getSegmentDescription(segments[i], allDescription, getSingleItemDescription, getIncrementDescriptionFormat, isSegmentRangeWithoutIncrement ? this.i18n.commaX0ThroughX1 : getRangeDescriptionFormat, getDescriptionFormat);\n                    if (isSegmentRangeWithoutIncrement) {\n                        currentDescriptionContent = currentDescriptionContent.replace(", ", "");\n                    }\n                    descriptionContent += currentDescriptionContent;\n                }\n                else if (!doesExpressionContainIncrement) {\n                    descriptionContent += getSingleItemDescription(segments[i]);\n                }\n                else {\n                    descriptionContent += this.getSegmentDescription(segments[i], allDescription, getSingleItemDescription, getIncrementDescriptionFormat, getRangeDescriptionFormat, getDescriptionFormat);\n                }\n            }\n            if (!doesExpressionContainIncrement) {\n                description = stringUtilities_1.StringUtilities.format(getDescriptionFormat(expression), descriptionContent);\n            }\n            else {\n                description = descriptionContent;\n            }\n        }\n        else if (doesExpressionContainIncrement) {\n            var segments = expression.split("/");\n            description = stringUtilities_1.StringUtilities.format(getIncrementDescriptionFormat(segments[1]), segments[1]);\n            if (segments[0].indexOf("-") > -1) {\n                var rangeSegmentDescription = this.generateRangeSegmentDescription(segments[0], getRangeDescriptionFormat, getSingleItemDescription);\n                if (rangeSegmentDescription.indexOf(", ") != 0) {\n                    description += ", ";\n                }\n                description += rangeSegmentDescription;\n            }\n            else if (segments[0].indexOf("*") == -1) {\n                var rangeItemDescription = stringUtilities_1.StringUtilities.format(getDescriptionFormat(segments[0]), getSingleItemDescription(segments[0]));\n                rangeItemDescription = rangeItemDescription.replace(", ", "");\n                description += stringUtilities_1.StringUtilities.format(this.i18n.commaStartingX0(), rangeItemDescription);\n            }\n        }\n        else if (doesExpressionContainRange) {\n            description = this.generateRangeSegmentDescription(expression, getRangeDescriptionFormat, getSingleItemDescription);\n        }\n        return description;\n    };\n    ExpressionDescriptor.prototype.generateRangeSegmentDescription = function (rangeExpression, getRangeDescriptionFormat, getSingleItemDescription) {\n        var description = "";\n        var rangeSegments = rangeExpression.split("-");\n        var rangeSegment1Description = getSingleItemDescription(rangeSegments[0]);\n        var rangeSegment2Description = getSingleItemDescription(rangeSegments[1]);\n        rangeSegment2Description = rangeSegment2Description.replace(":00", ":59");\n        var rangeDescriptionFormat = getRangeDescriptionFormat(rangeExpression);\n        description += stringUtilities_1.StringUtilities.format(rangeDescriptionFormat, rangeSegment1Description, rangeSegment2Description);\n        return description;\n    };\n    ExpressionDescriptor.prototype.formatTime = function (hourExpression, minuteExpression, secondExpression) {\n        var hour = parseInt(hourExpression);\n        var period = "";\n        var setPeriodBeforeTime = false;\n        if (!this.options.use24HourTimeFormat) {\n            setPeriodBeforeTime = this.i18n.setPeriodBeforeTime && this.i18n.setPeriodBeforeTime();\n            period = setPeriodBeforeTime ? this.getPeriod(hour) + " " : " " + this.getPeriod(hour);\n            if (hour > 12) {\n                hour -= 12;\n            }\n            if (hour === 0) {\n                hour = 12;\n            }\n        }\n        var minute = minuteExpression;\n        var second = "";\n        if (secondExpression) {\n            second = ":" + ("00" + secondExpression).substring(secondExpression.length);\n        }\n        return "" + (setPeriodBeforeTime ? period : "") + ("00" + hour.toString()).substring(hour.toString().length) + ":" + ("00" + minute.toString()).substring(minute.toString().length) + second + (!setPeriodBeforeTime ? period : "");\n    };\n    ExpressionDescriptor.prototype.transformVerbosity = function (description, useVerboseFormat) {\n        if (!useVerboseFormat) {\n            description = description.replace(new RegExp(", " + this.i18n.everyMinute(), "g"), "");\n            description = description.replace(new RegExp(", " + this.i18n.everyHour(), "g"), "");\n            description = description.replace(new RegExp(this.i18n.commaEveryDay(), "g"), "");\n            description = description.replace(/\\, ?$/, "");\n        }\n        return description;\n    };\n    ExpressionDescriptor.prototype.getPeriod = function (hour) {\n        return hour >= 12 ? (this.i18n.pm && this.i18n.pm()) || "PM" : (this.i18n.am && this.i18n.am()) || "AM";\n    };\n    ExpressionDescriptor.locales = {};\n    return ExpressionDescriptor;\n}());\nexports.ExpressionDescriptor = ExpressionDescriptor;\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n"use strict";\n\nObject.defineProperty(exports, "__esModule", { value: true });\nexports.StringUtilities = void 0;\nvar StringUtilities = (function () {\n    function StringUtilities() {\n    }\n    StringUtilities.format = function (template) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        return template.replace(/%s/g, function () {\n            return values.shift();\n        });\n    };\n    StringUtilities.containsAny = function (text, searchStrings) {\n        return searchStrings.some(function (c) {\n            return text.indexOf(c) > -1;\n        });\n    };\n    return StringUtilities;\n}());\nexports.StringUtilities = StringUtilities;\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n"use strict";\n\nObject.defineProperty(exports, "__esModule", { value: true });\nexports.CronParser = void 0;\nvar CronParser = (function () {\n    function CronParser(expression, dayOfWeekStartIndexZero) {\n        if (dayOfWeekStartIndexZero === void 0) { dayOfWeekStartIndexZero = true; }\n        this.expression = expression;\n        this.dayOfWeekStartIndexZero = dayOfWeekStartIndexZero;\n    }\n    CronParser.prototype.parse = function () {\n        var parsed = this.extractParts(this.expression);\n        this.normalize(parsed);\n        this.validate(parsed);\n        return parsed;\n    };\n    CronParser.prototype.extractParts = function (expression) {\n        if (!this.expression) {\n            throw new Error("Expression is empty");\n        }\n        var parsed = expression.trim().split(/[ ]+/);\n        if (parsed.length < 5) {\n            throw new Error("Expression has only " + parsed.length + " part" + (parsed.length == 1 ? "" : "s") + ". At least 5 parts are required.");\n        }\n        else if (parsed.length == 5) {\n            parsed.unshift("");\n            parsed.push("");\n        }\n        else if (parsed.length == 6) {\n            if (/\\d{4}$/.test(parsed[5])) {\n                parsed.unshift("");\n            }\n            else {\n                parsed.push("");\n            }\n        }\n        else if (parsed.length > 7) {\n            throw new Error("Expression has " + parsed.length + " parts; too many!");\n        }\n        return parsed;\n    };\n    CronParser.prototype.normalize = function (expressionParts) {\n        var _this = this;\n        expressionParts[3] = expressionParts[3].replace("?", "*");\n        expressionParts[5] = expressionParts[5].replace("?", "*");\n        expressionParts[2] = expressionParts[2].replace("?", "*");\n        if (expressionParts[0].indexOf("0/") == 0) {\n            expressionParts[0] = expressionParts[0].replace("0/", "*/");\n        }\n        if (expressionParts[1].indexOf("0/") == 0) {\n            expressionParts[1] = expressionParts[1].replace("0/", "*/");\n        }\n        if (expressionParts[2].indexOf("0/") == 0) {\n            expressionParts[2] = expressionParts[2].replace("0/", "*/");\n        }\n        if (expressionParts[3].indexOf("1/") == 0) {\n            expressionParts[3] = expressionParts[3].replace("1/", "*/");\n        }\n        if (expressionParts[4].indexOf("1/") == 0) {\n            expressionParts[4] = expressionParts[4].replace("1/", "*/");\n        }\n        if (expressionParts[6].indexOf("1/") == 0) {\n            expressionParts[6] = expressionParts[6].replace("1/", "*/");\n        }\n        expressionParts[5] = expressionParts[5].replace(/(^\\d)|([^#/\\s]\\d)/g, function (t) {\n            var dowDigits = t.replace(/\\D/, "");\n            var dowDigitsAdjusted = dowDigits;\n            if (_this.dayOfWeekStartIndexZero) {\n                if (dowDigits == "7") {\n                    dowDigitsAdjusted = "0";\n                }\n            }\n            else {\n                dowDigitsAdjusted = (parseInt(dowDigits) - 1).toString();\n            }\n            return t.replace(dowDigits, dowDigitsAdjusted);\n        });\n        if (expressionParts[5] == "L") {\n            expressionParts[5] = "6";\n        }\n        if (expressionParts[3] == "?") {\n            expressionParts[3] = "*";\n        }\n        if (expressionParts[3].indexOf("W") > -1 &&\n            (expressionParts[3].indexOf(",") > -1 || expressionParts[3].indexOf("-") > -1)) {\n            throw new Error("The \'W\' character can be specified only when the day-of-month is a single day, not a range or list of days.");\n        }\n        var days = {\n            SUN: 0,\n            MON: 1,\n            TUE: 2,\n            WED: 3,\n            THU: 4,\n            FRI: 5,\n            SAT: 6,\n        };\n        for (var day in days) {\n            expressionParts[5] = expressionParts[5].replace(new RegExp(day, "gi"), days[day].toString());\n        }\n        var months = {\n            JAN: 1,\n            FEB: 2,\n            MAR: 3,\n            APR: 4,\n            MAY: 5,\n            JUN: 6,\n            JUL: 7,\n            AUG: 8,\n            SEP: 9,\n            OCT: 10,\n            NOV: 11,\n            DEC: 12,\n        };\n        for (var month in months) {\n            expressionParts[4] = expressionParts[4].replace(new RegExp(month, "gi"), months[month].toString());\n        }\n        if (expressionParts[0] == "0") {\n            expressionParts[0] = "";\n        }\n        if (!/\\*|\\-|\\,|\\//.test(expressionParts[2]) &&\n            (/\\*|\\//.test(expressionParts[1]) || /\\*|\\//.test(expressionParts[0]))) {\n            expressionParts[2] += "-" + expressionParts[2];\n        }\n        for (var i = 0; i < expressionParts.length; i++) {\n            if (expressionParts[i] == "*/1") {\n                expressionParts[i] = "*";\n            }\n            if (expressionParts[i].indexOf("/") > -1 && !/^\\*|\\-|\\,/.test(expressionParts[i])) {\n                var stepRangeThrough = null;\n                switch (i) {\n                    case 4:\n                        stepRangeThrough = "12";\n                        break;\n                    case 5:\n                        stepRangeThrough = "6";\n                        break;\n                    case 6:\n                        stepRangeThrough = "9999";\n                        break;\n                    default:\n                        stepRangeThrough = null;\n                        break;\n                }\n                if (stepRangeThrough != null) {\n                    var parts = expressionParts[i].split("/");\n                    expressionParts[i] = parts[0] + "-" + stepRangeThrough + "/" + parts[1];\n                }\n            }\n        }\n    };\n    CronParser.prototype.validate = function (parsed) {\n        this.assertNoInvalidCharacters("DOW", parsed[5]);\n        this.assertNoInvalidCharacters("DOM", parsed[3]);\n    };\n    CronParser.prototype.assertNoInvalidCharacters = function (partDescription, expression) {\n        var invalidChars = expression.match(/[A-KM-VX-Z]+/gi);\n        if (invalidChars && invalidChars.length) {\n            throw new Error(partDescription + " part contains invalid values: \'" + invalidChars.toString() + "\'");\n        }\n    };\n    return CronParser;\n}());\nexports.CronParser = CronParser;\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n"use strict";\n\nObject.defineProperty(exports, "__esModule", { value: true });\nexports.en = void 0;\nvar en = (function () {\n    function en() {\n    }\n    en.prototype.atX0SecondsPastTheMinuteGt20 = function () {\n        return null;\n    };\n    en.prototype.atX0MinutesPastTheHourGt20 = function () {\n        return null;\n    };\n    en.prototype.commaMonthX0ThroughMonthX1 = function () {\n        return null;\n    };\n    en.prototype.commaYearX0ThroughYearX1 = function () {\n        return null;\n    };\n    en.prototype.use24HourTimeFormatByDefault = function () {\n        return false;\n    };\n    en.prototype.anErrorOccuredWhenGeneratingTheExpressionD = function () {\n        return "An error occured when generating the expression description.  Check the cron expression syntax.";\n    };\n    en.prototype.everyMinute = function () {\n        return "every minute";\n    };\n    en.prototype.everyHour = function () {\n        return "every hour";\n    };\n    en.prototype.atSpace = function () {\n        return "At ";\n    };\n    en.prototype.everyMinuteBetweenX0AndX1 = function () {\n        return "Every minute between %s and %s";\n    };\n    en.prototype.at = function () {\n        return "At";\n    };\n    en.prototype.spaceAnd = function () {\n        return " and";\n    };\n    en.prototype.everySecond = function () {\n        return "every second";\n    };\n    en.prototype.everyX0Seconds = function () {\n        return "every %s seconds";\n    };\n    en.prototype.secondsX0ThroughX1PastTheMinute = function () {\n        return "seconds %s through %s past the minute";\n    };\n    en.prototype.atX0SecondsPastTheMinute = function () {\n        return "at %s seconds past the minute";\n    };\n    en.prototype.everyX0Minutes = function () {\n        return "every %s minutes";\n    };\n    en.prototype.minutesX0ThroughX1PastTheHour = function () {\n        return "minutes %s through %s past the hour";\n    };\n    en.prototype.atX0MinutesPastTheHour = function () {\n        return "at %s minutes past the hour";\n    };\n    en.prototype.everyX0Hours = function () {\n        return "every %s hours";\n    };\n    en.prototype.betweenX0AndX1 = function () {\n        return "between %s and %s";\n    };\n    en.prototype.atX0 = function () {\n        return "at %s";\n    };\n    en.prototype.commaEveryDay = function () {\n        return ", every day";\n    };\n    en.prototype.commaEveryX0DaysOfTheWeek = function () {\n        return ", every %s days of the week";\n    };\n    en.prototype.commaX0ThroughX1 = function () {\n        return ", %s through %s";\n    };\n    en.prototype.first = function () {\n        return "first";\n    };\n    en.prototype.second = function () {\n        return "second";\n    };\n    en.prototype.third = function () {\n        return "third";\n    };\n    en.prototype.fourth = function () {\n        return "fourth";\n    };\n    en.prototype.fifth = function () {\n        return "fifth";\n    };\n    en.prototype.commaOnThe = function () {\n        return ", on the ";\n    };\n    en.prototype.spaceX0OfTheMonth = function () {\n        return " %s of the month";\n    };\n    en.prototype.lastDay = function () {\n        return "the last day";\n    };\n    en.prototype.commaOnTheLastX0OfTheMonth = function () {\n        return ", on the last %s of the month";\n    };\n    en.prototype.commaOnlyOnX0 = function () {\n        return ", only on %s";\n    };\n    en.prototype.commaAndOnX0 = function () {\n        return ", and on %s";\n    };\n    en.prototype.commaEveryX0Months = function () {\n        return ", every %s months";\n    };\n    en.prototype.commaOnlyInX0 = function () {\n        return ", only in %s";\n    };\n    en.prototype.commaOnTheLastDayOfTheMonth = function () {\n        return ", on the last day of the month";\n    };\n    en.prototype.commaOnTheLastWeekdayOfTheMonth = function () {\n        return ", on the last weekday of the month";\n    };\n    en.prototype.commaDaysBeforeTheLastDayOfTheMonth = function () {\n        return ", %s days before the last day of the month";\n    };\n    en.prototype.firstWeekday = function () {\n        return "first weekday";\n    };\n    en.prototype.weekdayNearestDayX0 = function () {\n        return "weekday nearest day %s";\n    };\n    en.prototype.commaOnTheX0OfTheMonth = function () {\n        return ", on the %s of the month";\n    };\n    en.prototype.commaEveryX0Days = function () {\n        return ", every %s days";\n    };\n    en.prototype.commaBetweenDayX0AndX1OfTheMonth = function () {\n        return ", between day %s and %s of the month";\n    };\n    en.prototype.commaOnDayX0OfTheMonth = function () {\n        return ", on day %s of the month";\n    };\n    en.prototype.commaEveryHour = function () {\n        return ", every hour";\n    };\n    en.prototype.commaEveryX0Years = function () {\n        return ", every %s years";\n    };\n    en.prototype.commaStartingX0 = function () {\n        return ", starting %s";\n    };\n    en.prototype.daysOfTheWeek = function () {\n        return ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"];\n    };\n    en.prototype.monthsOfTheYear = function () {\n        return [\n            "January",\n            "February",\n            "March",\n            "April",\n            "May",\n            "June",\n            "July",\n            "August",\n            "September",\n            "October",\n            "November",\n            "December",\n        ];\n    };\n    return en;\n}());\nexports.en = en;\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n"use strict";\n\nObject.defineProperty(exports, "__esModule", { value: true });\nexports.toString = void 0;\nvar expressionDescriptor_1 = __webpack_require__(0);\nvar enLocaleLoader_1 = __webpack_require__(5);\nexpressionDescriptor_1.ExpressionDescriptor.initialize(new enLocaleLoader_1.enLocaleLoader());\nexports.default = expressionDescriptor_1.ExpressionDescriptor;\nvar toString = expressionDescriptor_1.ExpressionDescriptor.toString;\nexports.toString = toString;\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n"use strict";\n\nObject.defineProperty(exports, "__esModule", { value: true });\nexports.enLocaleLoader = void 0;\nvar en_1 = __webpack_require__(3);\nvar enLocaleLoader = (function () {\n    function enLocaleLoader() {\n    }\n    enLocaleLoader.prototype.load = function (availableLocales) {\n        availableLocales["en"] = new en_1.en();\n    };\n    return enLocaleLoader;\n}());\nexports.enLocaleLoader = enLocaleLoader;\n\n\n/***/ })\n/******/ ]);\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY3JvbnN0cnVlL2Rpc3QvY3JvbnN0cnVlLmpzPzI3NzIiXSwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIHdlYnBhY2tVbml2ZXJzYWxNb2R1bGVEZWZpbml0aW9uKHJvb3QsIGZhY3RvcnkpIHtcblx0aWYodHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnICYmIHR5cGVvZiBtb2R1bGUgPT09ICdvYmplY3QnKVxuXHRcdG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeSgpO1xuXHRlbHNlIGlmKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZClcblx0XHRkZWZpbmUoXCJjcm9uc3RydWVcIiwgW10sIGZhY3RvcnkpO1xuXHRlbHNlIGlmKHR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0Jylcblx0XHRleHBvcnRzW1wiY3JvbnN0cnVlXCJdID0gZmFjdG9yeSgpO1xuXHRlbHNlXG5cdFx0cm9vdFtcImNyb25zdHJ1ZVwiXSA9IGZhY3RvcnkoKTtcbn0pKHR5cGVvZiBzZWxmICE9PSAndW5kZWZpbmVkJyA/IHNlbGYgOiB0aGlzLCBmdW5jdGlvbigpIHtcbnJldHVybiAvKioqKioqLyAoZnVuY3Rpb24obW9kdWxlcykgeyAvLyB3ZWJwYWNrQm9vdHN0cmFwXG4vKioqKioqLyBcdC8vIFRoZSBtb2R1bGUgY2FjaGVcbi8qKioqKiovIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcbi8qKioqKiovXG4vKioqKioqLyBcdC8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG4vKioqKioqLyBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcbi8qKioqKiovXG4vKioqKioqLyBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG4vKioqKioqLyBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcbi8qKioqKiovIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuLyoqKioqKi8gXHRcdH1cbi8qKioqKiovIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuLyoqKioqKi8gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbi8qKioqKiovIFx0XHRcdGk6IG1vZHVsZUlkLFxuLyoqKioqKi8gXHRcdFx0bDogZmFsc2UsXG4vKioqKioqLyBcdFx0XHRleHBvcnRzOiB7fVxuLyoqKioqKi8gXHRcdH07XG4vKioqKioqL1xuLyoqKioqKi8gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuLyoqKioqKi8gXHRcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuLyoqKioqKi9cbi8qKioqKiovIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4vKioqKioqLyBcdFx0bW9kdWxlLmwgPSB0cnVlO1xuLyoqKioqKi9cbi8qKioqKiovIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuLyoqKioqKi8gXHRcdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbi8qKioqKiovIFx0fVxuLyoqKioqKi9cbi8qKioqKiovXG4vKioqKioqLyBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4vKioqKioqLyBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG4vKioqKioqL1xuLyoqKioqKi8gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuLyoqKioqKi8gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuLyoqKioqKi9cbi8qKioqKiovIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4vKioqKioqLyBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuLyoqKioqKi8gXHRcdGlmKCFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywgbmFtZSkpIHtcbi8qKioqKiovIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZ2V0dGVyIH0pO1xuLyoqKioqKi8gXHRcdH1cbi8qKioqKiovIFx0fTtcbi8qKioqKiovXG4vKioqKioqLyBcdC8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbi8qKioqKiovIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yID0gZnVuY3Rpb24oZXhwb3J0cykge1xuLyoqKioqKi8gXHRcdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuLyoqKioqKi8gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG4vKioqKioqLyBcdFx0fVxuLyoqKioqKi8gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4vKioqKioqLyBcdH07XG4vKioqKioqL1xuLyoqKioqKi8gXHQvLyBjcmVhdGUgYSBmYWtlIG5hbWVzcGFjZSBvYmplY3Rcbi8qKioqKiovIFx0Ly8gbW9kZSAmIDE6IHZhbHVlIGlzIGEgbW9kdWxlIGlkLCByZXF1aXJlIGl0XG4vKioqKioqLyBcdC8vIG1vZGUgJiAyOiBtZXJnZSBhbGwgcHJvcGVydGllcyBvZiB2YWx1ZSBpbnRvIHRoZSBuc1xuLyoqKioqKi8gXHQvLyBtb2RlICYgNDogcmV0dXJuIHZhbHVlIHdoZW4gYWxyZWFkeSBucyBvYmplY3Rcbi8qKioqKiovIFx0Ly8gbW9kZSAmIDh8MTogYmVoYXZlIGxpa2UgcmVxdWlyZVxuLyoqKioqKi8gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnQgPSBmdW5jdGlvbih2YWx1ZSwgbW9kZSkge1xuLyoqKioqKi8gXHRcdGlmKG1vZGUgJiAxKSB2YWx1ZSA9IF9fd2VicGFja19yZXF1aXJlX18odmFsdWUpO1xuLyoqKioqKi8gXHRcdGlmKG1vZGUgJiA4KSByZXR1cm4gdmFsdWU7XG4vKioqKioqLyBcdFx0aWYoKG1vZGUgJiA0KSAmJiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmIHZhbHVlICYmIHZhbHVlLl9fZXNNb2R1bGUpIHJldHVybiB2YWx1ZTtcbi8qKioqKiovIFx0XHR2YXIgbnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuLyoqKioqKi8gXHRcdF9fd2VicGFja19yZXF1aXJlX18ucihucyk7XG4vKioqKioqLyBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG5zLCAnZGVmYXVsdCcsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHZhbHVlIH0pO1xuLyoqKioqKi8gXHRcdGlmKG1vZGUgJiAyICYmIHR5cGVvZiB2YWx1ZSAhPSAnc3RyaW5nJykgZm9yKHZhciBrZXkgaW4gdmFsdWUpIF9fd2VicGFja19yZXF1aXJlX18uZChucywga2V5LCBmdW5jdGlvbihrZXkpIHsgcmV0dXJuIHZhbHVlW2tleV07IH0uYmluZChudWxsLCBrZXkpKTtcbi8qKioqKiovIFx0XHRyZXR1cm4gbnM7XG4vKioqKioqLyBcdH07XG4vKioqKioqL1xuLyoqKioqKi8gXHQvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuLyoqKioqKi8gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSBmdW5jdGlvbihtb2R1bGUpIHtcbi8qKioqKiovIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbi8qKioqKiovIFx0XHRcdGZ1bmN0aW9uIGdldERlZmF1bHQoKSB7IHJldHVybiBtb2R1bGVbJ2RlZmF1bHQnXTsgfSA6XG4vKioqKioqLyBcdFx0XHRmdW5jdGlvbiBnZXRNb2R1bGVFeHBvcnRzKCkgeyByZXR1cm4gbW9kdWxlOyB9O1xuLyoqKioqKi8gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbi8qKioqKiovIFx0XHRyZXR1cm4gZ2V0dGVyO1xuLyoqKioqKi8gXHR9O1xuLyoqKioqKi9cbi8qKioqKiovIFx0Ly8gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsXG4vKioqKioqLyBcdF9fd2VicGFja19yZXF1aXJlX18ubyA9IGZ1bmN0aW9uKG9iamVjdCwgcHJvcGVydHkpIHsgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KTsgfTtcbi8qKioqKiovXG4vKioqKioqLyBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4vKioqKioqLyBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiXCI7XG4vKioqKioqL1xuLyoqKioqKi9cbi8qKioqKiovIFx0Ly8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4vKioqKioqLyBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucyA9IDQpO1xuLyoqKioqKi8gfSlcbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4vKioqKioqLyAoW1xuLyogMCAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5FeHByZXNzaW9uRGVzY3JpcHRvciA9IHZvaWQgMDtcbnZhciBzdHJpbmdVdGlsaXRpZXNfMSA9IF9fd2VicGFja19yZXF1aXJlX18oMSk7XG52YXIgY3JvblBhcnNlcl8xID0gX193ZWJwYWNrX3JlcXVpcmVfXygyKTtcbnZhciBFeHByZXNzaW9uRGVzY3JpcHRvciA9IChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gRXhwcmVzc2lvbkRlc2NyaXB0b3IoZXhwcmVzc2lvbiwgb3B0aW9ucykge1xuICAgICAgICB0aGlzLmV4cHJlc3Npb24gPSBleHByZXNzaW9uO1xuICAgICAgICB0aGlzLm9wdGlvbnMgPSBvcHRpb25zO1xuICAgICAgICB0aGlzLmV4cHJlc3Npb25QYXJ0cyA9IG5ldyBBcnJheSg1KTtcbiAgICAgICAgaWYgKEV4cHJlc3Npb25EZXNjcmlwdG9yLmxvY2FsZXNbb3B0aW9ucy5sb2NhbGVdKSB7XG4gICAgICAgICAgICB0aGlzLmkxOG4gPSBFeHByZXNzaW9uRGVzY3JpcHRvci5sb2NhbGVzW29wdGlvbnMubG9jYWxlXTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGNvbnNvbGUud2FybihcIkxvY2FsZSAnXCIgKyBvcHRpb25zLmxvY2FsZSArIFwiJyBjb3VsZCBub3QgYmUgZm91bmQ7IGZhbGxpbmcgYmFjayB0byAnZW4nLlwiKTtcbiAgICAgICAgICAgIHRoaXMuaTE4biA9IEV4cHJlc3Npb25EZXNjcmlwdG9yLmxvY2FsZXNbXCJlblwiXTtcbiAgICAgICAgfVxuICAgICAgICBpZiAob3B0aW9ucy51c2UyNEhvdXJUaW1lRm9ybWF0ID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIG9wdGlvbnMudXNlMjRIb3VyVGltZUZvcm1hdCA9IHRoaXMuaTE4bi51c2UyNEhvdXJUaW1lRm9ybWF0QnlEZWZhdWx0KCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgRXhwcmVzc2lvbkRlc2NyaXB0b3IudG9TdHJpbmcgPSBmdW5jdGlvbiAoZXhwcmVzc2lvbiwgX2EpIHtcbiAgICAgICAgdmFyIF9iID0gX2EgPT09IHZvaWQgMCA/IHt9IDogX2EsIF9jID0gX2IudGhyb3dFeGNlcHRpb25PblBhcnNlRXJyb3IsIHRocm93RXhjZXB0aW9uT25QYXJzZUVycm9yID0gX2MgPT09IHZvaWQgMCA/IHRydWUgOiBfYywgX2QgPSBfYi52ZXJib3NlLCB2ZXJib3NlID0gX2QgPT09IHZvaWQgMCA/IGZhbHNlIDogX2QsIF9lID0gX2IuZGF5T2ZXZWVrU3RhcnRJbmRleFplcm8sIGRheU9mV2Vla1N0YXJ0SW5kZXhaZXJvID0gX2UgPT09IHZvaWQgMCA/IHRydWUgOiBfZSwgdXNlMjRIb3VyVGltZUZvcm1hdCA9IF9iLnVzZTI0SG91clRpbWVGb3JtYXQsIF9mID0gX2IubG9jYWxlLCBsb2NhbGUgPSBfZiA9PT0gdm9pZCAwID8gXCJlblwiIDogX2Y7XG4gICAgICAgIHZhciBvcHRpb25zID0ge1xuICAgICAgICAgICAgdGhyb3dFeGNlcHRpb25PblBhcnNlRXJyb3I6IHRocm93RXhjZXB0aW9uT25QYXJzZUVycm9yLFxuICAgICAgICAgICAgdmVyYm9zZTogdmVyYm9zZSxcbiAgICAgICAgICAgIGRheU9mV2Vla1N0YXJ0SW5kZXhaZXJvOiBkYXlPZldlZWtTdGFydEluZGV4WmVybyxcbiAgICAgICAgICAgIHVzZTI0SG91clRpbWVGb3JtYXQ6IHVzZTI0SG91clRpbWVGb3JtYXQsXG4gICAgICAgICAgICBsb2NhbGU6IGxvY2FsZSxcbiAgICAgICAgfTtcbiAgICAgICAgdmFyIGRlc2NyaXB0ZXIgPSBuZXcgRXhwcmVzc2lvbkRlc2NyaXB0b3IoZXhwcmVzc2lvbiwgb3B0aW9ucyk7XG4gICAgICAgIHJldHVybiBkZXNjcmlwdGVyLmdldEZ1bGxEZXNjcmlwdGlvbigpO1xuICAgIH07XG4gICAgRXhwcmVzc2lvbkRlc2NyaXB0b3IuaW5pdGlhbGl6ZSA9IGZ1bmN0aW9uIChsb2NhbGVzTG9hZGVyKSB7XG4gICAgICAgIEV4cHJlc3Npb25EZXNjcmlwdG9yLnNwZWNpYWxDaGFyYWN0ZXJzID0gW1wiL1wiLCBcIi1cIiwgXCIsXCIsIFwiKlwiXTtcbiAgICAgICAgbG9jYWxlc0xvYWRlci5sb2FkKEV4cHJlc3Npb25EZXNjcmlwdG9yLmxvY2FsZXMpO1xuICAgIH07XG4gICAgRXhwcmVzc2lvbkRlc2NyaXB0b3IucHJvdG90eXBlLmdldEZ1bGxEZXNjcmlwdGlvbiA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGRlc2NyaXB0aW9uID0gXCJcIjtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHZhciBwYXJzZXIgPSBuZXcgY3JvblBhcnNlcl8xLkNyb25QYXJzZXIodGhpcy5leHByZXNzaW9uLCB0aGlzLm9wdGlvbnMuZGF5T2ZXZWVrU3RhcnRJbmRleFplcm8pO1xuICAgICAgICAgICAgdGhpcy5leHByZXNzaW9uUGFydHMgPSBwYXJzZXIucGFyc2UoKTtcbiAgICAgICAgICAgIHZhciB0aW1lU2VnbWVudCA9IHRoaXMuZ2V0VGltZU9mRGF5RGVzY3JpcHRpb24oKTtcbiAgICAgICAgICAgIHZhciBkYXlPZk1vbnRoRGVzYyA9IHRoaXMuZ2V0RGF5T2ZNb250aERlc2NyaXB0aW9uKCk7XG4gICAgICAgICAgICB2YXIgbW9udGhEZXNjID0gdGhpcy5nZXRNb250aERlc2NyaXB0aW9uKCk7XG4gICAgICAgICAgICB2YXIgZGF5T2ZXZWVrRGVzYyA9IHRoaXMuZ2V0RGF5T2ZXZWVrRGVzY3JpcHRpb24oKTtcbiAgICAgICAgICAgIHZhciB5ZWFyRGVzYyA9IHRoaXMuZ2V0WWVhckRlc2NyaXB0aW9uKCk7XG4gICAgICAgICAgICBkZXNjcmlwdGlvbiArPSB0aW1lU2VnbWVudCArIGRheU9mTW9udGhEZXNjICsgZGF5T2ZXZWVrRGVzYyArIG1vbnRoRGVzYyArIHllYXJEZXNjO1xuICAgICAgICAgICAgZGVzY3JpcHRpb24gPSB0aGlzLnRyYW5zZm9ybVZlcmJvc2l0eShkZXNjcmlwdGlvbiwgdGhpcy5vcHRpb25zLnZlcmJvc2UpO1xuICAgICAgICAgICAgZGVzY3JpcHRpb24gPSBkZXNjcmlwdGlvbi5jaGFyQXQoMCkudG9Mb2NhbGVVcHBlckNhc2UoKSArIGRlc2NyaXB0aW9uLnN1YnN0cigxKTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZXgpIHtcbiAgICAgICAgICAgIGlmICghdGhpcy5vcHRpb25zLnRocm93RXhjZXB0aW9uT25QYXJzZUVycm9yKSB7XG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb24gPSB0aGlzLmkxOG4uYW5FcnJvck9jY3VyZWRXaGVuR2VuZXJhdGluZ1RoZUV4cHJlc3Npb25EKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBcIlwiICsgZXg7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGRlc2NyaXB0aW9uO1xuICAgIH07XG4gICAgRXhwcmVzc2lvbkRlc2NyaXB0b3IucHJvdG90eXBlLmdldFRpbWVPZkRheURlc2NyaXB0aW9uID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgc2Vjb25kc0V4cHJlc3Npb24gPSB0aGlzLmV4cHJlc3Npb25QYXJ0c1swXTtcbiAgICAgICAgdmFyIG1pbnV0ZUV4cHJlc3Npb24gPSB0aGlzLmV4cHJlc3Npb25QYXJ0c1sxXTtcbiAgICAgICAgdmFyIGhvdXJFeHByZXNzaW9uID0gdGhpcy5leHByZXNzaW9uUGFydHNbMl07XG4gICAgICAgIHZhciBkZXNjcmlwdGlvbiA9IFwiXCI7XG4gICAgICAgIGlmICghc3RyaW5nVXRpbGl0aWVzXzEuU3RyaW5nVXRpbGl0aWVzLmNvbnRhaW5zQW55KG1pbnV0ZUV4cHJlc3Npb24sIEV4cHJlc3Npb25EZXNjcmlwdG9yLnNwZWNpYWxDaGFyYWN0ZXJzKSAmJlxuICAgICAgICAgICAgIXN0cmluZ1V0aWxpdGllc18xLlN0cmluZ1V0aWxpdGllcy5jb250YWluc0FueShob3VyRXhwcmVzc2lvbiwgRXhwcmVzc2lvbkRlc2NyaXB0b3Iuc3BlY2lhbENoYXJhY3RlcnMpICYmXG4gICAgICAgICAgICAhc3RyaW5nVXRpbGl0aWVzXzEuU3RyaW5nVXRpbGl0aWVzLmNvbnRhaW5zQW55KHNlY29uZHNFeHByZXNzaW9uLCBFeHByZXNzaW9uRGVzY3JpcHRvci5zcGVjaWFsQ2hhcmFjdGVycykpIHtcbiAgICAgICAgICAgIGRlc2NyaXB0aW9uICs9IHRoaXMuaTE4bi5hdFNwYWNlKCkgKyB0aGlzLmZvcm1hdFRpbWUoaG91ckV4cHJlc3Npb24sIG1pbnV0ZUV4cHJlc3Npb24sIHNlY29uZHNFeHByZXNzaW9uKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICghc2Vjb25kc0V4cHJlc3Npb24gJiZcbiAgICAgICAgICAgIG1pbnV0ZUV4cHJlc3Npb24uaW5kZXhPZihcIi1cIikgPiAtMSAmJlxuICAgICAgICAgICAgIShtaW51dGVFeHByZXNzaW9uLmluZGV4T2YoXCIsXCIpID4gLTEpICYmXG4gICAgICAgICAgICAhKG1pbnV0ZUV4cHJlc3Npb24uaW5kZXhPZihcIi9cIikgPiAtMSkgJiZcbiAgICAgICAgICAgICFzdHJpbmdVdGlsaXRpZXNfMS5TdHJpbmdVdGlsaXRpZXMuY29udGFpbnNBbnkoaG91ckV4cHJlc3Npb24sIEV4cHJlc3Npb25EZXNjcmlwdG9yLnNwZWNpYWxDaGFyYWN0ZXJzKSkge1xuICAgICAgICAgICAgdmFyIG1pbnV0ZVBhcnRzID0gbWludXRlRXhwcmVzc2lvbi5zcGxpdChcIi1cIik7XG4gICAgICAgICAgICBkZXNjcmlwdGlvbiArPSBzdHJpbmdVdGlsaXRpZXNfMS5TdHJpbmdVdGlsaXRpZXMuZm9ybWF0KHRoaXMuaTE4bi5ldmVyeU1pbnV0ZUJldHdlZW5YMEFuZFgxKCksIHRoaXMuZm9ybWF0VGltZShob3VyRXhwcmVzc2lvbiwgbWludXRlUGFydHNbMF0sIFwiXCIpLCB0aGlzLmZvcm1hdFRpbWUoaG91ckV4cHJlc3Npb24sIG1pbnV0ZVBhcnRzWzFdLCBcIlwiKSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoIXNlY29uZHNFeHByZXNzaW9uICYmXG4gICAgICAgICAgICBob3VyRXhwcmVzc2lvbi5pbmRleE9mKFwiLFwiKSA+IC0xICYmXG4gICAgICAgICAgICBob3VyRXhwcmVzc2lvbi5pbmRleE9mKFwiLVwiKSA9PSAtMSAmJlxuICAgICAgICAgICAgaG91ckV4cHJlc3Npb24uaW5kZXhPZihcIi9cIikgPT0gLTEgJiZcbiAgICAgICAgICAgICFzdHJpbmdVdGlsaXRpZXNfMS5TdHJpbmdVdGlsaXRpZXMuY29udGFpbnNBbnkobWludXRlRXhwcmVzc2lvbiwgRXhwcmVzc2lvbkRlc2NyaXB0b3Iuc3BlY2lhbENoYXJhY3RlcnMpKSB7XG4gICAgICAgICAgICB2YXIgaG91clBhcnRzID0gaG91ckV4cHJlc3Npb24uc3BsaXQoXCIsXCIpO1xuICAgICAgICAgICAgZGVzY3JpcHRpb24gKz0gdGhpcy5pMThuLmF0KCk7XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGhvdXJQYXJ0cy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uICs9IFwiIFwiO1xuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uICs9IHRoaXMuZm9ybWF0VGltZShob3VyUGFydHNbaV0sIG1pbnV0ZUV4cHJlc3Npb24sIFwiXCIpO1xuICAgICAgICAgICAgICAgIGlmIChpIDwgaG91clBhcnRzLmxlbmd0aCAtIDIpIHtcbiAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb24gKz0gXCIsXCI7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChpID09IGhvdXJQYXJ0cy5sZW5ndGggLSAyKSB7XG4gICAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uICs9IHRoaXMuaTE4bi5zcGFjZUFuZCgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHZhciBzZWNvbmRzRGVzY3JpcHRpb24gPSB0aGlzLmdldFNlY29uZHNEZXNjcmlwdGlvbigpO1xuICAgICAgICAgICAgdmFyIG1pbnV0ZXNEZXNjcmlwdGlvbiA9IHRoaXMuZ2V0TWludXRlc0Rlc2NyaXB0aW9uKCk7XG4gICAgICAgICAgICB2YXIgaG91cnNEZXNjcmlwdGlvbiA9IHRoaXMuZ2V0SG91cnNEZXNjcmlwdGlvbigpO1xuICAgICAgICAgICAgZGVzY3JpcHRpb24gKz0gc2Vjb25kc0Rlc2NyaXB0aW9uO1xuICAgICAgICAgICAgaWYgKGRlc2NyaXB0aW9uLmxlbmd0aCA+IDAgJiYgbWludXRlc0Rlc2NyaXB0aW9uLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbiArPSBcIiwgXCI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBkZXNjcmlwdGlvbiArPSBtaW51dGVzRGVzY3JpcHRpb247XG4gICAgICAgICAgICBpZiAoZGVzY3JpcHRpb24ubGVuZ3RoID4gMCAmJiBob3Vyc0Rlc2NyaXB0aW9uLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbiArPSBcIiwgXCI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBkZXNjcmlwdGlvbiArPSBob3Vyc0Rlc2NyaXB0aW9uO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBkZXNjcmlwdGlvbjtcbiAgICB9O1xuICAgIEV4cHJlc3Npb25EZXNjcmlwdG9yLnByb3RvdHlwZS5nZXRTZWNvbmRzRGVzY3JpcHRpb24gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIHZhciBkZXNjcmlwdGlvbiA9IHRoaXMuZ2V0U2VnbWVudERlc2NyaXB0aW9uKHRoaXMuZXhwcmVzc2lvblBhcnRzWzBdLCB0aGlzLmkxOG4uZXZlcnlTZWNvbmQoKSwgZnVuY3Rpb24gKHMpIHtcbiAgICAgICAgICAgIHJldHVybiBzO1xuICAgICAgICB9LCBmdW5jdGlvbiAocykge1xuICAgICAgICAgICAgcmV0dXJuIHN0cmluZ1V0aWxpdGllc18xLlN0cmluZ1V0aWxpdGllcy5mb3JtYXQoX3RoaXMuaTE4bi5ldmVyeVgwU2Vjb25kcygpLCBzKTtcbiAgICAgICAgfSwgZnVuY3Rpb24gKHMpIHtcbiAgICAgICAgICAgIHJldHVybiBfdGhpcy5pMThuLnNlY29uZHNYMFRocm91Z2hYMVBhc3RUaGVNaW51dGUoKTtcbiAgICAgICAgfSwgZnVuY3Rpb24gKHMpIHtcbiAgICAgICAgICAgIHJldHVybiBzID09IFwiMFwiXG4gICAgICAgICAgICAgICAgPyBcIlwiXG4gICAgICAgICAgICAgICAgOiBwYXJzZUludChzKSA8IDIwXG4gICAgICAgICAgICAgICAgICAgID8gX3RoaXMuaTE4bi5hdFgwU2Vjb25kc1Bhc3RUaGVNaW51dGUoKVxuICAgICAgICAgICAgICAgICAgICA6IF90aGlzLmkxOG4uYXRYMFNlY29uZHNQYXN0VGhlTWludXRlR3QyMCgpIHx8IF90aGlzLmkxOG4uYXRYMFNlY29uZHNQYXN0VGhlTWludXRlKCk7XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gZGVzY3JpcHRpb247XG4gICAgfTtcbiAgICBFeHByZXNzaW9uRGVzY3JpcHRvci5wcm90b3R5cGUuZ2V0TWludXRlc0Rlc2NyaXB0aW9uID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICB2YXIgc2Vjb25kc0V4cHJlc3Npb24gPSB0aGlzLmV4cHJlc3Npb25QYXJ0c1swXTtcbiAgICAgICAgdmFyIGhvdXJFeHByZXNzaW9uID0gdGhpcy5leHByZXNzaW9uUGFydHNbMl07XG4gICAgICAgIHZhciBkZXNjcmlwdGlvbiA9IHRoaXMuZ2V0U2VnbWVudERlc2NyaXB0aW9uKHRoaXMuZXhwcmVzc2lvblBhcnRzWzFdLCB0aGlzLmkxOG4uZXZlcnlNaW51dGUoKSwgZnVuY3Rpb24gKHMpIHtcbiAgICAgICAgICAgIHJldHVybiBzO1xuICAgICAgICB9LCBmdW5jdGlvbiAocykge1xuICAgICAgICAgICAgcmV0dXJuIHN0cmluZ1V0aWxpdGllc18xLlN0cmluZ1V0aWxpdGllcy5mb3JtYXQoX3RoaXMuaTE4bi5ldmVyeVgwTWludXRlcygpLCBzKTtcbiAgICAgICAgfSwgZnVuY3Rpb24gKHMpIHtcbiAgICAgICAgICAgIHJldHVybiBfdGhpcy5pMThuLm1pbnV0ZXNYMFRocm91Z2hYMVBhc3RUaGVIb3VyKCk7XG4gICAgICAgIH0sIGZ1bmN0aW9uIChzKSB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIHJldHVybiBzID09IFwiMFwiICYmIGhvdXJFeHByZXNzaW9uLmluZGV4T2YoXCIvXCIpID09IC0xICYmIHNlY29uZHNFeHByZXNzaW9uID09IFwiXCJcbiAgICAgICAgICAgICAgICAgICAgPyBfdGhpcy5pMThuLmV2ZXJ5SG91cigpXG4gICAgICAgICAgICAgICAgICAgIDogcGFyc2VJbnQocykgPCAyMFxuICAgICAgICAgICAgICAgICAgICAgICAgPyBfdGhpcy5pMThuLmF0WDBNaW51dGVzUGFzdFRoZUhvdXIoKVxuICAgICAgICAgICAgICAgICAgICAgICAgOiBfdGhpcy5pMThuLmF0WDBNaW51dGVzUGFzdFRoZUhvdXJHdDIwKCkgfHwgX3RoaXMuaTE4bi5hdFgwTWludXRlc1Bhc3RUaGVIb3VyKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBfdGhpcy5pMThuLmF0WDBNaW51dGVzUGFzdFRoZUhvdXIoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBkZXNjcmlwdGlvbjtcbiAgICB9O1xuICAgIEV4cHJlc3Npb25EZXNjcmlwdG9yLnByb3RvdHlwZS5nZXRIb3Vyc0Rlc2NyaXB0aW9uID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICB2YXIgZXhwcmVzc2lvbiA9IHRoaXMuZXhwcmVzc2lvblBhcnRzWzJdO1xuICAgICAgICB2YXIgZGVzY3JpcHRpb24gPSB0aGlzLmdldFNlZ21lbnREZXNjcmlwdGlvbihleHByZXNzaW9uLCB0aGlzLmkxOG4uZXZlcnlIb3VyKCksIGZ1bmN0aW9uIChzKSB7XG4gICAgICAgICAgICByZXR1cm4gX3RoaXMuZm9ybWF0VGltZShzLCBcIjBcIiwgXCJcIik7XG4gICAgICAgIH0sIGZ1bmN0aW9uIChzKSB7XG4gICAgICAgICAgICByZXR1cm4gc3RyaW5nVXRpbGl0aWVzXzEuU3RyaW5nVXRpbGl0aWVzLmZvcm1hdChfdGhpcy5pMThuLmV2ZXJ5WDBIb3VycygpLCBzKTtcbiAgICAgICAgfSwgZnVuY3Rpb24gKHMpIHtcbiAgICAgICAgICAgIHJldHVybiBfdGhpcy5pMThuLmJldHdlZW5YMEFuZFgxKCk7XG4gICAgICAgIH0sIGZ1bmN0aW9uIChzKSB7XG4gICAgICAgICAgICByZXR1cm4gX3RoaXMuaTE4bi5hdFgwKCk7XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gZGVzY3JpcHRpb247XG4gICAgfTtcbiAgICBFeHByZXNzaW9uRGVzY3JpcHRvci5wcm90b3R5cGUuZ2V0RGF5T2ZXZWVrRGVzY3JpcHRpb24gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIHZhciBkYXlzT2ZXZWVrTmFtZXMgPSB0aGlzLmkxOG4uZGF5c09mVGhlV2VlaygpO1xuICAgICAgICB2YXIgZGVzY3JpcHRpb24gPSBudWxsO1xuICAgICAgICBpZiAodGhpcy5leHByZXNzaW9uUGFydHNbNV0gPT0gXCIqXCIpIHtcbiAgICAgICAgICAgIGRlc2NyaXB0aW9uID0gXCJcIjtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGRlc2NyaXB0aW9uID0gdGhpcy5nZXRTZWdtZW50RGVzY3JpcHRpb24odGhpcy5leHByZXNzaW9uUGFydHNbNV0sIHRoaXMuaTE4bi5jb21tYUV2ZXJ5RGF5KCksIGZ1bmN0aW9uIChzKSB7XG4gICAgICAgICAgICAgICAgdmFyIGV4cCA9IHM7XG4gICAgICAgICAgICAgICAgaWYgKHMuaW5kZXhPZihcIiNcIikgPiAtMSkge1xuICAgICAgICAgICAgICAgICAgICBleHAgPSBzLnN1YnN0cigwLCBzLmluZGV4T2YoXCIjXCIpKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAocy5pbmRleE9mKFwiTFwiKSA+IC0xKSB7XG4gICAgICAgICAgICAgICAgICAgIGV4cCA9IGV4cC5yZXBsYWNlKFwiTFwiLCBcIlwiKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIGRheXNPZldlZWtOYW1lc1twYXJzZUludChleHApXTtcbiAgICAgICAgICAgIH0sIGZ1bmN0aW9uIChzKSB7XG4gICAgICAgICAgICAgICAgaWYgKHBhcnNlSW50KHMpID09IDEpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFwiXCI7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gc3RyaW5nVXRpbGl0aWVzXzEuU3RyaW5nVXRpbGl0aWVzLmZvcm1hdChfdGhpcy5pMThuLmNvbW1hRXZlcnlYMERheXNPZlRoZVdlZWsoKSwgcyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSwgZnVuY3Rpb24gKHMpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMuaTE4bi5jb21tYVgwVGhyb3VnaFgxKCk7XG4gICAgICAgICAgICB9LCBmdW5jdGlvbiAocykge1xuICAgICAgICAgICAgICAgIHZhciBmb3JtYXQgPSBudWxsO1xuICAgICAgICAgICAgICAgIGlmIChzLmluZGV4T2YoXCIjXCIpID4gLTEpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGRheU9mV2Vla09mTW9udGhOdW1iZXIgPSBzLnN1YnN0cmluZyhzLmluZGV4T2YoXCIjXCIpICsgMSk7XG4gICAgICAgICAgICAgICAgICAgIHZhciBkYXlPZldlZWtPZk1vbnRoRGVzY3JpcHRpb24gPSBudWxsO1xuICAgICAgICAgICAgICAgICAgICBzd2l0Y2ggKGRheU9mV2Vla09mTW9udGhOdW1iZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgXCIxXCI6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF5T2ZXZWVrT2ZNb250aERlc2NyaXB0aW9uID0gX3RoaXMuaTE4bi5maXJzdCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSBcIjJcIjpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXlPZldlZWtPZk1vbnRoRGVzY3JpcHRpb24gPSBfdGhpcy5pMThuLnNlY29uZCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSBcIjNcIjpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXlPZldlZWtPZk1vbnRoRGVzY3JpcHRpb24gPSBfdGhpcy5pMThuLnRoaXJkKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICBjYXNlIFwiNFwiOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRheU9mV2Vla09mTW9udGhEZXNjcmlwdGlvbiA9IF90aGlzLmkxOG4uZm91cnRoKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICBjYXNlIFwiNVwiOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRheU9mV2Vla09mTW9udGhEZXNjcmlwdGlvbiA9IF90aGlzLmkxOG4uZmlmdGgoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBmb3JtYXQgPSBfdGhpcy5pMThuLmNvbW1hT25UaGUoKSArIGRheU9mV2Vla09mTW9udGhEZXNjcmlwdGlvbiArIF90aGlzLmkxOG4uc3BhY2VYME9mVGhlTW9udGgoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAocy5pbmRleE9mKFwiTFwiKSA+IC0xKSB7XG4gICAgICAgICAgICAgICAgICAgIGZvcm1hdCA9IF90aGlzLmkxOG4uY29tbWFPblRoZUxhc3RYME9mVGhlTW9udGgoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBkb21TcGVjaWZpZWQgPSBfdGhpcy5leHByZXNzaW9uUGFydHNbM10gIT0gXCIqXCI7XG4gICAgICAgICAgICAgICAgICAgIGZvcm1hdCA9IGRvbVNwZWNpZmllZCA/IF90aGlzLmkxOG4uY29tbWFBbmRPblgwKCkgOiBfdGhpcy5pMThuLmNvbW1hT25seU9uWDAoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZvcm1hdDtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBkZXNjcmlwdGlvbjtcbiAgICB9O1xuICAgIEV4cHJlc3Npb25EZXNjcmlwdG9yLnByb3RvdHlwZS5nZXRNb250aERlc2NyaXB0aW9uID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICB2YXIgbW9udGhOYW1lcyA9IHRoaXMuaTE4bi5tb250aHNPZlRoZVllYXIoKTtcbiAgICAgICAgdmFyIGRlc2NyaXB0aW9uID0gdGhpcy5nZXRTZWdtZW50RGVzY3JpcHRpb24odGhpcy5leHByZXNzaW9uUGFydHNbNF0sIFwiXCIsIGZ1bmN0aW9uIChzKSB7XG4gICAgICAgICAgICByZXR1cm4gbW9udGhOYW1lc1twYXJzZUludChzKSAtIDFdO1xuICAgICAgICB9LCBmdW5jdGlvbiAocykge1xuICAgICAgICAgICAgaWYgKHBhcnNlSW50KHMpID09IDEpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gXCJcIjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHJldHVybiBzdHJpbmdVdGlsaXRpZXNfMS5TdHJpbmdVdGlsaXRpZXMuZm9ybWF0KF90aGlzLmkxOG4uY29tbWFFdmVyeVgwTW9udGhzKCksIHMpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LCBmdW5jdGlvbiAocykge1xuICAgICAgICAgICAgcmV0dXJuIF90aGlzLmkxOG4uY29tbWFNb250aFgwVGhyb3VnaE1vbnRoWDEoKSB8fCBfdGhpcy5pMThuLmNvbW1hWDBUaHJvdWdoWDEoKTtcbiAgICAgICAgfSwgZnVuY3Rpb24gKHMpIHtcbiAgICAgICAgICAgIHJldHVybiBfdGhpcy5pMThuLmNvbW1hT25seUluTW9udGhYMCA/IF90aGlzLmkxOG4uY29tbWFPbmx5SW5Nb250aFgwKCkgOiBfdGhpcy5pMThuLmNvbW1hT25seUluWDAoKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBkZXNjcmlwdGlvbjtcbiAgICB9O1xuICAgIEV4cHJlc3Npb25EZXNjcmlwdG9yLnByb3RvdHlwZS5nZXREYXlPZk1vbnRoRGVzY3JpcHRpb24gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIHZhciBkZXNjcmlwdGlvbiA9IG51bGw7XG4gICAgICAgIHZhciBleHByZXNzaW9uID0gdGhpcy5leHByZXNzaW9uUGFydHNbM107XG4gICAgICAgIHN3aXRjaCAoZXhwcmVzc2lvbikge1xuICAgICAgICAgICAgY2FzZSBcIkxcIjpcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbiA9IHRoaXMuaTE4bi5jb21tYU9uVGhlTGFzdERheU9mVGhlTW9udGgoKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgXCJXTFwiOlxuICAgICAgICAgICAgY2FzZSBcIkxXXCI6XG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb24gPSB0aGlzLmkxOG4uY29tbWFPblRoZUxhc3RXZWVrZGF5T2ZUaGVNb250aCgpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICB2YXIgd2Vla0RheU51bWJlck1hdGNoZXMgPSBleHByZXNzaW9uLm1hdGNoKC8oXFxkezEsMn1XKXwoV1xcZHsxLDJ9KS8pO1xuICAgICAgICAgICAgICAgIGlmICh3ZWVrRGF5TnVtYmVyTWF0Y2hlcykge1xuICAgICAgICAgICAgICAgICAgICB2YXIgZGF5TnVtYmVyID0gcGFyc2VJbnQod2Vla0RheU51bWJlck1hdGNoZXNbMF0ucmVwbGFjZShcIldcIiwgXCJcIikpO1xuICAgICAgICAgICAgICAgICAgICB2YXIgZGF5U3RyaW5nID0gZGF5TnVtYmVyID09IDFcbiAgICAgICAgICAgICAgICAgICAgICAgID8gdGhpcy5pMThuLmZpcnN0V2Vla2RheSgpXG4gICAgICAgICAgICAgICAgICAgICAgICA6IHN0cmluZ1V0aWxpdGllc18xLlN0cmluZ1V0aWxpdGllcy5mb3JtYXQodGhpcy5pMThuLndlZWtkYXlOZWFyZXN0RGF5WDAoKSwgZGF5TnVtYmVyLnRvU3RyaW5nKCkpO1xuICAgICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbiA9IHN0cmluZ1V0aWxpdGllc18xLlN0cmluZ1V0aWxpdGllcy5mb3JtYXQodGhpcy5pMThuLmNvbW1hT25UaGVYME9mVGhlTW9udGgoKSwgZGF5U3RyaW5nKTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB2YXIgbGFzdERheU9mZlNldE1hdGNoZXMgPSBleHByZXNzaW9uLm1hdGNoKC9MLShcXGR7MSwyfSkvKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGxhc3REYXlPZmZTZXRNYXRjaGVzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgb2ZmU2V0RGF5cyA9IGxhc3REYXlPZmZTZXRNYXRjaGVzWzFdO1xuICAgICAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb24gPSBzdHJpbmdVdGlsaXRpZXNfMS5TdHJpbmdVdGlsaXRpZXMuZm9ybWF0KHRoaXMuaTE4bi5jb21tYURheXNCZWZvcmVUaGVMYXN0RGF5T2ZUaGVNb250aCgpLCBvZmZTZXREYXlzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKGV4cHJlc3Npb24gPT0gXCIqXCIgJiYgdGhpcy5leHByZXNzaW9uUGFydHNbNV0gIT0gXCIqXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBcIlwiO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb24gPSB0aGlzLmdldFNlZ21lbnREZXNjcmlwdGlvbihleHByZXNzaW9uLCB0aGlzLmkxOG4uY29tbWFFdmVyeURheSgpLCBmdW5jdGlvbiAocykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBzID09IFwiTFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gX3RoaXMuaTE4bi5sYXN0RGF5KClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBfdGhpcy5pMThuLmRheVgwXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IHN0cmluZ1V0aWxpdGllc18xLlN0cmluZ1V0aWxpdGllcy5mb3JtYXQoX3RoaXMuaTE4bi5kYXlYMCgpLCBzKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBzO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSwgZnVuY3Rpb24gKHMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcyA9PSBcIjFcIiA/IF90aGlzLmkxOG4uY29tbWFFdmVyeURheSgpIDogX3RoaXMuaTE4bi5jb21tYUV2ZXJ5WDBEYXlzKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9LCBmdW5jdGlvbiAocykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfdGhpcy5pMThuLmNvbW1hQmV0d2VlbkRheVgwQW5kWDFPZlRoZU1vbnRoKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9LCBmdW5jdGlvbiAocykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfdGhpcy5pMThuLmNvbW1hT25EYXlYME9mVGhlTW9udGgoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZGVzY3JpcHRpb247XG4gICAgfTtcbiAgICBFeHByZXNzaW9uRGVzY3JpcHRvci5wcm90b3R5cGUuZ2V0WWVhckRlc2NyaXB0aW9uID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICB2YXIgZGVzY3JpcHRpb24gPSB0aGlzLmdldFNlZ21lbnREZXNjcmlwdGlvbih0aGlzLmV4cHJlc3Npb25QYXJ0c1s2XSwgXCJcIiwgZnVuY3Rpb24gKHMpIHtcbiAgICAgICAgICAgIHJldHVybiAvXlxcZCskLy50ZXN0KHMpID8gbmV3IERhdGUocGFyc2VJbnQocyksIDEpLmdldEZ1bGxZZWFyKCkudG9TdHJpbmcoKSA6IHM7XG4gICAgICAgIH0sIGZ1bmN0aW9uIChzKSB7XG4gICAgICAgICAgICByZXR1cm4gc3RyaW5nVXRpbGl0aWVzXzEuU3RyaW5nVXRpbGl0aWVzLmZvcm1hdChfdGhpcy5pMThuLmNvbW1hRXZlcnlYMFllYXJzKCksIHMpO1xuICAgICAgICB9LCBmdW5jdGlvbiAocykge1xuICAgICAgICAgICAgcmV0dXJuIF90aGlzLmkxOG4uY29tbWFZZWFyWDBUaHJvdWdoWWVhclgxKCkgfHwgX3RoaXMuaTE4bi5jb21tYVgwVGhyb3VnaFgxKCk7XG4gICAgICAgIH0sIGZ1bmN0aW9uIChzKSB7XG4gICAgICAgICAgICByZXR1cm4gX3RoaXMuaTE4bi5jb21tYU9ubHlJblllYXJYMCA/IF90aGlzLmkxOG4uY29tbWFPbmx5SW5ZZWFyWDAoKSA6IF90aGlzLmkxOG4uY29tbWFPbmx5SW5YMCgpO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIGRlc2NyaXB0aW9uO1xuICAgIH07XG4gICAgRXhwcmVzc2lvbkRlc2NyaXB0b3IucHJvdG90eXBlLmdldFNlZ21lbnREZXNjcmlwdGlvbiA9IGZ1bmN0aW9uIChleHByZXNzaW9uLCBhbGxEZXNjcmlwdGlvbiwgZ2V0U2luZ2xlSXRlbURlc2NyaXB0aW9uLCBnZXRJbmNyZW1lbnREZXNjcmlwdGlvbkZvcm1hdCwgZ2V0UmFuZ2VEZXNjcmlwdGlvbkZvcm1hdCwgZ2V0RGVzY3JpcHRpb25Gb3JtYXQpIHtcbiAgICAgICAgdmFyIGRlc2NyaXB0aW9uID0gbnVsbDtcbiAgICAgICAgdmFyIGRvZXNFeHByZXNzaW9uQ29udGFpbkluY3JlbWVudCA9IGV4cHJlc3Npb24uaW5kZXhPZihcIi9cIikgPiAtMTtcbiAgICAgICAgdmFyIGRvZXNFeHByZXNzaW9uQ29udGFpblJhbmdlID0gZXhwcmVzc2lvbi5pbmRleE9mKFwiLVwiKSA+IC0xO1xuICAgICAgICB2YXIgZG9lc0V4cHJlc3Npb25Db250YWluTXVsdGlwbGVWYWx1ZXMgPSBleHByZXNzaW9uLmluZGV4T2YoXCIsXCIpID4gLTE7XG4gICAgICAgIGlmICghZXhwcmVzc2lvbikge1xuICAgICAgICAgICAgZGVzY3JpcHRpb24gPSBcIlwiO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGV4cHJlc3Npb24gPT09IFwiKlwiKSB7XG4gICAgICAgICAgICBkZXNjcmlwdGlvbiA9IGFsbERlc2NyaXB0aW9uO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKCFkb2VzRXhwcmVzc2lvbkNvbnRhaW5JbmNyZW1lbnQgJiYgIWRvZXNFeHByZXNzaW9uQ29udGFpblJhbmdlICYmICFkb2VzRXhwcmVzc2lvbkNvbnRhaW5NdWx0aXBsZVZhbHVlcykge1xuICAgICAgICAgICAgZGVzY3JpcHRpb24gPSBzdHJpbmdVdGlsaXRpZXNfMS5TdHJpbmdVdGlsaXRpZXMuZm9ybWF0KGdldERlc2NyaXB0aW9uRm9ybWF0KGV4cHJlc3Npb24pLCBnZXRTaW5nbGVJdGVtRGVzY3JpcHRpb24oZXhwcmVzc2lvbikpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGRvZXNFeHByZXNzaW9uQ29udGFpbk11bHRpcGxlVmFsdWVzKSB7XG4gICAgICAgICAgICB2YXIgc2VnbWVudHMgPSBleHByZXNzaW9uLnNwbGl0KFwiLFwiKTtcbiAgICAgICAgICAgIHZhciBkZXNjcmlwdGlvbkNvbnRlbnQgPSBcIlwiO1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzZWdtZW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgIGlmIChpID4gMCAmJiBzZWdtZW50cy5sZW5ndGggPiAyKSB7XG4gICAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uQ29udGVudCArPSBcIixcIjtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGkgPCBzZWdtZW50cy5sZW5ndGggLSAxKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbkNvbnRlbnQgKz0gXCIgXCI7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKGkgPiAwICYmIHNlZ21lbnRzLmxlbmd0aCA+IDEgJiYgKGkgPT0gc2VnbWVudHMubGVuZ3RoIC0gMSB8fCBzZWdtZW50cy5sZW5ndGggPT0gMikpIHtcbiAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb25Db250ZW50ICs9IHRoaXMuaTE4bi5zcGFjZUFuZCgpICsgXCIgXCI7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChzZWdtZW50c1tpXS5pbmRleE9mKFwiL1wiKSA+IC0xIHx8IHNlZ21lbnRzW2ldLmluZGV4T2YoXCItXCIpID4gLTEpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGlzU2VnbWVudFJhbmdlV2l0aG91dEluY3JlbWVudCA9IHNlZ21lbnRzW2ldLmluZGV4T2YoXCItXCIpID4gLTEgJiYgc2VnbWVudHNbaV0uaW5kZXhPZihcIi9cIikgPT0gLTE7XG4gICAgICAgICAgICAgICAgICAgIHZhciBjdXJyZW50RGVzY3JpcHRpb25Db250ZW50ID0gdGhpcy5nZXRTZWdtZW50RGVzY3JpcHRpb24oc2VnbWVudHNbaV0sIGFsbERlc2NyaXB0aW9uLCBnZXRTaW5nbGVJdGVtRGVzY3JpcHRpb24sIGdldEluY3JlbWVudERlc2NyaXB0aW9uRm9ybWF0LCBpc1NlZ21lbnRSYW5nZVdpdGhvdXRJbmNyZW1lbnQgPyB0aGlzLmkxOG4uY29tbWFYMFRocm91Z2hYMSA6IGdldFJhbmdlRGVzY3JpcHRpb25Gb3JtYXQsIGdldERlc2NyaXB0aW9uRm9ybWF0KTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGlzU2VnbWVudFJhbmdlV2l0aG91dEluY3JlbWVudCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudERlc2NyaXB0aW9uQ29udGVudCA9IGN1cnJlbnREZXNjcmlwdGlvbkNvbnRlbnQucmVwbGFjZShcIiwgXCIsIFwiXCIpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uQ29udGVudCArPSBjdXJyZW50RGVzY3JpcHRpb25Db250ZW50O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIGlmICghZG9lc0V4cHJlc3Npb25Db250YWluSW5jcmVtZW50KSB7XG4gICAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uQ29udGVudCArPSBnZXRTaW5nbGVJdGVtRGVzY3JpcHRpb24oc2VnbWVudHNbaV0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb25Db250ZW50ICs9IHRoaXMuZ2V0U2VnbWVudERlc2NyaXB0aW9uKHNlZ21lbnRzW2ldLCBhbGxEZXNjcmlwdGlvbiwgZ2V0U2luZ2xlSXRlbURlc2NyaXB0aW9uLCBnZXRJbmNyZW1lbnREZXNjcmlwdGlvbkZvcm1hdCwgZ2V0UmFuZ2VEZXNjcmlwdGlvbkZvcm1hdCwgZ2V0RGVzY3JpcHRpb25Gb3JtYXQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICghZG9lc0V4cHJlc3Npb25Db250YWluSW5jcmVtZW50KSB7XG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb24gPSBzdHJpbmdVdGlsaXRpZXNfMS5TdHJpbmdVdGlsaXRpZXMuZm9ybWF0KGdldERlc2NyaXB0aW9uRm9ybWF0KGV4cHJlc3Npb24pLCBkZXNjcmlwdGlvbkNvbnRlbnQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb24gPSBkZXNjcmlwdGlvbkNvbnRlbnQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoZG9lc0V4cHJlc3Npb25Db250YWluSW5jcmVtZW50KSB7XG4gICAgICAgICAgICB2YXIgc2VnbWVudHMgPSBleHByZXNzaW9uLnNwbGl0KFwiL1wiKTtcbiAgICAgICAgICAgIGRlc2NyaXB0aW9uID0gc3RyaW5nVXRpbGl0aWVzXzEuU3RyaW5nVXRpbGl0aWVzLmZvcm1hdChnZXRJbmNyZW1lbnREZXNjcmlwdGlvbkZvcm1hdChzZWdtZW50c1sxXSksIHNlZ21lbnRzWzFdKTtcbiAgICAgICAgICAgIGlmIChzZWdtZW50c1swXS5pbmRleE9mKFwiLVwiKSA+IC0xKSB7XG4gICAgICAgICAgICAgICAgdmFyIHJhbmdlU2VnbWVudERlc2NyaXB0aW9uID0gdGhpcy5nZW5lcmF0ZVJhbmdlU2VnbWVudERlc2NyaXB0aW9uKHNlZ21lbnRzWzBdLCBnZXRSYW5nZURlc2NyaXB0aW9uRm9ybWF0LCBnZXRTaW5nbGVJdGVtRGVzY3JpcHRpb24pO1xuICAgICAgICAgICAgICAgIGlmIChyYW5nZVNlZ21lbnREZXNjcmlwdGlvbi5pbmRleE9mKFwiLCBcIikgIT0gMCkge1xuICAgICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbiArPSBcIiwgXCI7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uICs9IHJhbmdlU2VnbWVudERlc2NyaXB0aW9uO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoc2VnbWVudHNbMF0uaW5kZXhPZihcIipcIikgPT0gLTEpIHtcbiAgICAgICAgICAgICAgICB2YXIgcmFuZ2VJdGVtRGVzY3JpcHRpb24gPSBzdHJpbmdVdGlsaXRpZXNfMS5TdHJpbmdVdGlsaXRpZXMuZm9ybWF0KGdldERlc2NyaXB0aW9uRm9ybWF0KHNlZ21lbnRzWzBdKSwgZ2V0U2luZ2xlSXRlbURlc2NyaXB0aW9uKHNlZ21lbnRzWzBdKSk7XG4gICAgICAgICAgICAgICAgcmFuZ2VJdGVtRGVzY3JpcHRpb24gPSByYW5nZUl0ZW1EZXNjcmlwdGlvbi5yZXBsYWNlKFwiLCBcIiwgXCJcIik7XG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb24gKz0gc3RyaW5nVXRpbGl0aWVzXzEuU3RyaW5nVXRpbGl0aWVzLmZvcm1hdCh0aGlzLmkxOG4uY29tbWFTdGFydGluZ1gwKCksIHJhbmdlSXRlbURlc2NyaXB0aW9uKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChkb2VzRXhwcmVzc2lvbkNvbnRhaW5SYW5nZSkge1xuICAgICAgICAgICAgZGVzY3JpcHRpb24gPSB0aGlzLmdlbmVyYXRlUmFuZ2VTZWdtZW50RGVzY3JpcHRpb24oZXhwcmVzc2lvbiwgZ2V0UmFuZ2VEZXNjcmlwdGlvbkZvcm1hdCwgZ2V0U2luZ2xlSXRlbURlc2NyaXB0aW9uKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZGVzY3JpcHRpb247XG4gICAgfTtcbiAgICBFeHByZXNzaW9uRGVzY3JpcHRvci5wcm90b3R5cGUuZ2VuZXJhdGVSYW5nZVNlZ21lbnREZXNjcmlwdGlvbiA9IGZ1bmN0aW9uIChyYW5nZUV4cHJlc3Npb24sIGdldFJhbmdlRGVzY3JpcHRpb25Gb3JtYXQsIGdldFNpbmdsZUl0ZW1EZXNjcmlwdGlvbikge1xuICAgICAgICB2YXIgZGVzY3JpcHRpb24gPSBcIlwiO1xuICAgICAgICB2YXIgcmFuZ2VTZWdtZW50cyA9IHJhbmdlRXhwcmVzc2lvbi5zcGxpdChcIi1cIik7XG4gICAgICAgIHZhciByYW5nZVNlZ21lbnQxRGVzY3JpcHRpb24gPSBnZXRTaW5nbGVJdGVtRGVzY3JpcHRpb24ocmFuZ2VTZWdtZW50c1swXSk7XG4gICAgICAgIHZhciByYW5nZVNlZ21lbnQyRGVzY3JpcHRpb24gPSBnZXRTaW5nbGVJdGVtRGVzY3JpcHRpb24ocmFuZ2VTZWdtZW50c1sxXSk7XG4gICAgICAgIHJhbmdlU2VnbWVudDJEZXNjcmlwdGlvbiA9IHJhbmdlU2VnbWVudDJEZXNjcmlwdGlvbi5yZXBsYWNlKFwiOjAwXCIsIFwiOjU5XCIpO1xuICAgICAgICB2YXIgcmFuZ2VEZXNjcmlwdGlvbkZvcm1hdCA9IGdldFJhbmdlRGVzY3JpcHRpb25Gb3JtYXQocmFuZ2VFeHByZXNzaW9uKTtcbiAgICAgICAgZGVzY3JpcHRpb24gKz0gc3RyaW5nVXRpbGl0aWVzXzEuU3RyaW5nVXRpbGl0aWVzLmZvcm1hdChyYW5nZURlc2NyaXB0aW9uRm9ybWF0LCByYW5nZVNlZ21lbnQxRGVzY3JpcHRpb24sIHJhbmdlU2VnbWVudDJEZXNjcmlwdGlvbik7XG4gICAgICAgIHJldHVybiBkZXNjcmlwdGlvbjtcbiAgICB9O1xuICAgIEV4cHJlc3Npb25EZXNjcmlwdG9yLnByb3RvdHlwZS5mb3JtYXRUaW1lID0gZnVuY3Rpb24gKGhvdXJFeHByZXNzaW9uLCBtaW51dGVFeHByZXNzaW9uLCBzZWNvbmRFeHByZXNzaW9uKSB7XG4gICAgICAgIHZhciBob3VyID0gcGFyc2VJbnQoaG91ckV4cHJlc3Npb24pO1xuICAgICAgICB2YXIgcGVyaW9kID0gXCJcIjtcbiAgICAgICAgdmFyIHNldFBlcmlvZEJlZm9yZVRpbWUgPSBmYWxzZTtcbiAgICAgICAgaWYgKCF0aGlzLm9wdGlvbnMudXNlMjRIb3VyVGltZUZvcm1hdCkge1xuICAgICAgICAgICAgc2V0UGVyaW9kQmVmb3JlVGltZSA9IHRoaXMuaTE4bi5zZXRQZXJpb2RCZWZvcmVUaW1lICYmIHRoaXMuaTE4bi5zZXRQZXJpb2RCZWZvcmVUaW1lKCk7XG4gICAgICAgICAgICBwZXJpb2QgPSBzZXRQZXJpb2RCZWZvcmVUaW1lID8gdGhpcy5nZXRQZXJpb2QoaG91cikgKyBcIiBcIiA6IFwiIFwiICsgdGhpcy5nZXRQZXJpb2QoaG91cik7XG4gICAgICAgICAgICBpZiAoaG91ciA+IDEyKSB7XG4gICAgICAgICAgICAgICAgaG91ciAtPSAxMjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChob3VyID09PSAwKSB7XG4gICAgICAgICAgICAgICAgaG91ciA9IDEyO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHZhciBtaW51dGUgPSBtaW51dGVFeHByZXNzaW9uO1xuICAgICAgICB2YXIgc2Vjb25kID0gXCJcIjtcbiAgICAgICAgaWYgKHNlY29uZEV4cHJlc3Npb24pIHtcbiAgICAgICAgICAgIHNlY29uZCA9IFwiOlwiICsgKFwiMDBcIiArIHNlY29uZEV4cHJlc3Npb24pLnN1YnN0cmluZyhzZWNvbmRFeHByZXNzaW9uLmxlbmd0aCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIFwiXCIgKyAoc2V0UGVyaW9kQmVmb3JlVGltZSA/IHBlcmlvZCA6IFwiXCIpICsgKFwiMDBcIiArIGhvdXIudG9TdHJpbmcoKSkuc3Vic3RyaW5nKGhvdXIudG9TdHJpbmcoKS5sZW5ndGgpICsgXCI6XCIgKyAoXCIwMFwiICsgbWludXRlLnRvU3RyaW5nKCkpLnN1YnN0cmluZyhtaW51dGUudG9TdHJpbmcoKS5sZW5ndGgpICsgc2Vjb25kICsgKCFzZXRQZXJpb2RCZWZvcmVUaW1lID8gcGVyaW9kIDogXCJcIik7XG4gICAgfTtcbiAgICBFeHByZXNzaW9uRGVzY3JpcHRvci5wcm90b3R5cGUudHJhbnNmb3JtVmVyYm9zaXR5ID0gZnVuY3Rpb24gKGRlc2NyaXB0aW9uLCB1c2VWZXJib3NlRm9ybWF0KSB7XG4gICAgICAgIGlmICghdXNlVmVyYm9zZUZvcm1hdCkge1xuICAgICAgICAgICAgZGVzY3JpcHRpb24gPSBkZXNjcmlwdGlvbi5yZXBsYWNlKG5ldyBSZWdFeHAoXCIsIFwiICsgdGhpcy5pMThuLmV2ZXJ5TWludXRlKCksIFwiZ1wiKSwgXCJcIik7XG4gICAgICAgICAgICBkZXNjcmlwdGlvbiA9IGRlc2NyaXB0aW9uLnJlcGxhY2UobmV3IFJlZ0V4cChcIiwgXCIgKyB0aGlzLmkxOG4uZXZlcnlIb3VyKCksIFwiZ1wiKSwgXCJcIik7XG4gICAgICAgICAgICBkZXNjcmlwdGlvbiA9IGRlc2NyaXB0aW9uLnJlcGxhY2UobmV3IFJlZ0V4cCh0aGlzLmkxOG4uY29tbWFFdmVyeURheSgpLCBcImdcIiksIFwiXCIpO1xuICAgICAgICAgICAgZGVzY3JpcHRpb24gPSBkZXNjcmlwdGlvbi5yZXBsYWNlKC9cXCwgPyQvLCBcIlwiKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZGVzY3JpcHRpb247XG4gICAgfTtcbiAgICBFeHByZXNzaW9uRGVzY3JpcHRvci5wcm90b3R5cGUuZ2V0UGVyaW9kID0gZnVuY3Rpb24gKGhvdXIpIHtcbiAgICAgICAgcmV0dXJuIGhvdXIgPj0gMTIgPyAodGhpcy5pMThuLnBtICYmIHRoaXMuaTE4bi5wbSgpKSB8fCBcIlBNXCIgOiAodGhpcy5pMThuLmFtICYmIHRoaXMuaTE4bi5hbSgpKSB8fCBcIkFNXCI7XG4gICAgfTtcbiAgICBFeHByZXNzaW9uRGVzY3JpcHRvci5sb2NhbGVzID0ge307XG4gICAgcmV0dXJuIEV4cHJlc3Npb25EZXNjcmlwdG9yO1xufSgpKTtcbmV4cG9ydHMuRXhwcmVzc2lvbkRlc2NyaXB0b3IgPSBFeHByZXNzaW9uRGVzY3JpcHRvcjtcblxuXG4vKioqLyB9KSxcbi8qIDEgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuU3RyaW5nVXRpbGl0aWVzID0gdm9pZCAwO1xudmFyIFN0cmluZ1V0aWxpdGllcyA9IChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gU3RyaW5nVXRpbGl0aWVzKCkge1xuICAgIH1cbiAgICBTdHJpbmdVdGlsaXRpZXMuZm9ybWF0ID0gZnVuY3Rpb24gKHRlbXBsYXRlKSB7XG4gICAgICAgIHZhciB2YWx1ZXMgPSBbXTtcbiAgICAgICAgZm9yICh2YXIgX2kgPSAxOyBfaSA8IGFyZ3VtZW50cy5sZW5ndGg7IF9pKyspIHtcbiAgICAgICAgICAgIHZhbHVlc1tfaSAtIDFdID0gYXJndW1lbnRzW19pXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGVtcGxhdGUucmVwbGFjZSgvJXMvZywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIHZhbHVlcy5zaGlmdCgpO1xuICAgICAgICB9KTtcbiAgICB9O1xuICAgIFN0cmluZ1V0aWxpdGllcy5jb250YWluc0FueSA9IGZ1bmN0aW9uICh0ZXh0LCBzZWFyY2hTdHJpbmdzKSB7XG4gICAgICAgIHJldHVybiBzZWFyY2hTdHJpbmdzLnNvbWUoZnVuY3Rpb24gKGMpIHtcbiAgICAgICAgICAgIHJldHVybiB0ZXh0LmluZGV4T2YoYykgPiAtMTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICByZXR1cm4gU3RyaW5nVXRpbGl0aWVzO1xufSgpKTtcbmV4cG9ydHMuU3RyaW5nVXRpbGl0aWVzID0gU3RyaW5nVXRpbGl0aWVzO1xuXG5cbi8qKiovIH0pLFxuLyogMiAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Dcm9uUGFyc2VyID0gdm9pZCAwO1xudmFyIENyb25QYXJzZXIgPSAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIENyb25QYXJzZXIoZXhwcmVzc2lvbiwgZGF5T2ZXZWVrU3RhcnRJbmRleFplcm8pIHtcbiAgICAgICAgaWYgKGRheU9mV2Vla1N0YXJ0SW5kZXhaZXJvID09PSB2b2lkIDApIHsgZGF5T2ZXZWVrU3RhcnRJbmRleFplcm8gPSB0cnVlOyB9XG4gICAgICAgIHRoaXMuZXhwcmVzc2lvbiA9IGV4cHJlc3Npb247XG4gICAgICAgIHRoaXMuZGF5T2ZXZWVrU3RhcnRJbmRleFplcm8gPSBkYXlPZldlZWtTdGFydEluZGV4WmVybztcbiAgICB9XG4gICAgQ3JvblBhcnNlci5wcm90b3R5cGUucGFyc2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBwYXJzZWQgPSB0aGlzLmV4dHJhY3RQYXJ0cyh0aGlzLmV4cHJlc3Npb24pO1xuICAgICAgICB0aGlzLm5vcm1hbGl6ZShwYXJzZWQpO1xuICAgICAgICB0aGlzLnZhbGlkYXRlKHBhcnNlZCk7XG4gICAgICAgIHJldHVybiBwYXJzZWQ7XG4gICAgfTtcbiAgICBDcm9uUGFyc2VyLnByb3RvdHlwZS5leHRyYWN0UGFydHMgPSBmdW5jdGlvbiAoZXhwcmVzc2lvbikge1xuICAgICAgICBpZiAoIXRoaXMuZXhwcmVzc2lvbikge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRXhwcmVzc2lvbiBpcyBlbXB0eVwiKTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgcGFyc2VkID0gZXhwcmVzc2lvbi50cmltKCkuc3BsaXQoL1sgXSsvKTtcbiAgICAgICAgaWYgKHBhcnNlZC5sZW5ndGggPCA1KSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJFeHByZXNzaW9uIGhhcyBvbmx5IFwiICsgcGFyc2VkLmxlbmd0aCArIFwiIHBhcnRcIiArIChwYXJzZWQubGVuZ3RoID09IDEgPyBcIlwiIDogXCJzXCIpICsgXCIuIEF0IGxlYXN0IDUgcGFydHMgYXJlIHJlcXVpcmVkLlwiKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChwYXJzZWQubGVuZ3RoID09IDUpIHtcbiAgICAgICAgICAgIHBhcnNlZC51bnNoaWZ0KFwiXCIpO1xuICAgICAgICAgICAgcGFyc2VkLnB1c2goXCJcIik7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAocGFyc2VkLmxlbmd0aCA9PSA2KSB7XG4gICAgICAgICAgICBpZiAoL1xcZHs0fSQvLnRlc3QocGFyc2VkWzVdKSkge1xuICAgICAgICAgICAgICAgIHBhcnNlZC51bnNoaWZ0KFwiXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgcGFyc2VkLnB1c2goXCJcIik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAocGFyc2VkLmxlbmd0aCA+IDcpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkV4cHJlc3Npb24gaGFzIFwiICsgcGFyc2VkLmxlbmd0aCArIFwiIHBhcnRzOyB0b28gbWFueSFcIik7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHBhcnNlZDtcbiAgICB9O1xuICAgIENyb25QYXJzZXIucHJvdG90eXBlLm5vcm1hbGl6ZSA9IGZ1bmN0aW9uIChleHByZXNzaW9uUGFydHMpIHtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgZXhwcmVzc2lvblBhcnRzWzNdID0gZXhwcmVzc2lvblBhcnRzWzNdLnJlcGxhY2UoXCI/XCIsIFwiKlwiKTtcbiAgICAgICAgZXhwcmVzc2lvblBhcnRzWzVdID0gZXhwcmVzc2lvblBhcnRzWzVdLnJlcGxhY2UoXCI/XCIsIFwiKlwiKTtcbiAgICAgICAgZXhwcmVzc2lvblBhcnRzWzJdID0gZXhwcmVzc2lvblBhcnRzWzJdLnJlcGxhY2UoXCI/XCIsIFwiKlwiKTtcbiAgICAgICAgaWYgKGV4cHJlc3Npb25QYXJ0c1swXS5pbmRleE9mKFwiMC9cIikgPT0gMCkge1xuICAgICAgICAgICAgZXhwcmVzc2lvblBhcnRzWzBdID0gZXhwcmVzc2lvblBhcnRzWzBdLnJlcGxhY2UoXCIwL1wiLCBcIiovXCIpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChleHByZXNzaW9uUGFydHNbMV0uaW5kZXhPZihcIjAvXCIpID09IDApIHtcbiAgICAgICAgICAgIGV4cHJlc3Npb25QYXJ0c1sxXSA9IGV4cHJlc3Npb25QYXJ0c1sxXS5yZXBsYWNlKFwiMC9cIiwgXCIqL1wiKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoZXhwcmVzc2lvblBhcnRzWzJdLmluZGV4T2YoXCIwL1wiKSA9PSAwKSB7XG4gICAgICAgICAgICBleHByZXNzaW9uUGFydHNbMl0gPSBleHByZXNzaW9uUGFydHNbMl0ucmVwbGFjZShcIjAvXCIsIFwiKi9cIik7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGV4cHJlc3Npb25QYXJ0c1szXS5pbmRleE9mKFwiMS9cIikgPT0gMCkge1xuICAgICAgICAgICAgZXhwcmVzc2lvblBhcnRzWzNdID0gZXhwcmVzc2lvblBhcnRzWzNdLnJlcGxhY2UoXCIxL1wiLCBcIiovXCIpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChleHByZXNzaW9uUGFydHNbNF0uaW5kZXhPZihcIjEvXCIpID09IDApIHtcbiAgICAgICAgICAgIGV4cHJlc3Npb25QYXJ0c1s0XSA9IGV4cHJlc3Npb25QYXJ0c1s0XS5yZXBsYWNlKFwiMS9cIiwgXCIqL1wiKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoZXhwcmVzc2lvblBhcnRzWzZdLmluZGV4T2YoXCIxL1wiKSA9PSAwKSB7XG4gICAgICAgICAgICBleHByZXNzaW9uUGFydHNbNl0gPSBleHByZXNzaW9uUGFydHNbNl0ucmVwbGFjZShcIjEvXCIsIFwiKi9cIik7XG4gICAgICAgIH1cbiAgICAgICAgZXhwcmVzc2lvblBhcnRzWzVdID0gZXhwcmVzc2lvblBhcnRzWzVdLnJlcGxhY2UoLyheXFxkKXwoW14jL1xcc11cXGQpL2csIGZ1bmN0aW9uICh0KSB7XG4gICAgICAgICAgICB2YXIgZG93RGlnaXRzID0gdC5yZXBsYWNlKC9cXEQvLCBcIlwiKTtcbiAgICAgICAgICAgIHZhciBkb3dEaWdpdHNBZGp1c3RlZCA9IGRvd0RpZ2l0cztcbiAgICAgICAgICAgIGlmIChfdGhpcy5kYXlPZldlZWtTdGFydEluZGV4WmVybykge1xuICAgICAgICAgICAgICAgIGlmIChkb3dEaWdpdHMgPT0gXCI3XCIpIHtcbiAgICAgICAgICAgICAgICAgICAgZG93RGlnaXRzQWRqdXN0ZWQgPSBcIjBcIjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBkb3dEaWdpdHNBZGp1c3RlZCA9IChwYXJzZUludChkb3dEaWdpdHMpIC0gMSkudG9TdHJpbmcoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB0LnJlcGxhY2UoZG93RGlnaXRzLCBkb3dEaWdpdHNBZGp1c3RlZCk7XG4gICAgICAgIH0pO1xuICAgICAgICBpZiAoZXhwcmVzc2lvblBhcnRzWzVdID09IFwiTFwiKSB7XG4gICAgICAgICAgICBleHByZXNzaW9uUGFydHNbNV0gPSBcIjZcIjtcbiAgICAgICAgfVxuICAgICAgICBpZiAoZXhwcmVzc2lvblBhcnRzWzNdID09IFwiP1wiKSB7XG4gICAgICAgICAgICBleHByZXNzaW9uUGFydHNbM10gPSBcIipcIjtcbiAgICAgICAgfVxuICAgICAgICBpZiAoZXhwcmVzc2lvblBhcnRzWzNdLmluZGV4T2YoXCJXXCIpID4gLTEgJiZcbiAgICAgICAgICAgIChleHByZXNzaW9uUGFydHNbM10uaW5kZXhPZihcIixcIikgPiAtMSB8fCBleHByZXNzaW9uUGFydHNbM10uaW5kZXhPZihcIi1cIikgPiAtMSkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIlRoZSAnVycgY2hhcmFjdGVyIGNhbiBiZSBzcGVjaWZpZWQgb25seSB3aGVuIHRoZSBkYXktb2YtbW9udGggaXMgYSBzaW5nbGUgZGF5LCBub3QgYSByYW5nZSBvciBsaXN0IG9mIGRheXMuXCIpO1xuICAgICAgICB9XG4gICAgICAgIHZhciBkYXlzID0ge1xuICAgICAgICAgICAgU1VOOiAwLFxuICAgICAgICAgICAgTU9OOiAxLFxuICAgICAgICAgICAgVFVFOiAyLFxuICAgICAgICAgICAgV0VEOiAzLFxuICAgICAgICAgICAgVEhVOiA0LFxuICAgICAgICAgICAgRlJJOiA1LFxuICAgICAgICAgICAgU0FUOiA2LFxuICAgICAgICB9O1xuICAgICAgICBmb3IgKHZhciBkYXkgaW4gZGF5cykge1xuICAgICAgICAgICAgZXhwcmVzc2lvblBhcnRzWzVdID0gZXhwcmVzc2lvblBhcnRzWzVdLnJlcGxhY2UobmV3IFJlZ0V4cChkYXksIFwiZ2lcIiksIGRheXNbZGF5XS50b1N0cmluZygpKTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgbW9udGhzID0ge1xuICAgICAgICAgICAgSkFOOiAxLFxuICAgICAgICAgICAgRkVCOiAyLFxuICAgICAgICAgICAgTUFSOiAzLFxuICAgICAgICAgICAgQVBSOiA0LFxuICAgICAgICAgICAgTUFZOiA1LFxuICAgICAgICAgICAgSlVOOiA2LFxuICAgICAgICAgICAgSlVMOiA3LFxuICAgICAgICAgICAgQVVHOiA4LFxuICAgICAgICAgICAgU0VQOiA5LFxuICAgICAgICAgICAgT0NUOiAxMCxcbiAgICAgICAgICAgIE5PVjogMTEsXG4gICAgICAgICAgICBERUM6IDEyLFxuICAgICAgICB9O1xuICAgICAgICBmb3IgKHZhciBtb250aCBpbiBtb250aHMpIHtcbiAgICAgICAgICAgIGV4cHJlc3Npb25QYXJ0c1s0XSA9IGV4cHJlc3Npb25QYXJ0c1s0XS5yZXBsYWNlKG5ldyBSZWdFeHAobW9udGgsIFwiZ2lcIiksIG1vbnRoc1ttb250aF0udG9TdHJpbmcoKSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGV4cHJlc3Npb25QYXJ0c1swXSA9PSBcIjBcIikge1xuICAgICAgICAgICAgZXhwcmVzc2lvblBhcnRzWzBdID0gXCJcIjtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIS9cXCp8XFwtfFxcLHxcXC8vLnRlc3QoZXhwcmVzc2lvblBhcnRzWzJdKSAmJlxuICAgICAgICAgICAgKC9cXCp8XFwvLy50ZXN0KGV4cHJlc3Npb25QYXJ0c1sxXSkgfHwgL1xcKnxcXC8vLnRlc3QoZXhwcmVzc2lvblBhcnRzWzBdKSkpIHtcbiAgICAgICAgICAgIGV4cHJlc3Npb25QYXJ0c1syXSArPSBcIi1cIiArIGV4cHJlc3Npb25QYXJ0c1syXTtcbiAgICAgICAgfVxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGV4cHJlc3Npb25QYXJ0cy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgaWYgKGV4cHJlc3Npb25QYXJ0c1tpXSA9PSBcIiovMVwiKSB7XG4gICAgICAgICAgICAgICAgZXhwcmVzc2lvblBhcnRzW2ldID0gXCIqXCI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoZXhwcmVzc2lvblBhcnRzW2ldLmluZGV4T2YoXCIvXCIpID4gLTEgJiYgIS9eXFwqfFxcLXxcXCwvLnRlc3QoZXhwcmVzc2lvblBhcnRzW2ldKSkge1xuICAgICAgICAgICAgICAgIHZhciBzdGVwUmFuZ2VUaHJvdWdoID0gbnVsbDtcbiAgICAgICAgICAgICAgICBzd2l0Y2ggKGkpIHtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSA0OlxuICAgICAgICAgICAgICAgICAgICAgICAgc3RlcFJhbmdlVGhyb3VnaCA9IFwiMTJcIjtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDU6XG4gICAgICAgICAgICAgICAgICAgICAgICBzdGVwUmFuZ2VUaHJvdWdoID0gXCI2XCI7XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgY2FzZSA2OlxuICAgICAgICAgICAgICAgICAgICAgICAgc3RlcFJhbmdlVGhyb3VnaCA9IFwiOTk5OVwiO1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgICAgICBzdGVwUmFuZ2VUaHJvdWdoID0gbnVsbDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoc3RlcFJhbmdlVGhyb3VnaCAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBwYXJ0cyA9IGV4cHJlc3Npb25QYXJ0c1tpXS5zcGxpdChcIi9cIik7XG4gICAgICAgICAgICAgICAgICAgIGV4cHJlc3Npb25QYXJ0c1tpXSA9IHBhcnRzWzBdICsgXCItXCIgKyBzdGVwUmFuZ2VUaHJvdWdoICsgXCIvXCIgKyBwYXJ0c1sxXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9O1xuICAgIENyb25QYXJzZXIucHJvdG90eXBlLnZhbGlkYXRlID0gZnVuY3Rpb24gKHBhcnNlZCkge1xuICAgICAgICB0aGlzLmFzc2VydE5vSW52YWxpZENoYXJhY3RlcnMoXCJET1dcIiwgcGFyc2VkWzVdKTtcbiAgICAgICAgdGhpcy5hc3NlcnROb0ludmFsaWRDaGFyYWN0ZXJzKFwiRE9NXCIsIHBhcnNlZFszXSk7XG4gICAgfTtcbiAgICBDcm9uUGFyc2VyLnByb3RvdHlwZS5hc3NlcnROb0ludmFsaWRDaGFyYWN0ZXJzID0gZnVuY3Rpb24gKHBhcnREZXNjcmlwdGlvbiwgZXhwcmVzc2lvbikge1xuICAgICAgICB2YXIgaW52YWxpZENoYXJzID0gZXhwcmVzc2lvbi5tYXRjaCgvW0EtS00tVlgtWl0rL2dpKTtcbiAgICAgICAgaWYgKGludmFsaWRDaGFycyAmJiBpbnZhbGlkQ2hhcnMubGVuZ3RoKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IocGFydERlc2NyaXB0aW9uICsgXCIgcGFydCBjb250YWlucyBpbnZhbGlkIHZhbHVlczogJ1wiICsgaW52YWxpZENoYXJzLnRvU3RyaW5nKCkgKyBcIidcIik7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIHJldHVybiBDcm9uUGFyc2VyO1xufSgpKTtcbmV4cG9ydHMuQ3JvblBhcnNlciA9IENyb25QYXJzZXI7XG5cblxuLyoqKi8gfSksXG4vKiAzICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmVuID0gdm9pZCAwO1xudmFyIGVuID0gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBlbigpIHtcbiAgICB9XG4gICAgZW4ucHJvdG90eXBlLmF0WDBTZWNvbmRzUGFzdFRoZU1pbnV0ZUd0MjAgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH07XG4gICAgZW4ucHJvdG90eXBlLmF0WDBNaW51dGVzUGFzdFRoZUhvdXJHdDIwID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9O1xuICAgIGVuLnByb3RvdHlwZS5jb21tYU1vbnRoWDBUaHJvdWdoTW9udGhYMSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfTtcbiAgICBlbi5wcm90b3R5cGUuY29tbWFZZWFyWDBUaHJvdWdoWWVhclgxID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9O1xuICAgIGVuLnByb3RvdHlwZS51c2UyNEhvdXJUaW1lRm9ybWF0QnlEZWZhdWx0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfTtcbiAgICBlbi5wcm90b3R5cGUuYW5FcnJvck9jY3VyZWRXaGVuR2VuZXJhdGluZ1RoZUV4cHJlc3Npb25EID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gXCJBbiBlcnJvciBvY2N1cmVkIHdoZW4gZ2VuZXJhdGluZyB0aGUgZXhwcmVzc2lvbiBkZXNjcmlwdGlvbi4gIENoZWNrIHRoZSBjcm9uIGV4cHJlc3Npb24gc3ludGF4LlwiO1xuICAgIH07XG4gICAgZW4ucHJvdG90eXBlLmV2ZXJ5TWludXRlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gXCJldmVyeSBtaW51dGVcIjtcbiAgICB9O1xuICAgIGVuLnByb3RvdHlwZS5ldmVyeUhvdXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBcImV2ZXJ5IGhvdXJcIjtcbiAgICB9O1xuICAgIGVuLnByb3RvdHlwZS5hdFNwYWNlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gXCJBdCBcIjtcbiAgICB9O1xuICAgIGVuLnByb3RvdHlwZS5ldmVyeU1pbnV0ZUJldHdlZW5YMEFuZFgxID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gXCJFdmVyeSBtaW51dGUgYmV0d2VlbiAlcyBhbmQgJXNcIjtcbiAgICB9O1xuICAgIGVuLnByb3RvdHlwZS5hdCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIFwiQXRcIjtcbiAgICB9O1xuICAgIGVuLnByb3RvdHlwZS5zcGFjZUFuZCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIFwiIGFuZFwiO1xuICAgIH07XG4gICAgZW4ucHJvdG90eXBlLmV2ZXJ5U2Vjb25kID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gXCJldmVyeSBzZWNvbmRcIjtcbiAgICB9O1xuICAgIGVuLnByb3RvdHlwZS5ldmVyeVgwU2Vjb25kcyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIFwiZXZlcnkgJXMgc2Vjb25kc1wiO1xuICAgIH07XG4gICAgZW4ucHJvdG90eXBlLnNlY29uZHNYMFRocm91Z2hYMVBhc3RUaGVNaW51dGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBcInNlY29uZHMgJXMgdGhyb3VnaCAlcyBwYXN0IHRoZSBtaW51dGVcIjtcbiAgICB9O1xuICAgIGVuLnByb3RvdHlwZS5hdFgwU2Vjb25kc1Bhc3RUaGVNaW51dGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBcImF0ICVzIHNlY29uZHMgcGFzdCB0aGUgbWludXRlXCI7XG4gICAgfTtcbiAgICBlbi5wcm90b3R5cGUuZXZlcnlYME1pbnV0ZXMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBcImV2ZXJ5ICVzIG1pbnV0ZXNcIjtcbiAgICB9O1xuICAgIGVuLnByb3RvdHlwZS5taW51dGVzWDBUaHJvdWdoWDFQYXN0VGhlSG91ciA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIFwibWludXRlcyAlcyB0aHJvdWdoICVzIHBhc3QgdGhlIGhvdXJcIjtcbiAgICB9O1xuICAgIGVuLnByb3RvdHlwZS5hdFgwTWludXRlc1Bhc3RUaGVIb3VyID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gXCJhdCAlcyBtaW51dGVzIHBhc3QgdGhlIGhvdXJcIjtcbiAgICB9O1xuICAgIGVuLnByb3RvdHlwZS5ldmVyeVgwSG91cnMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBcImV2ZXJ5ICVzIGhvdXJzXCI7XG4gICAgfTtcbiAgICBlbi5wcm90b3R5cGUuYmV0d2VlblgwQW5kWDEgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBcImJldHdlZW4gJXMgYW5kICVzXCI7XG4gICAgfTtcbiAgICBlbi5wcm90b3R5cGUuYXRYMCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIFwiYXQgJXNcIjtcbiAgICB9O1xuICAgIGVuLnByb3RvdHlwZS5jb21tYUV2ZXJ5RGF5ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gXCIsIGV2ZXJ5IGRheVwiO1xuICAgIH07XG4gICAgZW4ucHJvdG90eXBlLmNvbW1hRXZlcnlYMERheXNPZlRoZVdlZWsgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBcIiwgZXZlcnkgJXMgZGF5cyBvZiB0aGUgd2Vla1wiO1xuICAgIH07XG4gICAgZW4ucHJvdG90eXBlLmNvbW1hWDBUaHJvdWdoWDEgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBcIiwgJXMgdGhyb3VnaCAlc1wiO1xuICAgIH07XG4gICAgZW4ucHJvdG90eXBlLmZpcnN0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gXCJmaXJzdFwiO1xuICAgIH07XG4gICAgZW4ucHJvdG90eXBlLnNlY29uZCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIFwic2Vjb25kXCI7XG4gICAgfTtcbiAgICBlbi5wcm90b3R5cGUudGhpcmQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBcInRoaXJkXCI7XG4gICAgfTtcbiAgICBlbi5wcm90b3R5cGUuZm91cnRoID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gXCJmb3VydGhcIjtcbiAgICB9O1xuICAgIGVuLnByb3RvdHlwZS5maWZ0aCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIFwiZmlmdGhcIjtcbiAgICB9O1xuICAgIGVuLnByb3RvdHlwZS5jb21tYU9uVGhlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gXCIsIG9uIHRoZSBcIjtcbiAgICB9O1xuICAgIGVuLnByb3RvdHlwZS5zcGFjZVgwT2ZUaGVNb250aCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIFwiICVzIG9mIHRoZSBtb250aFwiO1xuICAgIH07XG4gICAgZW4ucHJvdG90eXBlLmxhc3REYXkgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBcInRoZSBsYXN0IGRheVwiO1xuICAgIH07XG4gICAgZW4ucHJvdG90eXBlLmNvbW1hT25UaGVMYXN0WDBPZlRoZU1vbnRoID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gXCIsIG9uIHRoZSBsYXN0ICVzIG9mIHRoZSBtb250aFwiO1xuICAgIH07XG4gICAgZW4ucHJvdG90eXBlLmNvbW1hT25seU9uWDAgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBcIiwgb25seSBvbiAlc1wiO1xuICAgIH07XG4gICAgZW4ucHJvdG90eXBlLmNvbW1hQW5kT25YMCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIFwiLCBhbmQgb24gJXNcIjtcbiAgICB9O1xuICAgIGVuLnByb3RvdHlwZS5jb21tYUV2ZXJ5WDBNb250aHMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBcIiwgZXZlcnkgJXMgbW9udGhzXCI7XG4gICAgfTtcbiAgICBlbi5wcm90b3R5cGUuY29tbWFPbmx5SW5YMCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIFwiLCBvbmx5IGluICVzXCI7XG4gICAgfTtcbiAgICBlbi5wcm90b3R5cGUuY29tbWFPblRoZUxhc3REYXlPZlRoZU1vbnRoID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gXCIsIG9uIHRoZSBsYXN0IGRheSBvZiB0aGUgbW9udGhcIjtcbiAgICB9O1xuICAgIGVuLnByb3RvdHlwZS5jb21tYU9uVGhlTGFzdFdlZWtkYXlPZlRoZU1vbnRoID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gXCIsIG9uIHRoZSBsYXN0IHdlZWtkYXkgb2YgdGhlIG1vbnRoXCI7XG4gICAgfTtcbiAgICBlbi5wcm90b3R5cGUuY29tbWFEYXlzQmVmb3JlVGhlTGFzdERheU9mVGhlTW9udGggPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBcIiwgJXMgZGF5cyBiZWZvcmUgdGhlIGxhc3QgZGF5IG9mIHRoZSBtb250aFwiO1xuICAgIH07XG4gICAgZW4ucHJvdG90eXBlLmZpcnN0V2Vla2RheSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIFwiZmlyc3Qgd2Vla2RheVwiO1xuICAgIH07XG4gICAgZW4ucHJvdG90eXBlLndlZWtkYXlOZWFyZXN0RGF5WDAgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBcIndlZWtkYXkgbmVhcmVzdCBkYXkgJXNcIjtcbiAgICB9O1xuICAgIGVuLnByb3RvdHlwZS5jb21tYU9uVGhlWDBPZlRoZU1vbnRoID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gXCIsIG9uIHRoZSAlcyBvZiB0aGUgbW9udGhcIjtcbiAgICB9O1xuICAgIGVuLnByb3RvdHlwZS5jb21tYUV2ZXJ5WDBEYXlzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gXCIsIGV2ZXJ5ICVzIGRheXNcIjtcbiAgICB9O1xuICAgIGVuLnByb3RvdHlwZS5jb21tYUJldHdlZW5EYXlYMEFuZFgxT2ZUaGVNb250aCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIFwiLCBiZXR3ZWVuIGRheSAlcyBhbmQgJXMgb2YgdGhlIG1vbnRoXCI7XG4gICAgfTtcbiAgICBlbi5wcm90b3R5cGUuY29tbWFPbkRheVgwT2ZUaGVNb250aCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIFwiLCBvbiBkYXkgJXMgb2YgdGhlIG1vbnRoXCI7XG4gICAgfTtcbiAgICBlbi5wcm90b3R5cGUuY29tbWFFdmVyeUhvdXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBcIiwgZXZlcnkgaG91clwiO1xuICAgIH07XG4gICAgZW4ucHJvdG90eXBlLmNvbW1hRXZlcnlYMFllYXJzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gXCIsIGV2ZXJ5ICVzIHllYXJzXCI7XG4gICAgfTtcbiAgICBlbi5wcm90b3R5cGUuY29tbWFTdGFydGluZ1gwID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gXCIsIHN0YXJ0aW5nICVzXCI7XG4gICAgfTtcbiAgICBlbi5wcm90b3R5cGUuZGF5c09mVGhlV2VlayA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIFtcIlN1bmRheVwiLCBcIk1vbmRheVwiLCBcIlR1ZXNkYXlcIiwgXCJXZWRuZXNkYXlcIiwgXCJUaHVyc2RheVwiLCBcIkZyaWRheVwiLCBcIlNhdHVyZGF5XCJdO1xuICAgIH07XG4gICAgZW4ucHJvdG90eXBlLm1vbnRoc09mVGhlWWVhciA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIFtcbiAgICAgICAgICAgIFwiSmFudWFyeVwiLFxuICAgICAgICAgICAgXCJGZWJydWFyeVwiLFxuICAgICAgICAgICAgXCJNYXJjaFwiLFxuICAgICAgICAgICAgXCJBcHJpbFwiLFxuICAgICAgICAgICAgXCJNYXlcIixcbiAgICAgICAgICAgIFwiSnVuZVwiLFxuICAgICAgICAgICAgXCJKdWx5XCIsXG4gICAgICAgICAgICBcIkF1Z3VzdFwiLFxuICAgICAgICAgICAgXCJTZXB0ZW1iZXJcIixcbiAgICAgICAgICAgIFwiT2N0b2JlclwiLFxuICAgICAgICAgICAgXCJOb3ZlbWJlclwiLFxuICAgICAgICAgICAgXCJEZWNlbWJlclwiLFxuICAgICAgICBdO1xuICAgIH07XG4gICAgcmV0dXJuIGVuO1xufSgpKTtcbmV4cG9ydHMuZW4gPSBlbjtcblxuXG4vKioqLyB9KSxcbi8qIDQgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudG9TdHJpbmcgPSB2b2lkIDA7XG52YXIgZXhwcmVzc2lvbkRlc2NyaXB0b3JfMSA9IF9fd2VicGFja19yZXF1aXJlX18oMCk7XG52YXIgZW5Mb2NhbGVMb2FkZXJfMSA9IF9fd2VicGFja19yZXF1aXJlX18oNSk7XG5leHByZXNzaW9uRGVzY3JpcHRvcl8xLkV4cHJlc3Npb25EZXNjcmlwdG9yLmluaXRpYWxpemUobmV3IGVuTG9jYWxlTG9hZGVyXzEuZW5Mb2NhbGVMb2FkZXIoKSk7XG5leHBvcnRzLmRlZmF1bHQgPSBleHByZXNzaW9uRGVzY3JpcHRvcl8xLkV4cHJlc3Npb25EZXNjcmlwdG9yO1xudmFyIHRvU3RyaW5nID0gZXhwcmVzc2lvbkRlc2NyaXB0b3JfMS5FeHByZXNzaW9uRGVzY3JpcHRvci50b1N0cmluZztcbmV4cG9ydHMudG9TdHJpbmcgPSB0b1N0cmluZztcblxuXG4vKioqLyB9KSxcbi8qIDUgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZW5Mb2NhbGVMb2FkZXIgPSB2b2lkIDA7XG52YXIgZW5fMSA9IF9fd2VicGFja19yZXF1aXJlX18oMyk7XG52YXIgZW5Mb2NhbGVMb2FkZXIgPSAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIGVuTG9jYWxlTG9hZGVyKCkge1xuICAgIH1cbiAgICBlbkxvY2FsZUxvYWRlci5wcm90b3R5cGUubG9hZCA9IGZ1bmN0aW9uIChhdmFpbGFibGVMb2NhbGVzKSB7XG4gICAgICAgIGF2YWlsYWJsZUxvY2FsZXNbXCJlblwiXSA9IG5ldyBlbl8xLmVuKCk7XG4gICAgfTtcbiAgICByZXR1cm4gZW5Mb2NhbGVMb2FkZXI7XG59KCkpO1xuZXhwb3J0cy5lbkxvY2FsZUxvYWRlciA9IGVuTG9jYWxlTG9hZGVyO1xuXG5cbi8qKiovIH0pXG4vKioqKioqLyBdKTtcbn0pOyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0EsUUFLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///29\n')},90:function(module,exports,__webpack_require__){"use strict";eval("/**\n * Copyright 2017 MICRORISC s.r.o.\n * Copyright 2017-2019 IQRF Tech s.r.o.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n // Select IQRF CDC interface port from list\n\nvar cdcPorts = document.getElementsByClassName('btn-cdc-port');\n\nfor (var i = 0; i < cdcPorts.length; i++) {\n  cdcPorts[i].addEventListener('click', function (event) {\n    document.getElementById('frm-configIqrfCdcForm-IqrfInterface').value = event.currentTarget.dataset.port;\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9qcy9jb25maWcvY2RjLmpzPzc3MWIiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgMjAxNyBNSUNST1JJU0Mgcy5yLm8uXG4gKiBDb3B5cmlnaHQgMjAxNy0yMDE5IElRUkYgVGVjaCBzLnIuby5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG4ndXNlIHN0cmljdCc7IC8vIFNlbGVjdCBJUVJGIENEQyBpbnRlcmZhY2UgcG9ydCBmcm9tIGxpc3RcblxudmFyIGNkY1BvcnRzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgnYnRuLWNkYy1wb3J0Jyk7XG5cbmZvciAodmFyIGkgPSAwOyBpIDwgY2RjUG9ydHMubGVuZ3RoOyBpKyspIHtcbiAgY2RjUG9ydHNbaV0uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZnJtLWNvbmZpZ0lxcmZDZGNGb3JtLUlxcmZJbnRlcmZhY2UnKS52YWx1ZSA9IGV2ZW50LmN1cnJlbnRUYXJnZXQuZGF0YXNldC5wb3J0O1xuICB9KTtcbn0iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///90\n")},91:function(module,exports,__webpack_require__){"use strict";eval("/**\n * Copyright 2017 MICRORISC s.r.o.\n * Copyright 2017-2019 IQRF Tech s.r.o.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n // Select IQRF SPI interface port from list\n\nvar spiPorts = document.getElementsByClassName('btn-spi-port');\n\nfor (var i = 0; i < spiPorts.length; i++) {\n  spiPorts[i].addEventListener('click', function (event) {\n    document.getElementById('frm-configIqrfSpiForm-IqrfInterface').value = event.currentTarget.dataset.port;\n  });\n} // Select SPI port and pins from list of supported boards\n\n\nvar spiPins = document.getElementsByClassName('btn-spi-pin');\n\nfor (var _i = 0; _i < spiPins.length; _i++) {\n  spiPins[_i].addEventListener('click', function (event) {\n    var data = event.currentTarget.dataset;\n    document.getElementById('frm-configIqrfSpiForm-IqrfInterface').value = data.iqrfinterface;\n    document.getElementById('frm-configIqrfSpiForm-powerEnableGpioPin').value = data.powerenablegpiopin;\n    document.getElementById('frm-configIqrfSpiForm-busEnableGpioPin').value = data.busenablegpiopin;\n    document.getElementById('frm-configIqrfSpiForm-pgmSwitchGpioPin').value = data.pgmswitchgpiopin;\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9qcy9jb25maWcvc3BpLmpzP2ZmNzEiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgMjAxNyBNSUNST1JJU0Mgcy5yLm8uXG4gKiBDb3B5cmlnaHQgMjAxNy0yMDE5IElRUkYgVGVjaCBzLnIuby5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG4ndXNlIHN0cmljdCc7IC8vIFNlbGVjdCBJUVJGIFNQSSBpbnRlcmZhY2UgcG9ydCBmcm9tIGxpc3RcblxudmFyIHNwaVBvcnRzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgnYnRuLXNwaS1wb3J0Jyk7XG5cbmZvciAodmFyIGkgPSAwOyBpIDwgc3BpUG9ydHMubGVuZ3RoOyBpKyspIHtcbiAgc3BpUG9ydHNbaV0uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZnJtLWNvbmZpZ0lxcmZTcGlGb3JtLUlxcmZJbnRlcmZhY2UnKS52YWx1ZSA9IGV2ZW50LmN1cnJlbnRUYXJnZXQuZGF0YXNldC5wb3J0O1xuICB9KTtcbn0gLy8gU2VsZWN0IFNQSSBwb3J0IGFuZCBwaW5zIGZyb20gbGlzdCBvZiBzdXBwb3J0ZWQgYm9hcmRzXG5cblxudmFyIHNwaVBpbnMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCdidG4tc3BpLXBpbicpO1xuXG5mb3IgKHZhciBfaSA9IDA7IF9pIDwgc3BpUGlucy5sZW5ndGg7IF9pKyspIHtcbiAgc3BpUGluc1tfaV0uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICB2YXIgZGF0YSA9IGV2ZW50LmN1cnJlbnRUYXJnZXQuZGF0YXNldDtcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZnJtLWNvbmZpZ0lxcmZTcGlGb3JtLUlxcmZJbnRlcmZhY2UnKS52YWx1ZSA9IGRhdGEuaXFyZmludGVyZmFjZTtcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZnJtLWNvbmZpZ0lxcmZTcGlGb3JtLXBvd2VyRW5hYmxlR3Bpb1BpbicpLnZhbHVlID0gZGF0YS5wb3dlcmVuYWJsZWdwaW9waW47XG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2ZybS1jb25maWdJcXJmU3BpRm9ybS1idXNFbmFibGVHcGlvUGluJykudmFsdWUgPSBkYXRhLmJ1c2VuYWJsZWdwaW9waW47XG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2ZybS1jb25maWdJcXJmU3BpRm9ybS1wZ21Td2l0Y2hHcGlvUGluJykudmFsdWUgPSBkYXRhLnBnbXN3aXRjaGdwaW9waW47XG4gIH0pO1xufSJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///91\n")},92:function(module,exports,__webpack_require__){"use strict";eval("/**\n * Copyright 2017 MICRORISC s.r.o.\n * Copyright 2017-2019 IQRF Tech s.r.o.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n // Select IQRF UART interface port from list\n\nvar uartPorts = document.getElementsByClassName('btn-uart-port');\n\nfor (var i = 0; i < uartPorts.length; i++) {\n  uartPorts[i].addEventListener('click', function (event) {\n    document.getElementById('frm-configIqrfUartForm-IqrfInterface').value = event.currentTarget.dataset.port;\n  });\n} // Select UART port and pins from list of supported boards\n\n\nvar uartPins = document.getElementsByClassName('btn-uart-pin');\n\nfor (var _i = 0; _i < uartPins.length; _i++) {\n  uartPins[_i].addEventListener('click', function (event) {\n    var data = event.currentTarget.dataset;\n    document.getElementById('frm-configIqrfUartForm-IqrfInterface').value = data.iqrfinterface;\n    document.getElementById('frm-configIqrfUartForm-baudRate').value = data.baudrate;\n    document.getElementById('frm-configIqrfUartForm-powerEnableGpioPin').value = data.powerenablegpiopin;\n    document.getElementById('frm-configIqrfUartForm-busEnableGpioPin').value = data.busenablegpiopin;\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9qcy9jb25maWcvdWFydC5qcz84M2NjIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IDIwMTcgTUlDUk9SSVNDIHMuci5vLlxuICogQ29weXJpZ2h0IDIwMTctMjAxOSBJUVJGIFRlY2ggcy5yLm8uXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuJ3VzZSBzdHJpY3QnOyAvLyBTZWxlY3QgSVFSRiBVQVJUIGludGVyZmFjZSBwb3J0IGZyb20gbGlzdFxuXG52YXIgdWFydFBvcnRzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgnYnRuLXVhcnQtcG9ydCcpO1xuXG5mb3IgKHZhciBpID0gMDsgaSA8IHVhcnRQb3J0cy5sZW5ndGg7IGkrKykge1xuICB1YXJ0UG9ydHNbaV0uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZnJtLWNvbmZpZ0lxcmZVYXJ0Rm9ybS1JcXJmSW50ZXJmYWNlJykudmFsdWUgPSBldmVudC5jdXJyZW50VGFyZ2V0LmRhdGFzZXQucG9ydDtcbiAgfSk7XG59IC8vIFNlbGVjdCBVQVJUIHBvcnQgYW5kIHBpbnMgZnJvbSBsaXN0IG9mIHN1cHBvcnRlZCBib2FyZHNcblxuXG52YXIgdWFydFBpbnMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCdidG4tdWFydC1waW4nKTtcblxuZm9yICh2YXIgX2kgPSAwOyBfaSA8IHVhcnRQaW5zLmxlbmd0aDsgX2krKykge1xuICB1YXJ0UGluc1tfaV0uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICB2YXIgZGF0YSA9IGV2ZW50LmN1cnJlbnRUYXJnZXQuZGF0YXNldDtcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZnJtLWNvbmZpZ0lxcmZVYXJ0Rm9ybS1JcXJmSW50ZXJmYWNlJykudmFsdWUgPSBkYXRhLmlxcmZpbnRlcmZhY2U7XG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2ZybS1jb25maWdJcXJmVWFydEZvcm0tYmF1ZFJhdGUnKS52YWx1ZSA9IGRhdGEuYmF1ZHJhdGU7XG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2ZybS1jb25maWdJcXJmVWFydEZvcm0tcG93ZXJFbmFibGVHcGlvUGluJykudmFsdWUgPSBkYXRhLnBvd2VyZW5hYmxlZ3Bpb3BpbjtcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZnJtLWNvbmZpZ0lxcmZVYXJ0Rm9ybS1idXNFbmFibGVHcGlvUGluJykudmFsdWUgPSBkYXRhLmJ1c2VuYWJsZWdwaW9waW47XG4gIH0pO1xufSJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///92\n")},98:function(module,__webpack_exports__,__webpack_require__){"use strict";eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./js/config/cdc.js\nvar cdc = __webpack_require__(90);\n\n// EXTERNAL MODULE: ./js/config/spi.js\nvar spi = __webpack_require__(91);\n\n// EXTERNAL MODULE: ./js/config/uart.js\nvar uart = __webpack_require__(92);\n\n// EXTERNAL MODULE: ./node_modules/cronstrue/dist/cronstrue.js\nvar cronstrue = __webpack_require__(29);\nvar cronstrue_default = /*#__PURE__*/__webpack_require__.n(cronstrue);\n\n// CONCATENATED MODULE: ./js/config/scheduler.js\n/**\n * Copyright 2017 MICRORISC s.r.o.\n * Copyright 2017-2019 IQRF Tech s.r.o.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n/**\n * Parse cron and displays time\n */\n\nfunction parseCron() {\n  var text = '';\n  var cron = document.getElementById('frm-configSchedulerForm-cron');\n  var time = document.getElementById('frm-configSchedulerForm-timeSpec-cronTime');\n  var value = time.value;\n  var len = value.split(' ').length;\n\n  if (len === 1) {\n    value = getCronAlias(value);\n\n    if (value === undefined) {\n      if (cron !== null) {\n        cron.style.visibility = 'hidden';\n      }\n\n      return;\n    } else {\n      text = cronstrue_default.a.toString(value);\n      return printCronDescription(text);\n    }\n  }\n\n  if (len > 4 && len < 8) {\n    try {\n      text = cronstrue_default.a.toString(value);\n      printCronDescription(text);\n    } catch (e) {\n      if (cron !== null) {\n        cron.style.visibility = 'hidden';\n      }\n\n      console.error(e);\n    }\n  } else if (cron !== null) {\n    cron.style.visibility = 'hidden';\n  }\n}\n/**\n * Returns CRON expresion from an alias\n * @param input CRON alias\n * @returns string CRON expresion\n */\n\n\nfunction getCronAlias(input) {\n  var aliases = new Map();\n  aliases.set('@reboot', '');\n  aliases.set('@yearly', '0 0 0 1 1 * *');\n  aliases.set('@annually', '0 0 0 1 1 * *');\n  aliases.set('@monthly', '0 0 0 1 * * *');\n  aliases.set('@weekly', '0 0 0 * * 0 *');\n  aliases.set('@daily', '0 0 0 * * * *');\n  aliases.set('@hourly', '0 0 * * * * *');\n  aliases.set('@minutely', '0 * * * * * *');\n  return aliases.get(input);\n}\n/**\n * Prints CRON expresion description\n * @param expresion CRON expresion\n */\n\n\nfunction printCronDescription(expresion) {\n  var cron = document.getElementById('frm-configSchedulerForm-cron');\n\n  if (cron === null) {\n    var time = document.getElementById('frm-configSchedulerForm-timeSpec-cronTime');\n    var label = document.createElement('span');\n    label.id = 'frm-configSchedulerForm-cron';\n    label.innerText = expresion;\n    label.className = 'label label-info';\n    time.insertAdjacentHTML('beforebegin', label.outerHTML);\n  } else {\n    cron.innerText = expresion;\n    cron.style.visibility = 'visible';\n  }\n}\n/**\n * Disables other time specification\n * @param event Event\n */\n\n\nfunction disableOtherTimeScpec(event) {\n  var cronTime = document.getElementById('frm-configSchedulerForm-timeSpec-cronTime');\n  var exactTime = document.getElementById('frm-configSchedulerForm-timeSpec-exactTime');\n  var periodic = document.getElementById('frm-configSchedulerForm-timeSpec-periodic');\n  var period = document.getElementById('frm-configSchedulerForm-timeSpec-period');\n  var startTime = document.getElementById('frm-configSchedulerForm-timeSpec-startTime');\n  var target = event.currentTarget;\n  var disabled = target.checked;\n\n  if (cronTime !== null) {\n    cronTime.disabled = disabled;\n  }\n\n  if (exactTime !== null && target === periodic) {\n    exactTime.disabled = disabled;\n  }\n\n  if (periodic !== null && target === exactTime) {\n    periodic.disabled = disabled;\n  }\n\n  if (period !== null) {\n    period.disabled = target === periodic ? !disabled : true;\n  }\n\n  if (startTime !== null) {\n    startTime.disabled = target === exactTime ? !disabled : true;\n  }\n}\n\nvar cronTime = document.getElementById('frm-configSchedulerForm-timeSpec-cronTime');\nvar exactTime = document.getElementById('frm-configSchedulerForm-timeSpec-exactTime');\nvar periodic = document.getElementById('frm-configSchedulerForm-timeSpec-periodic');\n\nif (exactTime !== null) {\n  exactTime.addEventListener('change', disableOtherTimeScpec);\n}\n\nif (periodic !== null) {\n  periodic.addEventListener('change', disableOtherTimeScpec);\n}\n\nif (cronTime !== null) {\n  parseCron();\n  cronTime.addEventListener('keyup', function () {\n    parseCron();\n  });\n}\n// CONCATENATED MODULE: ./js/config.js\n/**\n * Copyright 2017 MICRORISC s.r.o.\n * Copyright 2017-2019 IQRF Tech s.r.o.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///98\n")}});