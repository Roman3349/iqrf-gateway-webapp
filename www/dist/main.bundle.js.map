{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./js/components/Gateway/ResourceUsage.vue?7f12","webpack:///./js/components/SignIn.vue?8d56","webpack:///./js/pages/IqrfNet/DeviceEnumeration.vue?517c","webpack:///./js/components/IqrfNet/DevicesInfo.vue?d4af","webpack:///./js/pages/IqrfNet/NetworkManager.vue?fd56","webpack:///./js/components/IqrfNet/BinaryOutputManager.vue?931a","webpack:///./js/components/IqrfNet/SensorManager.vue?9817","webpack:///./css/app.scss","webpack:///./js/components/LoadingSpinner.vue?77ff","webpack:///./js/helpers/authorizationHeader.ts","webpack:///./js/services/FeatureService.ts","webpack:///./js/store/modules/features.module.ts","webpack:///./js/store/modules/sidebar.module.ts","webpack:///./js/store/modules/spinner.module.ts","webpack:///./js/services/AuthenticationService.ts","webpack:///./js/store/modules/user.module.ts","webpack:///./js/store/modules/webSocketClient.module.ts","webpack:///./js/store/index.ts","webpack:///./js/pages/Cloud/CloudDisambiguation.vue?7592","webpack:///./js/pages/Cloud/CloudDisambiguation.vue?5514","webpack:///./js/pages/Cloud/CloudDisambiguation.vue?2651","webpack:///./js/pages/Cloud/CloudDisambiguation.vue","webpack:///./js/pages/Cloud/AzureCreator.vue?8b64","webpack:///./js/i18n.ts","webpack:///./js/helpers/FormErrorHandler.ts","webpack:///./js/services/CloudService.ts","webpack:///./js/services/ServiceService.ts","webpack:///./js/pages/Cloud/AzureCreator.vue?588f","webpack:///./js/pages/Cloud/AzureCreator.vue?06e0","webpack:///./js/pages/Cloud/AzureCreator.vue","webpack:///./js/pages/Cloud/AwsCreator.vue?c05a","webpack:///./js/pages/Cloud/AwsCreator.vue?6fe6","webpack:///./js/pages/Cloud/AwsCreator.vue?7d77","webpack:///./js/pages/Cloud/AwsCreator.vue","webpack:///./js/pages/Cloud/HexioCreator.vue?f5f1","webpack:///./js/pages/Cloud/HexioCreator.vue?7453","webpack:///./js/pages/Cloud/HexioCreator.vue?be8d","webpack:///./js/pages/Cloud/HexioCreator.vue","webpack:///./js/pages/Cloud/IbmCreator.vue?c219","webpack:///./js/pages/Cloud/IbmCreator.vue?572c","webpack:///./js/pages/Cloud/IbmCreator.vue?9fde","webpack:///./js/pages/Cloud/IbmCreator.vue","webpack:///./js/pages/Cloud/InteliGlueCreator.vue?b57f","webpack:///./js/pages/Cloud/InteliGlueCreator.vue?fb53","webpack:///./js/pages/Cloud/InteliGlueCreator.vue?77b3","webpack:///./js/pages/Cloud/InteliGlueCreator.vue","webpack:///./js/pages/Cloud/PixlaControl.vue?a256","webpack:///./js/components/Cloud/PixlaTokenEditor.vue?f421","webpack:///./js/services/PixlaService.ts","webpack:///./js/components/Cloud/PixlaTokenEditor.vue?f73f","webpack:///./js/components/Cloud/PixlaTokenEditor.vue?ca6b","webpack:///./js/components/Cloud/PixlaTokenEditor.vue","webpack:///./js/pages/Cloud/PixlaControl.vue?27b9","webpack:///./js/pages/Cloud/PixlaControl.vue?0674","webpack:///./js/pages/Cloud/PixlaControl.vue","webpack:///./js/pages/Gateway/GatewayDisambiguation.vue?f226","webpack:///./js/pages/Gateway/GatewayDisambiguation.vue?3e22","webpack:///./js/pages/Gateway/GatewayDisambiguation.vue?48e3","webpack:///./js/pages/Gateway/GatewayDisambiguation.vue","webpack:///./js/pages/Gateway/GatewayInfo.vue?9b4f","webpack:///./js/components/Gateway/CoordinatorInfo.vue?f3f9","webpack:///./js/services/IqrfNetService.ts","webpack:///./js/components/Gateway/CoordinatorInfo.vue?197f","webpack:///./js/components/Gateway/CoordinatorInfo.vue?179b","webpack:///./js/components/Gateway/CoordinatorInfo.vue","webpack:///./js/services/DaemonModeService.ts","webpack:///./js/services/GatewayService.ts","webpack:///./js/components/Gateway/ResourceUsage.vue?f00a","webpack:///./js/components/Gateway/ResourceUsage.vue?00cd","webpack:///./js/components/Gateway/ResourceUsage.vue?4d89","webpack:///./js/components/Gateway/ResourceUsage.vue","webpack:///./js/helpers/fileDownloader.ts","webpack:///js/pages/Gateway/GatewayInfo.vue","webpack:///./js/pages/Gateway/GatewayInfo.vue?5831","webpack:///./js/pages/Gateway/GatewayInfo.vue","webpack:///./js/pages/Gateway/DaemonLogViewer.vue?d7a8","webpack:///./js/pages/Gateway/DaemonLogViewer.vue?f090","webpack:///./js/pages/Gateway/DaemonLogViewer.vue?5422","webpack:///./js/pages/Gateway/DaemonLogViewer.vue","webpack:///./js/pages/Gateway/DaemonMode.vue?2593","webpack:///./js/pages/Gateway/DaemonMode.vue?8143","webpack:///./js/pages/Gateway/DaemonMode.vue?3956","webpack:///./js/pages/Gateway/DaemonMode.vue","webpack:///./js/pages/Gateway/PowerControl.vue?f2ed","webpack:///./js/pages/Gateway/PowerControl.vue?9468","webpack:///js/pages/Gateway/PowerControl.vue","webpack:///./js/pages/Gateway/PowerControl.vue","webpack:///./js/pages/Gateway/ServiceControl.vue?32a1","webpack:///js/pages/Gateway/ServiceControl.vue","webpack:///./js/pages/Gateway/ServiceControl.vue?454b","webpack:///./js/pages/Gateway/ServiceControl.vue","webpack:///./js/components/SignIn.vue?3504","webpack:///./js/components/SignIn.vue?4876","webpack:///js/components/SignIn.vue","webpack:///./js/components/SignIn.vue","webpack:///./js/pages/IqrfNet/IqrfNetDisambiguation.vue?453b","webpack:///./js/pages/IqrfNet/IqrfNetDisambiguation.vue?7a5c","webpack:///./js/pages/IqrfNet/IqrfNetDisambiguation.vue?aaf2","webpack:///./js/pages/IqrfNet/IqrfNetDisambiguation.vue","webpack:///./js/pages/IqrfNet/DeviceEnumeration.vue?3d8b","webpack:///./js/services/IqrfRepository/ProductService.ts","webpack:///./js/helpers/timeout.ts","webpack:///./js/pages/IqrfNet/DeviceEnumeration.vue?4bc2","webpack:///./js/pages/IqrfNet/DeviceEnumeration.vue?9c3b","webpack:///./js/pages/IqrfNet/DeviceEnumeration.vue","webpack:///./js/pages/IqrfNet/NetworkManager.vue?3906","webpack:///./js/components/IqrfNet/BondingManager.vue?b8e5","webpack:///./js/components/IqrfNet/BondingManager.vue?9288","webpack:///./js/components/IqrfNet/BondingManager.vue?fca3","webpack:///./js/components/IqrfNet/BondingManager.vue","webpack:///./js/components/IqrfNet/DevicesInfo.vue?49e7","webpack:///./js/helpers/Device.ts","webpack:///./js/components/IqrfNet/DeviceIcon.vue?198e","webpack:///./js/components/IqrfNet/DeviceIcon.vue?6d27","webpack:///./js/components/IqrfNet/DeviceIcon.vue?0e1c","webpack:///./js/components/IqrfNet/DeviceIcon.vue","webpack:///./js/components/IqrfNet/DevicesInfo.vue?b2d6","webpack:///js/components/IqrfNet/DevicesInfo.vue","webpack:///./js/components/IqrfNet/DevicesInfo.vue","webpack:///./js/components/IqrfNet/DiscoveryManager.vue?38c0","webpack:///./js/components/IqrfNet/DiscoveryManager.vue?5a14","webpack:///./js/components/IqrfNet/DiscoveryManager.vue?0cf2","webpack:///./js/components/IqrfNet/DiscoveryManager.vue","webpack:///./js/components/IqrfNet/AutoNetwork.vue?34bb","webpack:///./js/services/VersionService.ts","webpack:///./js/components/IqrfNet/AutoNetwork.vue?b784","webpack:///js/components/IqrfNet/AutoNetwork.vue","webpack:///./js/components/IqrfNet/AutoNetwork.vue","webpack:///./js/pages/IqrfNet/NetworkManager.vue?3645","webpack:///js/pages/IqrfNet/NetworkManager.vue","webpack:///./js/pages/IqrfNet/NetworkManager.vue","webpack:///./js/pages/IqrfNet/SendJsonRequest.vue?4a6e","webpack:///./js/iqrfNet/sendJson.ts","webpack:///./js/pages/IqrfNet/SendJsonRequest.vue?9619","webpack:///js/pages/IqrfNet/SendJsonRequest.vue","webpack:///./js/pages/IqrfNet/SendJsonRequest.vue","webpack:///./js/pages/IqrfNet/SendDpaPacket.vue?39ea","webpack:///./js/components/IqrfNet/DpaMacros.vue?07ef","webpack:///./js/services/IqrfService.ts","webpack:///./js/components/IqrfNet/DpaMacros.vue?5217","webpack:///./js/components/IqrfNet/DpaMacros.vue?e8dc","webpack:///./js/components/IqrfNet/DpaMacros.vue","webpack:///./js/iqrfNet/sendPacket.ts","webpack:///./js/pages/IqrfNet/SendDpaPacket.vue?03bc","webpack:///./js/pages/IqrfNet/SendDpaPacket.vue?8e75","webpack:///./js/pages/IqrfNet/SendDpaPacket.vue","webpack:///./js/pages/IqrfNet/StandardManager.vue?03f8","webpack:///./js/components/IqrfNet/BinaryOutputManager.vue?661d","webpack:///./js/services/DaemonApi/StandardBinaryOutputService.ts","webpack:///./js/components/IqrfNet/BinaryOutputManager.vue?7c8b","webpack:///js/components/IqrfNet/BinaryOutputManager.vue","webpack:///./js/components/IqrfNet/BinaryOutputManager.vue","webpack:///./js/components/IqrfNet/DaliManager.vue?6a65","webpack:///./js/services/DaemonApi/StandardDaliService.ts","webpack:///./js/components/IqrfNet/DaliManager.vue?3b9d","webpack:///./js/components/IqrfNet/DaliManager.vue?387b","webpack:///./js/components/IqrfNet/DaliManager.vue","webpack:///./js/components/IqrfNet/LightManager.vue?2058","webpack:///./js/services/DaemonApi/StandardLightService.ts","webpack:///./js/components/IqrfNet/LightManager.vue?7b64","webpack:///./js/components/IqrfNet/LightManager.vue?02d4","webpack:///./js/components/IqrfNet/LightManager.vue","webpack:///./js/components/IqrfNet/SensorManager.vue?fd4c","webpack:///./js/services/DaemonApi/StandardSensorService.ts","webpack:///./js/components/IqrfNet/SensorManager.vue?6bee","webpack:///./js/components/IqrfNet/SensorManager.vue?8c29","webpack:///./js/components/IqrfNet/SensorManager.vue","webpack:///./js/pages/IqrfNet/StandardManager.vue?b5ae","webpack:///js/pages/IqrfNet/StandardManager.vue","webpack:///./js/pages/IqrfNet/StandardManager.vue","webpack:///./js/pages/IqrfNet/TrConfiguration.vue?c625","webpack:///./js/components/IqrfNet/AddressChanger.vue?7033","webpack:///./js/components/IqrfNet/AddressChanger.vue?65ed","webpack:///./js/components/IqrfNet/AddressChanger.vue?ac4a","webpack:///./js/components/IqrfNet/AddressChanger.vue","webpack:///./js/iqrfNet/securityFormat.ts","webpack:///./js/components/IqrfNet/SecurityForm.vue?c255","webpack:///./js/services/SecurityService.ts","webpack:///./js/components/IqrfNet/SecurityForm.vue?afe3","webpack:///./js/components/IqrfNet/SecurityForm.vue?27a7","webpack:///./js/components/IqrfNet/SecurityForm.vue","webpack:///js/pages/IqrfNet/TrConfiguration.vue","webpack:///./js/pages/IqrfNet/TrConfiguration.vue?8438","webpack:///./js/pages/IqrfNet/TrConfiguration.vue","webpack:///./js/pages/IqrfNet/TrUpload.vue?0d9e","webpack:///./js/components/IqrfNet/DpaUpdater.vue?2d0d","webpack:///./js/iqrfNet/fileFormat.ts","webpack:///./js/services/IqrfRepository/DpaService.ts","webpack:///./js/services/DaemonApi/OsService.ts","webpack:///./js/services/NativeUploadService.ts","webpack:///./js/components/IqrfNet/DpaUpdater.vue?112c","webpack:///./js/components/IqrfNet/DpaUpdater.vue?eed4","webpack:///./js/components/IqrfNet/DpaUpdater.vue","webpack:///./js/components/IqrfNet/FileUpload.vue?eb7f","webpack:///js/components/IqrfNet/FileUpload.vue","webpack:///./js/components/IqrfNet/FileUpload.vue?6c4b","webpack:///./js/components/IqrfNet/FileUpload.vue","webpack:///./js/pages/IqrfNet/TrUpload.vue?411b","webpack:///js/pages/IqrfNet/TrUpload.vue","webpack:///./js/pages/IqrfNet/TrUpload.vue","webpack:///./js/pages/Config/ConfigDisambiguation.vue?1191","webpack:///./js/pages/Config/ConfigDisambiguation.vue?f6e0","webpack:///./js/pages/Config/ConfigDisambiguation.vue?95f4","webpack:///./js/pages/Config/ConfigDisambiguation.vue","webpack:///./js/pages/Config/ConfigMigration.vue?3ea5","webpack:///./js/services/DaemonConfigurationService.ts","webpack:///./js/pages/Config/ConfigMigration.vue?d337","webpack:///./js/pages/Config/ConfigMigration.vue?9cfc","webpack:///./js/pages/Config/ConfigMigration.vue","webpack:///./js/pages/Config/TranslatorConfig.vue?6666","webpack:///./js/services/FeatureConfigService.ts","webpack:///./js/pages/Config/TranslatorConfig.vue?93f6","webpack:///js/pages/Config/TranslatorConfig.vue","webpack:///./js/pages/Config/TranslatorConfig.vue","webpack:///./js/pages/Config/ControllerConfig.vue?ee95","webpack:///js/pages/Config/ControllerConfig.vue","webpack:///./js/pages/Config/ControllerConfig.vue?c42f","webpack:///./js/pages/Config/ControllerConfig.vue","webpack:///./js/pages/Config/MenderConfig.vue?32ec","webpack:///js/pages/Config/MenderConfig.vue","webpack:///./js/pages/Config/MenderConfig.vue?9a47","webpack:///./js/pages/Config/MenderConfig.vue","webpack:///./js/pages/Config/IqrfInfo.vue?5ba7","webpack:///./js/pages/Config/IqrfInfo.vue?adb6","webpack:///./js/pages/Config/IqrfInfo.vue?a1fd","webpack:///./js/pages/Config/IqrfInfo.vue","webpack:///./js/pages/Config/IqrfRepository.vue?71b8","webpack:///./js/pages/Config/IqrfRepository.vue?baf6","webpack:///./js/pages/Config/IqrfRepository.vue?80cf","webpack:///./js/pages/Config/IqrfRepository.vue","webpack:///./js/pages/Config/IqrfCdc.vue?577c","webpack:///./js/components/Config/InterfacePorts.vue?2166","webpack:///./js/components/Config/InterfacePorts.vue?4811","webpack:///./js/components/Config/InterfacePorts.vue?4c7b","webpack:///./js/components/Config/InterfacePorts.vue","webpack:///./js/pages/Config/IqrfCdc.vue?2074","webpack:///./js/pages/Config/IqrfCdc.vue?4dc8","webpack:///./js/pages/Config/IqrfCdc.vue","webpack:///./js/pages/Config/IqrfDpa.vue?22b6","webpack:///./js/pages/Config/IqrfDpa.vue?c69d","webpack:///./js/pages/Config/IqrfDpa.vue?425b","webpack:///./js/pages/Config/IqrfDpa.vue","webpack:///./js/pages/Config/IqrfSpi.vue?b98d","webpack:///./js/components/Config/InterfaceMappings.vue?7ef1","webpack:///./js/components/Config/InterfaceMappings.vue?0c85","webpack:///./js/components/Config/InterfaceMappings.vue?0ced","webpack:///./js/components/Config/InterfaceMappings.vue","webpack:///./js/pages/Config/IqrfSpi.vue?006a","webpack:///js/pages/Config/IqrfSpi.vue","webpack:///./js/pages/Config/IqrfSpi.vue","webpack:///./js/pages/Config/IqrfUart.vue?5450","webpack:///./js/pages/Config/IqrfUart.vue?c2cd","webpack:///./js/pages/Config/IqrfUart.vue?a5f5","webpack:///./js/pages/Config/IqrfUart.vue","webpack:///./js/pages/Config/JsonMngMetaDataApi.vue?5f91","webpack:///./js/pages/Config/JsonMngMetaDataApi.vue?84dc","webpack:///./js/pages/Config/JsonMngMetaDataApi.vue?f38b","webpack:///./js/pages/Config/JsonMngMetaDataApi.vue","webpack:///./js/pages/Config/JsonRawApi.vue?dbe1","webpack:///./js/pages/Config/JsonRawApi.vue?03da","webpack:///./js/pages/Config/JsonRawApi.vue?0273","webpack:///./js/pages/Config/JsonRawApi.vue","webpack:///./js/pages/Config/JsonSplitter.vue?f56c","webpack:///./js/pages/Config/JsonSplitter.vue?3a22","webpack:///./js/pages/Config/JsonSplitter.vue?923c","webpack:///./js/pages/Config/JsonSplitter.vue","webpack:///./js/pages/Config/MonitorForm.vue?e7a2","webpack:///js/pages/Config/MonitorForm.vue","webpack:///./js/pages/Config/MonitorForm.vue?fdbe","webpack:///./js/pages/Config/MonitorForm.vue","webpack:///./js/pages/Config/MonitorList.vue?3455","webpack:///js/pages/Config/MonitorList.vue","webpack:///./js/pages/Config/MonitorList.vue?0332","webpack:///./js/pages/Config/MonitorList.vue","webpack:///./js/pages/Config/MqMessagingForm.vue?cd70","webpack:///js/pages/Config/MqMessagingForm.vue","webpack:///./js/pages/Config/MqMessagingForm.vue?4bcd","webpack:///./js/pages/Config/MqMessagingForm.vue","webpack:///./js/pages/Config/MqMessagingTable.vue?efdb","webpack:///./js/pages/Config/MqMessagingTable.vue?e82d","webpack:///js/pages/Config/MqMessagingTable.vue","webpack:///./js/pages/Config/MqMessagingTable.vue","webpack:///./js/pages/Config/MqttMessagingForm.vue?f5e7","webpack:///js/pages/Config/MqttMessagingForm.vue","webpack:///./js/pages/Config/MqttMessagingForm.vue?598f","webpack:///./js/pages/Config/MqttMessagingForm.vue","webpack:///./js/pages/Config/MqttMessagingTable.vue?54b2","webpack:///js/pages/Config/MqttMessagingTable.vue","webpack:///./js/pages/Config/MqttMessagingTable.vue?2bee","webpack:///./js/pages/Config/MqttMessagingTable.vue","webpack:///./js/pages/Config/UdpMessagingForm.vue?b12c","webpack:///js/pages/Config/UdpMessagingForm.vue","webpack:///./js/pages/Config/UdpMessagingForm.vue?d121","webpack:///./js/pages/Config/UdpMessagingForm.vue","webpack:///./js/pages/Config/UdpMessagingTable.vue?666f","webpack:///js/pages/Config/UdpMessagingTable.vue","webpack:///./js/pages/Config/UdpMessagingTable.vue?0e39","webpack:///./js/pages/Config/UdpMessagingTable.vue","webpack:///./js/pages/Config/TracerList.vue?7bf3","webpack:///js/pages/Config/TracerList.vue","webpack:///./js/pages/Config/TracerList.vue?717f","webpack:///./js/pages/Config/TracerList.vue","webpack:///./js/pages/Config/TracerForm.vue?6f68","webpack:///js/pages/Config/TracerForm.vue","webpack:///./js/pages/Config/TracerForm.vue?66e7","webpack:///./js/pages/Config/TracerForm.vue","webpack:///./js/pages/Config/MainConfiguration.vue?9403","webpack:///./js/pages/Config/MainConfiguration.vue?2427","webpack:///./js/pages/Config/MainConfiguration.vue?1c7c","webpack:///./js/pages/Config/MainConfiguration.vue","webpack:///./js/pages/Config/ComponentList.vue?e54d","webpack:///js/pages/Config/ComponentList.vue","webpack:///./js/pages/Config/ComponentList.vue?6a5c","webpack:///./js/pages/Config/ComponentList.vue","webpack:///./js/pages/Config/ComponentForm.vue?76db","webpack:///js/pages/Config/ComponentForm.vue","webpack:///./js/pages/Config/ComponentForm.vue?ee1d","webpack:///./js/pages/Config/ComponentForm.vue","webpack:///./js/pages/Config/IqmeshServices.vue?3a00","webpack:///./js/components/Config/OtaUpload.vue?8570","webpack:///./js/components/Config/OtaUpload.vue?f96e","webpack:///./js/components/Config/OtaUpload.vue?fdae","webpack:///./js/components/Config/OtaUpload.vue","webpack:///./js/pages/Config/IqmeshServices.vue?f55c","webpack:///./js/pages/Config/IqmeshServices.vue?2285","webpack:///./js/pages/Config/IqmeshServices.vue","webpack:///./js/pages/Config/WebsocketInterfaceForm.vue?5172","webpack:///js/pages/Config/WebsocketInterfaceForm.vue","webpack:///./js/pages/Config/WebsocketInterfaceForm.vue?d40d","webpack:///./js/pages/Config/WebsocketInterfaceForm.vue","webpack:///./js/pages/Config/WebsocketMessagingForm.vue?3d55","webpack:///js/pages/Config/WebsocketMessagingForm.vue","webpack:///./js/pages/Config/WebsocketMessagingForm.vue?d83a","webpack:///./js/pages/Config/WebsocketMessagingForm.vue","webpack:///./js/pages/Config/WebsocketServiceForm.vue?36d6","webpack:///js/pages/Config/WebsocketServiceForm.vue","webpack:///./js/pages/Config/WebsocketServiceForm.vue?b356","webpack:///./js/pages/Config/WebsocketServiceForm.vue","webpack:///./js/pages/Config/WebsocketList.vue?ff47","webpack:///./js/components/Config/WebsocketInterfaceList.vue?d83e","webpack:///js/components/Config/WebsocketInterfaceList.vue","webpack:///./js/components/Config/WebsocketInterfaceList.vue?e3b1","webpack:///./js/components/Config/WebsocketInterfaceList.vue","webpack:///./js/components/Config/WebsocketMessagingList.vue?a0f0","webpack:///js/components/Config/WebsocketMessagingList.vue","webpack:///./js/components/Config/WebsocketMessagingList.vue?9b0f","webpack:///./js/components/Config/WebsocketMessagingList.vue","webpack:///./js/components/Config/WebsocketServiceList.vue?c214","webpack:///js/components/Config/WebsocketServiceList.vue","webpack:///./js/components/Config/WebsocketServiceList.vue?ac86","webpack:///./js/components/Config/WebsocketServiceList.vue","webpack:///./js/pages/Config/WebsocketList.vue?ca20","webpack:///js/pages/Config/WebsocketList.vue","webpack:///./js/pages/Config/WebsocketList.vue","webpack:///./js/pages/Config/SchedulerList.vue?bf52","webpack:///./js/services/SchedulerService.ts","webpack:///./js/pages/Config/SchedulerList.vue?4511","webpack:///js/pages/Config/SchedulerList.vue","webpack:///./js/pages/Config/SchedulerList.vue","webpack:///./js/pages/Config/SchedulerForm.vue?270c","webpack:///./js/pages/Config/SchedulerForm.vue?95d3","webpack:///js/pages/Config/SchedulerForm.vue","webpack:///./js/pages/Config/SchedulerForm.vue","webpack:///./js/pages/Core/UserAdd.vue?85cc","webpack:///./js/services/UserService.ts","webpack:///./js/pages/Core/UserAdd.vue?e54b","webpack:///./js/pages/Core/UserAdd.vue?1a5b","webpack:///./js/pages/Core/UserAdd.vue","webpack:///./js/pages/Core/UserEdit.vue?0489","webpack:///./js/pages/Core/UserEdit.vue?e50f","webpack:///./js/pages/Core/UserEdit.vue?04ae","webpack:///./js/pages/Core/UserEdit.vue","webpack:///./js/pages/Core/UserList.vue?8456","webpack:///js/pages/Core/UserList.vue","webpack:///./js/pages/Core/UserList.vue?55b2","webpack:///./js/pages/Core/UserList.vue","webpack:///./js/pages/Core/ApiKeyList.vue?7cf0","webpack:///./js/services/ApiKeyService.ts","webpack:///./js/pages/Core/ApiKeyList.vue?d52e","webpack:///js/pages/Core/ApiKeyList.vue","webpack:///./js/pages/Core/ApiKeyList.vue","webpack:///./js/pages/Core/ApiKeyForm.vue?5a3e","webpack:///js/pages/Core/ApiKeyForm.vue","webpack:///./js/pages/Core/ApiKeyForm.vue?6b79","webpack:///./js/pages/Core/ApiKeyForm.vue","webpack:///./js/pages/Network/NetworkDisambiguation.vue?870e","webpack:///./js/pages/Network/NetworkDisambiguation.vue?28bf","webpack:///./js/pages/Network/NetworkDisambiguation.vue?b8b5","webpack:///./js/pages/Network/NetworkDisambiguation.vue","webpack:///./js/services/NetworkConnectionService.ts","webpack:///./js/pages/Network/ConnectionForm.vue?a4ad","webpack:///./js/pages/Network/ConnectionForm.vue?4a08","webpack:///js/pages/Network/ConnectionForm.vue","webpack:///./js/pages/Network/ConnectionForm.vue","webpack:///./js/services/NetworkInterfaceService.ts","webpack:///./js/pages/Network/EthernetInterfaces.vue?0935","webpack:///./js/components/Network/EthernetConnections.vue?6d23","webpack:///./js/components/Network/EthernetConnections.vue?509f","webpack:///js/components/Network/EthernetConnections.vue","webpack:///./js/components/Network/EthernetConnections.vue","webpack:///./js/pages/Network/EthernetInterfaces.vue?fe78","webpack:///js/pages/Network/EthernetInterfaces.vue","webpack:///./js/pages/Network/EthernetInterfaces.vue","webpack:///./js/router/index.ts","webpack:///./js/components/App.vue?728f","webpack:///js/components/App.vue","webpack:///./js/components/App.vue?af37","webpack:///./js/components/App.vue","webpack:///./js/components/TheDashboard.vue?252b","webpack:///./js/components/LoadingSpinner.vue?e606","webpack:///./js/components/LoadingSpinner.vue?29d8","webpack:///./js/components/LoadingSpinner.vue?5b06","webpack:///./js/components/LoadingSpinner.vue","webpack:///./js/components/TheHeader.vue?22f2","webpack:///./js/components/TheHeader.vue?444a","webpack:///js/components/TheHeader.vue","webpack:///./js/components/TheHeader.vue","webpack:///./js/components/TheSidebar.vue?c3ca","webpack:///./js/components/TheSidebar.vue?e384","webpack:///js/components/TheSidebar.vue","webpack:///./js/components/TheSidebar.vue","webpack:///./js/components/TheDashboard.vue?0985","webpack:///js/components/TheDashboard.vue","webpack:///./js/components/TheDashboard.vue","webpack:///./js/components/MainDisambiguation.vue?5efa","webpack:///./js/components/MainDisambiguation.vue?bd40","webpack:///./js/components/MainDisambiguation.vue?66af","webpack:///./js/components/MainDisambiguation.vue","webpack:///./js/main.ts","webpack:///./js/components/Gateway/ResourceUsage.vue?04b3","webpack:///./js/components/SignIn.vue?2bf8","webpack:///./js/pages/IqrfNet/DeviceEnumeration.vue?3f6b","webpack:///./js/components/IqrfNet/DevicesInfo.vue?d724","webpack:///./js/pages/IqrfNet/NetworkManager.vue?d4c4","webpack:///./js/components/IqrfNet/BinaryOutputManager.vue?705a","webpack:///./js/components/IqrfNet/SensorManager.vue?1b81","webpack:///./js/components/LoadingSpinner.vue?6618"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","1","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","content","locals","add","default","authorizationHeader","token","getters","FeatureService","fetchAll","a","headers","namespaced","state","features","actions","fetch","_a","commit","then","response","isEnabled","enabled","e","configuration","mutations","SET","show","minimize","toggleSidebarDesktop","sidebarOpened","includes","toggleSidebarMobile","sidebarClosed","set","variable","text","timeout","HIDE","SHOW","UPDATE_TEXT","options","setTimeout","hide","clearTimeout","AuthenticationService","apiLogin","username","password","post","netteLogin","URLSearchParams","append","location","host","login","Promise","all","this","logout","user","signIn","credentials","responses","apiResponse","catch","error","console","reject","signOut","isLoggedIn","getId","id","getName","getRole","role","getToken","SIGN_IN","SIGN_OUT","socket","isConnected","hasReconnected","reconnectError","requests","sendRequest","context","request","undefined","msgId","$socket","sendObj","isSocketConnected","SOCKET_ONOPEN","event","currentTarget","SOCKET_ONCLOSE","SOCKET_ONERROR","SOCKET_ONMESSAGE","message","SOCKET_ONSEND","SOCKET_RECONNECT","count","info","SOCKET_RECONNECT_ERROR","use","Store","sidebar","spinner","webSocketClient","plugins","render","_vm","_h","$createElement","_c","_self","attrs","to","staticClass","_v","_s","$t","$store","_e","_withStripped","extend","components","CCard","CListGroup","CListGroupItem","metaInfo","title","__file","color","size","href","scopedSlots","_u","fn","ref","invalid","rules","required","errors","touched","valid","label","model","connectionString","callback","$$v","expression","disabled","on","click","$event","preventDefault","save","saveAndRestart","messages","locale","fallbackLocale","FormErrorHandler","cloudError","status","$toast","i18n","toString","configError","serviceError","schedulerError","apiKeyError","CloudService","serviceName","ServiceService","disable","enable","getStatus","restart","start","stop","CButton","CCardBody","CCardHeader","CForm","CInput","ValidationObserver","ValidationProvider","created","methods","_this","success","endpoint","accept","input","isEmpty","certEmpty","firstCert","staticStyle","keyEmpty","firstKey","CInputFile","buildRequest","formData","FormData","$refs","awsFormCert","$el","children","files","awsFormKey","button","config","broker","$set","clientId","topicRequest","topicResponse","organizationId","deviceType","deviceId","eventId","rootTopic","between","integer","type","min","max","assignedPort","_n","showEditor","missing","unsupported","service","active","target","tokenUpdated","submit","processSubmit","close","proxy","PixlaService","setToken","put","CModal","props","Boolean","$emit","PixlaTokenEditor","handleError","beforeRouteEnter","from","next","vm","$router","path","board","gwId","pixla","versions","controller","daemon","webapp","hostname","_l","getIpAddresses","iface","addresses","getMacAddresses","address","diskUsages","usage","fsName","fsType","memoryUsage","swapUsage","downloadDiagnostics","hasData","trMcuType","trType","mcuType","osInfo","mid","osVersion","osBuild","enumeration","dpaVer","flags","rfMode","networkType","supplyVoltage","IqrfNetService","autoNetwork","json","discoveryTxPower","discoveryBeforeStart","skipDiscoveryEachWave","actionRetries","stopConditions","assign","req","overlappingNetworks","hwpidFiltering","dispatch","bondLocal","bondSmartConnect","scCode","testRetries","clearAllBonds","coordinatorOnly","removeBond","discovery","txPower","maxAddr","enumerateDevice","getBonded","getDiscovered","ping","addr","sendJson","writeTrConfiguration","rfBand","deviceAddr","unsubscribe","subscribe","mutation","payload","mType","rsp","peripheralEnumeration","osRead","beforeDestroy","DaemonMode","DaemonModeService","getMode","newMode","parse","operMode","unknown","GatewayService","getDiagnosticsArchive","responseType","getInfo","getLatestLog","getLogArchive","performPowerOff","performReboot","used","style","width","fileDownloader","contentType","fileName","contentDisposition","fileNameMatch","match","blob","Blob","fileUrl","URL","createObjectURL","file","document","createElement","setAttribute","body","appendChild","log","downloadArchive","code","setMode","loaded","handleResponse","powerOff","$options","icon","cilPowerStandby","reboot","cilReload","refreshStatus","md","alt","src","handleSubmit","placeholder","autocomplete","icons","lock","peripheralData","hwpId","manufacturer","product","homePage","picture","osData","rfModeStd","rfModeLp","rssi","ProductService","hwpid","CIcon","Number","lg","variant","activeTab","updateDevices","bondMethod","autoAddress","checked","bondingRetries","unbondCoordinatorOnly","processSubmitBond","modalUnbond","modalClear","processSubmitClearAll","processSubmitUnbond","CInputCheckbox","CSelect","RegExp","test","nodesNr","coordinator","unbonded","bonded","discovered","frcPing","failed","Array","keys","num","row","col","device","devices","getAddress","Device","online","getIcon","getIconColor","hasLink","class","responseReceived","daemonVersion","versionValid","requred","useOverlappingNetworks","networks","network","useHwpidFiltering","hwpidFilter","useWaves","waves","emptyWaves","useNodes","nodeCondition","numberOfTotalNodes","numberOfNewNodes","abortOnTooManyNodesFound","processSubmitAutoNetwork","invalidVersionBody","VersionService","getVersion","daemonAvailable","directives","rawName","attempt","reconnectAttempt","arg","highlight","highlighter","readonly","StatusMessages","packet","addressOverwrite","timeoutOverwrite","setPacket","macros","group","placement","IqrfService","getInterfacePorts","interfaceType","getMacros","CButtonGroup","CDropdown","CDropdownItem","filter","__spreadArrays","il","arguments","k","jl","Packet","nadr","pnum","pcmd","pdata","detectTimeout","packetArray","split","nadrLo","nadrHi","parseInt","hwpidLo","hwpidHi","map","hex","int","padStart","join","updateNadr","validatePacket","re","CCol","CRow","DpaMacros","PrismEditor","sendPacket","JSON","stringify","rData","languages","newPacket","newTimeout","index","for","shape","submitEnumerate","submitGetStates","submitSetState","numOutputs","ind","states","off","StandardBinaryOutput","StandardBinaryOutputService","enumerate","getOutputs","setOutputs","outputs","commands","removeDaliCommand","addDaliCommand","sendDali","answers","answer","StandardDaliService","send","CCardFooter","power","submitGetPower","submitSetPower","submitIncrementPower","submitDecrementPower","colspan","numLights","prevPower","StandardLight","StandardLightService","decrementPower","lights","incrementPower","getPower","light","setPower","allowedMTypes","prevVals","disabeld","submitReadAll","sensors","unit","StandardSensorService","readAll","parseEnumerate","parseReadAll","forEach","item","breakdown","rfChannelRules","rule","rfChannelValidatorMessages","rfChannelA","rfChannelB","rfSubChannelA","rfSubChannelB","rfAltDsmChannel","stdAndLpNetwork","rxFilter","lpRxTimeout","rfPgmEnableAfterReset","rfPgmTerminateAfter1Min","rfPgmTerminateMcuPin","rfPgmDualChannel","rfPgmLpMode","rfPgmIncorrectUpload","peripherals","peripheral","unchangeablePeripherals","customDpaHandler","dpaHandlerDetected","dpaPeerToPeer","peerToPeer","localFrcReception","ioSetup","dpaAutoexec","routingOff","neverSleep","uartBaudrate","uartBaudRates","nodeDpaInterface","changeAddress","currentAddress","SecurityFormat","format","selectOptions","SecurityService","setSecurity","inputFormat","convert","ASCII","charCodeAt","padEnd","array","substr","valueOf","HEX","FileFormat","upload","version","RFMode","DpaVersion","notes","downloadPath","getOsBuild","pretty","versionInt","minor","getNotes","getDownloadPath","DpaService","getVersions","params","os","_i","dpa","getDpaFile","metadata","OsService","sendRead","nAdr","param","NativeUploadService","filePath","uploadREST","requestSent","getOsInfo","convertVersion","toUpperCase","versions_1","LP","STD","sort","reverse","endsWith","IQRF","msg","submitUpload","fileEmpty","fileUntouched","configEmpty","firstConfig","importConfig","exportConfig","DaemonConfigurationService","createComponent","createInstance","component","url","encodeURIComponent","getComponent","getInstance","instance","deleteComponent","delete","deleteInstance","export","import","updateComponent","updateInstance","getFiles","configZip","Date","toISOString","mqtt","port","client_id","cid","topic","visibility","changeVisibility","hidden","shown","pw","rest","api_key_r","api_key","FeatureConfigService","getConfig","featureName","saveConfig","ws_addr","wsServers","api","monitor","logger","severity","resetButton","daemonApi","returnVerbose","factoryReset","ServerURL","TenantToken","InventoryPollIntervalSeconds","RetryPollIntervalSeconds","UpdatePollIntervalSeconds","enumAtStartUp","enumPeriod","enumUniformDpaVer","componentName","instances","successfulSave","urlRepo","checkPeriodInMinutes","downloadIfRepoCacheEmpty","IqrfInterface","updatePort","ports","setPort","String","InterfacePorts","DpaHandlerTimeout","powerEnableGpioPin","busEnableGpioPin","pgmSwitchGpioPin","spiReset","updateMapping","mappings","setMapping","mapping","baudRate","baudRates","InterfaceMappings","computed","metaDataToMessages","asyncDpaMessage","validateJsonResponse","reportPeriod","webSocket","WebsocketPort","acceptOnlyLocalhost","submitButton","fields","items","pagination","striped","sorter","external","resetable","changeAcceptOnlyLocalhost","edit","modals","remove","removeInterface","LocalMqName","RemoteMqName","acceptAsyncMsg","changeAcceptAsyncMsg","confirmDelete","performDelete","BrokerAddr","ClientId","Persistence","Qos","qosOptions","TopicRequest","TopicResponse","User","Password","EnabledSSL","KeepAliveInterval","ConnectTimeout","MaxReconnect","MinReconnect","TrustStore","KeyStore","PrivateKey","PrivateKeyPassword","EnabledCipherSuites","EnableServerCertAuth","changeEnabledSSL","RemotePort","LocalPort","currentInstance","removeInstance","saveInstance","filename","maxSizeMB","timestampFiles","VerbosityLevels","level","channel","removeLevel","addLevel","applicationName","resourceDir","dataDir","cacheDir","userDir","configurationDir","deploymentDir","changeEnabled","removeComponent","saveComponent","libraryPath","libraryName","startlevel","uploadPath","uploadPathSuffix","OtaUpload","messaging","RequiredInterfaces","addInterface","instanceMessaging","changeAccept","removeService","modal","exportScheduler","tasks","retrieved","timeString","timeSpec","time","displayMTypes","task","mTypes","taskId","closeImport","empty","importScheduler","first","removeTask","SchedulerService","addTask","addTaskREST","newTask","editTaskREST","oldTaskId","editTask","listTasks","listTasksREST","getTask","getTaskREST","removeTaskREST","saveTask","cronMessage","exactTime","periodic","calculateCron","cronTime","period","pickerSettings","dateFormat","startTime","messagings","removeMessage","addMessage","language","UserService","changePassword","oldPassword","newPassword","old","new","getLoggedIn","list","_b","userId","performEdit","replace","users","changeRole","changeLanguage","expiration","removeKey","ApiKeyService","getApiKeys","addApiKey","keyData","getApiKey","keyId","editApiKey","deleteApiKey","saveKey","description","useExpiration","change","clear","ConnectionType","ipv4","method","ipv4Methods","mask","deleteIpv4Address","addIpv4Address","gateway","dns","deleteIpv4Dns","addIpv4Dns","ipv6","ipv6Methods","prefix","deleteIpv6Address","addIpv6Address","deleteIpv6Dns","addIpv6Dns","NetworkConnectionService","connect","uuid","interfaceName","disconnect","InterfaceState","InterfaceType","interfaces","getStatusBadgeColor","connections","updateConnection","getConnections","NetworkInterfaceService","routes","SignIn","CloudDisambiguation","meta","AzureCreator","AwsCreator","HexioCreator","IbmCreator","InteliGlueCreator","PixlaControl","ConfigDisambiguation","MainConfiguration","ComponentList","ComponentForm","IqrfCdc","IqrfDpa","IqrfInfo","IqmeshServices","IqrfRepository","IqrfSpi","IqrfUart","JsonRawApi","JsonMngMetaDataApi","JsonSplitter","MonitorList","MonitorForm","SchedulerList","SchedulerForm","route","isNaN","MqMessagingTable","MqMessagingForm","MqttMessagingTable","MqttMessagingForm","UdpMessagingTable","UdpMessagingForm","WebsocketList","WebsocketInterfaceForm","WebsocketMessagingForm","WebsocketServiceForm","TracerList","TracerForm","ConfigMigration","MenderConfig","TranslatorConfig","ControllerConfig","GatewayDisambiguation","GatewayInfo","DaemonLogViewer","PowerControl","ServiceControl","IqrfNetDisambiguation","DeviceEnumeration","NetworkManager","StandardManager","SendDpaPacket","SendJsonRequest","TrConfiguration","TrUpload","NetworkDisambiguation","EthernetInterfaces","ConnectionForm","UserList","UserAdd","UserEdit","ApiKeyList","ApiKeyForm","titleTemplate","router","beforeEach","startsWith","titleEl","getElementById","innerText","parts","metaTranslate","flashes","fullPath","fluid","_t","__assign","fixed","cilLockLocked","flat","getNav","nativeOn","dsn","integrations","Vue","attachProps","logErrors","$appName","isHttps","protocol","isLocalhost","wsApi","store","reconnection","position","duration","defaults","baseURL","interceptors","el","App","TheDashboard","MainDisambiguation","titleChunk"],"mappings":"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YACA,oBACA,UACA,cACA,aAEA,yBAGA,UACA,mBADA,WAEA,iCACA,iFAEA,kFAGA,aARA,WASA,oCAGA,gDAOA,QAlEA,WAkEA,WACA,2BACA,2BACA,4BACA,uCAEA,OADA,yMACA,WAEA,oDAIA,GAHA,0BACA,eAEA,0BACA,+CAIA,+BACA,iDAEA,OADA,wBACA,uBACA,OACA,gCACA,eACA,uDACA,YAEA,MACA,OACA,6EACA,8BACA,gCACA,iBACA,mEACA,YAEA,2BAEA,MACA,QACA,eACA,mEACA,gBAIA,kCACA,wBACA,gCACA,eACA,8DACA,aAEA,wCACA,gCACA,0BACA,0DAEA,oGA5CA,sEAiDA,uCACA,mBAGA,cArIA,WAsIA,oBAEA,SACA,WADA,WAEA,mCACA,iBAEA,oBALA,SAKA,GACA,2BAeA,OAdA,wCACA,+CAEA,8BACA,kBACA,oBAEA,gBACA,+EAEA,mBACA,kFAEA,oDAGA,yBAvBA,WAwBA,mDACA,uBACA,KACA,4CACA,gBACA,mCAEA,gBACA,wEACA,6BACA,4DAEA,yDAGA,0BACA,oBAEA,8BACA,gDAEA,uDACA,yFAEA,mCACA,qBCtbI,GAAY,YACd,GACA,GJkxBoB,IIhxBpB,EACA,KACA,KACA,MAuBF,GAAUna,QAAQ2F,OAAS,wCACZ,U,QCtC6L,GC4B5M,CACA,sBACA,YACA,UACA,UACA,WACA,eACA,kBACA,eACA,qBAEA,KAXA,WAYA,OACA,cAGA,SACA,cADA,WAEA,qCAGA,UACA,uCC1CI,I,OAAY,YACd,GACA,GzBqDoB,IyBnDpB,EACA,KACA,WACA,OAuBF,GAAU3F,QAAQ2F,OAAS,sCACZ,U,QCvCX,GAAS,WACX,IAAIrB,EAAMrD,KACNsD,EAAKD,EAAIE,eACTC,EAAKH,EAAII,MAAMD,IAAMF,EACzB,OAAOE,EACL,MACA,CACEA,EACE,QACA,CACEA,EACE,cACA,CACEA,EACE,UACA,CACEE,MAAO,CACLiB,MAAO,UACPC,KAAM,KACNC,KAAM,8CACNoG,OAAQ,WAGZ,CACE5H,EAAIQ,GACF,aACER,EAAIS,GAAGT,EAAIU,GAAG,mCACd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CA,cACA,gBACA,gBACA,eACA,mBACA,WACA,aAEA,KAbA,WAcA,OACA,gBACA,+BACA,wCAEA,QACA,CACA,eACA,+CAEA,CACA,mBACA,mDAEA,CACA,WACA,oDAEA,CACA,0BACA,yDACA,WAEA,CACA,cACA,qCACA,UACA,YAGA,aACA,QACA,kBAIA,QAlDA,WAmDA,mCACA,kBAEA,SACA,UADA,WACA,WAEA,OADA,kBACA,aACA,6CACA,iDAEA,kBACA,0BACA,sBACA,iBAHA,WAIA,GAJA,IAIA,0CACA,kCACA,2BACA,gEACA,4CAHA,CAMA,IAPA,EAOA,0CAPA,KAQA,GARA,IAQA,0CACA,gBAGA,kBACA,UACA,YACA,oBACA,4BACA,gCACA,qBACA,6CAnBA,iCAJA,8BA2BA,oCAIA,0BAtCA,SAsCA,gBACA,mCACA,wBACA,8DACA,iBACA,+BACA,iBACA,yEACA,kBAIA,+CAEA,gBApDA,WAoDA,WACA,mCACA,aACA,6EACA,mFAEA,iBACA,wBACA,cACA,yCACA,qFACA,oBAMA,OACA,SACA,UACA,aAEA,UACA,+BEvNI,GAAY,YACd,GACA,GHsRoB,IGpRpB,EACA,KACA,KACA,MAuBF,GAAUnF,QAAQ2F,OAAS,kCACZ,U,QCtCX,GAAS,WACX,IAAIrB,EAAMrD,KACNsD,EAAKD,EAAIE,eACTC,EAAKH,EAAII,MAAMD,IAAMF,EACzB,OAAOE,EACL,QACA,CAAEE,MAAO,CAAE,eAAgB,KAC3B,CACEF,EAAG,qBAAsB,CACvBsB,YAAazB,EAAI0B,GAAG,CAClB,CACElJ,IAAK,UACLmJ,GAAI,SAASC,GACX,IAAIC,EAAUD,EAAIC,QAClB,MAAO,CACL1B,EACE,QACA,CACEuC,GAAI,CACFoF,OAAQ,SAASlF,GAEf,OADAA,EAAOC,iBACA7C,EAAIslB,WAAW1iB,MAI5B,CACEzC,EAAG,qBAAsB,CACvBE,MAAO,CACLyB,MAAO,WACP,kBAAmB,CACjBC,SAAU,qCAGdN,YAAazB,EAAI0B,GACf,CACE,CACElJ,IAAK,UACLmJ,GAAI,SAASC,GACX,IAAII,EAASJ,EAAII,OACbC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WAGA,SA3BA,WA2BA,WACA,kBACA,mCACA,aACA,mBACA,kBACA,gCACA,eACA,sBAEA,iDAEA,gBAGA,QA1CA,SA0CA,GACA,eAEA,WA7CA,WA6CA,WACA,mCACA,sBACA,qBACA,aACA,qBACA,iBACA,gCACA,iBACA,4DAEA,gBAEA,iDAEA,kBAGA,gBA/DA,WA+DA,WACA,mCACA,kBACA,kBACA,gCAEA,uBADA,sDAEA,YAGA,gBAzEA,WAyEA,WACA,2BACA,mCACA,qEACA,iBACA,iCACA,iBACA,gCACA,iBACA,4DAEA,cACA,qDACA,eAGA,kDAEA,mBACA,gCACA,wBACA,eACA,gEAEA,yBACA,eACA,sDACA,gBAKA,QAzGA,WA0GA,0BACA,4BAEA,qFAEA,WA/GA,SA+GA,GACA,IACA,eACA,uFAEA,eACA,eACA,cASA,OARA,uBACA,yBACA,uBACA,cACA,4CAEA,2DAEA,EAEA,wBACA,SAIA,OAHA,gCACA,YAEA,UAEA,SAEA,OADA,iBACA,MAIA,OACA,SACA,UACA,YACA,YACA,aAEA,UACA,iCCvbI,GAAY,YACd,GACA,GJieoB,II/dpB,EACA,KACA,KACA,MAuBF,GAAU1yB,QAAQ2F,OAAS,oCACZ,U,QCtCX,GAAS,WACX,IAAIrB,EAAMrD,KACNsD,EAAKD,EAAIE,eACTC,EAAKH,EAAII,MAAMD,IAAMF,EACzB,OAAOE,EACL,QACA,CACEA,EACE,YACA,CACEA,EAAG,qBAAsB,CACvBsB,YAAazB,EAAI0B,GAAG,CAClB,CACElJ,IAAK,UACLmJ,GAAI,SAASC,GACX,IAAIC,EAAUD,EAAIC,QAClB,MAAO,CACL1B,EACE,QACA,CACEuC,GAAI,CACFoF,OAAQ,SAASlF,GAEf,OADAA,EAAOC,iBACA7C,EAAIgvB,SAASpsB,MAI1B,CACEzC,EAAG,qBAAsB,CACvBE,MAAO,CACLyB,MAAO,mBACP,kBAAmB,CACjBC,SAAU,sCACVkF,QAAS,wCAGbxF,YAAazB,EAAI0B,GACf,CACE,CACElJ,IAAK,UACLmJ,GAAI,SAASC,GACX,IAAII,EAASJ,EAAII,OACbC,EAAUL,EAAI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A,WACA,eAGA,QAjDA,WAiDA,WACA,mCACA,uBACA,oDACA,cAEA,mBACA,kBAEA,KACA,2BACA,4BACA,gCACA,IAEA,OADA,eACA,EACA,SACA,aAGA,iCACA,oBACA,2CAEA,oDACA,4BACA,aACA,mBACA,qBAEA,8BACA,0BACA,kBACA,+BACA,4CAEA,GADA,gCACA,2BACA,yBAKA,GAJA,kBACA,sBACA,sBACA,kDACA,uBACA,SACA,4BACA,QACA,sBACA,8CAGA,cAEA,QACA,CACA,2BACA,qDAKA,qCACA,eACA,sDACA,gBAGA,0CACA,gCACA,0BACA,mBAEA,eACA,6DAGA,mCACA,gCACA,eACA,gEAMA,sBAEA,cAvIA,WAwIA,oBAEA,SACA,cADA,WAEA,IACA,EADA,kCACA,OACA,UACA,gDAEA,sBADA,MACA,iBAEA,UAGA,iBADA,SACA,sCAEA,MAGA,WAjBA,WAkBA,oBAEA,cApBA,SAoBA,GACA,uBAEA,QAvBA,SAuBA,cACA,kBACA,mCACA,aACA,kBACA,kBACA,gCACA,uBACA,2BACA,2BACA,SACA,iCACA,4EAEA,YAEA,kBACA,qCACA,eACA,sDACA,eAIA,eAGA,cAlDA,WAkDA,WACA,mCACA,aACA,oCACA,sCACA,6CAEA,kBACA,gCACA,uBACA,kBACA,sCACA,mBACA,6CAMA,kBACA,gCACA,qCACA,eACA,qEAIA,SA7EA,WA6EA,WACA,mCACA,gDAGA,GAFA,uCACA,iCACA,uBACA,4CACA,QACA,kCAGA,0BACA,OACA,wBACA,qBACA,MACA,OACA,yBACA,wBAEA,qBAEA,MACA,OACA,MACA,QACA,iCAEA,gBACA,4BACA,mDACA,0CAEA,2CACA,aACA,sDACA,8CACA,iDAEA,kDAGA,aACA,+DACA,8CACA,kDAEA,uBACA,oDAIA,aAjIA,SAiIA,GACA,cASA,OARA,oBACA,iCACA,mCACA,kCACA,iCACA,gCACA,iCACA,mCACA,UAEA,eA7IA,WA8IA,wCACA,oBACA,8DAIA,gBACA,YACA,eACA,cACA,cACA,UACA,eACA,iBACA,mBAGA,SAzSA,WA0SA,OACA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AAIQ,GAAG,KACPL,EAAG,kBAAmB,CACpBE,MAAO,CAAEy4B,KAAM,GAAI,oBAAqB94B,EAAI+4B,UAE9C/4B,EAAIQ,GAAG,KACPL,EAAG,oBAAqB,CACtBI,YAAa,iBACby4B,SAAU,CACRr2B,MAAO,SAASC,GACd,OAAO5C,EAAIW,OAAOxG,OAAO,cAAe,CAAC,YAAa6F,EAAInF,gBAKlE,IAIJ,GAAOgG,eAAgB,E,sIChD2K,GCwClM,CACA,kBACA,YACA,qBACA,cACA,mBACA,wBAEA,UACA,KADA,WAEA,uCAEA,SAJA,WAKA,2CAEA,OAPA,WAOA,WAkWA,MAjWA,CACA,CACA,oBACA,WACA,CACA,4BACA,8BACA,eACA,kBACA,oBACA,yBACA,OACA,CACA,mCACA,oBACA,0BAEA,CACA,kCACA,mBACA,0BAEA,CACA,mCACA,2BACA,0BAEA,CACA,kDACA,mCACA,0BAEA,CACA,kCACA,mBACA,cACA,0BAEA,CACA,kDACA,mCACA,6BACA,0BAQA,CACA,oCACA,qBACA,4BAIA,CACA,4BACA,6BACA,cACA,iBACA,oBACA,yBACA,OACA,CACA,kCACA,mBACA,iBAEA,CACA,wCACA,wBACA,iBAEA,CACA,gDACA,wBACA,kBAEA,CACA,qCACA,uBACA,0BACA,0BAEA,CACA,qCACA,uBACA,0BACA,0BAEA,CACA,sCACA,wBACA,2BACA,0BAEA,CACA,qCACA,uBACA,0BAEA,CACA,4CACA,8BACA,0BAEA,CACA,sCACA,wBACA,0BAEA,CACA,oCACA,qBACA,iBAEA,CACA,kCACA,mBACA,0BAEA,CACA,uCACA,wBACA,0BAEA,CACA,gCACA,iBACA,0BAEA,CACA,iCACA,kBACA,0BAEA,CACA,wCACA,2BACA,iBAEA,CACA,gDACA,qCACA,0BAEA,CACA,0CACA,4BACA,iBAEA,CACA,uCACA,wBACA,0BAEA,CACA,oCACA,qBACA,0BAEA,CACA,qCACA,sBACA,0BAEA,CACA,uCACA,wBACA,0BAEA,CACA,uCACA,yBACA,gCACA,0BAEA,CACA,uCACA,yBACA,gCACA,0BAEA,CACA,oCACA,qBACA,iBACA,4BAIA,CACA,4BACA,8BACA,eACA,kBACA,oBACA,yBACA,OACA,CACA,yCACA,wBACA,0BAEA,CACA,uCACA,yBACA,0BAEA,CACA,uCACA,yBACA,mBACA,0BAEA,CACA,8CACA,0BACA,0BAEA,CACA,6CACA,uBACA,0BAEA,CACA,uCACA,wBACA,4BAIA,CACA,4BACA,8BACA,eACA,kBACA,yBACA,oBACA,yBACA,OACA,CACA,uCACA,uBACA,4BAIA,CACA,4BACA,4BACA,aACA,gBACA,oBACA,yBACA,OACA,CACA,qCACA,uBACA,0BAEA,CACA,oCACA,mBACA,0BAEA,CACA,sCACA,iBACA,0BAEA,CACA,kCACA,mBACA,0BAEA,CACA,kDACA,yBACA,0BAEA,CACA,kCACA,mBACA,gBACA,4BAIA,CACA,wBACA,mCACA,kEACA,gBACA,kBACA,qBAEA,CACA,4BACA,mCACA,kBACA,oBACA,yBACA,OACA,CACA,4CACA,kEACA,gBACA,0BAEA,CACA,6CACA,wEACA,gBACA,4BAIA,CACA,wBACA,sCACA,sEACA,gBACA,sBACA,qBAEA,CACA,wBACA,gCACA,YACA,oBACA,0BAEA,CACA,wBACA,kCACA,eACA,oBACA,0BAEA,CACA,wBACA,yCACA,+DACA,gBACA,eACA,wBAKA,oBAyBA,OAxBA,4CACA,yBACA,2DAGA,eACA,oDAGA,UACA,oCACA,yBACA,2DAGA,eACA,mDAGA,EANA,SASA,GAnBA,QAqBA,QC3aI,GAAY,YACd,GACA,GHsCoB,IGpCpB,EACA,KACA,KACA,MAuBF,GAAUnF,QAAQ2F,OAAS,+BACZ,U,QCtCqL,GCyBpM,CACA,oBACA,YACA,yBACA,qBACA,kBACA,aACA,gBCzBI,GAAY,YACd,GACA,Gf2BoB,IezBpB,EACA,KACA,KACA,MAuBF,GAAU3F,QAAQ2F,OAAS,iCACZ,U,QCtCX,GAAS,WACX,IAAIrB,EAAMrD,KACNsD,EAAKD,EAAIE,eACTC,EAAKH,EAAII,MAAMD,IAAMF,EACzB,OAAOE,EACL,QACA,CAAEE,MAAO,CAAE,e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","file":"main.bundle.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t1: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([195,2]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import mod from \"-!../../../node_modules/vue-style-loader/index.js!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ResourceUsage.vue?vue&type=style&index=0&id=6ed3f697&scoped=true&lang=css&\"; export default mod; export * from \"-!../../../node_modules/vue-style-loader/index.js!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ResourceUsage.vue?vue&type=style&index=0&id=6ed3f697&scoped=true&lang=css&\"","import mod from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/mini-css-extract-plugin/dist/loader.js!../../node_modules/css-loader/dist/cjs.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SignIn.vue?vue&type=style&index=0&id=7b84bbc3&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/mini-css-extract-plugin/dist/loader.js!../../node_modules/css-loader/dist/cjs.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SignIn.vue?vue&type=style&index=0&id=7b84bbc3&scoped=true&lang=css&\"","import mod from \"-!../../../node_modules/vue-style-loader/index.js!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DeviceEnumeration.vue?vue&type=style&index=0&id=7b8817a0&scoped=true&lang=css&\"; export default mod; export * from \"-!../../../node_modules/vue-style-loader/index.js!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DeviceEnumeration.vue?vue&type=style&index=0&id=7b8817a0&scoped=true&lang=css&\"","import mod from \"-!../../../node_modules/vue-style-loader/index.js!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/sass-loader/dist/cjs.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DevicesInfo.vue?vue&type=style&index=0&id=22f61cec&scoped=true&lang=scss&\"; export default mod; export * from \"-!../../../node_modules/vue-style-loader/index.js!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/sass-loader/dist/cjs.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DevicesInfo.vue?vue&type=style&index=0&id=22f61cec&scoped=true&lang=scss&\"","import mod from \"-!../../../node_modules/vue-style-loader/index.js!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NetworkManager.vue?vue&type=style&index=0&id=9bbbfec0&scoped=true&lang=css&\"; export default mod; export * from \"-!../../../node_modules/vue-style-loader/index.js!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NetworkManager.vue?vue&type=style&index=0&id=9bbbfec0&scoped=true&lang=css&\"","import mod from \"-!../../../node_modules/vue-style-loader/index.js!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BinaryOutputManager.vue?vue&type=style&index=0&id=1e7284a8&scoped=true&lang=css&\"; export default mod; export * from \"-!../../../node_modules/vue-style-loader/index.js!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BinaryOutputManager.vue?vue&type=style&index=0&id=1e7284a8&scoped=true&lang=css&\"","import mod from \"-!../../../node_modules/vue-style-loader/index.js!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SensorManager.vue?vue&type=style&index=0&id=09a96214&scoped=true&lang=css&\"; export default mod; export * from \"-!../../../node_modules/vue-style-loader/index.js!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SensorManager.vue?vue&type=style&index=0&id=09a96214&scoped=true&lang=css&\"","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../node_modules/mini-css-extract-plugin/dist/loader.js!../node_modules/css-loader/dist/cjs.js!../node_modules/sass-loader/dist/cjs.js!./app.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"40d34a10\", content, false, {});\n// Hot Module Replacement\nif(module.hot) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../node_modules/mini-css-extract-plugin/dist/loader.js!../node_modules/css-loader/dist/cjs.js!../node_modules/sass-loader/dist/cjs.js!./app.scss\", function() {\n     var newContent = require(\"!!../node_modules/mini-css-extract-plugin/dist/loader.js!../node_modules/css-loader/dist/cjs.js!../node_modules/sass-loader/dist/cjs.js!./app.scss\");\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}","import mod from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/mini-css-extract-plugin/dist/loader.js!../../node_modules/css-loader/dist/cjs.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/sass-loader/dist/cjs.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./LoadingSpinner.vue?vue&type=style&index=0&id=e0752284&scoped=true&lang=scss&\"; export default mod; export * from \"-!../../node_modules/vue-style-loader/index.js!../../node_modules/mini-css-extract-plugin/dist/loader.js!../../node_modules/css-loader/dist/cjs.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/sass-loader/dist/cjs.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./LoadingSpinner.vue?vue&type=style&index=0&id=e0752284&scoped=true&lang=scss&\"","// @ts-ignore\nimport store from '../store';\nexport function authorizationHeader() {\n    var token = store.getters['user/getToken'];\n    if (token === null) {\n        return {};\n    }\n    return { 'Authorization': 'Bearer ' + token };\n}\n","import axios from 'axios';\nimport { authorizationHeader } from '../helpers/authorizationHeader';\n/**\n * Optional feature service\n */\nvar FeatureService = /** @class */ (function () {\n    function FeatureService() {\n    }\n    /**\n     * Fetch all features\n     */\n    FeatureService.prototype.fetchAll = function () {\n        return axios.get('features', { headers: authorizationHeader() });\n    };\n    return FeatureService;\n}());\nexport default new FeatureService();\n","import FeatureService from '../../services/FeatureService';\nvar state = {\n    features: {},\n};\nvar actions = {\n    // @ts-ignore\n    fetch: function (_a) {\n        var commit = _a.commit;\n        return FeatureService.fetchAll()\n            .then(function (response) {\n            commit('SET', response.data);\n        });\n    },\n};\nvar getters = {\n    isEnabled: function (state) { return function (name) {\n        try {\n            return state.features[name].enabled;\n        }\n        catch (e) {\n            return undefined;\n        }\n    }; },\n    configuration: function (state) { return function (name) {\n        try {\n            return state.features[name];\n        }\n        catch (e) {\n            return undefined;\n        }\n    }; },\n};\nvar mutations = {\n    SET: function (state, features) {\n        state.features = features;\n    }\n};\nexport default {\n    namespaced: true,\n    state: state,\n    actions: actions,\n    getters: getters,\n    mutations: mutations,\n};\n","var state = {\n    show: 'responsive',\n    minimize: false,\n};\nvar mutations = {\n    toggleSidebarDesktop: function (state) {\n        var sidebarOpened = [true, 'responsive'].includes(state.show);\n        state.show = sidebarOpened ? false : 'responsive';\n    },\n    toggleSidebarMobile: function (state) {\n        var sidebarClosed = [false, 'responsive'].includes(state.show);\n        state.show = sidebarClosed ? true : 'responsive';\n    },\n    set: function (state, _a) {\n        var variable = _a[0], value = _a[1];\n        state[variable] = value;\n    }\n};\nexport default {\n    namespaced: true,\n    state: state,\n    mutations: mutations\n};\n","var SpinnerOptions = /** @class */ (function () {\n    function SpinnerOptions() {\n        this.text = null;\n        this.timeout = null;\n    }\n    return SpinnerOptions;\n}());\nexport { SpinnerOptions };\nvar state = {\n    enabled: null,\n    text: null,\n    timeout: null,\n};\nvar actions = {\n    // @ts-ignore\n    show: function (_a, options) {\n        var commit = _a.commit, state = _a.state;\n        commit('SHOW', options.text);\n        if (options.timeout === null) {\n            return;\n        }\n        state.timeout = setTimeout(function () {\n            commit('HIDE');\n        }, options.timeout);\n    },\n    // @ts-ignore\n    hide: function (_a) {\n        var commit = _a.commit, state = _a.state;\n        commit('HIDE');\n        clearTimeout(state.timeout);\n    }\n};\nvar getters = {\n    isEnabled: function (state) {\n        return state.enabled;\n    },\n    text: function (state) {\n        return state.text;\n    },\n};\nvar mutations = {\n    HIDE: function (state) {\n        state.enabled = false;\n        state.text = null;\n    },\n    SHOW: function (state, text) {\n        if (text === void 0) { text = null; }\n        state.enabled = true;\n        state.text = text;\n    },\n    UPDATE_TEXT: function (state, text) {\n        state.text = text;\n    },\n};\nexport default {\n    namespaced: true,\n    state: state,\n    getters: getters,\n    mutations: mutations,\n    actions: actions,\n};\n","import axios from 'axios';\n/**\n * Authentication service\n */\nvar AuthenticationService = /** @class */ (function () {\n    function AuthenticationService() {\n    }\n    /**\n     * Signs in the user (REST API)\n     * @param username Username\n     * @param password Password\n     */\n    AuthenticationService.prototype.apiLogin = function (username, password) {\n        var data = {\n            username: username,\n            password: password\n        };\n        return axios.post('user/signIn', data);\n    };\n    /**\n     * Signs in the user (Nette login)\n     * @param username Username\n     * @param password Password\n     */\n    AuthenticationService.prototype.netteLogin = function (username, password) {\n        var data = new URLSearchParams();\n        data.append('username', username);\n        data.append('password', password);\n        data.append('remember', 'on');\n        data.append('send', 'Sign+in');\n        data.append('_do', 'signInForm-submit');\n        return axios.post('//' + window.location.host + '/sign/in', data);\n    };\n    /**\n     * Signs in the user\n     * @param username Username\n     * @param password Password\n     */\n    AuthenticationService.prototype.login = function (username, password) {\n        return Promise.all([\n            this.apiLogin(username, password),\n            this.netteLogin(username, password)\n        ]);\n    };\n    /**\n     * Signs out the user (Nette)\n     */\n    AuthenticationService.prototype.logout = function () {\n        return axios.get('//' + window.location.host + '/sign/out');\n    };\n    return AuthenticationService;\n}());\nexport default new AuthenticationService();\n","import AuthenticationService from '../../services/AuthenticationService';\nvar state = {\n    user: null,\n};\nvar actions = {\n    signIn: function (_a, credentials) {\n        var commit = _a.commit;\n        return AuthenticationService.login(credentials.username, credentials.password)\n            .then(function (responses) {\n            var apiResponse = responses[0];\n            commit('SIGN_IN', apiResponse.data);\n            return responses;\n        })\n            .catch(function (error) {\n            console.error(error);\n            return Promise.reject(error);\n        });\n    },\n    signOut: function (_a) {\n        var commit = _a.commit;\n        return AuthenticationService.logout()\n            .then(function () {\n            commit('SIGN_OUT');\n        });\n    },\n};\nvar getters = {\n    isLoggedIn: function (state) {\n        return state.user !== null;\n    },\n    getId: function (state) {\n        if (state.user === null) {\n            return null;\n        }\n        return state.user.id;\n    },\n    getName: function (state) {\n        if (state.user === null) {\n            return null;\n        }\n        return state.user.username;\n    },\n    getRole: function (state) {\n        if (state.user === null) {\n            return null;\n        }\n        return state.user.role;\n    },\n    getToken: function (state) {\n        if (state.user === null) {\n            return null;\n        }\n        return state.user.token;\n    },\n};\nvar mutations = {\n    SIGN_IN: function (state, data) {\n        state.user = data;\n    },\n    SIGN_OUT: function (state) {\n        state.user = null;\n    },\n};\nexport default {\n    namespaced: true,\n    state: state,\n    actions: actions,\n    getters: getters,\n    mutations: mutations,\n};\n","import Vue from 'vue';\nimport { v4 as uuidv4 } from 'uuid';\nvar state = {\n    socket: {\n        isConnected: false,\n        hasReconnected: false,\n        reconnectError: false,\n    },\n    requests: {},\n    responses: {},\n};\nvar actions = {\n    sendRequest: function (context, request) {\n        if (request.data !== undefined && request.data.msgId === undefined) {\n            request.data.msgId = uuidv4();\n        }\n        Vue.prototype.$socket.sendObj(request);\n        context.commit('SOCKET_ONSEND', request);\n    },\n};\nvar getters = {\n    isSocketConnected: function (state) {\n        return state.socket.isConnected;\n    },\n};\nvar mutations = {\n    SOCKET_ONOPEN: function (state, event) {\n        Vue.prototype.$socket = event.currentTarget;\n        if (state.hasReconnected) {\n            setTimeout(function () {\n                state.socket.isConnected = true;\n            }, 1000);\n        }\n        else {\n            state.socket.isConnected = true;\n        }\n    },\n    SOCKET_ONCLOSE: function (state) {\n        state.socket.isConnected = false;\n    },\n    SOCKET_ONERROR: function (state, event) {\n        console.error(state, event);\n    },\n    SOCKET_ONMESSAGE: function (state, message) {\n        state.responses[message.data.msgId] = message;\n    },\n    SOCKET_ONSEND: function (state, request) {\n        state.requests[request.data.msgId] = request;\n    },\n    SOCKET_RECONNECT: function (state, count) {\n        // eslint-disable-next-line no-console\n        console.info(state, count);\n        state.hasReconnected = true;\n    },\n    SOCKET_RECONNECT_ERROR: function (state) {\n        state.socket.reconnectError = true;\n    },\n};\nexport default {\n    state: state,\n    actions: actions,\n    getters: getters,\n    mutations: mutations,\n};\n","import Vue from 'vue';\nimport Vuex from 'vuex';\nimport createPersistentState from 'vuex-persistedstate';\nimport features from './modules/features.module';\nimport sidebar from './modules/sidebar.module';\nimport spinner from './modules/spinner.module';\nimport user from './modules/user.module';\nimport webSocketClient from './modules/webSocketClient.module';\nVue.use(Vuex);\nvar store = new Vuex.Store({\n    modules: {\n        features: features,\n        sidebar: sidebar,\n        spinner: spinner,\n        user: user,\n        webSocketClient: webSocketClient,\n    },\n    plugins: [createPersistentState()]\n});\nexport default store;\n","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"CCard\",\n    { attrs: { \"body-wrapper\": \"\" } },\n    [\n      _c(\n        \"CListGroup\",\n        [\n          _c(\"CListGroupItem\", { attrs: { to: \"/cloud/ibm-cloud/\" } }, [\n            _c(\"header\", { staticClass: \"list-group-item-heading\" }, [\n              _vm._v(\n                \"\\n\\t\\t\\t\\t\" +\n                  _vm._s(_vm.$t(\"cloud.ibmCloud.title\")) +\n                  \"\\n\\t\\t\\t\"\n              )\n            ]),\n            _vm._v(\" \"),\n            _c(\"p\", { staticClass: \"list-group-item-text\" }, [\n              _vm._v(\n                \"\\n\\t\\t\\t\\t\" +\n                  _vm._s(_vm.$t(\"cloud.ibmCloud.description\")) +\n                  \"\\n\\t\\t\\t\"\n              )\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\"CListGroupItem\", { attrs: { to: \"/cloud/azure/\" } }, [\n            _c(\"header\", { staticClass: \"list-group-item-heading\" }, [\n              _vm._v(\n                \"\\n\\t\\t\\t\\t\" +\n                  _vm._s(_vm.$t(\"cloud.msAzure.title\")) +\n                  \"\\n\\t\\t\\t\"\n              )\n            ]),\n            _vm._v(\" \"),\n            _c(\"p\", { staticClass: \"list-group-item-text\" }, [\n              _vm._v(\n                \"\\n\\t\\t\\t\\t\" +\n                  _vm._s(_vm.$t(\"cloud.msAzure.description\")) +\n                  \"\\n\\t\\t\\t\"\n              )\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\"CListGroupItem\", { attrs: { to: \"/cloud/aws/\" } }, [\n            _c(\"header\", { staticClass: \"list-group-item-heading\" }, [\n              _vm._v(\n                \"\\n\\t\\t\\t\\t\" +\n                  _vm._s(_vm.$t(\"cloud.amazonAws.title\")) +\n                  \"\\n\\t\\t\\t\"\n              )\n            ]),\n            _vm._v(\" \"),\n            _c(\"p\", { staticClass: \"list-group-item-text\" }, [\n              _vm._v(\n                \"\\n\\t\\t\\t\\t\" +\n                  _vm._s(_vm.$t(\"cloud.amazonAws.description\")) +\n                  \"\\n\\t\\t\\t\"\n              )\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\"CListGroupItem\", { attrs: { to: \"/cloud/hexio/\" } }, [\n            _c(\"header\", { staticClass: \"list-group-item-heading\" }, [\n              _vm._v(\n                \"\\n\\t\\t\\t\\t\" + _vm._s(_vm.$t(\"cloud.hexio.title\")) + \"\\n\\t\\t\\t\"\n              )\n            ]),\n            _vm._v(\" \"),\n            _c(\"p\", { staticClass: \"list-group-item-text\" }, [\n              _vm._v(\n                \"\\n\\t\\t\\t\\t\" +\n                  _vm._s(_vm.$t(\"cloud.hexio.description\")) +\n                  \"\\n\\t\\t\\t\"\n              )\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\"CListGroupItem\", { attrs: { to: \"/cloud/inteli-glue/\" } }, [\n            _c(\"header\", { staticClass: \"list-group-item-heading\" }, [\n              _vm._v(\n                \"\\n\\t\\t\\t\\t\" +\n                  _vm._s(_vm.$t(\"cloud.intelimentsInteliGlue.title\")) +\n                  \"\\n\\t\\t\\t\"\n              )\n            ]),\n            _vm._v(\" \"),\n            _c(\"p\", { staticClass: \"list-group-item-text\" }, [\n              _vm._v(\n                \"\\n\\t\\t\\t\\t\" +\n                  _vm._s(_vm.$t(\"cloud.intelimentsInteliGlue.description\")) +\n                  \"\\n\\t\\t\\t\"\n              )\n            ])\n          ]),\n          _vm._v(\" \"),\n          _vm.$store.getters[\"features/isEnabled\"](\"pixla\")\n            ? _c(\"CListGroupItem\", { attrs: { to: \"/cloud/pixla/\" } }, [\n                _c(\"header\", { staticClass: \"list-group-item-heading\" }, [\n                  _vm._v(\n                    \"\\n\\t\\t\\t\\t\" +\n                      _vm._s(_vm.$t(\"cloud.pixla.title\")) +\n                      \"\\n\\t\\t\\t\"\n                  )\n                ]),\n                _vm._v(\" \"),\n                _c(\"p\", { staticClass: \"list-group-item-text\" }, [\n                  _vm._v(\n                    \"\\n\\t\\t\\t\\t\" +\n                      _vm._s(_vm.$t(\"cloud.pixla.description\")) +\n                      \"\\n\\t\\t\\t\"\n                  )\n                ])\n              ])\n            : _vm._e()\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import mod from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CloudDisambiguation.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CloudDisambiguation.vue?vue&type=script&lang=ts&\"","import Vue from 'vue';\nimport { CCard, CListGroup, CListGroupItem } from '@coreui/vue/src';\nexport default Vue.extend({\n    name: 'CloudDisambiguation',\n    components: {\n        CCard: CCard,\n        CListGroup: CListGroup,\n        CListGroupItem: CListGroupItem\n    },\n    metaInfo: {\n        title: 'cloud.title',\n    },\n});\n","import { render, staticRenderFns } from \"./CloudDisambiguation.vue?vue&type=template&id=6688c9de&\"\nimport script from \"./CloudDisambiguation.vue?vue&type=script&lang=ts&\"\nexport * from \"./CloudDisambiguation.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('6688c9de')) {\n      api.createRecord('6688c9de', component.options)\n    } else {\n      api.reload('6688c9de', component.options)\n    }\n    module.hot.accept(\"./CloudDisambiguation.vue?vue&type=template&id=6688c9de&\", function () {\n      api.rerender('6688c9de', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/pages/Cloud/CloudDisambiguation.vue\"\nexport default component.exports","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"CCard\",\n    [\n      _c(\n        \"CCardHeader\",\n        [\n          _c(\n            \"CButton\",\n            {\n              attrs: {\n                color: \"primary\",\n                size: \"sm\",\n                href:\n                  \"https://github.com/iqrfsdk/iot-starter-kit/blob/master/install/pdf/iqrf-part3b.pdf\"\n              }\n            },\n            [_vm._v(\"\\n\\t\\t\\t\" + _vm._s(_vm.$t(\"cloud.guides.pdf\")) + \"\\n\\t\\t\")]\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"CButton\",\n            {\n              attrs: {\n                color: \"danger\",\n                size: \"sm\",\n                href: \"https://youtu.be/SIBoTrYwR2g\"\n              }\n            },\n            [\n              _vm._v(\n                \"\\n\\t\\t\\t\" + _vm._s(_vm.$t(\"cloud.guides.video\")) + \"\\n\\t\\t\"\n              )\n            ]\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"CCardBody\",\n        [\n          _c(\"ValidationObserver\", {\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(ref) {\n                  var invalid = ref.invalid\n                  return [\n                    _c(\n                      \"CForm\",\n                      [\n                        _c(\"ValidationProvider\", {\n                          attrs: {\n                            rules: \"required\",\n                            \"custom-messages\": {\n                              required:\n                                \"cloud.msAzure.form.messages.connectionString\"\n                            }\n                          },\n                          scopedSlots: _vm._u(\n                            [\n                              {\n                                key: \"default\",\n                                fn: function(ref) {\n                                  var errors = ref.errors\n                                  var touched = ref.touched\n                                  var valid = ref.valid\n                                  return [\n                                    _c(\"CInput\", {\n                                      attrs: {\n                                        label: _vm.$t(\n                                          \"cloud.msAzure.form.connectionString\"\n                                        ),\n                                        \"is-valid\": touched ? valid : null,\n                                        \"invalid-feedback\": _vm.$t(errors[0])\n                                      },\n                                      model: {\n                                        value: _vm.connectionString,\n                                        callback: function($$v) {\n                                          _vm.connectionString = $$v\n                                        },\n                                        expression: \"connectionString\"\n                                      }\n                                    })\n                                  ]\n                                }\n                              }\n                            ],\n                            null,\n                            true\n                          )\n                        }),\n                        _vm._v(\" \"),\n                        _c(\n                          \"CButton\",\n                          {\n                            attrs: { color: \"primary\", disabled: invalid },\n                            on: {\n                              click: function($event) {\n                                $event.preventDefault()\n                                return _vm.save($event)\n                              }\n                            }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n\\t\\t\\t\\t\\t\" +\n                                _vm._s(_vm.$t(\"forms.save\")) +\n                                \"\\n\\t\\t\\t\\t\"\n                            )\n                          ]\n                        ),\n                        _vm._v(\" \"),\n                        _c(\n                          \"CButton\",\n                          {\n                            attrs: { color: \"secondary\", disabled: invalid },\n                            on: {\n                              click: function($event) {\n                                $event.preventDefault()\n                                return _vm.saveAndRestart($event)\n                              }\n                            }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n\\t\\t\\t\\t\\t\" +\n                                _vm._s(_vm.$t(\"forms.saveRestart\")) +\n                                \"\\n\\t\\t\\t\\t\"\n                            )\n                          ]\n                        )\n                      ],\n                      1\n                    )\n                  ]\n                }\n              }\n            ])\n          })\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import Vue from 'vue';\nimport VueI18n from 'vue-i18n';\nvar en = require('./locales/en.json');\nvar messages = {\n    'en': en\n};\nVue.use(VueI18n);\nexport default new VueI18n({\n    locale: 'en',\n    fallbackLocale: 'en',\n    messages: messages\n});\n","import i18n from '../i18n';\nimport store from '../store';\nimport Vue from 'vue';\n/**\n * Form error handler\n */\nvar FormErrorHandler = /** @class */ (function () {\n    function FormErrorHandler() {\n    }\n    /**\n     * Handles Cloud errors\n     * @param error caught axios error\n     */\n    FormErrorHandler.prototype.cloudError = function (error) {\n        store.commit('spinner/HIDE');\n        if (error.response === undefined) {\n            console.error(error);\n            return;\n        }\n        if (error.response.status === 400) {\n            Vue.$toast.error(i18n.t('forms.messages.submitBadRequest').toString());\n        }\n        else if (error.response.status) {\n            Vue.$toast.error(i18n.t('forms.messages.submitServerError').toString());\n        }\n    };\n    /**\n     * Handles Config errors\n     * @param error caught axios error\n     */\n    FormErrorHandler.prototype.configError = function (error) {\n        store.commit('spinner/HIDE');\n        if (error.response === undefined) {\n            console.error(error);\n            return;\n        }\n        if (error.response.status === 404) {\n            Vue.$toast.error(i18n.t('forms.messages.componentNotFound').toString());\n        }\n        else if (error.response.status === 500) {\n            Vue.$toast.error(i18n.t('forms.messages.submitServerError').toString());\n        }\n        else {\n            console.error(error.message);\n        }\n    };\n    /**\n     * Handles Service errors\n     * @param error caught axios error\n     */\n    FormErrorHandler.prototype.serviceError = function (error) {\n        store.commit('spinner/HIDE');\n        if (error.response === undefined) {\n            console.error(error);\n            return;\n        }\n        if (error.response.status === 400) {\n            Vue.$toast.error(i18n.t('forms.messages.submitBadRequest').toString());\n        }\n        else if (error.response.status === 404) {\n            Vue.$toast.error(i18n.t('service.errors.unsupportedService').toString());\n        }\n        else if (error.response.status === 500) {\n            Vue.$toast.error(i18n.t('service.errors.unsupportedInit').toString());\n        }\n    };\n    /**\n     * Handles Scheduler errors\n     * @param error caugh axios error\n     */\n    FormErrorHandler.prototype.schedulerError = function (error) {\n        store.commit('spinner/HIDE');\n        if (error.response === undefined) {\n            console.error(error);\n            return;\n        }\n        if (error.response.status === 400) {\n            Vue.$toast.error(i18n.t('config.scheduler.messages.rest.invalidTask').toString());\n        }\n        else if (error.response.status === 404) {\n            Vue.$toast.error(i18n.t('config.scheduler.messages.rest.notFound').toString());\n        }\n        else if (error.response.status === 409) {\n            Vue.$toast.error(i18n.t('config.scheduler.messages.rest.exists').toString());\n        }\n    };\n    /**\n     * Handles API key management errors\n     * @param error caught axios error\n     */\n    FormErrorHandler.prototype.apiKeyError = function (error) {\n        store.commit('spinner/HIDE');\n        if (error.response === undefined) {\n            console.error(error);\n            return;\n        }\n        if (error.response.status === 400) {\n            Vue.$toast.error(i18n.t('config.apiKey.messages.invalid').toString());\n        }\n        else if (error.response.status === 404) {\n            Vue.$toast.error(i18n.t('config.apiKey.messages.notFound').toString());\n        }\n    };\n    return FormErrorHandler;\n}());\nexport default new FormErrorHandler();\n","import axios from 'axios';\nimport { authorizationHeader } from '../helpers/authorizationHeader';\n/**\n * Cloud connections service\n */\nvar CloudService = /** @class */ (function () {\n    function CloudService() {\n    }\n    /**\n     * Saves and creates new mqtt cloud connection.\n     * @param serviceName Cloud service name\n     * @param data Cloud connection configuration\n     */\n    CloudService.prototype.create = function (serviceName, data) {\n        return axios.post('clouds/' + serviceName, data, { headers: authorizationHeader() });\n    };\n    return CloudService;\n}());\nexport default new CloudService();\n","import axios from 'axios';\nimport { authorizationHeader } from '../helpers/authorizationHeader';\n/**\n * System service service\n */\nvar ServiceService = /** @class */ (function () {\n    function ServiceService() {\n    }\n    /**\n     * Disables the service\n     * @param name Service name\n     */\n    ServiceService.prototype.disable = function (name) {\n        return axios.post('services/' + name + '/disable', null, { headers: authorizationHeader() });\n    };\n    /**\n     * Enables the service\n     * @param name Service name\n     */\n    ServiceService.prototype.enable = function (name) {\n        return axios.post('services/' + name + '/enable', null, { headers: authorizationHeader() });\n    };\n    /**\n     * Retrieves the service status\n     * @param name Service name\n     */\n    ServiceService.prototype.getStatus = function (name) {\n        return axios.get('services/' + name, { headers: authorizationHeader() })\n            .then(function (response) {\n            return response.data;\n        });\n    };\n    /**\n     * Restarts the service\n     * @param name Service name\n     */\n    ServiceService.prototype.restart = function (name) {\n        return axios.post('services/' + name + '/restart', null, { headers: authorizationHeader() });\n    };\n    /**\n     * Starts the service\n     * @param name Service name\n     */\n    ServiceService.prototype.start = function (name) {\n        return axios.post('services/' + name + '/start', null, { headers: authorizationHeader() });\n    };\n    /**\n     * Stops the service\n     * @param name Service name\n     */\n    ServiceService.prototype.stop = function (name) {\n        return axios.post('services/' + name + '/stop', null, { headers: authorizationHeader() });\n    };\n    return ServiceService;\n}());\nexport default new ServiceService();\n","import mod from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AzureCreator.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AzureCreator.vue?vue&type=script&lang=ts&\"","import Vue from 'vue';\nimport { CButton, CCard, CCardBody, CCardHeader, CForm, CInput } from '@coreui/vue/src';\nimport { extend, ValidationObserver, ValidationProvider } from 'vee-validate';\nimport { required } from 'vee-validate/dist/rules';\nimport FormErrorHandler from '../../helpers/FormErrorHandler';\nimport CloudService from '../../services/CloudService';\nimport ServiceService from '../../services/ServiceService';\nexport default Vue.extend({\n    name: 'AzureCreator',\n    components: {\n        CButton: CButton,\n        CCard: CCard,\n        CCardBody: CCardBody,\n        CCardHeader: CCardHeader,\n        CForm: CForm,\n        CInput: CInput,\n        ValidationObserver: ValidationObserver,\n        ValidationProvider: ValidationProvider\n    },\n    data: function () {\n        return {\n            connectionString: null,\n            serviceName: 'azure',\n        };\n    },\n    created: function () {\n        extend('required', required);\n    },\n    methods: {\n        save: function () {\n            var _this = this;\n            this.$store.commit('spinner/SHOW');\n            return CloudService.create(this.serviceName, { 'connectionString': this.connectionString })\n                .then(function () {\n                _this.$store.commit('spinner/HIDE');\n                _this.$toast.success(_this.$t('cloud.messages.success').toString());\n            })\n                .catch(function (error) {\n                FormErrorHandler.cloudError(error);\n                return Promise.reject(error);\n            });\n        },\n        saveAndRestart: function () {\n            var _this = this;\n            this.save()\n                .then(function () {\n                _this.$store.commit('spinner/SHOW');\n                ServiceService.restart('iqrf-gateway-daemon')\n                    .then(function () {\n                    _this.$store.commit('spinner/HIDE');\n                    _this.$toast.success(_this.$t('service.iqrf-gateway-daemon.messages.restart')\n                        .toString());\n                })\n                    .catch(function (error) {\n                    FormErrorHandler.serviceError(error);\n                });\n            })\n                .catch(function () { });\n        },\n    },\n    metaInfo: {\n        title: 'cloud.msAzure.form.title',\n    },\n});\n","import { render, staticRenderFns } from \"./AzureCreator.vue?vue&type=template&id=2edb6a8a&\"\nimport script from \"./AzureCreator.vue?vue&type=script&lang=ts&\"\nexport * from \"./AzureCreator.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('2edb6a8a')) {\n      api.createRecord('2edb6a8a', component.options)\n    } else {\n      api.reload('2edb6a8a', component.options)\n    }\n    module.hot.accept(\"./AzureCreator.vue?vue&type=template&id=2edb6a8a&\", function () {\n      api.rerender('2edb6a8a', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/pages/Cloud/AzureCreator.vue\"\nexport default component.exports","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"CCard\",\n    [\n      _c(\n        \"CCardHeader\",\n        [\n          _c(\n            \"CButton\",\n            {\n              attrs: {\n                color: \"primary\",\n                size: \"sm\",\n                href:\n                  \"https://github.com/iqrfsdk/iot-starter-kit/blob/master/install/pdf/iqrf-part3a.pdf\"\n              }\n            },\n            [_vm._v(\"\\n\\t\\t\\t\" + _vm._s(_vm.$t(\"cloud.guides.pdf\")) + \"\\n\\t\\t\")]\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"CButton\",\n            {\n              attrs: {\n                color: \"danger\",\n                size: \"sm\",\n                href: \"https://youtu.be/Z9R2vdaw3KA\"\n              }\n            },\n            [\n              _vm._v(\n                \"\\n\\t\\t\\t\" + _vm._s(_vm.$t(\"cloud.guides.video\")) + \"\\n\\t\\t\"\n              )\n            ]\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"CCardBody\",\n        [\n          _c(\"ValidationObserver\", {\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(ref) {\n                  var invalid = ref.invalid\n                  return [\n                    _c(\n                      \"CForm\",\n                      [\n                        _c(\"ValidationProvider\", {\n                          attrs: {\n                            rules: \"required\",\n                            \"custom-messages\": {\n                              required: \"cloud.amazonAws.form.messages.endpoint\"\n                            }\n                          },\n                          scopedSlots: _vm._u(\n                            [\n                              {\n                                key: \"default\",\n                                fn: function(ref) {\n                                  var errors = ref.errors\n                                  var touched = ref.touched\n                                  var valid = ref.valid\n                                  return [\n                                    _c(\"CInput\", {\n                                      attrs: {\n                                        label: _vm.$t(\n                                          \"cloud.amazonAws.form.endpoint\"\n                                        ),\n                                        \"is-valid\": touched ? valid : null,\n                                        \"invalid-feedback\": _vm.$t(errors[0])\n                                      },\n                                      model: {\n                                        value: _vm.endpoint,\n                                        callback: function($$v) {\n                                          _vm.endpoint = $$v\n                                        },\n                                        expression: \"endpoint\"\n                                      }\n                                    })\n                                  ]\n                                }\n                              }\n                            ],\n                            null,\n                            true\n                          )\n                        }),\n                        _vm._v(\" \"),\n                        _c(\n                          \"div\",\n                          { staticClass: \"form-group\" },\n                          [\n                            _c(\"CInputFile\", {\n                              ref: \"awsFormCert\",\n                              attrs: {\n                                accept: \".pem\",\n                                label: _vm.$t(\n                                  \"cloud.amazonAws.form.certificate\"\n                                )\n                              },\n                              on: {\n                                input: function($event) {\n                                  return _vm.isEmpty(\"cert\")\n                                },\n                                click: function($event) {\n                                  return _vm.isEmpty(\"cert\")\n                                }\n                              }\n                            }),\n                            _vm._v(\" \"),\n                            _vm.certEmpty && !_vm.firstCert\n                              ? _c(\"p\", { staticStyle: { color: \"red\" } }, [\n                                  _vm._v(\n                                    \"\\n\\t\\t\\t\\t\\t\\t\" +\n                                      _vm._s(\n                                        _vm.$t(\n                                          \"cloud.amazonAws.form.messages.certificate\"\n                                        )\n                                      ) +\n                                      \"\\n\\t\\t\\t\\t\\t\"\n                                  )\n                                ])\n                              : _vm._e()\n                          ],\n                          1\n                        ),\n                        _vm._v(\" \"),\n                        _c(\n                          \"div\",\n                          { staticClass: \"form-group\" },\n                          [\n                            _c(\"CInputFile\", {\n                              ref: \"awsFormKey\",\n                              attrs: {\n                                accept: \".pem,.key\",\n                                label: _vm.$t(\"cloud.amazonAws.form.key\")\n                              },\n                              on: {\n                                input: function($event) {\n                                  return _vm.isEmpty(\"key\")\n                                },\n                                click: function($event) {\n                                  return _vm.isEmpty(\"key\")\n                                }\n                              }\n                            }),\n                            _vm._v(\" \"),\n                            _vm.keyEmpty && !_vm.firstKey\n                              ? _c(\"p\", { staticStyle: { color: \"red\" } }, [\n                                  _vm._v(\n                                    \"\\n\\t\\t\\t\\t\\t\\t\" +\n                                      _vm._s(\n                                        _vm.$t(\n                                          \"cloud.amazonAws.form.messages.key\"\n                                        )\n                                      ) +\n                                      \"\\n\\t\\t\\t\\t\\t\"\n                                  )\n                                ])\n                              : _vm._e()\n                          ],\n                          1\n                        ),\n                        _vm._v(\" \"),\n                        _c(\n                          \"CButton\",\n                          {\n                            attrs: {\n                              color: \"primary\",\n                              disabled: invalid || _vm.certEmpty || _vm.keyEmpty\n                            },\n                            on: {\n                              click: function($event) {\n                                $event.preventDefault()\n                                return _vm.save($event)\n                              }\n                            }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n\\t\\t\\t\\t\\t\" +\n                                _vm._s(_vm.$t(\"forms.save\")) +\n                                \"\\n\\t\\t\\t\\t\"\n                            )\n                          ]\n                        ),\n                        _vm._v(\" \"),\n                        _c(\n                          \"CButton\",\n                          {\n                            attrs: {\n                              color: \"secondary\",\n                              disabled: invalid || _vm.certEmpty || _vm.keyEmpty\n                            },\n                            on: {\n                              click: function($event) {\n                                $event.preventDefault()\n                                return _vm.saveAndRestart($event)\n                              }\n                            }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n\\t\\t\\t\\t\\t\" +\n                                _vm._s(_vm.$t(\"forms.saveRestart\")) +\n                                \"\\n\\t\\t\\t\\t\"\n                            )\n                          ]\n                        )\n                      ],\n                      1\n                    )\n                  ]\n                }\n              }\n            ])\n          })\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import mod from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AwsCreator.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AwsCreator.vue?vue&type=script&lang=ts&\"","import Vue from 'vue';\nimport { CButton, CCard, CCardBody, CCardHeader, CForm, CInput, CInputFile } from '@coreui/vue/src';\nimport { extend, ValidationObserver, ValidationProvider } from 'vee-validate';\nimport { required } from 'vee-validate/dist/rules';\nimport FormErrorHandler from '../../helpers/FormErrorHandler';\nimport CloudService from '../../services/CloudService';\nimport ServiceService from '../../services/ServiceService';\nexport default Vue.extend({\n    name: 'AwsCreator',\n    components: {\n        CButton: CButton,\n        CCard: CCard,\n        CCardBody: CCardBody,\n        CCardHeader: CCardHeader,\n        CForm: CForm,\n        CInput: CInput,\n        CInputFile: CInputFile,\n        ValidationObserver: ValidationObserver,\n        ValidationProvider: ValidationProvider\n    },\n    data: function () {\n        return {\n            endpoint: null,\n            serviceName: 'aws',\n            certEmpty: true,\n            keyEmpty: true,\n            firstCert: true,\n            firstKey: true,\n        };\n    },\n    created: function () {\n        extend('required', required);\n    },\n    methods: {\n        buildRequest: function () {\n            var formData = new FormData();\n            formData.append('endpoint', this.endpoint);\n            formData.append('certificate', this.$refs.awsFormCert.$el.children[1].files[0]);\n            formData.append('privateKey', this.$refs.awsFormKey.$el.children[1].files[0]);\n            return formData;\n        },\n        save: function () {\n            var _this = this;\n            this.$store.commit('spinner/SHOW');\n            return CloudService.create(this.serviceName, this.buildRequest())\n                .then(function () {\n                _this.$store.commit('spinner/HIDE');\n                _this.$toast.success(_this.$t('cloud.messages.success').toString());\n            })\n                .catch(function (error) {\n                FormErrorHandler.cloudError(error);\n                return Promise.reject(error);\n            });\n        },\n        saveAndRestart: function () {\n            var _this = this;\n            this.save()\n                .then(function () {\n                _this.$store.commit('spinner/SHOW');\n                ServiceService.restart('iqrf-gateway-daemon')\n                    .then(function () {\n                    _this.$store.commit('spinner/HIDE');\n                    _this.$toast.success(_this.$t('service.iqrf-gateway-daemon.messages.restart')\n                        .toString());\n                })\n                    .catch(function (error) {\n                    FormErrorHandler.serviceError(error);\n                });\n            })\n                .catch(function () { });\n        },\n        isEmpty: function (button) {\n            if (button === 'cert') {\n                if (this.firstCert) {\n                    this.firstCert = false;\n                }\n                this.certEmpty = this.$refs.awsFormCert.$el.children[1].files.length === 0;\n            }\n            else {\n                if (this.firstKey) {\n                    this.firstKey = false;\n                }\n                this.keyEmpty = this.$refs.awsFormKey.$el.children[1].files.length === 0;\n            }\n        }\n    }\n});\n","import { render, staticRenderFns } from \"./AwsCreator.vue?vue&type=template&id=0f32129c&\"\nimport script from \"./AwsCreator.vue?vue&type=script&lang=ts&\"\nexport * from \"./AwsCreator.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('0f32129c')) {\n      api.createRecord('0f32129c', component.options)\n    } else {\n      api.reload('0f32129c', component.options)\n    }\n    module.hot.accept(\"./AwsCreator.vue?vue&type=template&id=0f32129c&\", function () {\n      api.rerender('0f32129c', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/pages/Cloud/AwsCreator.vue\"\nexport default component.exports","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"CCard\",\n    [\n      _c(\n        \"CCardBody\",\n        [\n          _c(\"ValidationObserver\", {\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(ref) {\n                  var invalid = ref.invalid\n                  return [\n                    _c(\n                      \"CForm\",\n                      [\n                        _c(\"ValidationProvider\", {\n                          attrs: {\n                            rules: \"required\",\n                            \"custom-messages\": {\n                              required: \"cloud.hexio.form.messages.broker\"\n                            }\n                          },\n                          scopedSlots: _vm._u(\n                            [\n                              {\n                                key: \"default\",\n                                fn: function(ref) {\n                                  var errors = ref.errors\n                                  var touched = ref.touched\n                                  var valid = ref.valid\n                                  return [\n                                    _c(\"CInput\", {\n                                      attrs: {\n                                        label: _vm.$t(\n                                          \"cloud.hexio.form.broker\"\n                                        ),\n                                        \"is-valid\": touched ? valid : null,\n                                        \"invalid-feedback\": _vm.$t(errors[0])\n                                      },\n                                      model: {\n                                        value: _vm.config.broker,\n                                        callback: function($$v) {\n                                          _vm.$set(_vm.config, \"broker\", $$v)\n                                        },\n                                        expression: \"config.broker\"\n                                      }\n                                    })\n                                  ]\n                                }\n                              }\n                            ],\n                            null,\n                            true\n                          )\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"ValidationProvider\", {\n                          attrs: {\n                            rules: \"required\",\n                            \"custom-messages\": {\n                              required: \"cloud.hexio.form.messages.clientId\"\n                            }\n                          },\n                          scopedSlots: _vm._u(\n                            [\n                              {\n                                key: \"default\",\n                                fn: function(ref) {\n                                  var errors = ref.errors\n                                  var touched = ref.touched\n                                  var valid = ref.valid\n                                  return [\n                                    _c(\"CInput\", {\n                                      attrs: {\n                                        label: _vm.$t(\n                                          \"cloud.hexio.form.clientId\"\n                                        ),\n                                        \"is-valid\": touched ? valid : null,\n                                        \"invalid-feedback\": _vm.$t(errors[0])\n                                      },\n                                      model: {\n                                        value: _vm.config.clientId,\n                                        callback: function($$v) {\n                                          _vm.$set(_vm.config, \"clientId\", $$v)\n                                        },\n                                        expression: \"config.clientId\"\n                                      }\n                                    })\n                                  ]\n                                }\n                              }\n                            ],\n                            null,\n                            true\n                          )\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"ValidationProvider\", {\n                          attrs: {\n                            rules: \"required\",\n                            \"custom-messages\": {\n                              required: \"cloud.hexio.form.messages.topicRequest\"\n                            }\n                          },\n                          scopedSlots: _vm._u(\n                            [\n                              {\n                                key: \"default\",\n                                fn: function(ref) {\n                                  var errors = ref.errors\n                                  var touched = ref.touched\n                                  var valid = ref.valid\n                                  return [\n                                    _c(\"CInput\", {\n                                      attrs: {\n                                        label: _vm.$t(\n                                          \"cloud.hexio.form.topicRequest\"\n                                        ),\n                                        \"is-valid\": touched ? valid : null,\n                                        \"invalid-feedback\": _vm.$t(errors[0])\n                                      },\n                                      model: {\n                                        value: _vm.config.topicRequest,\n                                        callback: function($$v) {\n                                          _vm.$set(\n                                            _vm.config,\n                                            \"topicRequest\",\n                                            $$v\n                                          )\n                                        },\n                                        expression: \"config.topicRequest\"\n                                      }\n                                    })\n                                  ]\n                                }\n                              }\n                            ],\n                            null,\n                            true\n                          )\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"ValidationProvider\", {\n                          attrs: {\n                            rules: \"required\",\n                            \"custom-messages\": {\n                              required:\n                                \"cloud.hexio.form.messages.topicResponse\"\n                            }\n                          },\n                          scopedSlots: _vm._u(\n                            [\n                              {\n                                key: \"default\",\n                                fn: function(ref) {\n                                  var errors = ref.errors\n                                  var touched = ref.touched\n                                  var valid = ref.valid\n                                  return [\n                                    _c(\"CInput\", {\n                                      attrs: {\n                                        label: _vm.$t(\n                                          \"cloud.hexio.form.topicResponse\"\n                                        ),\n                                        \"is-valid\": touched ? valid : null,\n                                        \"invalid-feedback\": _vm.$t(errors[0])\n                                      },\n                                      model: {\n                                        value: _vm.config.topicResponse,\n                                        callback: function($$v) {\n                                          _vm.$set(\n                                            _vm.config,\n                                            \"topicResponse\",\n                                            $$v\n                                          )\n                                        },\n                                        expression: \"config.topicResponse\"\n                                      }\n                                    })\n                                  ]\n                                }\n                              }\n                            ],\n                            null,\n                            true\n                          )\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"ValidationProvider\", {\n                          attrs: {\n                            rules: \"required\",\n                            \"custom-messages\": {\n                              required: \"cloud.hexio.form.messages.username\"\n                            }\n                          },\n                          scopedSlots: _vm._u(\n                            [\n                              {\n                                key: \"default\",\n                                fn: function(ref) {\n                                  var errors = ref.errors\n                                  var touched = ref.touched\n                                  var valid = ref.valid\n                                  return [\n                                    _c(\"CInput\", {\n                                      attrs: {\n                                        label: _vm.$t(\n                                          \"cloud.hexio.form.username\"\n                                        ),\n                                        \"is-valid\": touched ? valid : null,\n                                        \"invalid-feedback\": _vm.$t(errors[0])\n                                      },\n                                      model: {\n                                        value: _vm.config.username,\n                                        callback: function($$v) {\n                                          _vm.$set(_vm.config, \"username\", $$v)\n                                        },\n                                        expression: \"config.username\"\n                                      }\n                                    })\n                                  ]\n                                }\n                              }\n                            ],\n                            null,\n                            true\n                          )\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"ValidationProvider\", {\n                          attrs: {\n                            rules: \"required\",\n                            \"custom-messages\": {\n                              required: \"cloud.hexio.form.messages.password\"\n                            }\n                          },\n                          scopedSlots: _vm._u(\n                            [\n                              {\n                                key: \"default\",\n                                fn: function(ref) {\n                                  var errors = ref.errors\n                                  var touched = ref.touched\n                                  var valid = ref.valid\n                                  return [\n                                    _c(\"CInput\", {\n                                      attrs: {\n                                        label: _vm.$t(\n                                          \"cloud.hexio.form.password\"\n                                        ),\n                                        \"is-valid\": touched ? valid : null,\n                                        \"invalid-feedback\": _vm.$t(errors[0])\n                                      },\n                                      model: {\n                                        value: _vm.config.password,\n                                        callback: function($$v) {\n                                          _vm.$set(_vm.config, \"password\", $$v)\n                                        },\n                                        expression: \"config.password\"\n                                      }\n                                    })\n                                  ]\n                                }\n                              }\n                            ],\n                            null,\n                            true\n                          )\n                        }),\n                        _vm._v(\" \"),\n                        _c(\n                          \"CButton\",\n                          {\n                            attrs: { color: \"primary\", disabled: invalid },\n                            on: {\n                              click: function($event) {\n                                $event.preventDefault()\n                                return _vm.save($event)\n                              }\n                            }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n\\t\\t\\t\\t\\t\" +\n                                _vm._s(_vm.$t(\"forms.save\")) +\n                                \"\\n\\t\\t\\t\\t\"\n                            )\n                          ]\n                        ),\n                        _vm._v(\" \"),\n                        _c(\n                          \"CButton\",\n                          {\n                            attrs: { color: \"secondary\", disabled: invalid },\n                            on: {\n                              click: function($event) {\n                                $event.preventDefault()\n                                return _vm.saveAndRestart($event)\n                              }\n                            }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n\\t\\t\\t\\t\\t\" +\n                                _vm._s(_vm.$t(\"forms.saveRestart\")) +\n                                \"\\n\\t\\t\\t\\t\"\n                            )\n                          ]\n                        )\n                      ],\n                      1\n                    )\n                  ]\n                }\n              }\n            ])\n          })\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import Vue from 'vue';\nimport { CButton, CCard, CCardBody, CForm, CInput } from '@coreui/vue/src';\nimport { extend, ValidationObserver, ValidationProvider } from 'vee-validate';\nimport { required } from 'vee-validate/dist/rules';\nimport FormErrorHandler from '../../helpers/FormErrorHandler';\nimport CloudService from '../../services/CloudService';\nimport ServiceService from '../../services/ServiceService';\nexport default Vue.extend({\n    name: 'HexioCreator',\n    components: {\n        CButton: CButton,\n        CCard: CCard,\n        CCardBody: CCardBody,\n        CForm: CForm,\n        CInput: CInput,\n        ValidationObserver: ValidationObserver,\n        ValidationProvider: ValidationProvider\n    },\n    data: function () {\n        return {\n            serviceName: 'hexio',\n            config: {\n                broker: 'connect.hexio.cloud',\n                clientId: null,\n                topicRequest: 'Iqrf/DpaRequest',\n                topicResponse: 'Iqrf/DpaResponse',\n                username: null,\n                password: null,\n            }\n        };\n    },\n    created: function () {\n        extend('required', required);\n    },\n    methods: {\n        save: function () {\n            var _this = this;\n            this.$store.commit('spinner/SHOW');\n            return CloudService.create(this.serviceName, this.config)\n                .then(function () {\n                _this.$store.commit('spinner/HIDE');\n                _this.$toast.success(_this.$t('cloud.messages.success').toString());\n            })\n                .catch(function (error) {\n                FormErrorHandler.cloudError(error);\n                return Promise.reject(error);\n            });\n        },\n        saveAndRestart: function () {\n            var _this = this;\n            this.save()\n                .then(function () {\n                _this.$store.commit('spinner/SHOW');\n                ServiceService.restart('iqrf-gateway-daemon')\n                    .then(function () {\n                    _this.$store.commit('spinner/HIDE');\n                    _this.$toast.success(_this.$t('service.iqrf-gateway-daemon.messages.restart')\n                        .toString());\n                })\n                    .catch(function (error) {\n                    FormErrorHandler.serviceError(error);\n                });\n            })\n                .catch(function () { });\n        },\n    },\n    metaInfo: {\n        title: 'cloud.hexio.form.title',\n    },\n});\n","import mod from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./HexioCreator.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./HexioCreator.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./HexioCreator.vue?vue&type=template&id=ea714750&\"\nimport script from \"./HexioCreator.vue?vue&type=script&lang=ts&\"\nexport * from \"./HexioCreator.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('ea714750')) {\n      api.createRecord('ea714750', component.options)\n    } else {\n      api.reload('ea714750', component.options)\n    }\n    module.hot.accept(\"./HexioCreator.vue?vue&type=template&id=ea714750&\", function () {\n      api.rerender('ea714750', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/pages/Cloud/HexioCreator.vue\"\nexport default component.exports","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"CCard\",\n    [\n      _c(\n        \"CCardHeader\",\n        [\n          _c(\n            \"CButton\",\n            {\n              attrs: {\n                color: \"primary\",\n                size: \"sm\",\n                href:\n                  \"https://github.com/iqrfsdk/iot-starter-kit/blob/master/install/pdf/iqrf-part3c.pdf\"\n              }\n            },\n            [_vm._v(\"\\n\\t\\t\\t\" + _vm._s(_vm.$t(\"cloud.guides.pdf\")) + \"\\n\\t\\t\")]\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"CButton\",\n            {\n              attrs: {\n                color: \"danger\",\n                size: \"sm\",\n                href: \"https://youtu.be/xoAReOyrkZ4\"\n              }\n            },\n            [\n              _vm._v(\n                \"\\n\\t\\t\\t\" + _vm._s(_vm.$t(\"cloud.guides.video\")) + \"\\n\\t\\t\"\n              )\n            ]\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"CCardBody\",\n        [\n          _c(\"ValidationObserver\", {\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(ref) {\n                  var invalid = ref.invalid\n                  return [\n                    _c(\n                      \"CForm\",\n                      [\n                        _c(\"ValidationProvider\", {\n                          attrs: {\n                            rules: \"required\",\n                            \"custom-messages\": {\n                              required:\n                                \"cloud.ibmCloud.form.messages.organizationId\"\n                            }\n                          },\n                          scopedSlots: _vm._u(\n                            [\n                              {\n                                key: \"default\",\n                                fn: function(ref) {\n                                  var errors = ref.errors\n                                  var touched = ref.touched\n                                  var valid = ref.valid\n                                  return [\n                                    _c(\"CInput\", {\n                                      attrs: {\n                                        label: _vm.$t(\n                                          \"cloud.ibmCloud.form.organizationId\"\n                                        ),\n                                        \"is-valid\": touched ? valid : null,\n                                        \"invalid-feedback\": _vm.$t(errors[0])\n                                      },\n                                      model: {\n                                        value: _vm.config.organizationId,\n                                        callback: function($$v) {\n                                          _vm.$set(\n                                            _vm.config,\n                                            \"organizationId\",\n                                            $$v\n                                          )\n                                        },\n                                        expression: \"config.organizationId\"\n                                      }\n                                    })\n                                  ]\n                                }\n                              }\n                            ],\n                            null,\n                            true\n                          )\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"ValidationProvider\", {\n                          attrs: {\n                            rules: \"required\",\n                            \"custom-messages\": {\n                              required:\n                                \"cloud.ibmCloud.form.messages.deviceType\"\n                            }\n                          },\n                          scopedSlots: _vm._u(\n                            [\n                              {\n                                key: \"default\",\n                                fn: function(ref) {\n                                  var errors = ref.errors\n                                  var touched = ref.touched\n                                  var valid = ref.valid\n                                  return [\n                                    _c(\"CInput\", {\n                                      attrs: {\n                                        label: _vm.$t(\n                                          \"cloud.ibmCloud.form.deviceType\"\n                                        ),\n                                        \"is-valid\": touched ? valid : null,\n                                        \"invalid-feedback\": _vm.$t(errors[0])\n                                      },\n                                      model: {\n                                        value: _vm.config.deviceType,\n                                        callback: function($$v) {\n                                          _vm.$set(\n                                            _vm.config,\n                                            \"deviceType\",\n                                            $$v\n                                          )\n                                        },\n                                        expression: \"config.deviceType\"\n                                      }\n                                    })\n                                  ]\n                                }\n                              }\n                            ],\n                            null,\n                            true\n                          )\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"ValidationProvider\", {\n                          attrs: {\n                            rules: \"required\",\n                            \"custom-messages\": {\n                              required: \"cloud.ibmCloud.form.messages.deviceId\"\n                            }\n                          },\n                          scopedSlots: _vm._u(\n                            [\n                              {\n                                key: \"default\",\n                                fn: function(ref) {\n                                  var errors = ref.errors\n                                  var touched = ref.touched\n                                  var valid = ref.valid\n                                  return [\n                                    _c(\"CInput\", {\n                                      attrs: {\n                                        label: _vm.$t(\n                                          \"cloud.ibmCloud.form.deviceId\"\n                                        ),\n                                        \"is-valid\": touched ? valid : null,\n                                        \"invalid-feedback\": _vm.$t(errors[0])\n                                      },\n                                      model: {\n                                        value: _vm.config.deviceId,\n                                        callback: function($$v) {\n                                          _vm.$set(_vm.config, \"deviceId\", $$v)\n                                        },\n                                        expression: \"config.deviceId\"\n                                      }\n                                    })\n                                  ]\n                                }\n                              }\n                            ],\n                            null,\n                            true\n                          )\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"ValidationProvider\", {\n                          attrs: {\n                            rules: \"required\",\n                            \"custom-messages\": {\n                              required: \"cloud.ibmCloud.form.messages.token\"\n                            }\n                          },\n                          scopedSlots: _vm._u(\n                            [\n                              {\n                                key: \"default\",\n                                fn: function(ref) {\n                                  var errors = ref.errors\n                                  var touched = ref.touched\n                                  var valid = ref.valid\n                                  return [\n                                    _c(\"CInput\", {\n                                      attrs: {\n                                        label: _vm.$t(\n                                          \"cloud.ibmCloud.form.token\"\n                                        ),\n                                        \"is-valid\": touched ? valid : null,\n                                        \"invalid-feedback\": _vm.$t(errors[0])\n                                      },\n                                      model: {\n                                        value: _vm.config.token,\n                                        callback: function($$v) {\n                                          _vm.$set(_vm.config, \"token\", $$v)\n                                        },\n                                        expression: \"config.token\"\n                                      }\n                                    })\n                                  ]\n                                }\n                              }\n                            ],\n                            null,\n                            true\n                          )\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"ValidationProvider\", {\n                          attrs: {\n                            rules: \"required\",\n                            \"custom-messages\": {\n                              required: \"cloud.ibmCloud.form.messages.eventId\"\n                            }\n                          },\n                          scopedSlots: _vm._u(\n                            [\n                              {\n                                key: \"default\",\n                                fn: function(ref) {\n                                  var errors = ref.errors\n                                  var touched = ref.touched\n                                  var valid = ref.valid\n                                  return [\n                                    _c(\"CInput\", {\n                                      attrs: {\n                                        label: _vm.$t(\n                                          \"cloud.ibmCloud.form.eventId\"\n                                        ),\n                                        \"is-valid\": touched ? valid : null,\n                                        \"invalid-feedback\": _vm.$t(errors[0])\n                                      },\n                                      model: {\n                                        value: _vm.config.eventId,\n                                        callback: function($$v) {\n                                          _vm.$set(_vm.config, \"eventId\", $$v)\n                                        },\n                                        expression: \"config.eventId\"\n                                      }\n                                    })\n                                  ]\n                                }\n                              }\n                            ],\n                            null,\n                            true\n                          )\n                        }),\n                        _vm._v(\" \"),\n                        _c(\n                          \"CButton\",\n                          {\n                            attrs: { color: \"primary\", disabled: invalid },\n                            on: {\n                              click: function($event) {\n                                $event.preventDefault()\n                                return _vm.save($event)\n                              }\n                            }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n\\t\\t\\t\\t\\t\" +\n                                _vm._s(_vm.$t(\"forms.save\")) +\n                                \"\\n\\t\\t\\t\\t\"\n                            )\n                          ]\n                        ),\n                        _vm._v(\" \"),\n                        _c(\n                          \"CButton\",\n                          {\n                            attrs: { color: \"secondary\", disabled: invalid },\n                            on: {\n                              click: function($event) {\n                                $event.preventDefault()\n                                return _vm.saveAndRestart($event)\n                              }\n                            }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n\\t\\t\\t\\t\\t\" +\n                                _vm._s(_vm.$t(\"forms.saveRestart\")) +\n                                \"\\n\\t\\t\\t\\t\"\n                            )\n                          ]\n                        )\n                      ],\n                      1\n                    )\n                  ]\n                }\n              }\n            ])\n          })\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import Vue from 'vue';\nimport { CButton, CCard, CCardBody, CCardHeader, CForm, CInput } from '@coreui/vue/src';\nimport { extend, ValidationObserver, ValidationProvider } from 'vee-validate';\nimport { required } from 'vee-validate/dist/rules';\nimport FormErrorHandler from '../../helpers/FormErrorHandler';\nimport CloudService from '../../services/CloudService';\nimport ServiceService from '../../services/ServiceService';\nexport default Vue.extend({\n    name: 'IbmCreator',\n    components: {\n        CButton: CButton,\n        CCard: CCard,\n        CCardBody: CCardBody,\n        CCardHeader: CCardHeader,\n        CForm: CForm,\n        CInput: CInput,\n        ValidationObserver: ValidationObserver,\n        ValidationProvider: ValidationProvider\n    },\n    data: function () {\n        return {\n            serviceName: 'ibmCloud',\n            config: {\n                organizationId: null,\n                deviceType: null,\n                deviceId: null,\n                token: null,\n                eventId: 'iqrf',\n            },\n        };\n    },\n    created: function () {\n        extend('required', required);\n    },\n    methods: {\n        save: function () {\n            var _this = this;\n            this.$store.commit('spinner/SHOW');\n            return CloudService.create(this.serviceName, this.config)\n                .then(function () {\n                _this.$store.commit('spinner/HIDE');\n                _this.$toast.success(_this.$t('cloud.messages.success').toString());\n            })\n                .catch(function (error) {\n                FormErrorHandler.cloudError(error);\n                return Promise.reject(error);\n            });\n        },\n        saveAndRestart: function () {\n            var _this = this;\n            this.save()\n                .then(function () {\n                _this.$store.commit('spinner/SHOW');\n                ServiceService.restart('iqrf-gateway-daemon')\n                    .then(function () {\n                    _this.$store.commit('spinner/HIDE');\n                    _this.$toast.success(_this.$t('service.iqrf-gateway-daemon.messages.restart')\n                        .toString());\n                })\n                    .catch(function (error) {\n                    FormErrorHandler.serviceError(error);\n                });\n            })\n                .catch(function () { });\n        },\n    },\n    metaInfo: {\n        title: 'cloud.ibmCloud.form.title',\n    },\n});\n","import mod from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./IbmCreator.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./IbmCreator.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./IbmCreator.vue?vue&type=template&id=5f36f6c5&\"\nimport script from \"./IbmCreator.vue?vue&type=script&lang=ts&\"\nexport * from \"./IbmCreator.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('5f36f6c5')) {\n      api.createRecord('5f36f6c5', component.options)\n    } else {\n      api.reload('5f36f6c5', component.options)\n    }\n    module.hot.accept(\"./IbmCreator.vue?vue&type=template&id=5f36f6c5&\", function () {\n      api.rerender('5f36f6c5', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/pages/Cloud/IbmCreator.vue\"\nexport default component.exports","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"CCard\",\n    [\n      _c(\n        \"CCardBody\",\n        [\n          _c(\"ValidationObserver\", {\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(ref) {\n                  var invalid = ref.invalid\n                  return [\n                    _c(\n                      \"CForm\",\n                      [\n                        _c(\"ValidationProvider\", {\n                          attrs: {\n                            rules: \"required\",\n                            \"custom-messages\": {\n                              required:\n                                \"cloud.intelimentsInteliGlue.form.messages.rootTopic\"\n                            }\n                          },\n                          scopedSlots: _vm._u(\n                            [\n                              {\n                                key: \"default\",\n                                fn: function(ref) {\n                                  var errors = ref.errors\n                                  var touched = ref.touched\n                                  var valid = ref.valid\n                                  return [\n                                    _c(\"CInput\", {\n                                      attrs: {\n                                        label: _vm.$t(\n                                          \"cloud.intelimentsInteliGlue.form.rootTopic\"\n                                        ),\n                                        \"is-valid\": touched ? valid : null,\n                                        \"invalid-feedback\": _vm.$t(errors[0])\n                                      },\n                                      model: {\n                                        value: _vm.config.rootTopic,\n                                        callback: function($$v) {\n                                          _vm.$set(_vm.config, \"rootTopic\", $$v)\n                                        },\n                                        expression: \"config.rootTopic\"\n                                      }\n                                    })\n                                  ]\n                                }\n                              }\n                            ],\n                            null,\n                            true\n                          )\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"ValidationProvider\", {\n                          attrs: {\n                            rules: \"required|integer|between:0,65535\",\n                            \"custom-messages\": {\n                              between:\n                                \"cloud.intelimentsInteliGlue.form.messages.assignedPortRange\",\n                              integer:\n                                \"cloud.intelimentsInteliGlue.form.messages.assignedPortRange\",\n                              required:\n                                \"cloud.intelimentsInteliGlue.form.messages.assignedPort\"\n                            }\n                          },\n                          scopedSlots: _vm._u(\n                            [\n                              {\n                                key: \"default\",\n                                fn: function(ref) {\n                                  var errors = ref.errors\n                                  var touched = ref.touched\n                                  var valid = ref.valid\n                                  return [\n                                    _c(\"CInput\", {\n                                      attrs: {\n                                        type: \"number\",\n                                        min: \"0\",\n                                        max: \"65535\",\n                                        label: _vm.$t(\n                                          \"cloud.intelimentsInteliGlue.form.assignedPort\"\n                                        ),\n                                        \"is-valid\": touched ? valid : null,\n                                        \"invalid-feedback\": _vm.$t(errors[0])\n                                      },\n                                      model: {\n                                        value: _vm.config.assignedPort,\n                                        callback: function($$v) {\n                                          _vm.$set(\n                                            _vm.config,\n                                            \"assignedPort\",\n                                            _vm._n($$v)\n                                          )\n                                        },\n                                        expression: \"config.assignedPort\"\n                                      }\n                                    })\n                                  ]\n                                }\n                              }\n                            ],\n                            null,\n                            true\n                          )\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"ValidationProvider\", {\n                          attrs: {\n                            rules: \"required\",\n                            \"custom-messages\": {\n                              required:\n                                \"cloud.intelimentsInteliGlue.form.messages.clientId\"\n                            }\n                          },\n                          scopedSlots: _vm._u(\n                            [\n                              {\n                                key: \"default\",\n                                fn: function(ref) {\n                                  var errors = ref.errors\n                                  var touched = ref.touched\n                                  var valid = ref.valid\n                                  return [\n                                    _c(\"CInput\", {\n                                      attrs: {\n                                        label: _vm.$t(\n                                          \"cloud.intelimentsInteliGlue.form.clientId\"\n                                        ),\n                                        \"is-valid\": touched ? valid : null,\n                                        \"invalid-feedback\": _vm.$t(errors[0])\n                                      },\n                                      model: {\n                                        value: _vm.config.clientId,\n                                        callback: function($$v) {\n                                          _vm.$set(_vm.config, \"clientId\", $$v)\n                                        },\n                                        expression: \"config.clientId\"\n                                      }\n                                    })\n                                  ]\n                                }\n                              }\n                            ],\n                            null,\n                            true\n                          )\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"ValidationProvider\", {\n                          attrs: {\n                            rules: \"required\",\n                            \"custom-messages\": {\n                              required:\n                                \"cloud.intelimentsInteliGlue.form.messages.password\"\n                            }\n                          },\n                          scopedSlots: _vm._u(\n                            [\n                              {\n                                key: \"default\",\n                                fn: function(ref) {\n                                  var errors = ref.errors\n                                  var touched = ref.touched\n                                  var valid = ref.valid\n                                  return [\n                                    _c(\"CInput\", {\n                                      attrs: {\n                                        label: _vm.$t(\n                                          \"cloud.intelimentsInteliGlue.form.password\"\n                                        ),\n                                        \"is-valid\": touched ? valid : null,\n                                        \"invalid-feedback\": _vm.$t(errors[0])\n                                      },\n                                      model: {\n                                        value: _vm.config.password,\n                                        callback: function($$v) {\n                                          _vm.$set(_vm.config, \"password\", $$v)\n                                        },\n                                        expression: \"config.password\"\n                                      }\n                                    })\n                                  ]\n                                }\n                              }\n                            ],\n                            null,\n                            true\n                          )\n                        }),\n                        _vm._v(\" \"),\n                        _c(\n                          \"CButton\",\n                          {\n                            attrs: { color: \"primary\", disabled: invalid },\n                            on: {\n                              click: function($event) {\n                                $event.preventDefault()\n                                return _vm.save($event)\n                              }\n                            }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n\\t\\t\\t\\t\\t\" +\n                                _vm._s(_vm.$t(\"forms.save\")) +\n                                \"\\n\\t\\t\\t\\t\"\n                            )\n                          ]\n                        ),\n                        _vm._v(\" \"),\n                        _c(\n                          \"CButton\",\n                          {\n                            attrs: { color: \"secondary\", disabled: invalid },\n                            on: {\n                              click: function($event) {\n                                $event.preventDefault()\n                                return _vm.saveAndRestart($event)\n                              }\n                            }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n\\t\\t\\t\\t\\t\" +\n                                _vm._s(_vm.$t(\"forms.saveRestart\")) +\n                                \"\\n\\t\\t\\t\\t\"\n                            )\n                          ]\n                        )\n                      ],\n                      1\n                    )\n                  ]\n                }\n              }\n            ])\n          })\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import Vue from 'vue';\nimport { CButton, CCard, CCardBody, CForm, CInput } from '@coreui/vue/src';\nimport { extend, ValidationObserver, ValidationProvider } from 'vee-validate';\nimport { between, integer, required } from 'vee-validate/dist/rules';\nimport FormErrorHandler from '../../helpers/FormErrorHandler';\nimport CloudService from '../../services/CloudService';\nimport ServiceService from '../../services/ServiceService';\nexport default Vue.extend({\n    name: 'InteliGlueCreator',\n    components: {\n        CButton: CButton,\n        CCard: CCard,\n        CCardBody: CCardBody,\n        CForm: CForm,\n        CInput: CInput,\n        ValidationObserver: ValidationObserver,\n        ValidationProvider: ValidationProvider,\n    },\n    data: function () {\n        return {\n            serviceName: 'inteliGlue',\n            config: {\n                rootTopic: null,\n                assignedPort: null,\n                clientId: null,\n                password: null,\n            }\n        };\n    },\n    created: function () {\n        extend('between', between);\n        extend('integer', integer);\n        extend('required', required);\n    },\n    methods: {\n        save: function () {\n            var _this = this;\n            this.$store.commit('spinner/SHOW');\n            return CloudService.create(this.serviceName, this.config)\n                .then(function () {\n                _this.$store.commit('spinner/HIDE');\n                _this.$toast.success(_this.$t('cloud.messages.success').toString());\n            })\n                .catch(function (error) {\n                FormErrorHandler.cloudError(error);\n                return Promise.reject(error);\n            });\n        },\n        saveAndRestart: function () {\n            var _this = this;\n            this.save()\n                .then(function () {\n                _this.$store.commit('spinner/SHOW');\n                ServiceService.restart('iqrf-gateway-daemon')\n                    .then(function () {\n                    _this.$store.commit('spinner/HIDE');\n                    _this.$toast.success(_this.$t('service.iqrf-gateway-daemon.messages.restart')\n                        .toString());\n                })\n                    .catch(function (error) {\n                    FormErrorHandler.serviceError(error);\n                });\n            })\n                .catch(function () { });\n        },\n    },\n    metaInfo: {\n        title: 'cloud.intelimentsInteliGlue.form.title',\n    },\n});\n","import mod from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./InteliGlueCreator.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./InteliGlueCreator.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./InteliGlueCreator.vue?vue&type=template&id=041bb1c7&\"\nimport script from \"./InteliGlueCreator.vue?vue&type=script&lang=ts&\"\nexport * from \"./InteliGlueCreator.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('041bb1c7')) {\n      api.createRecord('041bb1c7', component.options)\n    } else {\n      api.reload('041bb1c7', component.options)\n    }\n    module.hot.accept(\"./InteliGlueCreator.vue?vue&type=template&id=041bb1c7&\", function () {\n      api.rerender('041bb1c7', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/pages/Cloud/InteliGlueCreator.vue\"\nexport default component.exports","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"CCard\",\n    { attrs: { \"body-wrapper\": \"\" } },\n    [\n      _c(\"table\", { staticClass: \"table table-striped\" }, [\n        _c(\"tbody\", [\n          _c(\"tr\", [\n            _c(\"th\", [_vm._v(_vm._s(_vm.$t(\"cloud.pixla.token\")))]),\n            _vm._v(\" \"),\n            _c(\n              \"td\",\n              { staticClass: \"d-flex\" },\n              [\n                _c(\"div\", { staticClass: \"mr-auto\" }, [\n                  _vm._v(\"\\n\\t\\t\\t\\t\\t\\t\" + _vm._s(_vm.token) + \"\\n\\t\\t\\t\\t\\t\")\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"CButton\",\n                  {\n                    attrs: { color: \"primary\", size: \"sm\" },\n                    on: {\n                      click: function($event) {\n                        _vm.showEditor = true\n                      }\n                    }\n                  },\n                  [\n                    _vm._v(\n                      \"\\n\\t\\t\\t\\t\\t\\t\" +\n                        _vm._s(_vm.$t(\"forms.edit\")) +\n                        \"\\n\\t\\t\\t\\t\\t\"\n                    )\n                  ]\n                )\n              ],\n              1\n            )\n          ]),\n          _vm._v(\" \"),\n          _c(\"tr\", [\n            _c(\"th\", [_vm._v(_vm._s(_vm.$t(\"service.status\")))]),\n            _vm._v(\" \"),\n            _vm.missing\n              ? _c(\"td\", [\n                  _vm._v(\n                    \"\\n\\t\\t\\t\\t\\t\" +\n                      _vm._s(_vm.$t(\"service.states.missing\")) +\n                      \"\\n\\t\\t\\t\\t\"\n                  )\n                ])\n              : _vm._e(),\n            _vm._v(\" \"),\n            _vm.unsupported\n              ? _c(\"td\", [\n                  _vm._v(\n                    \"\\n\\t\\t\\t\\t\\t\" +\n                      _vm._s(_vm.$t(\"service.states.unsupported\")) +\n                      \"\\n\\t\\t\\t\\t\"\n                  )\n                ])\n              : _c(\n                  \"td\",\n                  { staticClass: \"d-flex\" },\n                  [\n                    _c(\"div\", { staticClass: \"mr-auto\" }, [\n                      _vm._v(\n                        \"\\n\\t\\t\\t\\t\\t\\t\" +\n                          _vm._s(\n                            _vm.$t(\n                              \"service.states.\" +\n                                (_vm.service.enabled ? \"enabled\" : \"disabled\")\n                            )\n                          ) +\n                          \",\\n\\t\\t\\t\\t\\t\\t\" +\n                          _vm._s(\n                            _vm.$t(\n                              \"service.states.\" +\n                                (_vm.service.active ? \"active\" : \"inactive\")\n                            )\n                          ) +\n                          \"\\n\\t\\t\\t\\t\\t\"\n                      )\n                    ]),\n                    _vm._v(\" \"),\n                    !_vm.service.enabled\n                      ? _c(\n                          \"CButton\",\n                          {\n                            attrs: { color: \"success\", size: \"sm\" },\n                            on: {\n                              click: function($event) {\n                                return _vm.enable()\n                              }\n                            }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n\\t\\t\\t\\t\\t\\t\" +\n                                _vm._s(_vm.$t(\"service.actions.enable\")) +\n                                \"\\n\\t\\t\\t\\t\\t\"\n                            )\n                          ]\n                        )\n                      : _vm._e(),\n                    _vm._v(\" \"),\n                    _vm.service.enabled\n                      ? _c(\n                          \"CButton\",\n                          {\n                            attrs: { color: \"danger\", size: \"sm\" },\n                            on: {\n                              click: function($event) {\n                                return _vm.disable()\n                              }\n                            }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n\\t\\t\\t\\t\\t\\t\" +\n                                _vm._s(_vm.$t(\"service.actions.disable\")) +\n                                \"\\n\\t\\t\\t\\t\\t\"\n                            )\n                          ]\n                        )\n                      : _vm._e()\n                  ],\n                  1\n                )\n          ])\n        ])\n      ]),\n      _vm._v(\" \"),\n      !_vm.missing && !_vm.unsupported\n        ? _c(\n            \"div\",\n            [\n              _c(\n                \"CButton\",\n                {\n                  attrs: {\n                    color: \"primary\",\n                    href: \"https://www.pixla.online/\",\n                    target: \"_blank\"\n                  }\n                },\n                [\n                  _vm._v(\n                    \"\\n\\t\\t\\t\" +\n                      _vm._s(_vm.$t(\"cloud.pixla.dashboard\")) +\n                      \"\\n\\t\\t\"\n                  )\n                ]\n              )\n            ],\n            1\n          )\n        : _vm._e(),\n      _vm._v(\" \"),\n      _c(\"PixlaTokenEditor\", {\n        attrs: { show: _vm.showEditor },\n        on: {\n          \"update:show\": function($event) {\n            _vm.showEditor = $event\n          },\n          tokenUpdated: _vm.getToken\n        }\n      })\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"ValidationObserver\", {\n    scopedSlots: _vm._u([\n      {\n        key: \"default\",\n        fn: function(ref) {\n          var invalid = ref.invalid\n          return [\n            _c(\n              \"CForm\",\n              {\n                on: {\n                  submit: function($event) {\n                    $event.preventDefault()\n                    return _vm.processSubmit($event)\n                  }\n                }\n              },\n              [\n                _c(\n                  \"CModal\",\n                  {\n                    attrs: { color: \"primary\", show: _vm.show },\n                    on: {\n                      \"update:show\": function($event) {\n                        _vm.show = $event\n                      }\n                    },\n                    scopedSlots: _vm._u(\n                      [\n                        {\n                          key: \"header\",\n                          fn: function() {\n                            return [\n                              _c(\"h5\", { staticClass: \"modal-title\" }, [\n                                _vm._v(\n                                  \"\\n\\t\\t\\t\\t\\t\" +\n                                    _vm._s(\n                                      _vm.$t(\"cloud.pixla.editModal.title\")\n                                    ) +\n                                    \"\\n\\t\\t\\t\\t\"\n                                )\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"CButtonClose\", {\n                                staticClass: \"text-white\",\n                                on: { click: _vm.close }\n                              })\n                            ]\n                          },\n                          proxy: true\n                        },\n                        {\n                          key: \"footer\",\n                          fn: function() {\n                            return [\n                              _c(\n                                \"CButton\",\n                                {\n                                  attrs: { color: \"danger\" },\n                                  on: { click: _vm.close }\n                                },\n                                [\n                                  _vm._v(\n                                    \"\\n\\t\\t\\t\\t\\t\" +\n                                      _vm._s(_vm.$t(\"forms.cancel\")) +\n                                      \"\\n\\t\\t\\t\\t\"\n                                  )\n                                ]\n                              ),\n                              _vm._v(\" \"),\n                              _c(\n                                \"CButton\",\n                                {\n                                  attrs: {\n                                    color: \"success\",\n                                    type: \"submit\",\n                                    disabled: invalid\n                                  }\n                                },\n                                [\n                                  _vm._v(\n                                    \"\\n\\t\\t\\t\\t\\t\" +\n                                      _vm._s(_vm.$t(\"forms.edit\")) +\n                                      \"\\n\\t\\t\\t\\t\"\n                                  )\n                                ]\n                              )\n                            ]\n                          },\n                          proxy: true\n                        }\n                      ],\n                      null,\n                      true\n                    )\n                  },\n                  [\n                    _vm._v(\" \"),\n                    _c(\"ValidationProvider\", {\n                      attrs: {\n                        rules: \"required\",\n                        \"custom-messages\": {\n                          required: \"cloud.pixla.editModal.messages.token\"\n                        }\n                      },\n                      scopedSlots: _vm._u(\n                        [\n                          {\n                            key: \"default\",\n                            fn: function(ref) {\n                              var errors = ref.errors\n                              var touched = ref.touched\n                              var valid = ref.valid\n                              return [\n                                _c(\"CInput\", {\n                                  attrs: {\n                                    label: _vm.$t(\n                                      \"cloud.pixla.editModal.token\"\n                                    ),\n                                    \"is-valid\": touched ? valid : null,\n                                    \"invalid-feedback\": _vm.$t(errors[0])\n                                  },\n                                  model: {\n                                    value: _vm.token,\n                                    callback: function($$v) {\n                                      _vm.token = $$v\n                                    },\n                                    expression: \"token\"\n                                  }\n                                })\n                              ]\n                            }\n                          }\n                        ],\n                        null,\n                        true\n                      )\n                    })\n                  ],\n                  1\n                )\n              ],\n              1\n            )\n          ]\n        }\n      }\n    ])\n  })\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import axios from 'axios';\nimport { authorizationHeader } from '../helpers/authorizationHeader';\n/**\n * PIXLA management service\n */\nvar PixlaService = /** @class */ (function () {\n    function PixlaService() {\n    }\n    /**\n     * Retrieves the device token\n     */\n    PixlaService.prototype.getToken = function () {\n        return axios.get('pixla', { headers: authorizationHeader() })\n            .then(function (response) {\n            return response.data.token;\n        });\n    };\n    /**\n     * Sets the new device token\n     * @param token Net token to set\n     */\n    PixlaService.prototype.setToken = function (token) {\n        return axios.put('pixla', { token: token }, { headers: authorizationHeader() });\n    };\n    return PixlaService;\n}());\nexport default new PixlaService();\n","import mod from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PixlaTokenEditor.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PixlaTokenEditor.vue?vue&type=script&lang=ts&\"","import Vue from 'vue';\nimport { CButton, CForm, CInput, CModal } from '@coreui/vue/src';\nimport { extend, ValidationObserver, ValidationProvider } from 'vee-validate';\nimport { required } from 'vee-validate/dist/rules';\nimport PixlaService from '../../services/PixlaService';\nexport default Vue.extend({\n    name: 'PixlaTokenEditor',\n    components: {\n        CButton: CButton,\n        CForm: CForm,\n        CInput: CInput,\n        CModal: CModal,\n        ValidationObserver: ValidationObserver,\n        ValidationProvider: ValidationProvider,\n    },\n    props: {\n        show: {\n            type: Boolean,\n            required: true,\n        }\n    },\n    data: function () {\n        return {\n            token: '',\n        };\n    },\n    created: function () {\n        extend('required', required);\n    },\n    methods: {\n        close: function () {\n            this.$emit('update:show', false);\n        },\n        processSubmit: function () {\n            var _this = this;\n            PixlaService.setToken(this.token)\n                .then(function () {\n                _this.token = '';\n                _this.$store.commit('spinner/SHOW');\n                _this.$emit('update:show', false);\n                _this.$emit('tokenUpdated');\n                _this.$toast.success(_this.$t('cloud.pixla.editModal.messages.success').toString());\n            })\n                .catch(function () {\n                _this.$toast.error(_this.$t('cloud.pixla.editModal.messages.failure').toString());\n            });\n        }\n    },\n});\n","import { render, staticRenderFns } from \"./PixlaTokenEditor.vue?vue&type=template&id=6ca8028d&\"\nimport script from \"./PixlaTokenEditor.vue?vue&type=script&lang=ts&\"\nexport * from \"./PixlaTokenEditor.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('6ca8028d')) {\n      api.createRecord('6ca8028d', component.options)\n    } else {\n      api.reload('6ca8028d', component.options)\n    }\n    module.hot.accept(\"./PixlaTokenEditor.vue?vue&type=template&id=6ca8028d&\", function () {\n      api.rerender('6ca8028d', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/components/Cloud/PixlaTokenEditor.vue\"\nexport default component.exports","import mod from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PixlaControl.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PixlaControl.vue?vue&type=script&lang=ts&\"","import Vue from 'vue';\nimport { CButton, CCard } from '@coreui/vue/src';\nimport PixlaTokenEditor from '../../components/Cloud/PixlaTokenEditor';\nimport PixlaService from '../../services/PixlaService';\nimport ServiceService from '../../services/ServiceService';\nexport default Vue.extend({\n    name: 'PixlaControl',\n    components: {\n        CButton: CButton,\n        CCard: CCard,\n        PixlaTokenEditor: PixlaTokenEditor,\n    },\n    data: function () {\n        return {\n            showEditor: false,\n            serviceName: 'gwman-client',\n            token: null,\n            missing: false,\n            unsupported: false,\n            service: undefined,\n        };\n    },\n    created: function () {\n        this.$store.commit('spinner/SHOW');\n        this.getToken();\n        this.getStatus();\n    },\n    methods: {\n        enable: function () {\n            var _this = this;\n            this.$store.commit('spinner/SHOW');\n            ServiceService.enable(this.serviceName)\n                .then(function () {\n                _this.getStatus();\n                _this.$toast.success(_this.$t('service.' + _this.serviceName + '.messages.enable')\n                    .toString());\n            })\n                .catch(this.handleError);\n        },\n        disable: function () {\n            var _this = this;\n            this.$store.commit('spinner/SHOW');\n            ServiceService.disable(this.serviceName)\n                .then(function () {\n                _this.getStatus();\n                _this.$toast.success(_this.$t('service.' + _this.serviceName + '.messages.disable')\n                    .toString());\n            })\n                .catch(this.handleError);\n        },\n        getStatus: function () {\n            var _this = this;\n            ServiceService.getStatus(this.serviceName)\n                .then(function (status) {\n                _this.service = status;\n                _this.unsupported = false;\n                _this.$store.commit('spinner/HIDE');\n            })\n                .catch(this.handleError);\n        },\n        getToken: function () {\n            var _this = this;\n            PixlaService.getToken()\n                .then(function (token) {\n                _this.token = token;\n                _this.$store.commit('spinner/HIDE');\n            })\n                .catch(function () {\n                _this.token = null;\n                _this.$store.commit('spinner/HIDE');\n            });\n        },\n        handleError: function (error) {\n            this.$store.commit('spinner/HIDE');\n            if (error.response === undefined) {\n                return;\n            }\n            var response = error.response;\n            if (response.status === 404) {\n                this.missing = true;\n                this.$toast.error(this.$t('service.errors.missingService').toString());\n            }\n            if (response.status === 500 &&\n                response.data.message === 'Unsupported init system') {\n                this.unsupported = false;\n                this.$toast.error(this.$t('service.errors.unsupportedInit').toString());\n            }\n        },\n        restart: function () {\n            var _this = this;\n            this.$store.commit('spinner/SHOW');\n            ServiceService.restart(this.serviceName)\n                .then(function () {\n                _this.getStatus();\n                _this.$toast.success(_this.$t('service.' + _this.serviceName + '.messages.restart')\n                    .toString());\n            })\n                .catch(this.handleError);\n        },\n        start: function () {\n            var _this = this;\n            this.$store.commit('spinner/SHOW');\n            ServiceService.start(this.serviceName)\n                .then(function () {\n                _this.getStatus();\n                _this.$toast.success(_this.$t('service.' + _this.serviceName + '.messages.start')\n                    .toString());\n            })\n                .catch(this.handleError);\n        },\n        stop: function () {\n            var _this = this;\n            this.$store.commit('spinner/SHOW');\n            ServiceService.stop(this.serviceName)\n                .then(function () {\n                _this.getStatus();\n                _this.$toast.success(_this.$t('service.' + _this.serviceName + '.messages.stop')\n                    .toString());\n            })\n                .catch(this.handleError);\n        },\n    },\n    beforeRouteEnter: function (to, from, next) {\n        next(function (vm) {\n            if (!vm.$store.getters['features/isEnabled']('pixla')) {\n                vm.$toast.error(vm.$t('cloud.pixla.messages.disabled').toString());\n                vm.$router.push(from.path);\n            }\n        });\n    },\n    metaInfo: {\n        title: 'cloud.pixla.title',\n    },\n});\n","import { render, staticRenderFns } from \"./PixlaControl.vue?vue&type=template&id=03b6e156&\"\nimport script from \"./PixlaControl.vue?vue&type=script&lang=ts&\"\nexport * from \"./PixlaControl.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('03b6e156')) {\n      api.createRecord('03b6e156', component.options)\n    } else {\n      api.reload('03b6e156', component.options)\n    }\n    module.hot.accept(\"./PixlaControl.vue?vue&type=template&id=03b6e156&\", function () {\n      api.rerender('03b6e156', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/pages/Cloud/PixlaControl.vue\"\nexport default component.exports","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"CCard\",\n    { attrs: { \"body-wrapper\": \"\" } },\n    [\n      _c(\n        \"CListGroup\",\n        [\n          _c(\"CListGroupItem\", { attrs: { to: \"/gateway/info/\" } }, [\n            _c(\"header\", { staticClass: \"list-group-item-heading\" }, [\n              _vm._v(\n                \"\\n\\t\\t\\t\\t\" + _vm._s(_vm.$t(\"gateway.info.title\")) + \"\\n\\t\\t\\t\"\n              )\n            ]),\n            _vm._v(\" \"),\n            _c(\"p\", { staticClass: \"list-group-item-text\" }, [\n              _vm._v(\n                \"\\n\\t\\t\\t\\t\" +\n                  _vm._s(_vm.$t(\"gateway.info.description\")) +\n                  \"\\n\\t\\t\\t\"\n              )\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\"CListGroupItem\", { attrs: { to: \"/gateway/log/\" } }, [\n            _c(\"header\", { staticClass: \"list-group-item-heading\" }, [\n              _vm._v(\n                \"\\n\\t\\t\\t\\t\" + _vm._s(_vm.$t(\"gateway.log.title\")) + \"\\n\\t\\t\\t\"\n              )\n            ]),\n            _vm._v(\" \"),\n            _c(\"p\", { staticClass: \"list-group-item-text\" }, [\n              _vm._v(\n                \"\\n\\t\\t\\t\\t\" +\n                  _vm._s(_vm.$t(\"gateway.log.description\")) +\n                  \"\\n\\t\\t\\t\"\n              )\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\"CListGroupItem\", { attrs: { to: \"/gateway/change-mode/\" } }, [\n            _c(\"header\", { staticClass: \"list-group-item-heading\" }, [\n              _vm._v(\n                \"\\n\\t\\t\\t\\t\" + _vm._s(_vm.$t(\"gateway.mode.title\")) + \"\\n\\t\\t\\t\"\n              )\n            ]),\n            _vm._v(\" \"),\n            _c(\"p\", { staticClass: \"list-group-item-text\" }, [\n              _vm._v(\n                \"\\n\\t\\t\\t\\t\" +\n                  _vm._s(_vm.$t(\"gateway.mode.description\")) +\n                  \"\\n\\t\\t\\t\"\n              )\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\n            \"CListGroupItem\",\n            { attrs: { to: \"/service/iqrf-gateway-daemon/\" } },\n            [\n              _c(\"header\", { staticClass: \"list-group-item-heading\" }, [\n                _vm._v(\n                  \"\\n\\t\\t\\t\\t\" +\n                    _vm._s(_vm.$t(\"service.iqrf-gateway-daemon.title\")) +\n                    \"\\n\\t\\t\\t\"\n                )\n              ]),\n              _vm._v(\" \"),\n              _c(\"p\", { staticClass: \"list-group-item-text\" }, [\n                _vm._v(\n                  \"\\n\\t\\t\\t\\t\" +\n                    _vm._s(_vm.$t(\"service.iqrf-gateway-daemon.description\")) +\n                    \"\\n\\t\\t\\t\"\n                )\n              ])\n            ]\n          ),\n          _vm._v(\" \"),\n          _vm.$store.getters[\"features/isEnabled\"](\"ssh\")\n            ? _c(\"CListGroupItem\", { attrs: { to: \"/service/ssh/\" } }, [\n                _c(\"header\", { staticClass: \"list-group-item-heading\" }, [\n                  _vm._v(\n                    \"\\n\\t\\t\\t\\t\" +\n                      _vm._s(_vm.$t(\"service.ssh.title\")) +\n                      \"\\n\\t\\t\\t\"\n                  )\n                ]),\n                _vm._v(\" \"),\n                _c(\"p\", { staticClass: \"list-group-item-text\" }, [\n                  _vm._v(\n                    \"\\n\\t\\t\\t\\t\" +\n                      _vm._s(_vm.$t(\"service.ssh.description\")) +\n                      \"\\n\\t\\t\\t\"\n                  )\n                ])\n              ])\n            : _vm._e(),\n          _vm._v(\" \"),\n          _vm.$store.getters[\"features/isEnabled\"](\"unattendedUpgrades\")\n            ? _c(\n                \"CListGroupItem\",\n                { attrs: { to: \"/service/unattended-upgrades/\" } },\n                [\n                  _c(\"header\", { staticClass: \"list-group-item-heading\" }, [\n                    _vm._v(\n                      \"\\n\\t\\t\\t\\t\" +\n                        _vm._s(_vm.$t(\"service.unattended-upgrades.title\")) +\n                        \"\\n\\t\\t\\t\"\n                    )\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"p\", { staticClass: \"list-group-item-text\" }, [\n                    _vm._v(\n                      \"\\n\\t\\t\\t\\t\" +\n                        _vm._s(\n                          _vm.$t(\"service.unattended-upgrades.description\")\n                        ) +\n                        \"\\n\\t\\t\\t\"\n                    )\n                  ])\n                ]\n              )\n            : _vm._e(),\n          _vm._v(\" \"),\n          _vm.$store.getters[\"features/isEnabled\"](\"updater\")\n            ? _c(\"CListGroupItem\", { attrs: { to: \"/gateway/updater/\" } }, [\n                _c(\"header\", { staticClass: \"list-group-item-heading\" }, [\n                  _vm._v(\n                    \"\\n\\t\\t\\t\\t\" +\n                      _vm._s(_vm.$t(\"gateway.updater.title\")) +\n                      \"\\n\\t\\t\\t\"\n                  )\n                ]),\n                _vm._v(\" \"),\n                _c(\"p\", { staticClass: \"list-group-item-text\" }, [\n                  _vm._v(\n                    \"\\n\\t\\t\\t\\t\" +\n                      _vm._s(_vm.$t(\"gateway.updater.description\")) +\n                      \"\\n\\t\\t\\t\"\n                  )\n                ])\n              ])\n            : _vm._e(),\n          _vm._v(\" \"),\n          _c(\"CListGroupItem\", { attrs: { to: \"/gateway/power/\" } }, [\n            _c(\"header\", { staticClass: \"list-group-item-heading\" }, [\n              _vm._v(\n                \"\\n\\t\\t\\t\\t\" +\n                  _vm._s(_vm.$t(\"gateway.power.title\")) +\n                  \"\\n\\t\\t\\t\"\n              )\n            ]),\n            _vm._v(\" \"),\n            _c(\"p\", { staticClass: \"list-group-item-text\" }, [\n              _vm._v(\n                \"\\n\\t\\t\\t\\t\" +\n                  _vm._s(_vm.$t(\"gateway.power.description\")) +\n                  \"\\n\\t\\t\\t\"\n              )\n            ])\n          ])\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import Vue from 'vue';\nimport { CCard, CListGroup, CListGroupItem } from '@coreui/vue/src';\nexport default Vue.extend({\n    name: 'GatewayDisambiguation',\n    components: {\n        CCard: CCard,\n        CListGroup: CListGroup,\n        CListGroupItem: CListGroupItem\n    },\n    metaInfo: {\n        title: 'gateway.title',\n    },\n});\n","import mod from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GatewayDisambiguation.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GatewayDisambiguation.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./GatewayDisambiguation.vue?vue&type=template&id=3b6d1b7c&\"\nimport script from \"./GatewayDisambiguation.vue?vue&type=script&lang=ts&\"\nexport * from \"./GatewayDisambiguation.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('3b6d1b7c')) {\n      api.createRecord('3b6d1b7c', component.options)\n    } else {\n      api.reload('3b6d1b7c', component.options)\n    }\n    module.hot.accept(\"./GatewayDisambiguation.vue?vue&type=template&id=3b6d1b7c&\", function () {\n      api.rerender('3b6d1b7c', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/pages/Gateway/GatewayDisambiguation.vue\"\nexport default component.exports","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"CCard\",\n    { attrs: { \"body-wrapper\": \"\" } },\n    [\n      _c(\"div\", { staticClass: \"table-responsive\" }, [\n        _vm.info !== null\n          ? _c(\"table\", { staticClass: \"table table-striped\" }, [\n              _c(\"tbody\", [\n                _c(\"tr\", [\n                  _c(\"th\", [_vm._v(_vm._s(_vm.$t(\"gateway.info.board\")))]),\n                  _vm._v(\" \"),\n                  _c(\"td\", [_vm._v(_vm._s(_vm.info.board))])\n                ]),\n                _vm._v(\" \"),\n                _vm.info.gwId\n                  ? _c(\"tr\", [\n                      _c(\"th\", [_vm._v(_vm._s(_vm.$t(\"gateway.info.gwId\")))]),\n                      _vm._v(\" \"),\n                      _c(\"td\", [_vm._v(_vm._s(_vm.info.gwId))])\n                    ])\n                  : _vm._e(),\n                _vm._v(\" \"),\n                _vm.info.pixla\n                  ? _c(\"tr\", [\n                      _c(\"th\", [\n                        _c(\n                          \"a\",\n                          { attrs: { href: \"https://www.pixla.online/\" } },\n                          [\n                            _vm._v(\n                              \"\\n\\t\\t\\t\\t\\t\\t\\t\" +\n                                _vm._s(_vm.$t(\"gateway.info.gwmonId\")) +\n                                \"\\n\\t\\t\\t\\t\\t\\t\"\n                            )\n                          ]\n                        )\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"td\", [_vm._v(_vm._s(_vm.info.pixla))])\n                    ])\n                  : _vm._e(),\n                _vm._v(\" \"),\n                _vm.info.versions.controller\n                  ? _c(\"tr\", [\n                      _c(\"th\", [\n                        _vm._v(\n                          _vm._s(\n                            _vm.$t(\"gateway.info.version.iqrfGatewayController\")\n                          )\n                        )\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"td\", [_vm._v(_vm._s(_vm.info.versions.controller))])\n                    ])\n                  : _vm._e(),\n                _vm._v(\" \"),\n                _c(\"tr\", [\n                  _c(\"th\", [\n                    _vm._v(\n                      _vm._s(_vm.$t(\"gateway.info.version.iqrfGatewayDaemon\"))\n                    )\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"td\", [_vm._v(_vm._s(_vm.info.versions.daemon))])\n                ]),\n                _vm._v(\" \"),\n                _c(\"tr\", [\n                  _c(\"th\", [\n                    _vm._v(\n                      _vm._s(_vm.$t(\"gateway.info.version.iqrfGatewayWebapp\"))\n                    )\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"td\", [_vm._v(_vm._s(_vm.info.versions.webapp))])\n                ]),\n                _vm._v(\" \"),\n                _c(\"tr\", [\n                  _c(\"th\", [_vm._v(_vm._s(_vm.$t(\"gateway.info.hostname\")))]),\n                  _vm._v(\" \"),\n                  _c(\"td\", [_vm._v(_vm._s(_vm.info.hostname))])\n                ]),\n                _vm._v(\" \"),\n                _c(\"tr\", [\n                  _c(\"th\", [\n                    _vm._v(_vm._s(_vm.$t(\"gateway.info.addresses.ip\")))\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\n                    \"td\",\n                    _vm._l(_vm.getIpAddresses, function(ref) {\n                      var iface = ref.iface\n                      var addresses = ref.addresses\n                      return _c(\"span\", { key: iface }, [\n                        _c(\"strong\", [_vm._v(_vm._s(iface) + \": \")]),\n                        _vm._v(\" \" + _vm._s(addresses)),\n                        _c(\"br\")\n                      ])\n                    }),\n                    0\n                  )\n                ]),\n                _vm._v(\" \"),\n                _c(\"tr\", [\n                  _c(\"th\", [\n                    _vm._v(_vm._s(_vm.$t(\"gateway.info.addresses.mac\")))\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\n                    \"td\",\n                    _vm._l(_vm.getMacAddresses, function(ref) {\n                      var iface = ref.iface\n                      var address = ref.address\n                      return _c(\"span\", { key: iface }, [\n                        _c(\"strong\", [_vm._v(_vm._s(iface) + \": \")]),\n                        _vm._v(\" \" + _vm._s(address)),\n                        _c(\"br\")\n                      ])\n                    }),\n                    0\n                  )\n                ]),\n                _vm._v(\" \"),\n                _c(\"tr\", [\n                  _c(\"th\", [\n                    _vm._v(_vm._s(_vm.$t(\"gateway.info.usages.disks\")))\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\n                    \"td\",\n                    _vm._l(_vm.info.diskUsages, function(usage) {\n                      return _c(\n                        \"div\",\n                        { key: usage.fsName },\n                        [\n                          _c(\"strong\", [\n                            _vm._v(\n                              _vm._s(usage.fsName) +\n                                \" (\" +\n                                _vm._s(usage.fsType) +\n                                \"):\"\n                            )\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"resource-usage\", { attrs: { usage: usage } }),\n                          _c(\"br\")\n                        ],\n                        1\n                      )\n                    }),\n                    0\n                  )\n                ]),\n                _vm._v(\" \"),\n                _c(\"tr\", [\n                  _c(\"th\", [\n                    _vm._v(_vm._s(_vm.$t(\"gateway.info.usages.memory\")))\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\n                    \"td\",\n                    [\n                      _c(\"resource-usage\", {\n                        attrs: { usage: _vm.info.memoryUsage }\n                      })\n                    ],\n                    1\n                  )\n                ]),\n                _vm._v(\" \"),\n                _vm.info.swapUsage\n                  ? _c(\"tr\", [\n                      _c(\"th\", [\n                        _vm._v(_vm._s(_vm.$t(\"gateway.info.usages.swap\")))\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"td\",\n                        [\n                          _c(\"resource-usage\", {\n                            attrs: { usage: _vm.info.swapUsage }\n                          })\n                        ],\n                        1\n                      )\n                    ])\n                  : _vm._e(),\n                _vm._v(\" \"),\n                _c(\"tr\", [\n                  _c(\"th\", [_vm._v(_vm._s(_vm.$t(\"gateway.info.tr.title\")))]),\n                  _vm._v(\" \"),\n                  _c(\"td\", [_c(\"coordinator-info\")], 1)\n                ]),\n                _vm._v(\" \"),\n                _c(\"tr\", [\n                  _c(\"th\", [_vm._v(_vm._s(_vm.$t(\"gateway.info.gwMode\")))]),\n                  _vm._v(\" \"),\n                  _c(\"td\", [\n                    _vm._v(_vm._s(_vm.$t(\"gateway.mode.modes.\" + _vm.mode)))\n                  ])\n                ])\n              ])\n            ])\n          : _vm._e()\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"CButton\",\n        {\n          attrs: { color: \"primary\" },\n          on: {\n            click: function($event) {\n              return _vm.downloadDiagnostics()\n            }\n          }\n        },\n        [\n          _vm._v(\n            \"\\n\\t\\t\" + _vm._s(_vm.$t(\"gateway.diagnostics.download\")) + \"\\n\\t\"\n          )\n        ]\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _vm.hasData\n    ? _c(\"span\", [\n        _c(\"strong\", [\n          _vm._v(_vm._s(_vm.$t(\"gateway.info.tr.moduleType\")) + \": \")\n        ]),\n        _vm._v(\"\\n\\t\" + _vm._s(_vm.trMcuType.trType)),\n        _c(\"br\"),\n        _vm._v(\" \"),\n        _c(\"strong\", [\n          _vm._v(_vm._s(_vm.$t(\"gateway.info.tr.mcuType\")) + \": \")\n        ]),\n        _vm._v(\"\\n\\t\" + _vm._s(_vm.trMcuType.mcuType)),\n        _c(\"br\"),\n        _vm._v(\" \"),\n        _c(\"strong\", [\n          _vm._v(_vm._s(_vm.$t(\"gateway.info.tr.moduleId\")) + \": \")\n        ]),\n        _vm._v(\" \" + _vm._s(_vm.osInfo.mid)),\n        _c(\"br\"),\n        _vm._v(\" \"),\n        _c(\"strong\", [_vm._v(_vm._s(_vm.$t(\"gateway.info.tr.os\")) + \": \")]),\n        _vm._v(\n          \"\\n\\t\" +\n            _vm._s(_vm.osInfo.osVersion) +\n            \" (\" +\n            _vm._s(_vm.osInfo.osBuild) +\n            \")\"\n        ),\n        _c(\"br\"),\n        _vm._v(\" \"),\n        _c(\"strong\", [_vm._v(_vm._s(_vm.$t(\"gateway.info.tr.dpa\")) + \": \")]),\n        _vm._v(\"\\n\\t\" + _vm._s(_vm.enumeration.dpaVer)),\n        _c(\"br\"),\n        _vm._v(\" \"),\n        _vm.enumeration.flags.rfMode\n          ? _c(\"span\", [\n              _c(\"strong\", [_vm._v(_vm._s(_vm.$t(\"gateway.info.tr.rfMode\")))]),\n              _vm._v(\"\\n\\t\\t\" + _vm._s(_vm.enumeration.flags.rfMode) + \"\\n\\t\")\n            ])\n          : _vm.enumeration.flags.networkType\n          ? _c(\"span\", [\n              _c(\"strong\", [\n                _vm._v(_vm._s(_vm.$t(\"gateway.info.tr.networkType\")))\n              ]),\n              _vm._v(\n                \"\\n\\t\\t\" + _vm._s(_vm.enumeration.flags.networkType) + \"\\n\\t\"\n              )\n            ])\n          : _vm._e(),\n        _vm._v(\" \"),\n        _c(\"strong\", [\n          _vm._v(_vm._s(_vm.$t(\"gateway.info.tr.voltage\")) + \": \")\n        ]),\n        _vm._v(\"\\n\\t\" + _vm._s(_vm.osInfo.supplyVoltage)),\n        _c(\"br\")\n      ])\n    : _c(\"span\", [\n        _vm._v(\"\\n\\t\" + _vm._s(_vm.$t(\"gateway.info.tr.error\")) + \"\\n\")\n      ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import store from '../store';\n/**\n * IQRF Network service\n */\nvar IqrfNetService = /** @class */ (function () {\n    function IqrfNetService() {\n    }\n    /**\n     * Performs AutoNetwork\n     * @param autoNetwork Object containing AutoNetwork parameters\n     */\n    IqrfNetService.prototype.autoNetwork = function (autoNetwork) {\n        var json = {\n            'mType': 'iqmeshNetwork_AutoNetwork',\n            'data': {\n                'req': {\n                    'discoveryTxPower': autoNetwork.discoveryTxPower,\n                    'discoveryBeforeStart': autoNetwork.discoveryBeforeStart,\n                    'skipDiscoveryEachWave': autoNetwork.skipDiscoveryEachWave,\n                    'actionRetries': autoNetwork.actionRetries,\n                },\n                'returnVerbose': true,\n            },\n        };\n        if (autoNetwork.stopConditions) {\n            Object.assign(json.data.req, { 'stopConditions': autoNetwork.stopConditions });\n        }\n        if (autoNetwork.overlappingNetworks) {\n            Object.assign(json.data.req, { 'overlappingNetworks': autoNetwork.overlappingNetworks });\n        }\n        if (autoNetwork.hwpidFiltering) {\n            Object.assign(json.data.req, { 'hwpidFiltering': autoNetwork.hwpidFiltering });\n        }\n        return store.dispatch('sendRequest', json);\n    };\n    /**\n     * Bonds a node locally\n     * @param address A requested address for the bonded node. If this parameter equals to 0, then the first free address is assigned to the node.\n     */\n    IqrfNetService.prototype.bondLocal = function (address) {\n        return store.dispatch('sendRequest', {\n            'mType': 'iqmeshNetwork_BondNodeLocal',\n            'data': {\n                'repeat': 2,\n                'req': {\n                    'deviceAddr': address,\n                },\n                'returnVerbose': true,\n            },\n        });\n    };\n    /**\n     * Bonds a node via IQRF Smart Connect\n     * @param address Address to bond the device to.  If this parameter equals to 0, then the first free address is assigned to the node.\n     * @param scCode Device Smart Connect code\n     * @param testRetries Maximum number of FRCs used to test whether the Node was successfully bonded\n     */\n    IqrfNetService.prototype.bondSmartConnect = function (address, scCode, testRetries) {\n        return store.dispatch('sendRequest', {\n            'mType': 'iqmeshNetwork_SmartConnect',\n            'data': {\n                'repeat': 2,\n                'req': {\n                    'deviceAddr': address,\n                    'smartConnectCode': scCode,\n                    'bondingTestRetries': testRetries,\n                },\n                'returnVerbose': true,\n            },\n        });\n    };\n    /**\n     * Clears all bonds\n     * @param coordinatorOnly Removes bonds only in the coordinator memory\n     */\n    IqrfNetService.prototype.clearAllBonds = function (coordinatorOnly) {\n        if (coordinatorOnly) {\n            return store.dispatch('sendRequest', {\n                'mType': 'iqrfEmbedCoordinator_ClearAllBonds',\n                'data': {\n                    'req': {\n                        'nAdr': 0,\n                        'param': {},\n                    },\n                    'returnVerbose': true,\n                },\n            });\n        }\n        else {\n            return this.removeBond(255, false);\n        }\n    };\n    /**\n     * Performs Coordinator discovery\n     * @param txPower TX Power\n     * @param maxAddr Maximum node address\n     */\n    IqrfNetService.prototype.discovery = function (txPower, maxAddr) {\n        return store.dispatch('sendRequest', {\n            'mType': 'iqrfEmbedCoordinator_Discovery',\n            'data': {\n                'repeat': 2,\n                'req': {\n                    'nAdr': 0,\n                    'param': {\n                        'txPower': txPower,\n                        'maxAddr': maxAddr,\n                    },\n                },\n                'returnVerbose': true,\n            },\n        });\n    };\n    /**\n     * Performs device enumeration\n     * @param address Device address\n     */\n    IqrfNetService.prototype.enumerateDevice = function (address) {\n        return store.dispatch('sendRequest', {\n            'mType': 'iqmeshNetwork_EnumerateDevice',\n            'data': {\n                'repeat': 2,\n                'req': {\n                    'deviceAddr': address,\n                    'morePeripheralsInfo': true,\n                },\n                'returnVerbose': true,\n            },\n        });\n    };\n    /**\n     * Retrieves list of bonded devices\n     */\n    IqrfNetService.prototype.getBonded = function () {\n        return store.dispatch('sendRequest', {\n            'mType': 'iqrfEmbedCoordinator_BondedDevices',\n            'data': {\n                'req': {\n                    'nAdr': 0,\n                    'param': {},\n                },\n                'returnVerbose': true,\n            },\n        });\n    };\n    /**\n     * Retrieves list of discovered devices\n     */\n    IqrfNetService.prototype.getDiscovered = function () {\n        return store.dispatch('sendRequest', {\n            'mType': 'iqrfEmbedCoordinator_DiscoveredDevices',\n            'data': {\n                'req': {\n                    'nAdr': 0,\n                    'param': {},\n                },\n                'returnVerbose': true,\n            },\n        });\n    };\n    /**\n     * Perform FRC Ping\n     */\n    IqrfNetService.prototype.ping = function () {\n        return store.dispatch('sendRequest', {\n            'mType': 'iqrfEmbedFrc_Send',\n            'data': {\n                'req': {\n                    'nAdr': 0,\n                    'param': {\n                        'frcCommand': 0,\n                        'userData': [0, 0],\n                    },\n                    'returnVerbose': true,\n                },\n            },\n        });\n    };\n    /**\n     * Removes a bond\n     * @param addr Address of a node bond to be removed\n     * @param coordinatorOnly Removes a bond only in the coordinator memory\n     */\n    IqrfNetService.prototype.removeBond = function (addr, coordinatorOnly) {\n        if (coordinatorOnly) {\n            return store.dispatch('sendRequest', {\n                'mType': 'iqrfEmbedCoordinator_RemoveBond',\n                'data': {\n                    'req': {\n                        'nAdr': 0,\n                        'param': {\n                            'bondAddr': addr,\n                        },\n                    },\n                    'returnVerbose': true,\n                },\n            });\n        }\n        else {\n            return store.dispatch('sendRequest', {\n                'mType': 'iqmeshNetwork_RemoveBond',\n                'data': {\n                    'repeat': 2,\n                    'req': {\n                        'deviceAddr': addr,\n                    },\n                    'returnVerbose': true,\n                },\n            });\n        }\n    };\n    /**\n     * Sends JSON API request\n     * @param json JSON API request string\n     */\n    IqrfNetService.prototype.sendJson = function (json) {\n        return store.dispatch('sendRequest', json);\n    };\n    /**\n     * Writes TR configuration\n     * @param address Device address to write the configuration to\n     * @param configuration New TR configuration\n     */\n    IqrfNetService.prototype.writeTrConfiguration = function (address, configuration) {\n        delete configuration.rfBand;\n        configuration.deviceAddr = address;\n        return store.dispatch('sendRequest', {\n            'mType': 'iqmeshNetwork_WriteTrConf',\n            'data': {\n                'repeat': 2,\n                'req': configuration,\n                'returnVerbose': true,\n            },\n        });\n    };\n    return IqrfNetService;\n}());\nexport default new IqrfNetService();\n","import mod from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CoordinatorInfo.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CoordinatorInfo.vue?vue&type=script&lang=ts&\"","import Vue from 'vue';\nimport IqrfNetService from '../../services/IqrfNetService';\nexport default Vue.extend({\n    name: 'CoordinatorInfo',\n    data: function () {\n        return {\n            enumeration: null,\n            hasData: false,\n            osInfo: null,\n            trMcuType: null\n        };\n    },\n    created: function () {\n        var _this = this;\n        this.unsubscribe = this.$store.subscribe(function (mutation) {\n            if (mutation.type !== 'SOCKET_ONMESSAGE' ||\n                mutation.payload.mType !== 'iqmeshNetwork_EnumerateDevice') {\n                return;\n            }\n            try {\n                var data = mutation.payload.data.rsp;\n                _this.enumeration = data.peripheralEnumeration;\n                _this.osInfo = data.osRead;\n                _this.trMcuType = _this.osInfo.trMcuType;\n                _this.hasData = true;\n            }\n            catch (e) {\n                _this.hasData = false;\n            }\n        });\n        if (this.$store.getters.isSocketConnected) {\n            IqrfNetService.enumerateDevice(0);\n        }\n    },\n    beforeDestroy: function () {\n        this.unsubscribe();\n    },\n});\n","import { render, staticRenderFns } from \"./CoordinatorInfo.vue?vue&type=template&id=62cb4fe2&\"\nimport script from \"./CoordinatorInfo.vue?vue&type=script&lang=ts&\"\nexport * from \"./CoordinatorInfo.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('62cb4fe2')) {\n      api.createRecord('62cb4fe2', component.options)\n    } else {\n      api.reload('62cb4fe2', component.options)\n    }\n    module.hot.accept(\"./CoordinatorInfo.vue?vue&type=template&id=62cb4fe2&\", function () {\n      api.rerender('62cb4fe2', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/components/Gateway/CoordinatorInfo.vue\"\nexport default component.exports","import store from '../store';\nexport var DaemonMode;\n(function (DaemonMode) {\n    DaemonMode[\"getMode\"] = \"\";\n    DaemonMode[\"forwarding\"] = \"forwarding\";\n    DaemonMode[\"operational\"] = \"operational\";\n    DaemonMode[\"service\"] = \"service\";\n    DaemonMode[\"unknown\"] = \"unknown\";\n})(DaemonMode || (DaemonMode = {}));\n/**\n * IQRF Gateway Daemon operational mode service\n */\nvar DaemonModeService = /** @class */ (function () {\n    function DaemonModeService() {\n    }\n    /**\n     * Retrieve the current operational mode\n     */\n    DaemonModeService.prototype.get = function () {\n        return this.set(DaemonMode.getMode);\n    };\n    /**\n     * Sets a new mode operational mode\n     * @param newMode New operational mode\n     */\n    DaemonModeService.prototype.set = function (newMode) {\n        return store.dispatch('sendRequest', {\n            'mType': 'mngDaemon_Mode',\n            'data': {\n                'req': {\n                    'operMode': newMode,\n                },\n                'returnVerbose': true,\n            },\n        });\n    };\n    /**\n     * Parses Daemon mode response\n     * @param response Response from IQRF Gateway Daemon\n     */\n    DaemonModeService.prototype.parse = function (response) {\n        try {\n            return response.data.rsp.operMode;\n        }\n        catch (e) {\n            return DaemonMode.unknown;\n        }\n    };\n    return DaemonModeService;\n}());\nexport default new DaemonModeService();\n","import axios from 'axios';\nimport { authorizationHeader } from '../helpers/authorizationHeader';\n/**\n * Gateway service\n */\nvar GatewayService = /** @class */ (function () {\n    function GatewayService() {\n    }\n    /**\n     * Retrieves a ZIP archive with diagnostics data\n     */\n    GatewayService.prototype.getDiagnosticsArchive = function () {\n        return axios.get('diagnostics', { headers: authorizationHeader(), responseType: 'blob' });\n    };\n    /**\n     * Retrieves information about the gateway\n     */\n    GatewayService.prototype.getInfo = function () {\n        return axios.get('gateway/info', { headers: authorizationHeader() });\n    };\n    /**\n     * Retrieves the latest IQRF gateway Daemon's log file\n     */\n    GatewayService.prototype.getLatestLog = function () {\n        return axios.get('gateway/log', { headers: authorizationHeader() });\n    };\n    /**\n     * Retrieves a ZIP archive with IQRF Gateway Daemon's log files\n     */\n    GatewayService.prototype.getLogArchive = function () {\n        return axios.get('gateway/logs', { headers: authorizationHeader(), responseType: 'blob' });\n    };\n    /**\n     * Performs power off\n     */\n    GatewayService.prototype.performPowerOff = function () {\n        return axios.post('gateway/poweroff', null, { headers: authorizationHeader() });\n    };\n    /**\n     * Performs reboot\n     */\n    GatewayService.prototype.performReboot = function () {\n        return axios.post('gateway/reboot', null, { headers: authorizationHeader() });\n    };\n    return GatewayService;\n}());\nexport default new GatewayService();\n","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"usage\" }, [\n    _vm._v(\n      \"\\n\\t\" +\n        _vm._s(_vm.$t(\"gateway.info.usages.used\")) +\n        \"\\n\\t\" +\n        _vm._s(_vm.usage.used) +\n        \" / \" +\n        _vm._s(_vm.usage.size) +\n        \"\\n\\t\"\n    ),\n    _c(\"div\", { staticClass: \"progress\" }, [\n      _c(\n        \"div\",\n        {\n          staticClass: \"progress-bar usage-progress-bar\",\n          style: { width: _vm.usage.usage },\n          attrs: { role: \"progressbar\" }\n        },\n        [\n          _vm._v(\n            \"\\n\\t\\t\\t\" +\n              _vm._s(_vm.usage.used) +\n              \" (\" +\n              _vm._s(_vm.usage.usage) +\n              \")\\n\\t\\t\"\n          )\n        ]\n      )\n    ])\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import Vue from 'vue';\nexport default Vue.extend({\n    name: 'ResourceUsage',\n    props: {\n        usage: {\n            type: Object,\n            required: true,\n        }\n    },\n});\n","import mod from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ResourceUsage.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ResourceUsage.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./ResourceUsage.vue?vue&type=template&id=6ed3f697&scoped=true&\"\nimport script from \"./ResourceUsage.vue?vue&type=script&lang=ts&\"\nexport * from \"./ResourceUsage.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./ResourceUsage.vue?vue&type=style&index=0&id=6ed3f697&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"6ed3f697\",\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('6ed3f697')) {\n      api.createRecord('6ed3f697', component.options)\n    } else {\n      api.reload('6ed3f697', component.options)\n    }\n    module.hot.accept(\"./ResourceUsage.vue?vue&type=template&id=6ed3f697&scoped=true&\", function () {\n      api.rerender('6ed3f697', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/components/Gateway/ResourceUsage.vue\"\nexport default component.exports","export function fileDownloader(response, contentType, fileName) {\n    var contentDisposition = response.headers['content-disposition'];\n    if (contentDisposition) {\n        var fileNameMatch = contentDisposition.match(/filename=\"(.+)\"/);\n        if (fileNameMatch.length === 2) {\n            fileName = fileNameMatch[1];\n        }\n    }\n    var blob = new Blob([response.data], { type: contentType });\n    var fileUrl = window.URL.createObjectURL(blob);\n    var file = document.createElement('a');\n    file.href = fileUrl;\n    file.setAttribute('download', fileName);\n    document.body.appendChild(file);\n    return file;\n}\n","<template>\n\t<CCard body-wrapper>\n\t\t<div class='table-responsive'>\n\t\t\t<table v-if='info !== null' class='table table-striped'>\n\t\t\t\t<tbody>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>{{ $t('gateway.info.board') }}</th>\n\t\t\t\t\t\t<td>{{ info.board }}</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr v-if='info.gwId'>\n\t\t\t\t\t\t<th>{{ $t('gateway.info.gwId') }}</th>\n\t\t\t\t\t\t<td>{{ info.gwId }}</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr v-if='info.pixla'>\n\t\t\t\t\t\t<th>\n\t\t\t\t\t\t\t<a href='https://www.pixla.online/'>\n\t\t\t\t\t\t\t\t{{ $t('gateway.info.gwmonId') }}\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</th>\n\t\t\t\t\t\t<td>{{ info.pixla }}</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr v-if='info.versions.controller'>\n\t\t\t\t\t\t<th>{{ $t('gateway.info.version.iqrfGatewayController') }}</th>\n\t\t\t\t\t\t<td>{{ info.versions.controller }}</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>{{ $t('gateway.info.version.iqrfGatewayDaemon') }}</th>\n\t\t\t\t\t\t<td>{{ info.versions.daemon }}</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>{{ $t('gateway.info.version.iqrfGatewayWebapp') }}</th>\n\t\t\t\t\t\t<td>{{ info.versions.webapp }}</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>{{ $t('gateway.info.hostname') }}</th>\n\t\t\t\t\t\t<td>{{ info.hostname }}</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>{{ $t('gateway.info.addresses.ip') }}</th>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<span v-for='{iface, addresses} of getIpAddresses' :key='iface'>\n\t\t\t\t\t\t\t\t<strong>{{ iface }}: </strong> {{ addresses }}<br>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>{{ $t('gateway.info.addresses.mac') }}</th>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<span v-for='{iface, address} of getMacAddresses' :key='iface'>\n\t\t\t\t\t\t\t\t<strong>{{ iface }}: </strong> {{ address }}<br>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>{{ $t('gateway.info.usages.disks') }}</th>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<div v-for='usage of info.diskUsages' :key='usage.fsName'>\n\t\t\t\t\t\t\t\t<strong>{{ usage.fsName }} ({{ usage.fsType }}):</strong>\n\t\t\t\t\t\t\t\t<resource-usage :usage='usage' /><br>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>{{ $t('gateway.info.usages.memory') }}</th>\n\t\t\t\t\t\t<td><resource-usage :usage='info.memoryUsage' /></td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr v-if='info.swapUsage'>\n\t\t\t\t\t\t<th>{{ $t('gateway.info.usages.swap') }}</th>\n\t\t\t\t\t\t<td><resource-usage :usage='info.swapUsage' /></td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>{{ $t('gateway.info.tr.title') }}</th>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<coordinator-info />\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>{{ $t('gateway.info.gwMode') }}</th>\n\t\t\t\t\t\t<td>{{ $t('gateway.mode.modes.' + mode) }}</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\t\t<CButton color='primary' @click='downloadDiagnostics()'>\n\t\t\t{{ $t('gateway.diagnostics.download') }}\n\t\t</CButton>\n\t</CCard>\n</template>\n\n<script>\nimport {CButton, CCard} from '@coreui/vue/src';\nimport CoordinatorInfo from '../../components/Gateway/CoordinatorInfo';\nimport DaemonModeService, {DaemonMode} from '../../services/DaemonModeService';\nimport GatewayService from '../../services/GatewayService';\nimport ResourceUsage from '../../components/Gateway/ResourceUsage';\nimport {fileDownloader} from '../../helpers/fileDownloader';\n\nexport default {\n\tname: 'GatewayInfo',\n\tcomponents: {CButton, CCard, CoordinatorInfo, ResourceUsage},\n\tdata() {\n\t\treturn {\n\t\t\tcoordinator: null,\n\t\t\tinfo: null,\n\t\t\tmode: 'unknown'\n\t\t};\n\t},\n\tcomputed: {\n\t\tgetIpAddresses() {\n\t\t\tlet addresses = [];\n\t\t\tfor (const nInterface of this.info.interfaces) {\n\t\t\t\tif (nInterface.ipAddresses === null) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\taddresses.push({\n\t\t\t\t\tiface: nInterface.name,\n\t\t\t\t\taddresses: nInterface.ipAddresses.join(', ')\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn addresses;\n\t\t},\n\t\tgetMacAddresses() {\n\t\t\tlet addresses = [];\n\t\t\tfor (const nInterface of this.info.interfaces) {\n\t\t\t\tif (nInterface.macAddress === null) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\taddresses.push({\n\t\t\t\t\tiface: nInterface.name,\n\t\t\t\t\taddress: nInterface.macAddress\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn addresses;\n\t\t}\n\t},\n\tcreated() {\n\t\tthis.$store.commit('spinner/SHOW');\n\t\tif (this.$store.state.webSocketClient.socket.isConnected) {\n\t\t\tDaemonModeService.get();\n\t\t}\n\t\tthis.unsubscribe = this.$store.subscribe(mutation => {\n\t\t\tif (mutation.type === 'SOCKET_ONOPEN' &&\n\t\t\t\t\tthis.mode === DaemonMode.unknown) {\n\t\t\t\tDaemonModeService.get();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (mutation.type !== 'SOCKET_ONMESSAGE' ||\n\t\t\t\t\tmutation.payload.mType !== 'mngDaemon_Mode') {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.mode = DaemonModeService.parse(mutation.payload);\n\t\t});\n\t\tGatewayService.getInfo()\n\t\t\t.then(\n\t\t\t\t(response) => {\n\t\t\t\t\tthis.info = response.data;\n\t\t\t\t\tthis.$store.commit('spinner/HIDE');\n\t\t\t\t}\n\t\t\t)\n\t\t\t.catch(() => this.$store.commit('spinner/HIDE'));\n\t},\n\tbeforeDestroy() {\n\t\tthis.unsubscribe();\n\t},\n\tmethods: {\n\t\tdownloadDiagnostics() {\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\tGatewayService.getDiagnosticsArchive().then(\n\t\t\t\t(response) => {\n\t\t\t\t\tconst file = fileDownloader(response, 'application/zip', 'iqrf-gateway-diagnostics.zip');\n\t\t\t\t\tthis.$store.commit('spinner/HIDE');\n\t\t\t\t\tfile.click();\n\t\t\t\t}\n\t\t\t).catch(() => (this.$store.commit('spinner/HIDE')));\n\t\t}\n\t},\n\tmetaInfo: {\n\t\ttitle: 'gateway.info.title',\n\t},\n};\n</script>\n","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GatewayInfo.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GatewayInfo.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./GatewayInfo.vue?vue&type=template&id=2922fd04&\"\nimport script from \"./GatewayInfo.vue?vue&type=script&lang=js&\"\nexport * from \"./GatewayInfo.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('2922fd04')) {\n      api.createRecord('2922fd04', component.options)\n    } else {\n      api.reload('2922fd04', component.options)\n    }\n    module.hot.accept(\"./GatewayInfo.vue?vue&type=template&id=2922fd04&\", function () {\n      api.rerender('2922fd04', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/pages/Gateway/GatewayInfo.vue\"\nexport default component.exports","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _vm.log\n    ? _c(\n        \"CCard\",\n        { attrs: { \"body-wrapper\": \"\" } },\n        [\n          _c(\"pre\", { staticClass: \"log\" }, [_vm._v(_vm._s(_vm.log))]),\n          _vm._v(\" \"),\n          _c(\n            \"CButton\",\n            {\n              attrs: { color: \"primary\" },\n              on: {\n                click: function($event) {\n                  return _vm.downloadArchive()\n                }\n              }\n            },\n            [_vm._v(\"\\n\\t\\t\" + _vm._s(_vm.$t(\"gateway.log.download\")) + \"\\n\\t\")]\n          )\n        ],\n        1\n      )\n    : _vm._e()\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import Vue from 'vue';\nimport { CButton, CCard } from '@coreui/vue/src';\nimport GatewayService from '../../services/GatewayService';\nimport { fileDownloader } from '../../helpers/fileDownloader';\nexport default Vue.extend({\n    name: 'DaemonLogViewer',\n    components: {\n        CButton: CButton,\n        CCard: CCard,\n    },\n    data: function () {\n        return {\n            log: null\n        };\n    },\n    created: function () {\n        var _this = this;\n        this.$store.commit('spinner/SHOW');\n        GatewayService.getLatestLog()\n            .then(function (response) {\n            _this.log = response.data;\n            _this.$store.commit('spinner/HIDE');\n        })\n            .catch(function (error) {\n            _this.$store.commit('spinner/HIDE');\n            if (error.response) {\n                if (error.response.data.code === 500) {\n                    _this.$toast.error(_this.$t('gateway.log.messages.notFound').toString());\n                }\n            }\n        });\n    },\n    methods: {\n        downloadArchive: function () {\n            var _this = this;\n            this.$store.commit('spinner/SHOW');\n            GatewayService.getLogArchive().then(function (response) {\n                var file = fileDownloader(response, 'application/zip', 'iqrf-gateway-logs.zip');\n                _this.$store.commit('spinner/HIDE');\n                file.click();\n            }).catch(function () { return (_this.$store.commit('spinner/HIDE')); });\n        }\n    },\n    metaInfo: {\n        title: 'gateway.log.title',\n    },\n});\n","import mod from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DaemonLogViewer.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DaemonLogViewer.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./DaemonLogViewer.vue?vue&type=template&id=1b439f44&\"\nimport script from \"./DaemonLogViewer.vue?vue&type=script&lang=ts&\"\nexport * from \"./DaemonLogViewer.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('1b439f44')) {\n      api.createRecord('1b439f44', component.options)\n    } else {\n      api.reload('1b439f44', component.options)\n    }\n    module.hot.accept(\"./DaemonLogViewer.vue?vue&type=template&id=1b439f44&\", function () {\n      api.rerender('1b439f44', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/pages/Gateway/DaemonLogViewer.vue\"\nexport default component.exports","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"CCard\", { attrs: { \"body-wrapper\": \"\" } }, [\n    _c(\"table\", { staticClass: \"table table-striped\" }, [\n      _c(\"tr\", [\n        _c(\"th\", [_vm._v(_vm._s(_vm.$t(\"gateway.info.gwMode\")))]),\n        _vm._v(\" \"),\n        _c(\"td\", [_vm._v(_vm._s(_vm.$t(\"gateway.mode.modes.\" + _vm.mode)))])\n      ])\n    ]),\n    _vm._v(\" \"),\n    _vm.mode !== \"unknown\"\n      ? _c(\n          \"div\",\n          [\n            _c(\n              \"CButton\",\n              {\n                attrs: { color: \"primary\" },\n                on: {\n                  click: function($event) {\n                    return _vm.setMode(\"operational\")\n                  }\n                }\n              },\n              [\n                _vm._v(\n                  \"\\n\\t\\t\\t\" +\n                    _vm._s(_vm.$t(\"gateway.mode.modes.operational\")) +\n                    \"\\n\\t\\t\"\n                )\n              ]\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"CButton\",\n              {\n                attrs: { color: \"primary\" },\n                on: {\n                  click: function($event) {\n                    return _vm.setMode(\"service\")\n                  }\n                }\n              },\n              [\n                _vm._v(\n                  \"\\n\\t\\t\\t\" +\n                    _vm._s(_vm.$t(\"gateway.mode.modes.service\")) +\n                    \"\\n\\t\\t\"\n                )\n              ]\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"CButton\",\n              {\n                attrs: { color: \"primary\" },\n                on: {\n                  click: function($event) {\n                    return _vm.setMode(\"forwarding\")\n                  }\n                }\n              },\n              [\n                _vm._v(\n                  \"\\n\\t\\t\\t\" +\n                    _vm._s(_vm.$t(\"gateway.mode.modes.forwarding\")) +\n                    \"\\n\\t\\t\"\n                )\n              ]\n            )\n          ],\n          1\n        )\n      : _vm._e()\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import Vue from 'vue';\nimport { CButton, CCard } from '@coreui/vue/src';\nimport DaemonModeService, { DaemonMode } from '../../services/DaemonModeService';\nexport default Vue.extend({\n    name: 'DaemonMode',\n    components: {\n        CButton: CButton,\n        CCard: CCard,\n    },\n    data: function () {\n        return {\n            loaded: false,\n            mode: DaemonMode.unknown,\n            unsubscribe: function () { },\n        };\n    },\n    created: function () {\n        var _this = this;\n        if (this.$store.state.webSocketClient.socket.isConnected) {\n            this.getMode();\n        }\n        this.unsubscribe = this.$store.subscribe(function (mutation) {\n            if (mutation.type === 'SOCKET_ONOPEN' &&\n                _this.mode === DaemonMode.unknown) {\n                _this.getMode();\n                return;\n            }\n            if (mutation.type !== 'SOCKET_ONMESSAGE' ||\n                mutation.payload.mType !== 'mngDaemon_Mode') {\n                return;\n            }\n            _this.handleResponse(mutation.payload);\n        });\n    },\n    beforeDestroy: function () {\n        this.unsubscribe();\n    },\n    methods: {\n        handleResponse: function (response) {\n            this.mode = DaemonModeService.parse(response);\n            this.$store.commit('spinner/HIDE');\n            if (this.mode === DaemonMode.unknown) {\n                this.$toast.error(this.$t('gateway.mode.messages.' + this.loaded ? 'set' : 'get')\n                    .toString());\n            }\n            else if (this.loaded) {\n                this.$toast.success(this.$t('gateway.mode.messages.' + this.mode).toString());\n            }\n            else {\n                this.loaded = true;\n            }\n        },\n        getMode: function () {\n            this.$store.dispatch('spinner/show', { timeout: 10000 });\n            DaemonModeService.get();\n        },\n        setMode: function (newMode) {\n            this.$store.dispatch('spinner/hide');\n            DaemonModeService.set(newMode);\n        },\n    },\n    metaInfo: {\n        title: 'gateway.mode.title',\n    },\n});\n","import mod from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DaemonMode.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DaemonMode.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./DaemonMode.vue?vue&type=template&id=41db1fc5&\"\nimport script from \"./DaemonMode.vue?vue&type=script&lang=ts&\"\nexport * from \"./DaemonMode.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('41db1fc5')) {\n      api.createRecord('41db1fc5', component.options)\n    } else {\n      api.reload('41db1fc5', component.options)\n    }\n    module.hot.accept(\"./DaemonMode.vue?vue&type=template&id=41db1fc5&\", function () {\n      api.rerender('41db1fc5', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/pages/Gateway/DaemonMode.vue\"\nexport default component.exports","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"CCard\",\n    { attrs: { \"body-wrapper\": \"\" } },\n    [\n      _c(\n        \"CButton\",\n        {\n          attrs: { color: \"danger\" },\n          on: {\n            click: function($event) {\n              return _vm.powerOff()\n            }\n          }\n        },\n        [\n          _c(\"CIcon\", {\n            attrs: { content: _vm.$options.icon.cilPowerStandby }\n          }),\n          _vm._v(\n            \"\\n\\t\\t\" + _vm._s(_vm.$t(\"gateway.power.powerOff.title\")) + \"\\n\\t\"\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"CButton\",\n        {\n          attrs: { color: \"primary\" },\n          on: {\n            click: function($event) {\n              return _vm.reboot()\n            }\n          }\n        },\n        [\n          _c(\"CIcon\", { attrs: { content: _vm.$options.icon.cilReload } }),\n          _vm._v(\n            \"\\n\\t\\t\" + _vm._s(_vm.$t(\"gateway.power.reboot.title\")) + \"\\n\\t\"\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PowerControl.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PowerControl.vue?vue&type=script&lang=js&\"","<template>\n\t<CCard body-wrapper>\n\t\t<CButton color='danger' @click='powerOff()'>\n\t\t\t<CIcon :content='$options.icon.cilPowerStandby' />\n\t\t\t{{ $t('gateway.power.powerOff.title') }}\n\t\t</CButton>\n\t\t<CButton color='primary' @click='reboot()'>\n\t\t\t<CIcon :content='$options.icon.cilReload' />\n\t\t\t{{ $t('gateway.power.reboot.title') }}\n\t\t</CButton>\n\t</CCard>\n</template>\n\n<script>\nimport {CButton, CCard, CIcon} from '@coreui/vue/src';\nimport { cilPowerStandby, cilReload } from '@coreui/icons';\nimport GatewayService from '../../services/GatewayService';\n\nexport default {\n\tname: 'PowerControl',\n\tcomponents: {\n\t\tCButton,\n\t\tCCard,\n\t\tCIcon,\n\t},\n\tmethods: {\n\t\tpowerOff() {\n\t\t\tGatewayService.performPowerOff()\n\t\t\t\t.then(() => {\n\t\t\t\t\tthis.$toast.success(\n\t\t\t\t\t\tthis.$t('gateway.power.powerOff.success').toString()\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t},\n\t\treboot() {\n\t\t\tGatewayService.performReboot()\n\t\t\t\t.then(() => {\n\t\t\t\t\tthis.$toast.success(\n\t\t\t\t\t\tthis.$t('gateway.power.reboot.success').toString()\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t},\n\t},\n\ticon: {\n\t\tcilPowerStandby,\n\t\tcilReload,\n\t},\n\tmetaInfo: {\n\t\ttitle: 'gateway.power.title',\n\t},\n};\n</script>\n","import { render, staticRenderFns } from \"./PowerControl.vue?vue&type=template&id=9fdc3fd4&\"\nimport script from \"./PowerControl.vue?vue&type=script&lang=js&\"\nexport * from \"./PowerControl.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('9fdc3fd4')) {\n      api.createRecord('9fdc3fd4', component.options)\n    } else {\n      api.reload('9fdc3fd4', component.options)\n    }\n    module.hot.accept(\"./PowerControl.vue?vue&type=template&id=9fdc3fd4&\", function () {\n      api.rerender('9fdc3fd4', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/pages/Gateway/PowerControl.vue\"\nexport default component.exports","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"CCard\", { attrs: { \"body-wrapper\": \"\" } }, [\n    !_vm.missing && !_vm.unsupported\n      ? _c(\n          \"div\",\n          [\n            !_vm.service.enabled\n              ? _c(\n                  \"CButton\",\n                  {\n                    attrs: { color: \"success\" },\n                    on: {\n                      click: function($event) {\n                        return _vm.enable()\n                      }\n                    }\n                  },\n                  [\n                    _vm._v(\n                      \"\\n\\t\\t\\t\" +\n                        _vm._s(_vm.$t(\"service.actions.enable\")) +\n                        \"\\n\\t\\t\"\n                    )\n                  ]\n                )\n              : _vm._e(),\n            _vm._v(\" \"),\n            _vm.service.enabled\n              ? _c(\n                  \"CButton\",\n                  {\n                    attrs: { color: \"danger\" },\n                    on: {\n                      click: function($event) {\n                        return _vm.disable()\n                      }\n                    }\n                  },\n                  [\n                    _vm._v(\n                      \"\\n\\t\\t\\t\" +\n                        _vm._s(_vm.$t(\"service.actions.disable\")) +\n                        \"\\n\\t\\t\"\n                    )\n                  ]\n                )\n              : _vm._e(),\n            _vm._v(\" \"),\n            !_vm.service.active\n              ? _c(\n                  \"CButton\",\n                  {\n                    attrs: { color: \"success\" },\n                    on: {\n                      click: function($event) {\n                        return _vm.start()\n                      }\n                    }\n                  },\n                  [\n                    _vm._v(\n                      \"\\n\\t\\t\\t\" +\n                        _vm._s(_vm.$t(\"service.actions.start\")) +\n                        \"\\n\\t\\t\"\n                    )\n                  ]\n                )\n              : _vm._e(),\n            _vm._v(\" \"),\n            _vm.service.active\n              ? _c(\n                  \"CButton\",\n                  {\n                    attrs: { color: \"danger\" },\n                    on: {\n                      click: function($event) {\n                        return _vm.stop()\n                      }\n                    }\n                  },\n                  [\n                    _vm._v(\n                      \"\\n\\t\\t\\t\" +\n                        _vm._s(_vm.$t(\"service.actions.stop\")) +\n                        \"\\n\\t\\t\"\n                    )\n                  ]\n                )\n              : _vm._e(),\n            _vm._v(\" \"),\n            _vm.service.active\n              ? _c(\n                  \"CButton\",\n                  {\n                    attrs: { color: \"primary\" },\n                    on: {\n                      click: function($event) {\n                        return _vm.restart()\n                      }\n                    }\n                  },\n                  [\n                    _vm._v(\n                      \"\\n\\t\\t\\t\" +\n                        _vm._s(_vm.$t(\"service.actions.restart\")) +\n                        \"\\n\\t\\t\"\n                    )\n                  ]\n                )\n              : _vm._e(),\n            _vm._v(\" \"),\n            _c(\n              \"CButton\",\n              {\n                attrs: { color: \"secondary\" },\n                on: {\n                  click: function($event) {\n                    return _vm.refreshStatus()\n                  }\n                }\n              },\n              [\n                _vm._v(\n                  \"\\n\\t\\t\\t\" +\n                    _vm._s(_vm.$t(\"service.actions.status\")) +\n                    \"\\n\\t\\t\"\n                )\n              ]\n            )\n          ],\n          1\n        )\n      : _vm._e(),\n    _vm._v(\" \"),\n    _c(\"br\"),\n    _vm._v(\" \"),\n    _c(\"strong\", [_vm._v(_vm._s(_vm.$t(\"service.status\")) + \": \")]),\n    _vm._v(\" \"),\n    _vm.missing\n      ? _c(\"span\", [\n          _vm._v(\"\\n\\t\\t\" + _vm._s(_vm.$t(\"service.states.missing\")) + \"\\n\\t\")\n        ])\n      : _vm._e(),\n    _vm._v(\" \"),\n    _vm.unsupported\n      ? _c(\"span\", [\n          _vm._v(\n            \"\\n\\t\\t\" + _vm._s(_vm.$t(\"service.states.unsupported\")) + \"\\n\\t\"\n          )\n        ])\n      : _c(\"span\", [\n          _vm._v(\n            \"\\n\\t\\t\" +\n              _vm._s(\n                _vm.$t(\n                  \"service.states.\" +\n                    (_vm.service.enabled ? \"enabled\" : \"disabled\")\n                )\n              ) +\n              \",\\n\\t\\t\" +\n              _vm._s(\n                _vm.$t(\n                  \"service.states.\" +\n                    (_vm.service.active ? \"active\" : \"inactive\")\n                )\n              ) +\n              \"\\n\\t\"\n          )\n        ]),\n    _vm._v(\" \"),\n    _c(\"br\"),\n    _c(\"br\"),\n    _vm._v(\" \"),\n    _vm.service !== null\n      ? _c(\"pre\", { staticClass: \"log\" }, [_vm._v(_vm._s(_vm.service.status))])\n      : _vm._e()\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","<template>\n\t<CCard body-wrapper>\n\t\t<div v-if='!missing && !unsupported'>\n\t\t\t<CButton v-if='!service.enabled' color='success' @click='enable()'>\n\t\t\t\t{{ $t('service.actions.enable') }}\n\t\t\t</CButton>\n\t\t\t<CButton v-if='service.enabled' color='danger' @click='disable()'>\n\t\t\t\t{{ $t('service.actions.disable') }}\n\t\t\t</CButton>\n\t\t\t<CButton v-if='!service.active' color='success' @click='start()'>\n\t\t\t\t{{ $t('service.actions.start') }}\n\t\t\t</CButton>\n\t\t\t<CButton v-if='service.active' color='danger' @click='stop()'>\n\t\t\t\t{{ $t('service.actions.stop') }}\n\t\t\t</CButton>\n\t\t\t<CButton v-if='service.active' color='primary' @click='restart()'>\n\t\t\t\t{{ $t('service.actions.restart') }}\n\t\t\t</CButton>\n\t\t\t<CButton color='secondary' @click='refreshStatus()'>\n\t\t\t\t{{ $t('service.actions.status') }}\n\t\t\t</CButton>\n\t\t</div>\n\t\t<br>\n\t\t<strong>{{ $t('service.status') }}: </strong>\n\t\t<span v-if='missing'>\n\t\t\t{{ $t('service.states.missing') }}\n\t\t</span>\n\t\t<span v-if='unsupported'>\n\t\t\t{{ $t('service.states.unsupported') }}\n\t\t</span>\n\t\t<span v-else>\n\t\t\t{{ $t('service.states.' + (service.enabled ? 'enabled' : 'disabled')) }},\n\t\t\t{{ $t('service.states.' + (service.active ? 'active' : 'inactive')) }}\n\t\t</span>\n\t\t<br><br>\n\t\t<pre v-if='service !== null' class='log'>{{ service.status }}</pre>\n\t</CCard>\n</template>\n\n<script>\nimport {CButton, CCard} from '@coreui/vue/src';\nimport ServiceService from '../../services/ServiceService';\n\nconst whitelisted = [\n\t'iqrf-gateway-controller',\n\t'iqrf-gateway-daemon',\n\t'iqrf-gateway-translator',\n\t'ssh',\n\t'unattended-upgrades',\n];\n\nconst features = {\n\t'iqrf-gateway-controller': 'iqrfGatewayController',\n\t'iqrf-gateway-translator': 'iqrfGatewayTranslator',\n\t'ssh': 'ssh',\n\t'unattended-upgrades': 'unattendedUpgrades',\n};\n\nexport default {\n\tname: 'ServiceControl',\n\tcomponents: {\n\t\tCButton,\n\t\tCCard,\n\t},\n\tprops: {\n\t\tserviceName: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t}\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tmissing: false,\n\t\t\tunsupported: false,\n\t\t\tservice: null,\n\t\t};\n\t},\n\twatch: {\n\t\tserviceName: function (newVal) {\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\tthis.serviceName = newVal;\n\t\t\tthis.getStatus();\n\t\t}\n\t},\n\tcreated() {\n\t\tthis.$store.commit('spinner/SHOW');\n\t\tthis.getStatus();\n\t},\n\tmethods: {\n\t\tenable() {\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\tServiceService.enable(this.serviceName)\n\t\t\t\t.then(() => (this.handleSuccess('enable')))\n\t\t\t\t.catch(this.handleError);\n\t\t},\n\t\tdisable() {\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\tServiceService.disable(this.serviceName)\n\t\t\t\t.then(() => (this.handleSuccess('disable')))\n\t\t\t\t.catch(this.handleError);\n\t\t},\n\t\tgetStatus() {\n\t\t\tif (!whitelisted.includes(this.serviceName)) {\n\t\t\t\tthis.unsupported = true;\n\t\t\t\tthis.$store.commit('spinner/HIDE');\n\t\t\t\tthis.$toast.error(\n\t\t\t\t\tthis.$t('service.errors.unsupportedService').toString()\n\t\t\t\t);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tServiceService.getStatus(this.serviceName)\n\t\t\t\t.then((status) => {\n\t\t\t\t\tthis.service = status;\n\t\t\t\t\tthis.unsupported = false;\n\t\t\t\t\tthis.$store.commit('spinner/HIDE');\n\t\t\t\t})\n\t\t\t\t.catch(this.handleError);\n\t\t},\n\t\thandleError(error) {\n\t\t\tthis.$store.commit('spinner/HIDE');\n\t\t\tlet response = error.response;\n\t\t\tif (response.status === 404) {\n\t\t\t\tthis.missing = true;\n\t\t\t\tthis.$toast.error(this.$t('service.errors.missingService').toString());\n\t\t\t}\n\t\t\tif (response.status === 500 &&\n\t\t\t\t\tresponse.data.message === 'Unsupported init system') {\n\t\t\t\tthis.unsupported = false;\n\t\t\t\tthis.$toast.error(this.$t('service.errors.unsupportedInit').toString());\n\t\t\t}\n\t\t},\n\t\thandleSuccess(action) {\n\t\t\tthis.getStatus();\n\t\t\tthis.$toast.success(\n\t\t\t\tthis.$t('service.' + this.serviceName + '.messages.' + action)\n\t\t\t\t\t.toString()\n\t\t\t);\n\t\t},\n\t\trefreshStatus() {\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\tthis.getStatus();\n\t\t},\n\t\trestart() {\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\tServiceService.restart(this.serviceName)\n\t\t\t\t.then(() => (this.handleSuccess('restart')))\n\t\t\t\t.catch(this.handleError);\n\t\t},\n\t\tstart() {\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\tServiceService.start(this.serviceName)\n\t\t\t\t.then(() => (this.handleSuccess('start')))\n\t\t\t\t.catch(this.handleError);\n\t\t},\n\t\tstop() {\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\tServiceService.stop(this.serviceName)\n\t\t\t\t.then(() => (this.handleSuccess('stop')))\n\t\t\t\t.catch(this.handleError);\n\t\t},\n\t},\n\tbeforeRouteEnter(to, from, next) {\n\t\tnext(vm => {\n\t\t\tconst feature = features[vm.serviceName];\n\t\t\tif (feature !== undefined &&\n\t\t\t\t\t!vm.$store.getters['features/isEnabled'](feature)) {\n\t\t\t\tvm.$toast.error(\n\t\t\t\t\tvm.$t('service.' +vm.serviceName + '.messages.disabled').toString()\n\t\t\t\t);\n\t\t\t\tvm.$router.push(from.path);\n\t\t\t}\n\t\t});\n\t},\n\tmetaInfo() {\n\t\treturn {\n\t\t\ttitle: whitelisted.includes(this.serviceName) ?\n\t\t\t\t'service.' + this.serviceName + '.title' :\n\t\t\t\t'service.unsupported.title',\n\t\t};\n\t},\n};\n</script>\n","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ServiceControl.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ServiceControl.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ServiceControl.vue?vue&type=template&id=52aeda34&\"\nimport script from \"./ServiceControl.vue?vue&type=script&lang=js&\"\nexport * from \"./ServiceControl.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('52aeda34')) {\n      api.createRecord('52aeda34', component.options)\n    } else {\n      api.reload('52aeda34', component.options)\n    }\n    module.hot.accept(\"./ServiceControl.vue?vue&type=template&id=52aeda34&\", function () {\n      api.rerender('52aeda34', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/pages/Gateway/ServiceControl.vue\"\nexport default component.exports","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"c-app flex-row align-items-center\" },\n    [\n      _c(\n        \"CContainer\",\n        [\n          _c(\n            \"CRow\",\n            { staticClass: \"justify-content-center\" },\n            [\n              _c(\n                \"CCol\",\n                { attrs: { md: \"8\" } },\n                [\n                  _c(\"div\", { staticClass: \"py-5 text-center\" }, [\n                    _c(\"img\", {\n                      staticClass: \"mx-auto logo\",\n                      attrs: {\n                        alt: _vm.$t(\"core.title\"),\n                        src: \"/img/logo-blue.svg\"\n                      }\n                    })\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\n                    \"CCard\",\n                    { staticClass: \"p-4\" },\n                    [\n                      _c(\n                        \"CCardBody\",\n                        [\n                          _c(\"ValidationObserver\", {\n                            scopedSlots: _vm._u([\n                              {\n                                key: \"default\",\n                                fn: function(ref) {\n                                  var invalid = ref.invalid\n                                  return [\n                                    _c(\n                                      \"CForm\",\n                                      {\n                                        on: {\n                                          submit: function($event) {\n                                            $event.preventDefault()\n                                            return _vm.handleSubmit($event)\n                                          }\n                                        }\n                                      },\n                                      [\n                                        _c(\n                                          \"h1\",\n                                          { staticClass: \"text-center\" },\n                                          [\n                                            _vm._v(\n                                              \"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\" +\n                                                _vm._s(\n                                                  _vm.$t(\"core.sign.in.title\")\n                                                ) +\n                                                \"\\n\\t\\t\\t\\t\\t\\t\\t\\t\"\n                                            )\n                                          ]\n                                        ),\n                                        _vm._v(\" \"),\n                                        _c(\"ValidationProvider\", {\n                                          attrs: {\n                                            rules: \"required\",\n                                            \"custom-messages\": {\n                                              required:\n                                                \"core.sign.in.messages.username\"\n                                            }\n                                          },\n                                          scopedSlots: _vm._u(\n                                            [\n                                              {\n                                                key: \"default\",\n                                                fn: function(ref) {\n                                                  var valid = ref.valid\n                                                  var touched = ref.touched\n                                                  var errors = ref.errors\n                                                  return [\n                                                    _c(\"CInput\", {\n                                                      attrs: {\n                                                        label: _vm.$t(\n                                                          \"core.sign.in.username\"\n                                                        ),\n                                                        placeholder: _vm.$t(\n                                                          \"core.sign.in.username\"\n                                                        ),\n                                                        autocomplete:\n                                                          \"username\",\n                                                        \"is-valid\": touched\n                                                          ? valid\n                                                          : null,\n                                                        \"invalid-feedback\": _vm.$t(\n                                                          errors[0]\n                                                        )\n                                                      },\n                                                      scopedSlots: _vm._u(\n                                                        [\n                                                          {\n                                                            key:\n                                                              \"prepend-content\",\n                                                            fn: function() {\n                                                              return [\n                                                                _c(\"CIcon\", {\n                                                                  attrs: {\n                                                                    content:\n                                                                      _vm\n                                                                        .$options\n                                                                        .icons\n                                                                        .user\n                                                                  }\n                                                                })\n                                                              ]\n                                                            },\n                                                            proxy: true\n                                                          }\n                                                        ],\n                                                        null,\n                                                        true\n                                                      ),\n                                                      model: {\n                                                        value: _vm.username,\n                                                        callback: function(\n                                                          $$v\n                                                        ) {\n                                                          _vm.username = $$v\n                                                        },\n                                                        expression: \"username\"\n                                                      }\n                                                    })\n                                                  ]\n                                                }\n                                              }\n                                            ],\n                                            null,\n                                            true\n                                          )\n                                        }),\n                                        _vm._v(\" \"),\n                                        _c(\"ValidationProvider\", {\n                                          attrs: {\n                                            rules: \"required\",\n                                            \"custom-messages\": {\n                                              required:\n                                                \"core.sign.in.messages.password\"\n                                            }\n                                          },\n                                          scopedSlots: _vm._u(\n                                            [\n                                              {\n                                                key: \"default\",\n                                                fn: function(ref) {\n                                                  var valid = ref.valid\n                                                  var touched = ref.touched\n                                                  var errors = ref.errors\n                                                  return [\n                                                    _c(\"CInput\", {\n                                                      attrs: {\n                                                        label: _vm.$t(\n                                                          \"core.sign.in.password\"\n                                                        ),\n                                                        placeholder: _vm.$t(\n                                                          \"core.sign.in.password\"\n                                                        ),\n                                                        type: \"password\",\n                                                        autocomplete:\n                                                          \"password\",\n                                                        \"is-valid\": touched\n                                                          ? valid\n                                                          : null,\n                                                        \"invalid-feedback\": _vm.$t(\n                                                          errors[0]\n                                                        )\n                                                      },\n                                                      scopedSlots: _vm._u(\n                                                        [\n                                                          {\n                                                            key:\n                                                              \"prepend-content\",\n                                                            fn: function() {\n                                                              return [\n                                                                _c(\"CIcon\", {\n                                                                  attrs: {\n                                                                    content:\n                                                                      _vm\n                                                                        .$options\n                                                                        .icons\n                                                                        .lock\n                                                                  }\n                                                                })\n                                                              ]\n                                                            },\n                                                            proxy: true\n                                                          }\n                                                        ],\n                                                        null,\n                                                        true\n                                                      ),\n                                                      model: {\n                                                        value: _vm.password,\n                                                        callback: function(\n                                                          $$v\n                                                        ) {\n                                                          _vm.password = $$v\n                                                        },\n                                                        expression: \"password\"\n                                                      }\n                                                    })\n                                                  ]\n                                                }\n                                              }\n                                            ],\n                                            null,\n                                            true\n                                          )\n                                        }),\n                                        _vm._v(\" \"),\n                                        _c(\n                                          \"CButton\",\n                                          {\n                                            attrs: {\n                                              color: \"primary\",\n                                              type: \"submit\",\n                                              disabled: invalid\n                                            }\n                                          },\n                                          [\n                                            _vm._v(\n                                              \"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\" +\n                                                _vm._s(\n                                                  _vm.$t(\"core.sign.in.send\")\n                                                ) +\n                                                \"\\n\\t\\t\\t\\t\\t\\t\\t\\t\"\n                                            )\n                                          ]\n                                        )\n                                      ],\n                                      1\n                                    )\n                                  ]\n                                }\n                              }\n                            ])\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import mod from \"-!../../node_modules/babel-loader/lib/index.js??ref--3!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SignIn.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/babel-loader/lib/index.js??ref--3!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SignIn.vue?vue&type=script&lang=js&\"","<template>\n\t<div class='c-app flex-row align-items-center'>\n\t\t<CContainer>\n\t\t\t<CRow class='justify-content-center'>\n\t\t\t\t<CCol md='8'>\n\t\t\t\t\t<div class='py-5 text-center'>\n\t\t\t\t\t\t<img :alt='$t(\"core.title\")' class='mx-auto logo' src='/img/logo-blue.svg'>\n\t\t\t\t\t</div>\n\t\t\t\t\t<CCard class='p-4'>\n\t\t\t\t\t\t<CCardBody>\n\t\t\t\t\t\t\t<ValidationObserver v-slot='{ invalid }'>\n\t\t\t\t\t\t\t\t<CForm @submit.prevent='handleSubmit'>\n\t\t\t\t\t\t\t\t\t<h1 class='text-center'>\n\t\t\t\t\t\t\t\t\t\t{{ $t('core.sign.in.title') }}\n\t\t\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t\t\t<ValidationProvider\n\t\t\t\t\t\t\t\t\t\tv-slot='{ valid, touched, errors }'\n\t\t\t\t\t\t\t\t\t\trules='required'\n\t\t\t\t\t\t\t\t\t\t:custom-messages='{required: \"core.sign.in.messages.username\"}'\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<CInput\n\t\t\t\t\t\t\t\t\t\t\tv-model='username'\n\t\t\t\t\t\t\t\t\t\t\t:label='$t(\"core.sign.in.username\")'\n\t\t\t\t\t\t\t\t\t\t\t:placeholder='$t(\"core.sign.in.username\")'\n\t\t\t\t\t\t\t\t\t\t\tautocomplete='username'\n\t\t\t\t\t\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<template #prepend-content>\n\t\t\t\t\t\t\t\t\t\t\t\t<CIcon :content='$options.icons.user' />\n\t\t\t\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t\t\t\t</CInput>\n\t\t\t\t\t\t\t\t\t</ValidationProvider>\n\t\t\t\t\t\t\t\t\t<ValidationProvider\n\t\t\t\t\t\t\t\t\t\tv-slot='{ valid, touched, errors }'\n\t\t\t\t\t\t\t\t\t\trules='required'\n\t\t\t\t\t\t\t\t\t\t:custom-messages='{required: \"core.sign.in.messages.password\"}'\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<CInput\n\t\t\t\t\t\t\t\t\t\t\tv-model='password'\n\t\t\t\t\t\t\t\t\t\t\t:label='$t(\"core.sign.in.password\")'\n\t\t\t\t\t\t\t\t\t\t\t:placeholder='$t(\"core.sign.in.password\")'\n\t\t\t\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\t\t\t\tautocomplete='password'\n\t\t\t\t\t\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<template #prepend-content>\n\t\t\t\t\t\t\t\t\t\t\t\t<CIcon :content='$options.icons.lock' />\n\t\t\t\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t\t\t\t</CInput>\n\t\t\t\t\t\t\t\t\t</ValidationProvider>\n\t\t\t\t\t\t\t\t\t<CButton color='primary' type='submit' :disabled='invalid'>\n\t\t\t\t\t\t\t\t\t\t{{ $t('core.sign.in.send') }}\n\t\t\t\t\t\t\t\t\t</CButton>\n\t\t\t\t\t\t\t\t</CForm>\n\t\t\t\t\t\t\t</ValidationObserver>\n\t\t\t\t\t\t</CCardBody>\n\t\t\t\t\t</CCard>\n\t\t\t\t</CCol>\n\t\t\t</CRow>\n\t\t</CContainer>\n\t</div>\n</template>\n\n<script>\nimport {CContainer, CCard, CCardBody, CCol, CForm, CIcon, CInput, CRow} from '@coreui/vue/src';\nimport {cilUser, cilLockLocked} from '@coreui/icons';\nimport {required} from 'vee-validate/dist/rules';\nimport {extend, ValidationObserver, ValidationProvider} from 'vee-validate';\n\nexport default {\n\tname: 'SignIn',\n\tcomponents: {\n\t\tCContainer,\n\t\tCCard,\n\t\tCCardBody,\n\t\tCCol,\n\t\tCForm,\n\t\tCIcon,\n\t\tCInput,\n\t\tCRow,\n\t\tValidationObserver,\n\t\tValidationProvider,\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tusername: '',\n\t\t\tpassword: '',\n\t\t\tsubmitted: false,\n\t\t};\n\t},\n\tcreated() {\n\t\textend('required', required);\n\t},\n\tmethods: {\n\t\thandleSubmit() {\n\t\t\tPromise.all([\n\t\t\t\tthis.$store.dispatch('user/signIn', {username: this.username, password: this.password}),\n\t\t\t\tthis.$store.dispatch('features/fetch'),\n\t\t\t])\n\t\t\t\t.then(() => {\n\t\t\t\t\tthis.$router.push('/');\n\t\t\t\t\tthis.$toast.success(\n\t\t\t\t\t\tthis.$t('core.sign.in.messages.success').toString()\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tthis.$toast.error(\n\t\t\t\t\t\tthis.$t('core.sign.in.messages.incorrectUsernameOrPassword')\n\t\t\t\t\t\t\t.toString()\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\tthis.submitted = true;\n\t\t}\n\t},\n\ticons: {\n\t\tuser: cilUser,\n\t\tlock: cilLockLocked,\n\t},\n\tmetaInfo: {\n\t\ttitle: 'core.sign.in.title',\n\t},\n};\n</script>\n\n<style scoped>\n.logo {\n\tmin-width: 320px;\n}\n</style>\n","import { render, staticRenderFns } from \"./SignIn.vue?vue&type=template&id=7b84bbc3&scoped=true&\"\nimport script from \"./SignIn.vue?vue&type=script&lang=js&\"\nexport * from \"./SignIn.vue?vue&type=script&lang=js&\"\nimport style0 from \"./SignIn.vue?vue&type=style&index=0&id=7b84bbc3&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"7b84bbc3\",\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('7b84bbc3')) {\n      api.createRecord('7b84bbc3', component.options)\n    } else {\n      api.reload('7b84bbc3', component.options)\n    }\n    module.hot.accept(\"./SignIn.vue?vue&type=template&id=7b84bbc3&scoped=true&\", function () {\n      api.rerender('7b84bbc3', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/components/SignIn.vue\"\nexport default component.exports","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"CCard\",\n    { attrs: { \"body-wrapper\": \"\" } },\n    [\n      _c(\n        \"CListGroup\",\n        [\n          _c(\"CListGroupItem\", { attrs: { to: \"/iqrfnet/send-raw/\" } }, [\n            _c(\"header\", { staticClass: \"list-group-item-heading\" }, [\n              _vm._v(\n                \"\\n\\t\\t\\t\\t\" +\n                  _vm._s(_vm.$t(\"iqrfnet.sendPacket.title\")) +\n                  \"\\n\\t\\t\\t\"\n              )\n            ]),\n            _vm._v(\" \"),\n            _c(\"p\", { staticClass: \"list-group-item-text\" }, [\n              _vm._v(\n                \"\\n\\t\\t\\t\\t\" +\n                  _vm._s(_vm.$t(\"iqrfnet.sendPacket.description\")) +\n                  \"\\n\\t\\t\\t\"\n              )\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\"CListGroupItem\", { attrs: { to: \"/iqrfnet/send-json/\" } }, [\n            _c(\"header\", { staticClass: \"list-group-item-heading\" }, [\n              _vm._v(\n                \"\\n\\t\\t\\t\\t\" +\n                  _vm._s(_vm.$t(\"iqrfnet.sendJson.title\")) +\n                  \"\\n\\t\\t\\t\"\n              )\n            ]),\n            _vm._v(\" \"),\n            _c(\"p\", { staticClass: \"list-group-item-text\" }, [\n              _vm._v(\n                \"\\n\\t\\t\\t\\t\" +\n                  _vm._s(_vm.$t(\"iqrfnet.sendJson.description\")) +\n                  \"\\n\\t\\t\\t\"\n              )\n            ])\n          ]),\n          _vm._v(\" \"),\n          _vm.$store.getters[\"features/isEnabled\"](\"trUpload\")\n            ? _c(\"CListGroupItem\", { attrs: { to: \"/iqrfnet/tr-upload/\" } }, [\n                _c(\"header\", { staticClass: \"list-group-item-heading\" }, [\n                  _vm._v(\n                    \"\\n\\t\\t\\t\\t\" +\n                      _vm._s(_vm.$t(\"iqrfnet.trUpload.title\")) +\n                      \"\\n\\t\\t\\t\"\n                  )\n                ]),\n                _vm._v(\" \"),\n                _c(\"p\", { staticClass: \"list-group-item-text\" }, [\n                  _vm._v(\n                    \"\\n\\t\\t\\t\\t\" +\n                      _vm._s(_vm.$t(\"iqrfnet.trUpload.description\")) +\n                      \"\\n\\t\\t\\t\"\n                  )\n                ])\n              ])\n            : _vm._e(),\n          _vm._v(\" \"),\n          _c(\"CListGroupItem\", { attrs: { to: \"/iqrfnet/tr-config/0\" } }, [\n            _c(\"header\", { staticClass: \"list-group-item-heading\" }, [\n              _vm._v(\n                \"\\n\\t\\t\\t\\t\" +\n                  _vm._s(_vm.$t(\"iqrfnet.trConfiguration.title\")) +\n                  \"\\n\\t\\t\\t\"\n              )\n            ]),\n            _vm._v(\" \"),\n            _c(\"p\", { staticClass: \"list-group-item-text\" }, [\n              _vm._v(\n                \"\\n\\t\\t\\t\\t\" +\n                  _vm._s(_vm.$t(\"iqrfnet.trConfiguration.description\")) +\n                  \"\\n\\t\\t\\t\"\n              )\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\"CListGroupItem\", { attrs: { to: \"/iqrfnet/network/\" } }, [\n            _c(\"header\", { staticClass: \"list-group-item-heading\" }, [\n              _vm._v(\n                \"\\n\\t\\t\\t\\t\" +\n                  _vm._s(_vm.$t(\"iqrfnet.networkManager.title\")) +\n                  \"\\n\\t\\t\\t\"\n              )\n            ]),\n            _vm._v(\" \"),\n            _c(\"p\", { staticClass: \"list-group-item-text\" }, [\n              _vm._v(\n                \"\\n\\t\\t\\t\\t\" +\n                  _vm._s(_vm.$t(\"iqrfnet.networkManager.description\")) +\n                  \"\\n\\t\\t\\t\"\n              )\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\"CListGroupItem\", { attrs: { to: \"/iqrfnet/standard/\" } }, [\n            _c(\"header\", { staticClass: \"list-group-item-heading\" }, [\n              _vm._v(\n                \"\\n\\t\\t\\t\\t\" +\n                  _vm._s(_vm.$t(\"iqrfnet.standard.title\")) +\n                  \"\\n\\t\\t\\t\"\n              )\n            ]),\n            _vm._v(\" \"),\n            _c(\"p\", { staticClass: \"list-group-item-text\" }, [\n              _vm._v(\n                \"\\n\\t\\t\\t\\t\" +\n                  _vm._s(_vm.$t(\"iqrfnet.standard.description\")) +\n                  \"\\n\\t\\t\\t\"\n              )\n            ])\n          ])\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import Vue from 'vue';\nimport { CCard, CListGroup, CListGroupItem } from '@coreui/vue/src';\nexport default Vue.extend({\n    name: 'IqrfNetDisambiguation',\n    components: {\n        CCard: CCard,\n        CListGroup: CListGroup,\n        CListGroupItem: CListGroupItem\n    },\n    metaInfo: {\n        title: 'iqrfnet.title',\n    },\n});\n","import mod from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./IqrfNetDisambiguation.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./IqrfNetDisambiguation.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./IqrfNetDisambiguation.vue?vue&type=template&id=2fa1e694&\"\nimport script from \"./IqrfNetDisambiguation.vue?vue&type=script&lang=ts&\"\nexport * from \"./IqrfNetDisambiguation.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('2fa1e694')) {\n      api.createRecord('2fa1e694', component.options)\n    } else {\n      api.reload('2fa1e694', component.options)\n    }\n    module.hot.accept(\"./IqrfNetDisambiguation.vue?vue&type=template&id=2fa1e694&\", function () {\n      api.rerender('2fa1e694', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/pages/IqrfNet/IqrfNetDisambiguation.vue\"\nexport default component.exports","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _vm.response !== undefined\n    ? _c(\n        \"div\",\n        [\n          _c(\n            \"CCard\",\n            [\n              _c(\"CCardHeader\", [\n                _vm._v(_vm._s(_vm.$t(\"iqrfnet.enumeration.deviceInfo\")))\n              ]),\n              _vm._v(\" \"),\n              _c(\"CCardBody\", [\n                _c(\"table\", { staticClass: \"table table-striped\" }, [\n                  _c(\"tbody\", [\n                    _c(\"tr\", [\n                      _c(\"th\", [\n                        _vm._v(_vm._s(_vm.$t(\"iqrfnet.enumeration.deviceAddr\")))\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"td\", [_vm._v(_vm._s(_vm.response.deviceAddr))])\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"tr\", [\n                      _c(\"th\", [\n                        _vm._v(_vm._s(_vm.$t(\"iqrfnet.enumeration.hwpid\")))\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"td\", [_vm._v(_vm._s(_vm.peripheralData.hwpId))])\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"tr\", [\n                      _c(\"th\", [\n                        _vm._v(\n                          _vm._s(_vm.$t(\"iqrfnet.enumeration.manufacturer\"))\n                        )\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"td\", [_vm._v(_vm._s(_vm.response.manufacturer))])\n                    ]),\n                    _vm._v(\" \"),\n                    _vm.product !== undefined\n                      ? _c(\"tr\", [\n                          _c(\"th\", [\n                            _vm._v(\n                              _vm._s(_vm.$t(\"iqrfnet.enumeration.product\"))\n                            )\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"td\", [\n                            _c(\"a\", { attrs: { href: _vm.product.homePage } }, [\n                              _vm._v(_vm._s(_vm.product.name))\n                            ])\n                          ])\n                        ])\n                      : _vm._e(),\n                    _vm._v(\" \"),\n                    _vm.product !== undefined\n                      ? _c(\"tr\", [\n                          _c(\"th\", [\n                            _vm._v(\n                              _vm._s(_vm.$t(\"iqrfnet.enumeration.picture\"))\n                            )\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"td\", [\n                            _c(\"img\", {\n                              staticClass: \"productPicture\",\n                              attrs: {\n                                alt: _vm.response.product,\n                                src: _vm.product.picture\n                              }\n                            })\n                          ])\n                        ])\n                      : _c(\"tr\", [\n                          _c(\"th\", [\n                            _vm._v(\n                              _vm._s(_vm.$t(\"iqrfnet.enumeration.product\"))\n                            )\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"td\", [_vm._v(_vm._s(_vm.response.product))])\n                        ])\n                  ])\n                ])\n              ])\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"CCard\",\n            [\n              _c(\"CCardHeader\", [\n                _vm._v(_vm._s(_vm.$t(\"iqrfnet.enumeration.trInfo\")))\n              ]),\n              _vm._v(\" \"),\n              _c(\n                \"CCardBody\",\n                [\n                  _c(\"table\", { staticClass: \"table table-striped\" }, [\n                    _c(\"tbody\", [\n                      _c(\"tr\", [\n                        _c(\"th\", [\n                          _vm._v(_vm._s(_vm.$t(\"iqrfnet.enumeration.trType\")))\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"td\", [_vm._v(_vm._s(_vm.osData.trMcuType.trType))])\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"tr\", [\n                        _c(\"th\", [\n                          _vm._v(_vm._s(_vm.$t(\"iqrfnet.enumeration.mid\")))\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"td\", [_vm._v(_vm._s(_vm.osData.mid))])\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"tr\", [\n                        _c(\"th\", [\n                          _vm._v(\n                            _vm._s(_vm.$t(\"iqrfnet.enumeration.osVersion\"))\n                          )\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"td\", [\n                          _vm._v(\n                            _vm._s(_vm.osData.osVersion) +\n                              \" (\" +\n                              _vm._s(_vm.osData.osBuild) +\n                              \")\"\n                          )\n                        ])\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"tr\", [\n                        _c(\"th\", [\n                          _vm._v(\n                            _vm._s(_vm.$t(\"iqrfnet.enumeration.dpaVersion\"))\n                          )\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"td\", [_vm._v(_vm._s(_vm.peripheralData.dpaVer))])\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"tr\", [\n                        _c(\"th\", [\n                          _vm._v(_vm._s(_vm.$t(\"iqrfnet.enumeration.rfMode\")))\n                        ]),\n                        _vm._v(\" \"),\n                        _vm.peripheralData.flags.rfModeStd\n                          ? _c(\n                              \"td\",\n                              [\n                                _c(\"CIcon\", {\n                                  staticClass: \"rfModeIcon\",\n                                  attrs: {\n                                    alt: \"STD\",\n                                    src: \"/img/std-black.svg\"\n                                  }\n                                }),\n                                _vm._v(\" \"),\n                                _c(\"strong\", [\n                                  _vm._v(\n                                    _vm._s(\n                                      _vm.$t(\"iqrfnet.enumeration.rfModes.std\")\n                                    )\n                                  )\n                                ])\n                              ],\n                              1\n                            )\n                          : _vm.peripheralData.flags.rfModeLp\n                          ? _c(\n                              \"td\",\n                              [\n                                _c(\"CIcon\", {\n                                  staticClass: \"rfModeIcon\",\n                                  attrs: { alt: \"LP\", src: \"/img/lp-black.svg\" }\n                                }),\n                                _vm._v(\" \"),\n                                _c(\"strong\", [\n                                  _vm._v(\n                                    _vm._s(\n                                      _vm.$t(\"iqrfnet.enumeration.rfModes.lp\")\n                                    )\n                                  )\n                                ])\n                              ],\n                              1\n                            )\n                          : _vm._e()\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"tr\", [\n                        _c(\"th\", [\n                          _vm._v(_vm._s(_vm.$t(\"iqrfnet.enumeration.rssi\")))\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"td\", [_vm._v(_vm._s(_vm.osData.rssi))])\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"tr\", [\n                        _c(\"th\", [\n                          _vm._v(\n                            _vm._s(_vm.$t(\"iqrfnet.enumeration.supplyVoltage\"))\n                          )\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"td\", [_vm._v(_vm._s(_vm.osData.supplyVoltage))])\n                      ])\n                    ])\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\n                    \"CButton\",\n                    { attrs: { color: \"primary\", to: \"/iqrfnet/network/\" } },\n                    [\n                      _vm._v(\n                        \"\\n\\t\\t\\t\\t\" +\n                          _vm._s(_vm.$t(\"iqrfnet.enumeration.back\")) +\n                          \"\\n\\t\\t\\t\"\n                      )\n                    ]\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      )\n    : _c(\"div\")\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import axios from 'axios';\nvar ProductService = /** @class */ (function () {\n    function ProductService() {\n    }\n    /**\n     * Retrieves the product by its HWPID\n     * @param hwpid Product HWPID\n     */\n    ProductService.prototype.get = function (hwpid) {\n        return axios.get('https://repository.iqrfalliance.org/api/products/' + hwpid);\n    };\n    return ProductService;\n}());\nexport default new ProductService();\n","import i18n from '../i18n';\nimport store from '../store';\nimport Vue from 'vue';\nexport function timeout(message, length) {\n    return setTimeout(function () {\n        store.commit('spinner/HIDE');\n        Vue.$toast.error(i18n.t(message).toString());\n    }, length);\n}\n","import Vue from 'vue';\nimport { CButton, CCard, CCardBody, CCardHeader, CIcon } from '@coreui/vue/src';\nimport IqrfNetService from '../../services/IqrfNetService';\nimport ProductService from '../../services/IqrfRepository/ProductService';\nimport { timeout } from '../../helpers/timeout';\nexport default Vue.extend({\n    name: 'DeviceEnumeration',\n    components: {\n        CButton: CButton,\n        CCard: CCard,\n        CCardBody: CCardBody,\n        CCardHeader: CCardHeader,\n        CIcon: CIcon,\n    },\n    props: {\n        address: {\n            type: Number,\n            required: false,\n            default: 0,\n        },\n    },\n    data: function () {\n        return {\n            response: undefined,\n            osData: undefined,\n            peripheralData: undefined,\n            product: undefined,\n        };\n    },\n    created: function () {\n        var _this = this;\n        if (this.$store.getters.isSocketConnected) {\n            this.$store.commit('spinner/SHOW');\n            IqrfNetService.enumerateDevice(this.address);\n        }\n        this.unsubscribe = this.$store.subscribe(function (mutation) {\n            if (mutation.type === 'SOCKET_ONOPEN') {\n                _this.$store.commit('spinner/SHOW');\n                IqrfNetService.enumerateDevice(_this.address);\n                return;\n            }\n            if (mutation.type === 'SOCKET_ONSEND' &&\n                mutation.payload.mType !== 'iqmeshNetwork_EnumerateDevice') {\n                _this.timeout = timeout('iqrfnet.enumeration.messages.failure', 30000);\n            }\n            if (mutation.type !== 'SOCKET_ONMESSAGE' ||\n                mutation.payload.mType !== 'iqmeshNetwork_EnumerateDevice') {\n                return;\n            }\n            clearTimeout(_this.timeout);\n            _this.$store.commit('spinner/HIDE');\n            var response = mutation.payload;\n            if (response.data.status !== 0) {\n                _this.$router.push('/iqrfnet/network/');\n                _this.$toast.error(_this.$t('iqrfnet.enumeration.messages.failure').toString());\n                return;\n            }\n            var data = response.data.rsp;\n            if (data) {\n                _this.response = data;\n                _this.peripheralData = data.peripheralEnumeration;\n                _this.osData = data.osRead;\n                ProductService.get(_this.peripheralData.hwpId)\n                    .then(function (response) {\n                    _this.product = response.data;\n                })\n                    .catch(function (error) {\n                    if (error.response !== undefined && error.response.status === 404) {\n                        return;\n                    }\n                    _this.$toast.error(_this.$t('iqrfnet.enumeration.messages.repositoryUnavailable')\n                        .toString());\n                });\n            }\n        });\n    },\n    beforeDestroy: function () {\n        this.unsubscribe();\n    },\n    metaInfo: {\n        title: 'iqrfnet.enumeration.title',\n    },\n});\n","import mod from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DeviceEnumeration.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DeviceEnumeration.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./DeviceEnumeration.vue?vue&type=template&id=7b8817a0&scoped=true&\"\nimport script from \"./DeviceEnumeration.vue?vue&type=script&lang=ts&\"\nexport * from \"./DeviceEnumeration.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./DeviceEnumeration.vue?vue&type=style&index=0&id=7b8817a0&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"7b8817a0\",\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('7b8817a0')) {\n      api.createRecord('7b8817a0', component.options)\n    } else {\n      api.reload('7b8817a0', component.options)\n    }\n    module.hot.accept(\"./DeviceEnumeration.vue?vue&type=template&id=7b8817a0&scoped=true&\", function () {\n      api.rerender('7b8817a0', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/pages/IqrfNet/DeviceEnumeration.vue\"\nexport default component.exports","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"CRow\",\n    [\n      _c(\n        \"CCol\",\n        { attrs: { lg: \"6\" } },\n        [\n          _c(\n            \"CCard\",\n            [\n              _c(\n                \"CTabs\",\n                { attrs: { variant: \"tabs\", \"active-tab\": _vm.activeTab } },\n                [\n                  _c(\n                    \"CTab\",\n                    { attrs: { title: \"IQMESH\" } },\n                    [\n                      _c(\"BondingManager\", {\n                        on: { \"update-devices\": _vm.updateDevices }\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"DiscoveryManager\", {\n                        on: { \"update-devices\": _vm.updateDevices }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"CTab\",\n                    { attrs: { title: \"AutoNetwork\" } },\n                    [\n                      _c(\"AutoNetwork\", {\n                        on: { \"update-devices\": _vm.updateDevices }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"CCol\",\n        { attrs: { lg: \"6\" } },\n        [_c(\"DevicesInfo\", { ref: \"devs\" })],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"CCard\",\n    { staticClass: \"border-top-0 border-left-0 border-right-0\" },\n    [\n      _c(\n        \"CCardBody\",\n        [\n          _c(\"ValidationObserver\", {\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(ref) {\n                  var invalid = ref.invalid\n                  return [\n                    _c(\n                      \"CForm\",\n                      [\n                        _c(\"CSelect\", {\n                          attrs: {\n                            value: _vm.bondMethod,\n                            label: _vm.$t(\n                              \"iqrfnet.networkManager.bonding.form.bondMethod\"\n                            ),\n                            options: [\n                              {\n                                value: \"local\",\n                                label: _vm.$t(\n                                  \"iqrfnet.networkManager.bonding.form.bondMethodLocal\"\n                                )\n                              },\n                              {\n                                value: \"smartConnect\",\n                                label: _vm.$t(\n                                  \"iqrfnet.networkManager.bonding.form.bondMethodSmart\"\n                                )\n                              }\n                            ]\n                          },\n                          on: {\n                            \"update:value\": function($event) {\n                              _vm.bondMethod = $event\n                            }\n                          }\n                        }),\n                        _vm._v(\" \"),\n                        _vm.bondMethod !== \"autoNetwork\"\n                          ? _c(\"ValidationProvider\", {\n                              attrs: {\n                                rules: \"integer|required|between:1,239\",\n                                \"custom-messages\": {\n                                  required:\n                                    \"iqrfnet.networkManager.messages.bonding.address\",\n                                  integer:\n                                    \"iqrfnet.networkManager.messages.invalid.integer\",\n                                  between:\n                                    \"iqrfnet.networkManager.messages.bonding.address\"\n                                }\n                              },\n                              scopedSlots: _vm._u(\n                                [\n                                  {\n                                    key: \"default\",\n                                    fn: function(ref) {\n                                      var errors = ref.errors\n                                      var touched = ref.touched\n                                      var valid = ref.valid\n                                      return [\n                                        _c(\"CInput\", {\n                                          attrs: {\n                                            type: \"number\",\n                                            min: \"1\",\n                                            max: \"239\",\n                                            label: _vm.$t(\n                                              \"iqrfnet.networkManager.bonding.form.address\"\n                                            ),\n                                            \"is-valid\": touched ? valid : null,\n                                            \"invalid-feedback\": _vm.$t(\n                                              errors[0]\n                                            ),\n                                            disabled: _vm.autoAddress\n                                          },\n                                          model: {\n                                            value: _vm.address,\n                                            callback: function($$v) {\n                                              _vm.address = _vm._n($$v)\n                                            },\n                                            expression: \"address\"\n                                          }\n                                        })\n                                      ]\n                                    }\n                                  }\n                                ],\n                                null,\n                                true\n                              )\n                            })\n                          : _vm._e(),\n                        _vm._v(\" \"),\n                        _c(\"CInputCheckbox\", {\n                          attrs: {\n                            checked: _vm.autoAddress,\n                            label: _vm.$t(\n                              \"iqrfnet.networkManager.bonding.form.autoAddress\"\n                            )\n                          },\n                          on: {\n                            \"update:checked\": function($event) {\n                              _vm.autoAddress = $event\n                            }\n                          }\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"ValidationProvider\", {\n                          attrs: {\n                            rules: \"integer|required|between:0,255\",\n                            \"custom-messages\": {\n                              integer:\n                                \"iqrfnet.networkManager.messages.invalid.integer\",\n                              required:\n                                \"iqrfnet.networkManager.messages.bonding.bondingRetries\",\n                              between:\n                                \"iqrfnet.networkManager.messages.bonding.bondingRetries\"\n                            }\n                          },\n                          scopedSlots: _vm._u(\n                            [\n                              {\n                                key: \"default\",\n                                fn: function(ref) {\n                                  var errors = ref.errors\n                                  var touched = ref.touched\n                                  var valid = ref.valid\n                                  return [\n                                    _c(\"CInput\", {\n                                      attrs: {\n                                        type: \"number\",\n                                        min: \"0\",\n                                        max: \"255\",\n                                        label: _vm.$t(\n                                          \"iqrfnet.networkManager.bonding.form.bondingRetries\"\n                                        ),\n                                        \"is-valid\": touched ? valid : null,\n                                        \"invalid-feedback\": _vm.$t(errors[0])\n                                      },\n                                      model: {\n                                        value: _vm.bondingRetries,\n                                        callback: function($$v) {\n                                          _vm.bondingRetries = _vm._n($$v)\n                                        },\n                                        expression: \"bondingRetries\"\n                                      }\n                                    })\n                                  ]\n                                }\n                              }\n                            ],\n                            null,\n                            true\n                          )\n                        }),\n                        _vm._v(\" \"),\n                        _vm.bondMethod === \"smartConnect\"\n                          ? _c(\"ValidationProvider\", {\n                              attrs: {\n                                rules: \"required|scCode\",\n                                \"custom-messages\": {\n                                  required:\n                                    \"iqrfnet.networkManager.messages.missing.bonding.scCode\",\n                                  scCode:\n                                    \"iqrfnet.networkManager.messages.invalid.bonding.scCode\"\n                                }\n                              },\n                              scopedSlots: _vm._u(\n                                [\n                                  {\n                                    key: \"default\",\n                                    fn: function(ref) {\n                                      var errors = ref.errors\n                                      var valid = ref.valid\n                                      return [\n                                        _c(\"CInput\", {\n                                          attrs: {\n                                            label: _vm.$t(\n                                              \"iqrfnet.networkManager.bonding.form.smartConnect\"\n                                            ),\n                                            \"is-valid\": valid,\n                                            \"invalid-feedback\": _vm.$t(\n                                              errors[0]\n                                            )\n                                          },\n                                          model: {\n                                            value: _vm.scCode,\n                                            callback: function($$v) {\n                                              _vm.scCode = $$v\n                                            },\n                                            expression: \"scCode\"\n                                          }\n                                        })\n                                      ]\n                                    }\n                                  }\n                                ],\n                                null,\n                                true\n                              )\n                            })\n                          : _vm._e(),\n                        _vm._v(\" \"),\n                        _c(\"CInputCheckbox\", {\n                          attrs: {\n                            checked: _vm.unbondCoordinatorOnly,\n                            label: _vm.$t(\n                              \"iqrfnet.networkManager.bonding.form.unbondCoordinatorOnly\"\n                            )\n                          },\n                          on: {\n                            \"update:checked\": function($event) {\n                              _vm.unbondCoordinatorOnly = $event\n                            }\n                          }\n                        }),\n                        _vm._v(\" \"),\n                        _c(\n                          \"CButton\",\n                          {\n                            attrs: {\n                              color: \"primary\",\n                              type: \"button\",\n                              disabled: invalid\n                            },\n                            on: {\n                              click: function($event) {\n                                $event.preventDefault()\n                                return _vm.processSubmitBond($event)\n                              }\n                            }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n\\t\\t\\t\\t\\t\" +\n                                _vm._s(_vm.$t(\"forms.bond\")) +\n                                \"\\n\\t\\t\\t\\t\"\n                            )\n                          ]\n                        ),\n                        _vm._v(\" \"),\n                        _c(\n                          \"CButton\",\n                          {\n                            attrs: {\n                              color: \"secondary\",\n                              type: \"button\",\n                              disabled: invalid || _vm.autoAddress\n                            },\n                            on: {\n                              click: function($event) {\n                                _vm.modalUnbond = true\n                              }\n                            }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n\\t\\t\\t\\t\\t\" +\n                                _vm._s(_vm.$t(\"forms.unbond\")) +\n                                \"\\n\\t\\t\\t\\t\"\n                            )\n                          ]\n                        ),\n                        _vm._v(\" \"),\n                        _c(\n                          \"CButton\",\n                          {\n                            attrs: { color: \"secondary\", type: \"button\" },\n                            on: {\n                              click: function($event) {\n                                _vm.modalClear = true\n                              }\n                            }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n\\t\\t\\t\\t\\t\" +\n                                _vm._s(_vm.$t(\"forms.clearBonds\")) +\n                                \"\\n\\t\\t\\t\\t\"\n                            )\n                          ]\n                        ),\n                        _vm._v(\" \"),\n                        _c(\n                          \"CModal\",\n                          {\n                            attrs: {\n                              title: _vm.$t(\"forms.clearBonds\"),\n                              color: \"danger\",\n                              show: _vm.modalClear\n                            },\n                            on: {\n                              \"update:show\": function($event) {\n                                _vm.modalClear = $event\n                              }\n                            },\n                            scopedSlots: _vm._u(\n                              [\n                                {\n                                  key: \"footer\",\n                                  fn: function() {\n                                    return [\n                                      _c(\n                                        \"CButton\",\n                                        {\n                                          attrs: { color: \"danger\" },\n                                          on: {\n                                            click: function($event) {\n                                              _vm.modalClear = false\n                                            }\n                                          }\n                                        },\n                                        [\n                                          _vm._v(\n                                            \"\\n\\t\\t\\t\\t\\t\\t\\t\" +\n                                              _vm._s(_vm.$t(\"forms.no\")) +\n                                              \"\\n\\t\\t\\t\\t\\t\\t\"\n                                          )\n                                        ]\n                                      ),\n                                      _vm._v(\" \"),\n                                      _c(\n                                        \"CButton\",\n                                        {\n                                          attrs: { color: \"success\" },\n                                          on: {\n                                            click: _vm.processSubmitClearAll\n                                          }\n                                        },\n                                        [\n                                          _vm._v(\n                                            \"\\n\\t\\t\\t\\t\\t\\t\\t\" +\n                                              _vm._s(_vm.$t(\"forms.yes\")) +\n                                              \"\\n\\t\\t\\t\\t\\t\\t\"\n                                          )\n                                        ]\n                                      )\n                                    ]\n                                  },\n                                  proxy: true\n                                }\n                              ],\n                              null,\n                              true\n                            )\n                          },\n                          [\n                            _vm._v(\n                              \"\\n\\t\\t\\t\\t\\t\" +\n                                _vm._s(\n                                  _vm.$t(\n                                    \"iqrfnet.networkManager.messages.submit.removeBond.confirmClear\"\n                                  )\n                                ) +\n                                \"\\n\\t\\t\\t\\t\\t\"\n                            )\n                          ]\n                        ),\n                        _vm._v(\" \"),\n                        _c(\n                          \"CModal\",\n                          {\n                            attrs: {\n                              title: _vm.$t(\"forms.unbond\"),\n                              color: \"danger\",\n                              show: _vm.modalUnbond\n                            },\n                            on: {\n                              \"update:show\": function($event) {\n                                _vm.modalUnbond = $event\n                              }\n                            },\n                            scopedSlots: _vm._u(\n                              [\n                                {\n                                  key: \"footer\",\n                                  fn: function() {\n                                    return [\n                                      _c(\n                                        \"CButton\",\n                                        {\n                                          attrs: { color: \"danger\" },\n                                          on: {\n                                            click: function($event) {\n                                              _vm.modalUnbond = false\n                                            }\n                                          }\n                                        },\n                                        [\n                                          _vm._v(\n                                            \"\\n\\t\\t\\t\\t\\t\\t\\t\" +\n                                              _vm._s(_vm.$t(\"forms.no\")) +\n                                              \"\\n\\t\\t\\t\\t\\t\\t\"\n                                          )\n                                        ]\n                                      ),\n                                      _vm._v(\" \"),\n                                      _c(\n                                        \"CButton\",\n                                        {\n                                          attrs: { color: \"success\" },\n                                          on: { click: _vm.processSubmitUnbond }\n                                        },\n                                        [\n                                          _vm._v(\n                                            \"\\n\\t\\t\\t\\t\\t\\t\\t\" +\n                                              _vm._s(_vm.$t(\"forms.yes\")) +\n                                              \"\\n\\t\\t\\t\\t\\t\\t\"\n                                          )\n                                        ]\n                                      )\n                                    ]\n                                  },\n                                  proxy: true\n                                }\n                              ],\n                              null,\n                              true\n                            )\n                          },\n                          [\n                            _vm._v(\n                              \"\\n\\t\\t\\t\\t\\t\" +\n                                _vm._s(\n                                  _vm.$t(\n                                    \"iqrfnet.networkManager.messages.submit.removeBond.confirmUnbond\"\n                                  )\n                                ) +\n                                \"\\n\\t\\t\\t\\t\\t\"\n                            )\n                          ]\n                        )\n                      ],\n                      1\n                    )\n                  ]\n                }\n              }\n            ])\n          })\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import mod from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BondingManager.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BondingManager.vue?vue&type=script&lang=ts&\"","import Vue from 'vue';\nimport { CButton, CCard, CCardBody, CForm, CInput, CInputCheckbox, CModal, CSelect } from '@coreui/vue/src';\nimport { extend, ValidationObserver, ValidationProvider } from 'vee-validate';\nimport { timeout } from '../../helpers/timeout';\nimport { between, integer, required } from 'vee-validate/dist/rules';\nimport IqrfNetService from '../../services/IqrfNetService';\nexport default Vue.extend({\n    name: 'BondingManager',\n    components: {\n        CButton: CButton,\n        CCard: CCard,\n        CCardBody: CCardBody,\n        CForm: CForm,\n        CInput: CInput,\n        CInputCheckbox: CInputCheckbox,\n        CModal: CModal,\n        CSelect: CSelect,\n        ValidationObserver: ValidationObserver,\n        ValidationProvider: ValidationProvider\n    },\n    data: function () {\n        return {\n            address: 1,\n            autoAddress: false,\n            bondMethod: 'local',\n            bondingRetries: 1,\n            modalClear: false,\n            modalUnbond: false,\n            unbondCoordinatorOnly: false,\n            scCode: '',\n            timeout: null,\n        };\n    },\n    created: function () {\n        var _this = this;\n        extend('between', between);\n        extend('integer', integer);\n        extend('required', required);\n        extend('scCode', function (code) {\n            var regex = RegExp('^[a-zA-Z0-9]{34}$');\n            return regex.test(code);\n        });\n        this.unsubscribe = this.$store.subscribe(function (mutation) {\n            if (mutation.type === 'SOCKET_ONSEND' &&\n                mutation.payload.mType === ('iqmeshNetwork_BondNodeLocal' ||\n                    'iqmeshNetwork_SmartConnect' || 'iqrfEmbedCoordinator_ClearAllBonds' ||\n                    'iqrfEmbedCoordinator_RemoveBond')) {\n                _this.timeout = timeout('iqrfnet.networkManager.messages.submit.timeout', 30000);\n            }\n            if (mutation.type === 'SOCKET_ONMESSAGE') {\n                if (mutation.payload.mType === 'iqmeshNetwork_BondNodeLocal' ||\n                    mutation.payload.mType === 'iqmeshNetwork_SmartConnect') {\n                    clearTimeout(_this.timeout);\n                    _this.$store.commit('spinner/HIDE');\n                    switch (mutation.payload.data.status) {\n                        case -1:\n                            _this.$toast.error(_this.$t('iqrfnet.networkManager.messages.submit.timeout')\n                                .toString());\n                            break;\n                        case 0:\n                            _this.$toast.success(_this.$t('iqrfnet.networkManager.messages.submit.bonding.success')\n                                .toString());\n                            _this.$emit('update-devices');\n                            break;\n                        default:\n                            _this.$toast.error(_this.$t('iqrfnet.networkManager.messages.submit.bonding.error_fail')\n                                .toString());\n                            break;\n                    }\n                }\n                else if (mutation.payload.mType === 'iqrfEmbedCoordinator_ClearAllBonds' ||\n                    mutation.payload.mType === 'iqmeshNetwork_RemoveBond') {\n                    clearTimeout(_this.timeout);\n                    _this.$store.commit('spinner/HIDE');\n                    switch (mutation.payload.data.status) {\n                        case -1:\n                            _this.$toast.error(_this.$t('iqrfnet.networkManager.messages.submit.timeout')\n                                .toString());\n                            break;\n                        case 0:\n                            if (mutation.payload.data.rsp.nodesNr === 0) {\n                                _this.$toast.success(_this.$t('iqrfnet.networkManager.messages.submit.removeBond.clearSuccess')\n                                    .toString());\n                            }\n                            else {\n                                _this.$toast.success(_this.$t('iqrfnet.networkManager.messages.submit.removeBond.success')\n                                    .toString());\n                            }\n                            _this.$emit('update-devices');\n                            break;\n                        case 1002:\n                            _this.$toast.error(_this.$t('iqrfnet.networkManager.messages.submit.removeBond.remove_error')\n                                .toString());\n                            break;\n                        default:\n                            _this.$toast.error(_this.$t('iqrfnet.networkManager.messages.submit.removeBond.error_fail')\n                                .toString());\n                            break;\n                    }\n                }\n                else if (mutation.payload.mType === 'messageError') {\n                    clearTimeout(_this.timeout);\n                    _this.$store.commit('spinner/HIDE');\n                    _this.$toast.error(_this.$t('iqrfnet.networkManager.messages.submit.invalidMessage')\n                        .toString());\n                }\n            }\n        });\n    },\n    beforeDestroy: function () {\n        this.unsubscribe();\n    },\n    methods: {\n        processSubmitBond: function () {\n            this.$store.commit('spinner/SHOW');\n            if (this.bondMethod === 'local') {\n                if (this.autoAddress) {\n                    IqrfNetService.bondLocal(0);\n                }\n                else {\n                    IqrfNetService.bondLocal(this.address);\n                }\n            }\n            else if (this.bondMethod === 'smartConnect') {\n                if (this.autoAddress) {\n                    IqrfNetService.bondSmartConnect(0, this.scCode, this.bondingRetries);\n                }\n                else {\n                    IqrfNetService.bondSmartConnect(this.address, this.scCode, this.bondingRetries);\n                }\n            }\n        },\n        processSubmitUnbond: function () {\n            this.modalUnbond = false;\n            this.$store.commit('spinner/SHOW');\n            IqrfNetService.removeBond(this.address, this.unbondCoordinatorOnly);\n        },\n        processSubmitClearAll: function () {\n            this.modalClear = false;\n            this.$store.commit('spinner/SHOW');\n            IqrfNetService.clearAllBonds(this.unbondCoordinatorOnly);\n        }\n    }\n});\n","import { render, staticRenderFns } from \"./BondingManager.vue?vue&type=template&id=293b26bd&\"\nimport script from \"./BondingManager.vue?vue&type=script&lang=ts&\"\nexport * from \"./BondingManager.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('293b26bd')) {\n      api.createRecord('293b26bd', component.options)\n    } else {\n      api.reload('293b26bd', component.options)\n    }\n    module.hot.accept(\"./BondingManager.vue?vue&type=template&id=293b26bd&\", function () {\n      api.rerender('293b26bd', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/components/IqrfNet/BondingManager.vue\"\nexport default component.exports","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"CCard\",\n    [\n      _c(\"CCardHeader\", [\n        _vm._v(_vm._s(_vm.$t(\"iqrfnet.networkManager.devicesInfo.title\")))\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"CCardBody\",\n        [\n          _c(\"table\", { staticClass: \"table text-center\" }, [\n            _c(\"tbody\", [\n              _c(\"tr\", [\n                _c(\n                  \"td\",\n                  [\n                    _c(\"CIcon\", {\n                      staticClass: \"text-info\",\n                      attrs: { content: _vm.$options.icons.coordinator }\n                    }),\n                    _vm._v(\n                      \"\\n\\t\\t\\t\\t\\t\\t\" +\n                        _vm._s(\n                          _vm.$t(\n                            \"iqrfnet.networkManager.devicesInfo.icons.coordinator\"\n                          )\n                        ) +\n                        \"\\n\\t\\t\\t\\t\\t\"\n                    )\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"td\",\n                  [\n                    _c(\"CIcon\", {\n                      staticClass: \"text-danger\",\n                      attrs: { content: _vm.$options.icons.unbonded }\n                    }),\n                    _vm._v(\n                      \"\\n\\t\\t\\t\\t\\t\\t\" +\n                        _vm._s(\n                          _vm.$t(\n                            \"iqrfnet.networkManager.devicesInfo.icons.unbonded\"\n                          )\n                        ) +\n                        \"\\n\\t\\t\\t\\t\\t\"\n                    )\n                  ],\n                  1\n                )\n              ]),\n              _vm._v(\" \"),\n              _c(\"tr\", [\n                _c(\n                  \"td\",\n                  [\n                    _c(\"CIcon\", {\n                      staticClass: \"text-info\",\n                      attrs: { content: _vm.$options.icons.bonded }\n                    }),\n                    _vm._v(\n                      \"\\n\\t\\t\\t\\t\\t\\t\" +\n                        _vm._s(\n                          _vm.$t(\n                            \"iqrfnet.networkManager.devicesInfo.icons.bonded\"\n                          )\n                        ) +\n                        \"\\n\\t\\t\\t\\t\\t\"\n                    )\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"td\",\n                  [\n                    _c(\"CIcon\", {\n                      staticClass: \"text-info\",\n                      attrs: { content: _vm.$options.icons.discovered }\n                    }),\n                    _vm._v(\n                      \"\\n\\t\\t\\t\\t\\t\\t\" +\n                        _vm._s(\n                          _vm.$t(\n                            \"iqrfnet.networkManager.devicesInfo.icons.discovered\"\n                          )\n                        ) +\n                        \"\\n\\t\\t\\t\\t\\t\"\n                    )\n                  ],\n                  1\n                )\n              ]),\n              _vm._v(\" \"),\n              _c(\"tr\", [\n                _c(\n                  \"td\",\n                  [\n                    _c(\"CIcon\", {\n                      staticClass: \"text-success\",\n                      attrs: { content: _vm.$options.icons.bonded }\n                    }),\n                    _vm._v(\n                      \"\\n\\t\\t\\t\\t\\t\\t\" +\n                        _vm._s(\n                          _vm.$t(\n                            \"iqrfnet.networkManager.devicesInfo.icons.bondedOnline\"\n                          )\n                        ) +\n                        \"\\n\\t\\t\\t\\t\\t\"\n                    )\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"td\",\n                  [\n                    _c(\"CIcon\", {\n                      staticClass: \"text-success\",\n                      attrs: { content: _vm.$options.icons.discovered }\n                    }),\n                    _vm._v(\n                      \"\\n\\t\\t\\t\\t\\t\\t\" +\n                        _vm._s(\n                          _vm.$t(\n                            \"iqrfnet.networkManager.devicesInfo.icons.discoveredOnline\"\n                          )\n                        ) +\n                        \"\\n\\t\\t\\t\\t\\t\"\n                    )\n                  ],\n                  1\n                )\n              ])\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\n            \"CButton\",\n            {\n              staticClass: \"w-100\",\n              attrs: { color: \"primary\" },\n              on: { click: _vm.frcPing }\n            },\n            [_vm._v(\"\\n\\t\\t\\t\" + _vm._s(_vm.$t(\"forms.pingNodes\")) + \"\\n\\t\\t\")]\n          ),\n          _vm._v(\" \"),\n          !_vm.failed\n            ? _c(\"div\", { staticClass: \"table-responsive\" }, [\n                _c(\n                  \"table\",\n                  { staticClass: \"table table-striped device-info\" },\n                  [\n                    _c(\n                      \"tbody\",\n                      [\n                        _c(\n                          \"tr\",\n                          [\n                            _c(\"th\"),\n                            _vm._v(\" \"),\n                            _vm._l(Array(10).keys(), function(num) {\n                              return _c(\"th\", { key: num }, [\n                                _vm._v(\n                                  \"\\n\\t\\t\\t\\t\\t\\t\\t\" +\n                                    _vm._s(num) +\n                                    \"\\n\\t\\t\\t\\t\\t\\t\"\n                                )\n                              ])\n                            })\n                          ],\n                          2\n                        ),\n                        _vm._v(\" \"),\n                        _vm._l(Array(24).keys(), function(row) {\n                          return _c(\n                            \"tr\",\n                            { key: row },\n                            [\n                              _c(\"th\", [_vm._v(_vm._s(row) + \"0\")]),\n                              _vm._v(\" \"),\n                              _vm._l(Array(10).keys(), function(col) {\n                                return _c(\n                                  \"td\",\n                                  { key: col },\n                                  [\n                                    _c(\"DeviceIcon\", {\n                                      attrs: {\n                                        device:\n                                          _vm.devices[_vm.getAddress(row, col)]\n                                      }\n                                    })\n                                  ],\n                                  1\n                                )\n                              })\n                            ],\n                            2\n                          )\n                        })\n                      ],\n                      2\n                    )\n                  ]\n                )\n              ])\n            : _c(\"CAlert\", { attrs: { color: \"danger\" } }, [\n                _vm._v(\n                  \"\\n\\t\\t\\t\" +\n                    _vm._s(\n                      _vm.$t(\n                        \"iqrfnet.networkManager.devicesInfo.messages.empty\"\n                      )\n                    ) +\n                    \"\\n\\t\\t\"\n                )\n              ])\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { cilHome, cilX, cilCheckAlt, cilSignalCellular4 } from '@coreui/icons';\n/**\n * Class representing a device used in Network Manager.\n */\nvar Device = /** @class */ (function () {\n    /**\n     * Constructor\n     * @param address Device address\n     * @param coordinator Specifies if the device is a coordinator device\n     * @param bonded Specifies if the device is bonded\n     * @param discovered Specifies if the device is discovered\n     * @param online Specifies if the device is online\n     */\n    function Device(address, coordinator, bonded, discovered, online) {\n        if (bonded === void 0) { bonded = false; }\n        if (discovered === void 0) { discovered = false; }\n        if (online === void 0) { online = false; }\n        this.address = address;\n        this.coordinator = coordinator;\n        this.bonded = bonded;\n        this.discovered = discovered;\n        this.online = online;\n    }\n    /**\n     * Returns the icon\n     * @returns Icon to render\n     */\n    Device.prototype.getIcon = function () {\n        if (this.address === 0) {\n            return cilHome;\n        }\n        if (this.bonded) {\n            if (this.discovered) {\n                return cilSignalCellular4;\n            }\n            return cilCheckAlt;\n        }\n        return cilX;\n    };\n    /**\n     * Returns the icon color\n     * @returns Icon color\n     */\n    Device.prototype.getIconColor = function () {\n        if (this.address === 0) {\n            return 'text-info';\n        }\n        if (this.bonded) {\n            if (this.online) {\n                return 'text-success';\n            }\n            return 'text-info';\n        }\n        return 'text-danger';\n    };\n    Device.prototype.hasLink = function () {\n        return this.coordinator || this.bonded;\n    };\n    return Device;\n}());\nexport default Device;\n","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _vm.device.hasLink()\n    ? _c(\n        \"router-link\",\n        { attrs: { to: \"/iqrfnet/enumeration/\" + _vm.device.address } },\n        [\n          _c(\"CIcon\", {\n            class: _vm.device.getIconColor(),\n            attrs: { content: _vm.device.getIcon() }\n          })\n        ],\n        1\n      )\n    : _c(\"CIcon\", {\n        class: _vm.device.getIconColor(),\n        attrs: { content: _vm.device.getIcon() }\n      })\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import Vue from 'vue';\nimport Device from '../../helpers/Device';\nimport { CIcon } from '@coreui/vue/src';\nexport default Vue.extend({\n    name: 'DeviceIcon',\n    components: {\n        CIcon: CIcon\n    },\n    props: {\n        device: {\n            type: Device,\n            required: true,\n        },\n    },\n});\n","import mod from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DeviceIcon.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DeviceIcon.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./DeviceIcon.vue?vue&type=template&id=579a753e&\"\nimport script from \"./DeviceIcon.vue?vue&type=script&lang=ts&\"\nexport * from \"./DeviceIcon.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('579a753e')) {\n      api.createRecord('579a753e', component.options)\n    } else {\n      api.reload('579a753e', component.options)\n    }\n    module.hot.accept(\"./DeviceIcon.vue?vue&type=template&id=579a753e&\", function () {\n      api.rerender('579a753e', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/components/IqrfNet/DeviceIcon.vue\"\nexport default component.exports","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DevicesInfo.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DevicesInfo.vue?vue&type=script&lang=js&\"","<template>\n\t<CCard>\n\t\t<CCardHeader>{{ $t('iqrfnet.networkManager.devicesInfo.title') }}</CCardHeader>\n\t\t<CCardBody>\n\t\t\t<table class='table text-center'>\n\t\t\t\t<tbody>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<CIcon class='text-info' :content='$options.icons.coordinator' />\n\t\t\t\t\t\t\t{{ $t('iqrfnet.networkManager.devicesInfo.icons.coordinator') }}\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<CIcon class='text-danger' :content='$options.icons.unbonded' />\n\t\t\t\t\t\t\t{{ $t('iqrfnet.networkManager.devicesInfo.icons.unbonded') }}\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<CIcon class='text-info' :content='$options.icons.bonded' />\n\t\t\t\t\t\t\t{{ $t('iqrfnet.networkManager.devicesInfo.icons.bonded') }}\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<CIcon class='text-info' :content='$options.icons.discovered' />\n\t\t\t\t\t\t\t{{ $t('iqrfnet.networkManager.devicesInfo.icons.discovered') }}\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<CIcon class='text-success' :content='$options.icons.bonded' />\n\t\t\t\t\t\t\t{{ $t('iqrfnet.networkManager.devicesInfo.icons.bondedOnline') }}\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<CIcon class='text-success' :content='$options.icons.discovered' />\n\t\t\t\t\t\t\t{{ $t('iqrfnet.networkManager.devicesInfo.icons.discoveredOnline') }}\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t\t<CButton color='primary' class='w-100' @click='frcPing'>\n\t\t\t\t{{ $t('forms.pingNodes') }}\n\t\t\t</CButton>\n\t\t\t<div v-if='!failed' class='table-responsive'>\n\t\t\t\t<table class='table table-striped device-info'>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th />\n\t\t\t\t\t\t\t<th v-for='num of Array(10).keys()' :key='num'>\n\t\t\t\t\t\t\t\t{{ num }}\n\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr v-for='row of Array(24).keys()' :key='row'>\n\t\t\t\t\t\t\t<th>{{ row }}0</th>\n\t\t\t\t\t\t\t<td v-for='col of Array(10).keys()' :key='col'>\n\t\t\t\t\t\t\t\t<DeviceIcon :device='devices[getAddress(row, col)]' />\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t\t<CAlert v-else color='danger'>\n\t\t\t\t{{ $t('iqrfnet.networkManager.devicesInfo.messages.empty') }}\n\t\t\t</CAlert>\n\t\t</CCardBody>\n\t</CCard>\n</template>\n\n<script>\nimport {cilHome, cilX, cilCheckAlt, cilSignalCellular4} from '@coreui/icons';\nimport {CAlert, CButton, CCard, CCardBody, CCardHeader, CIcon} from '@coreui/vue/src';\nimport Device from '../../helpers/Device';\nimport DeviceIcon from './DeviceIcon';\nimport IqrfNetService from '../../services/IqrfNetService';\n\nexport default {\n\tname: 'DevicesInfo',\n\tcomponents: {\n\t\tCAlert,\n\t\tCButton,\n\t\tCCard,\n\t\tCCardBody,\n\t\tCCardHeader,\n\t\tCIcon,\n\t\tDeviceIcon,\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tallowedMTypes: [\n\t\t\t\t'iqrfEmbedCoordinator_BondedDevices',\n\t\t\t\t'iqrfEmbedCoordinator_DiscoveredDevices',\n\t\t\t\t'iqrfEmbedFrc_Send',\n\t\t\t],\n\t\t\tdevices: [],\n\t\t\tmanual: false,\n\t\t\ttimeout: null,\n\t\t\tfailed: false,\n\t\t};\n\t},\n\tcreated() {\n\t\tthis.$store.commit('spinner/SHOW');\n\t\tsetTimeout(() => {\n\t\t\tif (this.$store.getters.isSocketConnected) {\n\t\t\t\tthis.getBondedDevices();\n\t\t\t}\n\t\t}, 1000);\n\t\tthis.generateDevices();\n\t\tthis.unsubscribe = this.$store.subscribe(mutation => {\n\t\t\tif (mutation.type === 'SOCKET_ONOPEN') {\n\t\t\t\tthis.getBondedDevices();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (mutation.type === 'SOCKET_ONSEND') {\n\t\t\t\tif (!this.allowedMTypes.includes(mutation.payload.mType)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (mutation.payload.mType === 'iqrfEmbedCoordinator_BondedDevices') {\n\t\t\t\t\tthis.timeout = setTimeout(() => {\n\t\t\t\t\t\tthis.$toast.error(\n\t\t\t\t\t\t\tthis.$t('iqrfnet.networkManager.devicesInfo.messages.bonded.failure').toString()\n\t\t\t\t\t\t);\n\t\t\t\t\t\tthis.failed = true;\n\t\t\t\t\t}, 60000);\n\t\t\t\t} else if (mutation.payload.mType === 'iqrfEmbedCoordinator_DiscoveredDevices') {\n\t\t\t\t\tthis.timeout = setTimeout(() => {\n\t\t\t\t\t\tthis.$toast.error(\n\t\t\t\t\t\t\tthis.$t('iqrfnet.networkManager.devicesInfo.messages.discovered.failure').toString()\n\t\t\t\t\t\t);\n\t\t\t\t\t\tthis.failed = true;\n\t\t\t\t\t}, 60000);\n\t\t\t\t} else if (mutation.payload.mType === 'iqrfEmbedFrc_Send') {\n\t\t\t\t\tthis.timeout = setTimeout(() => {\n\t\t\t\t\t\tthis.$toast.error(\n\t\t\t\t\t\t\tthis.$t('iqrfnet.networkManager.devicesInfo.messages.ping.failure').toString()\n\t\t\t\t\t\t);\n\t\t\t\t\t\tthis.failed = true;\n\t\t\t\t\t}, 60000);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (mutation.type === 'SOCKET_ONMESSAGE') {\n\t\t\t\tif (!this.allowedMTypes.includes(mutation.payload.mType)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (this.failed) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.$store.dispatch('spinner/hide');\n\t\t\t\tclearTimeout(this.timeout);\n\t\t\t\tif (mutation.payload.mType === 'iqrfEmbedCoordinator_BondedDevices') {\n\t\t\t\t\tthis.parseBondedDevices(mutation.payload);\n\t\t\t\t} else if (mutation.payload.mType === 'iqrfEmbedCoordinator_DiscoveredDevices') {\n\t\t\t\t\tthis.parseDiscoveredDevices(mutation.payload);\n\t\t\t\t} else if (mutation.payload.mType === 'iqrfEmbedFrc_Send') {\n\t\t\t\t\tthis.parseFrcPing(mutation.payload);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t},\n\tbeforeDestroy() {\n\t\tclearTimeout(this.timeout);\n\t\tthis.unsubscribe();\n\t},\n\tmethods: {\n\t\tfrcPing() {\n\t\t\tthis.$store.dispatch('spinner/show', {timeout: 30000});\n\t\t\tIqrfNetService.ping();\n\t\t},\n\t\tgenerateDevices() {\n\t\t\tthis.devices.push(new Device(0, true));\n\t\t\tfor (let i = 1; i <= 239; i++) {\n\t\t\t\tthis.devices.push(new Device(i, false));\n\t\t\t}\n\t\t},\n\t\tgetAddress(row, col) {\n\t\t\treturn row * 10 + col;\n\t\t},\n\t\tgetBondedDevices() {\n\t\t\tthis.$store.dispatch('spinner/show', {timeout: 30000});\n\t\t\tIqrfNetService.getBonded();\n\t\t},\n\t\tgetDiscoveredDevices() {\n\t\t\tthis.$store.dispatch('spinner/show', {timeout: 30000});\n\t\t\tIqrfNetService.getDiscovered();\n\t\t},\n\t\tparseBondedDevices(response) {\n\t\t\tswitch (response.data.status) {\n\t\t\t\tcase 0: {\n\t\t\t\t\tthis.devices.forEach(item => {\n\t\t\t\t\t\titem.bonded = false;\n\t\t\t\t\t});\n\t\t\t\t\tconst bonded = response.data.rsp.result.bondedDevices;\n\t\t\t\t\tbonded.forEach(item => {\n\t\t\t\t\t\tthis.devices[item].bonded = true;\n\t\t\t\t\t});\n\t\t\t\t\tthis.failed = false;\n\t\t\t\t\tthis.getDiscoveredDevices();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthis.$toast.error(\n\t\t\t\t\t\tthis.$t('iqrfnet.networkManager.devicesInfo.messages.bonded.failure')\n\t\t\t\t\t\t\t.toString()\n\t\t\t\t\t);\n\t\t\t\t\tthis.failed = true;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t},\n\t\tparseDiscoveredDevices(response) {\n\t\t\tswitch (response.data.status) {\n\t\t\t\tcase 0: {\n\t\t\t\t\tthis.devices.forEach(item => {\n\t\t\t\t\t\titem.discovered = false;\n\t\t\t\t\t});\n\t\t\t\t\tconst discovered = response.data.rsp.result.discoveredDevices;\n\t\t\t\t\tdiscovered.forEach(item => {\n\t\t\t\t\t\tthis.devices[item].discovered = true;\n\t\t\t\t\t});\n\t\t\t\t\tthis.failed = false;\n\t\t\t\t\tthis.frcPing();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthis.$toast.error(\n\t\t\t\t\t\tthis.$t('iqrfnet.networkManager.devicesInfo.messages.discovered.failure')\n\t\t\t\t\t\t\t.toString()\n\t\t\t\t\t);\n\t\t\t\t\tthis.failed = true;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t},\n\t\tparseFrcPing(response) {\n\t\t\tswitch(response.data.status) {\n\t\t\t\tcase 0: {\n\t\t\t\t\tconst online = response.data.rsp.result.frcData.slice(0, 30);\n\t\t\t\t\tlet k = 0;\n\t\t\t\t\tonline.forEach(item => {\n\t\t\t\t\t\tfor (let i = 0; i < 8; ++i) {\n\t\t\t\t\t\t\tconst device = (item & (1 << i)) >> i;\n\t\t\t\t\t\t\tthis.devices[k++].online = (device === 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tif (this.manual) {\n\t\t\t\t\t\tthis.manual = false;\n\t\t\t\t\t\tthis.$forceUpdate();\n\t\t\t\t\t}\n\t\t\t\t\tthis.failed = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthis.$toast.error(\n\t\t\t\t\t\tthis.$t('iqrfnet.networkManager.devicesInfo.messages.ping.failure')\n\t\t\t\t\t\t\t.toString()\n\t\t\t\t\t);\n\t\t\t\t\tthis.failed = true;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t},\n\t\tsubmitFrcPing() {\n\t\t\tthis.manual = true;\n\t\t\tthis.frcPing();\n\t\t},\n\t},\n\ticons: {\n\t\tcoordinator: cilHome,\n\t\tbonded: cilCheckAlt,\n\t\tdiscovered: cilSignalCellular4,\n\t\tunbonded: cilX\n\t}\n};\n</script>\n\n<style scoped lang='scss'>\n@media (min-width: 440px) and (max-width: 1400px) {\n\t.device-info {\n\t\ttd, th {\n\t\t\tpadding: 0.5rem;\n\t\t}\n\t}\n}\n\n@media (max-width: 440px) {\n\t.device-info {\n\t\ttd, th {\n\t\t\tpadding: 0.25rem;\n\t\t}\n\t}\n}\n</style>\n","import { render, staticRenderFns } from \"./DevicesInfo.vue?vue&type=template&id=22f61cec&scoped=true&\"\nimport script from \"./DevicesInfo.vue?vue&type=script&lang=js&\"\nexport * from \"./DevicesInfo.vue?vue&type=script&lang=js&\"\nimport style0 from \"./DevicesInfo.vue?vue&type=style&index=0&id=22f61cec&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"22f61cec\",\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('22f61cec')) {\n      api.createRecord('22f61cec', component.options)\n    } else {\n      api.reload('22f61cec', component.options)\n    }\n    module.hot.accept(\"./DevicesInfo.vue?vue&type=template&id=22f61cec&scoped=true&\", function () {\n      api.rerender('22f61cec', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/components/IqrfNet/DevicesInfo.vue\"\nexport default component.exports","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"CCard\",\n    { staticClass: \"border-0\" },\n    [\n      _c(\"CCardHeader\", [\n        _vm._v(\n          \"\\n\\t\\t\" +\n            _vm._s(_vm.$t(\"iqrfnet.networkManager.discovery.title\")) +\n            \"\\n\\t\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"CCardBody\",\n        [\n          _c(\"ValidationObserver\", {\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(ref) {\n                  var invalid = ref.invalid\n                  return [\n                    _c(\n                      \"CForm\",\n                      {\n                        on: {\n                          submit: function($event) {\n                            $event.preventDefault()\n                            return _vm.processSubmit($event)\n                          }\n                        }\n                      },\n                      [\n                        _c(\"ValidationProvider\", {\n                          attrs: {\n                            rules: \"integer|required|between:0,7\",\n                            \"custom-messages\": {\n                              integer:\n                                \"iqrfnet.networkManager.messages.invalid.integer\",\n                              required:\n                                \"iqrfnet.networkManager.messages.discovery.txPower\",\n                              between:\n                                \"iqrfnet.networkManager.messages.discovery.txPower\"\n                            }\n                          },\n                          scopedSlots: _vm._u(\n                            [\n                              {\n                                key: \"default\",\n                                fn: function(ref) {\n                                  var errors = ref.errors\n                                  var touched = ref.touched\n                                  var valid = ref.valid\n                                  return [\n                                    _c(\"CInput\", {\n                                      attrs: {\n                                        type: \"number\",\n                                        min: \"0\",\n                                        max: \"7\",\n                                        label: _vm.$t(\n                                          \"iqrfnet.networkManager.discovery.form.txPower\"\n                                        ),\n                                        \"is-valid\": touched ? valid : null,\n                                        \"invalid-feedback\": _vm.$t(errors[0])\n                                      },\n                                      model: {\n                                        value: _vm.txPower,\n                                        callback: function($$v) {\n                                          _vm.txPower = _vm._n($$v)\n                                        },\n                                        expression: \"txPower\"\n                                      }\n                                    })\n                                  ]\n                                }\n                              }\n                            ],\n                            null,\n                            true\n                          )\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"ValidationProvider\", {\n                          attrs: {\n                            rules: \"integer|required|between:0,239\",\n                            \"custom-messages\": {\n                              integer:\n                                \"iqrfnet.networkManager.messages.invalid.integer\",\n                              required:\n                                \"iqrfnet.networkManager.messages.discovery.maxAddr\",\n                              between:\n                                \"iqrfnet.networkManager.messages.discovery.maxAddr\"\n                            }\n                          },\n                          scopedSlots: _vm._u(\n                            [\n                              {\n                                key: \"default\",\n                                fn: function(ref) {\n                                  var errors = ref.errors\n                                  var touched = ref.touched\n                                  var valid = ref.valid\n                                  return [\n                                    _c(\"CInput\", {\n                                      attrs: {\n                                        type: \"number\",\n                                        min: \"0\",\n                                        max: \"239\",\n                                        label: _vm.$t(\n                                          \"iqrfnet.networkManager.discovery.form.maxAddr\"\n                                        ),\n                                        \"is-valid\": touched ? valid : null,\n                                        \"invalid-feedback\": _vm.$t(errors[0])\n                                      },\n                                      model: {\n                                        value: _vm.maxAddr,\n                                        callback: function($$v) {\n                                          _vm.maxAddr = _vm._n($$v)\n                                        },\n                                        expression: \"maxAddr\"\n                                      }\n                                    })\n                                  ]\n                                }\n                              }\n                            ],\n                            null,\n                            true\n                          )\n                        }),\n                        _vm._v(\" \"),\n                        _c(\n                          \"CButton\",\n                          {\n                            attrs: {\n                              color: \"primary\",\n                              type: \"submit\",\n                              disabled: invalid\n                            }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n\\t\\t\\t\\t\\t\" +\n                                _vm._s(_vm.$t(\"forms.discovery\")) +\n                                \"\\n\\t\\t\\t\\t\"\n                            )\n                          ]\n                        )\n                      ],\n                      1\n                    )\n                  ]\n                }\n              }\n            ])\n          })\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import Vue from 'vue';\nimport { CButton, CCard, CCardBody, CCardHeader, CForm, CInput } from '@coreui/vue/src';\nimport { extend, ValidationObserver, ValidationProvider } from 'vee-validate';\nimport { timeout } from '../../helpers/timeout';\nimport { between, integer, required } from 'vee-validate/dist/rules';\nimport IqrfNetService from '../../services/IqrfNetService';\nexport default Vue.extend({\n    name: 'DiscoveryManager',\n    components: {\n        CButton: CButton,\n        CCard: CCard,\n        CCardBody: CCardBody,\n        CCardHeader: CCardHeader,\n        CForm: CForm,\n        CInput: CInput,\n        ValidationObserver: ValidationObserver,\n        ValidationProvider: ValidationProvider\n    },\n    data: function () {\n        return {\n            maxAddr: 239,\n            txPower: 6,\n            responseReceived: false,\n            timeout: null,\n        };\n    },\n    created: function () {\n        var _this = this;\n        extend('between', between);\n        extend('integer', integer);\n        extend('required', required);\n        this.unsubscribe = this.$store.subscribe(function (mutation) {\n            if (mutation.type === 'SOCKET_ONSEND' &&\n                mutation.payload.mType === 'iqrfEmbedCoordinator_Discovery') {\n                _this.timeout = timeout('iqrfnet.networkManager.messages.submit.timeout', 30000);\n            }\n            if (mutation.type === 'SOCKET_ONMESSAGE') {\n                if (mutation.payload.mType === 'iqrfEmbedCoordinator_Discovery') {\n                    clearTimeout(_this.timeout);\n                    _this.$store.commit('spinner/HIDE');\n                    switch (mutation.payload.data.status) {\n                        case -1:\n                            _this.$toast.error(_this.$t('iqrfnet.networkManager.messages.submit.timeout')\n                                .toString());\n                            break;\n                        case 0:\n                            _this.$toast.success(_this.$t('iqrfnet.networkManager.messages.submit.discovery.success')\n                                .toString());\n                            _this.$emit('update-devices');\n                            break;\n                        default:\n                            _this.$toast.success(_this.$t('iqrfnet.networkManager.messages.submit.discovery.error_fail')\n                                .toString());\n                            break;\n                    }\n                }\n            }\n        });\n    },\n    beforeDestroy: function () {\n        this.unsubscribe();\n    },\n    methods: {\n        processSubmit: function () {\n            this.$store.commit('spinner/SHOW');\n            IqrfNetService.discovery(this.txPower, this.maxAddr);\n        },\n    }\n});\n","import mod from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DiscoveryManager.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DiscoveryManager.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./DiscoveryManager.vue?vue&type=template&id=2520b0ec&\"\nimport script from \"./DiscoveryManager.vue?vue&type=script&lang=ts&\"\nexport * from \"./DiscoveryManager.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('2520b0ec')) {\n      api.createRecord('2520b0ec', component.options)\n    } else {\n      api.reload('2520b0ec', component.options)\n    }\n    module.hot.accept(\"./DiscoveryManager.vue?vue&type=template&id=2520b0ec&\", function () {\n      api.rerender('2520b0ec', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/components/IqrfNet/DiscoveryManager.vue\"\nexport default component.exports","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"CCard\",\n    { staticClass: \"border-0\" },\n    [\n      _vm.daemonVersion !== null && _vm.versionValid\n        ? _c(\n            \"CCardBody\",\n            [\n              _c(\"ValidationObserver\", {\n                scopedSlots: _vm._u(\n                  [\n                    {\n                      key: \"default\",\n                      fn: function(ref) {\n                        var invalid = ref.invalid\n                        return [\n                          _c(\n                            \"CForm\",\n                            [\n                              _c(\"ValidationProvider\", {\n                                attrs: {\n                                  rules: \"integer|required|between:0,7\",\n                                  \"custom-messages\": {\n                                    integer:\n                                      \"iqrfnet.networkManager.messages.invalid.integer\",\n                                    required:\n                                      \"iqrfnet.networkManager.messages.discovery.txPower\",\n                                    between:\n                                      \"iqrfnet.networkManager.messages.discovery.txPower\"\n                                  }\n                                },\n                                scopedSlots: _vm._u(\n                                  [\n                                    {\n                                      key: \"default\",\n                                      fn: function(ref) {\n                                        var errors = ref.errors\n                                        var touched = ref.touched\n                                        var valid = ref.valid\n                                        return [\n                                          _c(\"CInput\", {\n                                            attrs: {\n                                              requred: \"true\",\n                                              type: \"number\",\n                                              min: \"0\",\n                                              max: \"7\",\n                                              label: _vm.$t(\n                                                \"iqrfnet.networkManager.autoNetwork.form.discoveryTxPower\"\n                                              ),\n                                              \"is-valid\": touched\n                                                ? valid\n                                                : null,\n                                              \"invalid-feedback\": _vm.$t(\n                                                errors[0]\n                                              )\n                                            },\n                                            model: {\n                                              value:\n                                                _vm.autoNetwork\n                                                  .discoveryTxPower,\n                                              callback: function($$v) {\n                                                _vm.$set(\n                                                  _vm.autoNetwork,\n                                                  \"discoveryTxPower\",\n                                                  _vm._n($$v)\n                                                )\n                                              },\n                                              expression:\n                                                \"autoNetwork.discoveryTxPower\"\n                                            }\n                                          })\n                                        ]\n                                      }\n                                    }\n                                  ],\n                                  null,\n                                  true\n                                )\n                              }),\n                              _vm._v(\" \"),\n                              _c(\"CInputCheckbox\", {\n                                attrs: {\n                                  checked: _vm.autoNetwork.discoveryBeforeStart,\n                                  label: _vm.$t(\n                                    \"iqrfnet.networkManager.autoNetwork.form.discoveryBeforeStart\"\n                                  )\n                                },\n                                on: {\n                                  \"update:checked\": function($event) {\n                                    return _vm.$set(\n                                      _vm.autoNetwork,\n                                      \"discoveryBeforeStart\",\n                                      $event\n                                    )\n                                  }\n                                }\n                              }),\n                              _vm._v(\" \"),\n                              _c(\"CInputCheckbox\", {\n                                attrs: {\n                                  checked:\n                                    _vm.autoNetwork.skipDiscoveryEachWave,\n                                  label: _vm.$t(\n                                    \"iqrfnet.networkManager.autoNetwork.form.skipDiscoveryEachWave\"\n                                  )\n                                },\n                                on: {\n                                  \"update:checked\": function($event) {\n                                    return _vm.$set(\n                                      _vm.autoNetwork,\n                                      \"skipDiscoveryEachWave\",\n                                      $event\n                                    )\n                                  }\n                                }\n                              }),\n                              _c(\"hr\"),\n                              _vm._v(\" \"),\n                              _c(\"ValidationProvider\", {\n                                attrs: {\n                                  rules: \"integer|required|between:0,3\",\n                                  \"custom-messages\": {\n                                    integer:\n                                      \"iqrfnet.networkManager.messages.invalid.integer\",\n                                    required:\n                                      \"iqrfnet.networkManager.messages.autoNetwork.actionRetries\",\n                                    between:\n                                      \"iqrfnet.networkManager.messages.autoNetwork.actionRetries\"\n                                  }\n                                },\n                                scopedSlots: _vm._u(\n                                  [\n                                    {\n                                      key: \"default\",\n                                      fn: function(ref) {\n                                        var errors = ref.errors\n                                        var touched = ref.touched\n                                        var valid = ref.valid\n                                        return [\n                                          _c(\"CInput\", {\n                                            attrs: {\n                                              type: \"number\",\n                                              min: \"0\",\n                                              max: \"3\",\n                                              label: _vm.$t(\n                                                \"iqrfnet.networkManager.autoNetwork.form.actionRetries\"\n                                              ),\n                                              \"is-valid\": touched\n                                                ? valid\n                                                : null,\n                                              \"invalid-feedback\": _vm.$t(\n                                                errors[0]\n                                              )\n                                            },\n                                            model: {\n                                              value:\n                                                _vm.autoNetwork.actionRetries,\n                                              callback: function($$v) {\n                                                _vm.$set(\n                                                  _vm.autoNetwork,\n                                                  \"actionRetries\",\n                                                  _vm._n($$v)\n                                                )\n                                              },\n                                              expression:\n                                                \"autoNetwork.actionRetries\"\n                                            }\n                                          })\n                                        ]\n                                      }\n                                    }\n                                  ],\n                                  null,\n                                  true\n                                )\n                              }),\n                              _c(\"hr\"),\n                              _vm._v(\" \"),\n                              _c(\"h4\", [\n                                _vm._v(\n                                  \"\\n\\t\\t\\t\\t\\t\" +\n                                    _vm._s(\n                                      _vm.$t(\n                                        \"iqrfnet.networkManager.autoNetwork.form.bondingControl\"\n                                      )\n                                    ) +\n                                    \"\\n\\t\\t\\t\\t\"\n                                )\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"CInputCheckbox\", {\n                                attrs: {\n                                  checked: _vm.useOverlappingNetworks,\n                                  label: _vm.$t(\n                                    \"iqrfnet.networkManager.autoNetwork.form.overlappingNetworks\"\n                                  )\n                                },\n                                on: {\n                                  \"update:checked\": function($event) {\n                                    _vm.useOverlappingNetworks = $event\n                                  }\n                                }\n                              }),\n                              _vm._v(\" \"),\n                              _c(\"ValidationProvider\", {\n                                attrs: {\n                                  rules: \"integer|required|between:1,50\",\n                                  \"custom-messages\": {\n                                    integer:\n                                      \"iqrfnet.networkManager.messages.invalid.integer\",\n                                    required:\n                                      \"iqrfnet.networkManager.messages.autoNetwork.networks\",\n                                    between:\n                                      \"iqrfnet.networkManager.messages.autoNetwork.networks\"\n                                  }\n                                },\n                                scopedSlots: _vm._u(\n                                  [\n                                    {\n                                      key: \"default\",\n                                      fn: function(ref) {\n                                        var errors = ref.errors\n                                        var touched = ref.touched\n                                        var valid = ref.valid\n                                        return [\n                                          _c(\"CInput\", {\n                                            attrs: {\n                                              type: \"number\",\n                                              min: \"1\",\n                                              max: \"50\",\n                                              label: _vm.$t(\n                                                \"iqrfnet.networkManager.autoNetwork.form.networks\"\n                                              ),\n                                              \"is-valid\": touched\n                                                ? valid\n                                                : null,\n                                              \"invalid-feedback\": _vm.$t(\n                                                errors[0]\n                                              ),\n                                              disabled: !_vm.useOverlappingNetworks\n                                            },\n                                            model: {\n                                              value:\n                                                _vm.overlappingNetworks\n                                                  .networks,\n                                              callback: function($$v) {\n                                                _vm.$set(\n                                                  _vm.overlappingNetworks,\n                                                  \"networks\",\n                                                  _vm._n($$v)\n                                                )\n                                              },\n                                              expression:\n                                                \"overlappingNetworks.networks\"\n                                            }\n                                          })\n                                        ]\n                                      }\n                                    }\n                                  ],\n                                  null,\n                                  true\n                                )\n                              }),\n                              _vm._v(\" \"),\n                              _c(\"ValidationProvider\", {\n                                attrs: {\n                                  rules: \"integer|required|between:1,50\",\n                                  \"custom-messages\": {\n                                    integer:\n                                      \"iqrfnet.networkManager.messages.invalid.integer\",\n                                    required:\n                                      \"iqrfnet.networkManager.messages.autoNetwork.network\",\n                                    between:\n                                      \"iqrfnet.networkManager.messages.autoNetwork.network\"\n                                  }\n                                },\n                                scopedSlots: _vm._u(\n                                  [\n                                    {\n                                      key: \"default\",\n                                      fn: function(ref) {\n                                        var errors = ref.errors\n                                        var touched = ref.touched\n                                        var valid = ref.valid\n                                        return [\n                                          _c(\"CInput\", {\n                                            attrs: {\n                                              type: \"number\",\n                                              min: \"1\",\n                                              max: \"50\",\n                                              label: _vm.$t(\n                                                \"iqrfnet.networkManager.autoNetwork.form.network\"\n                                              ),\n                                              \"is-valid\": touched\n                                                ? valid\n                                                : null,\n                                              \"invalid-feedback\": _vm.$t(\n                                                errors[0]\n                                              ),\n                                              disabled: !_vm.useOverlappingNetworks\n                                            },\n                                            model: {\n                                              value:\n                                                _vm.overlappingNetworks.network,\n                                              callback: function($$v) {\n                                                _vm.$set(\n                                                  _vm.overlappingNetworks,\n                                                  \"network\",\n                                                  _vm._n($$v)\n                                                )\n                                              },\n                                              expression:\n                                                \"overlappingNetworks.network\"\n                                            }\n                                          })\n                                        ]\n                                      }\n                                    }\n                                  ],\n                                  null,\n                                  true\n                                )\n                              }),\n                              _c(\"hr\"),\n                              _vm._v(\" \"),\n                              _c(\"h4\", [\n                                _vm._v(\n                                  \"\\n\\t\\t\\t\\t\\t\" +\n                                    _vm._s(\n                                      _vm.$t(\n                                        \"iqrfnet.networkManager.autoNetwork.form.hwpidFiltering\"\n                                      )\n                                    ) +\n                                    \"\\n\\t\\t\\t\\t\"\n                                )\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"CInputCheckbox\", {\n                                attrs: {\n                                  checked: _vm.useHwpidFiltering,\n                                  label: _vm.$t(\n                                    \"iqrfnet.networkManager.autoNetwork.form.hwpidEnable\"\n                                  )\n                                },\n                                on: {\n                                  \"update:checked\": function($event) {\n                                    _vm.useHwpidFiltering = $event\n                                  }\n                                }\n                              }),\n                              _vm._v(\" \"),\n                              _c(\"ValidationProvider\", {\n                                attrs: {\n                                  rules: \"hwpidFilter\",\n                                  \"custom-messages\": {\n                                    hwpidFilter:\n                                      \"iqrfnet.networkManager.messages.invalid.autoNetwork.hwpidFilter\"\n                                  }\n                                },\n                                scopedSlots: _vm._u(\n                                  [\n                                    {\n                                      key: \"default\",\n                                      fn: function(ref) {\n                                        var errors = ref.errors\n                                        var touched = ref.touched\n                                        var valid = ref.valid\n                                        return [\n                                          _c(\"CInput\", {\n                                            attrs: {\n                                              label: _vm.$t(\n                                                \"iqrfnet.networkManager.autoNetwork.form.hwpids\"\n                                              ),\n                                              \"is-valid\": touched\n                                                ? valid\n                                                : null,\n                                              \"invalid-feedback\": _vm.$t(\n                                                errors[0]\n                                              ),\n                                              disabled: !_vm.useHwpidFiltering\n                                            },\n                                            model: {\n                                              value: _vm.hwpidFiltering,\n                                              callback: function($$v) {\n                                                _vm.hwpidFiltering = $$v\n                                              },\n                                              expression: \"hwpidFiltering\"\n                                            }\n                                          })\n                                        ]\n                                      }\n                                    }\n                                  ],\n                                  null,\n                                  true\n                                )\n                              }),\n                              _c(\"hr\"),\n                              _vm._v(\" \"),\n                              _c(\"h4\", [\n                                _vm._v(\n                                  \"\\n\\t\\t\\t\\t\\t\" +\n                                    _vm._s(\n                                      _vm.$t(\n                                        \"iqrfnet.networkManager.autoNetwork.form.stopConditions\"\n                                      )\n                                    ) +\n                                    \"\\n\\t\\t\\t\\t\"\n                                )\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\n                                \"div\",\n                                { staticClass: \"form-group\" },\n                                [\n                                  _c(\"CInputCheckbox\", {\n                                    attrs: {\n                                      checked: _vm.useWaves,\n                                      label: _vm.$t(\n                                        \"iqrfnet.networkManager.autoNetwork.form.waves\"\n                                      )\n                                    },\n                                    on: {\n                                      \"update:checked\": function($event) {\n                                        _vm.useWaves = $event\n                                      }\n                                    }\n                                  }),\n                                  _vm._v(\" \"),\n                                  _c(\"ValidationProvider\", {\n                                    attrs: {\n                                      rules: \"integer|required|between:1,127\",\n                                      \"custom-messages\": {\n                                        integer:\n                                          \"iqrfnet.networkManager.messages.invalid.integer\",\n                                        required:\n                                          \"iqrfnet.networkManager.messages.autoNetwork.waves\",\n                                        between:\n                                          \"iqrfnet.networkManager.messages.autoNetwork.waves\"\n                                      }\n                                    },\n                                    scopedSlots: _vm._u(\n                                      [\n                                        {\n                                          key: \"default\",\n                                          fn: function(ref) {\n                                            var errors = ref.errors\n                                            var touched = ref.touched\n                                            var valid = ref.valid\n                                            return [\n                                              _c(\"CInput\", {\n                                                attrs: {\n                                                  type: \"number\",\n                                                  min: \"1\",\n                                                  max: \"127\",\n                                                  \"is-valid\": touched\n                                                    ? valid\n                                                    : null,\n                                                  \"invalid-feedback\": _vm.$t(\n                                                    errors[0]\n                                                  ),\n                                                  disabled: !_vm.useWaves\n                                                },\n                                                model: {\n                                                  value:\n                                                    _vm.stopConditions.waves,\n                                                  callback: function($$v) {\n                                                    _vm.$set(\n                                                      _vm.stopConditions,\n                                                      \"waves\",\n                                                      _vm._n($$v)\n                                                    )\n                                                  },\n                                                  expression:\n                                                    \"stopConditions.waves\"\n                                                }\n                                              })\n                                            ]\n                                          }\n                                        }\n                                      ],\n                                      null,\n                                      true\n                                    )\n                                  })\n                                ],\n                                1\n                              ),\n                              _vm._v(\" \"),\n                              _c(\"ValidationProvider\", {\n                                attrs: {\n                                  rules: \"integer|required|between:1,127\",\n                                  \"custom-messages\": {\n                                    integer:\n                                      \"iqrfnet.networkManager.messages.invalid.integer\",\n                                    required:\n                                      \"iqrfnet.networkManager.messages.autoNetwork.emptyWaves\",\n                                    between:\n                                      \"iqrfnet.networkManager.messages.autoNetwork.emptyWaves\"\n                                  }\n                                },\n                                scopedSlots: _vm._u(\n                                  [\n                                    {\n                                      key: \"default\",\n                                      fn: function(ref) {\n                                        var errors = ref.errors\n                                        var touched = ref.touched\n                                        var valid = ref.valid\n                                        return [\n                                          _c(\"CInput\", {\n                                            attrs: {\n                                              type: \"number\",\n                                              min: \"1\",\n                                              max: \"127\",\n                                              label: _vm.$t(\n                                                \"iqrfnet.networkManager.autoNetwork.form.emptyWaves\"\n                                              ),\n                                              \"is-valid\": touched\n                                                ? valid\n                                                : null,\n                                              \"invalid-feedback\": _vm.$t(\n                                                errors[0]\n                                              )\n                                            },\n                                            model: {\n                                              value:\n                                                _vm.stopConditions.emptyWaves,\n                                              callback: function($$v) {\n                                                _vm.$set(\n                                                  _vm.stopConditions,\n                                                  \"emptyWaves\",\n                                                  _vm._n($$v)\n                                                )\n                                              },\n                                              expression:\n                                                \"stopConditions.emptyWaves\"\n                                            }\n                                          })\n                                        ]\n                                      }\n                                    }\n                                  ],\n                                  null,\n                                  true\n                                )\n                              }),\n                              _vm._v(\" \"),\n                              _c(\n                                \"div\",\n                                { staticClass: \"form-group\" },\n                                [\n                                  _c(\"CInputCheckbox\", {\n                                    attrs: {\n                                      checked: _vm.useNodes,\n                                      label: _vm.$t(\n                                        \"iqrfnet.networkManager.autoNetwork.form.nodes\"\n                                      )\n                                    },\n                                    on: {\n                                      \"update:checked\": function($event) {\n                                        _vm.useNodes = $event\n                                      }\n                                    }\n                                  }),\n                                  _vm._v(\" \"),\n                                  _c(\"CSelect\", {\n                                    attrs: {\n                                      value: _vm.nodeCondition,\n                                      options: [\n                                        { value: \"new\", label: \"New\" },\n                                        { value: \"total\", label: \"Total\" }\n                                      ],\n                                      disabled: !_vm.useNodes\n                                    },\n                                    on: {\n                                      \"update:value\": function($event) {\n                                        _vm.nodeCondition = $event\n                                      }\n                                    }\n                                  }),\n                                  _vm._v(\" \"),\n                                  _vm.nodeCondition === \"total\"\n                                    ? _c(\"ValidationProvider\", {\n                                        attrs: {\n                                          rules:\n                                            \"integer|required|between:1,239\",\n                                          \"custom-messages\": {\n                                            integer:\n                                              \"iqrfnet.networkManager.messages.invalid.integer\",\n                                            required:\n                                              \"iqrfnet.networkManager.messages.autoNetwork.totalNodes\",\n                                            between:\n                                              \"iqrfnet.networkManager.messages.autoNetwork.totalNodes\"\n                                          }\n                                        },\n                                        scopedSlots: _vm._u(\n                                          [\n                                            {\n                                              key: \"default\",\n                                              fn: function(ref) {\n                                                var errors = ref.errors\n                                                var touched = ref.touched\n                                                var valid = ref.valid\n                                                return [\n                                                  _c(\"CInput\", {\n                                                    attrs: {\n                                                      type: \"number\",\n                                                      min: \"1\",\n                                                      max: \"239\",\n                                                      label: _vm.$t(\n                                                        \"iqrfnet.networkManager.autoNetwork.form.numberOfTotalNodes\"\n                                                      ),\n                                                      \"is-valid\": touched\n                                                        ? valid\n                                                        : null,\n                                                      \"invalid-feedback\": _vm.$t(\n                                                        errors[0]\n                                                      ),\n                                                      disabled: !_vm.useNodes\n                                                    },\n                                                    model: {\n                                                      value:\n                                                        _vm.stopConditions\n                                                          .numberOfTotalNodes,\n                                                      callback: function($$v) {\n                                                        _vm.$set(\n                                                          _vm.stopConditions,\n                                                          \"numberOfTotalNodes\",\n                                                          _vm._n($$v)\n                                                        )\n                                                      },\n                                                      expression:\n                                                        \"stopConditions.numberOfTotalNodes\"\n                                                    }\n                                                  })\n                                                ]\n                                              }\n                                            }\n                                          ],\n                                          null,\n                                          true\n                                        )\n                                      })\n                                    : _vm._e(),\n                                  _vm._v(\" \"),\n                                  _vm.nodeCondition === \"new\"\n                                    ? _c(\"ValidationProvider\", {\n                                        attrs: {\n                                          rules:\n                                            \"integer|required|between:1,239\",\n                                          \"custom-messages\": {\n                                            integer:\n                                              \"iqrfnet.networkManager.messages.invalid.integer\",\n                                            required:\n                                              \"iqrfnet.networkManager.messages.autoNetwork.newNodes\",\n                                            between:\n                                              \"iqrfnet.networkManager.messages.autoNetwork.newNodes\"\n                                          }\n                                        },\n                                        scopedSlots: _vm._u(\n                                          [\n                                            {\n                                              key: \"default\",\n                                              fn: function(ref) {\n                                                var errors = ref.errors\n                                                var touched = ref.touched\n                                                var valid = ref.valid\n                                                return [\n                                                  _c(\"CInput\", {\n                                                    attrs: {\n                                                      type: \"number\",\n                                                      min: \"1\",\n                                                      max: \"239\",\n                                                      label: _vm.$t(\n                                                        \"iqrfnet.networkManager.autoNetwork.form.numberOfNewNodes\"\n                                                      ),\n                                                      \"is-valid\": touched\n                                                        ? valid\n                                                        : null,\n                                                      \"invalid-feedback\": _vm.$t(\n                                                        errors[0]\n                                                      ),\n                                                      disabled: !_vm.useNodes\n                                                    },\n                                                    model: {\n                                                      value:\n                                                        _vm.stopConditions\n                                                          .numberOfNewNodes,\n                                                      callback: function($$v) {\n                                                        _vm.$set(\n                                                          _vm.stopConditions,\n                                                          \"numberOfNewNodes\",\n                                                          _vm._n($$v)\n                                                        )\n                                                      },\n                                                      expression:\n                                                        \"stopConditions.numberOfNewNodes\"\n                                                    }\n                                                  })\n                                                ]\n                                              }\n                                            }\n                                          ],\n                                          null,\n                                          true\n                                        )\n                                      })\n                                    : _vm._e()\n                                ],\n                                1\n                              ),\n                              _vm._v(\" \"),\n                              _c(\"CInputCheckbox\", {\n                                attrs: {\n                                  checked:\n                                    _vm.stopConditions.abortOnTooManyNodesFound,\n                                  label: _vm.$t(\n                                    \"iqrfnet.networkManager.autoNetwork.form.abortOnTooManyNodesFound\"\n                                  ),\n                                  disabled: !_vm.useNodes\n                                },\n                                on: {\n                                  \"update:checked\": function($event) {\n                                    return _vm.$set(\n                                      _vm.stopConditions,\n                                      \"abortOnTooManyNodesFound\",\n                                      $event\n                                    )\n                                  }\n                                }\n                              }),\n                              _vm._v(\" \"),\n                              _c(\n                                \"CButton\",\n                                {\n                                  attrs: {\n                                    color: \"primary\",\n                                    type: \"button\",\n                                    disabled: invalid\n                                  },\n                                  on: { click: _vm.processSubmitAutoNetwork }\n                                },\n                                [\n                                  _vm._v(\n                                    \"\\n\\t\\t\\t\\t\\t\" +\n                                      _vm._s(_vm.$t(\"forms.start\")) +\n                                      \"\\n\\t\\t\\t\\t\"\n                                  )\n                                ]\n                              )\n                            ],\n                            1\n                          )\n                        ]\n                      }\n                    }\n                  ],\n                  null,\n                  false,\n                  1390570751\n                )\n              })\n            ],\n            1\n          )\n        : _c(\n            \"CCardBody\",\n            [\n              _c(\"CAlert\", { attrs: { color: \"danger\" } }, [\n                _vm._v(\"\\n\\t\\t\\t\" + _vm._s(_vm.invalidVersionBody)),\n                _c(\"br\"),\n                _vm._v(\" \"),\n                _vm.daemonVersion !== null\n                  ? _c(\"span\", [\n                      _vm._v(\n                        \"\\n\\t\\t\\t\\tCurrent version: \" +\n                          _vm._s(_vm.daemonVersion) +\n                          \"\\n\\t\\t\\t\"\n                      )\n                    ])\n                  : _vm._e()\n              ])\n            ],\n            1\n          )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import store from '../store';\n/**\n * Version service\n */\nvar VersionService = /** @class */ (function () {\n    function VersionService() {\n    }\n    VersionService.prototype.getVersion = function () {\n        return store.dispatch('sendRequest', {\n            'mType': 'mngDaemon_Version',\n            'data': {\n                'returnVerbose': true,\n            },\n        });\n    };\n    return VersionService;\n}());\nexport default new VersionService();\n","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AutoNetwork.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AutoNetwork.vue?vue&type=script&lang=js&\"","<template>\n\t<CCard class='border-0'>\n\t\t<CCardBody v-if='daemonVersion !== null && versionValid'>\n\t\t\t<ValidationObserver v-slot='{ invalid }'>\n\t\t\t\t<CForm>\n\t\t\t\t\t<ValidationProvider\n\t\t\t\t\t\tv-slot='{ errors, touched, valid }'\n\t\t\t\t\t\trules='integer|required|between:0,7'\n\t\t\t\t\t\t:custom-messages='{\n\t\t\t\t\t\t\tinteger: \"iqrfnet.networkManager.messages.invalid.integer\",\n\t\t\t\t\t\t\trequired: \"iqrfnet.networkManager.messages.discovery.txPower\",\n\t\t\t\t\t\t\tbetween: \"iqrfnet.networkManager.messages.discovery.txPower\"\n\t\t\t\t\t\t}'\n\t\t\t\t\t>\n\t\t\t\t\t\t<CInput\n\t\t\t\t\t\t\tv-model.number='autoNetwork.discoveryTxPower'\n\t\t\t\t\t\t\trequred='true'\n\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\tmin='0'\n\t\t\t\t\t\t\tmax='7'\n\t\t\t\t\t\t\t:label='$t(\"iqrfnet.networkManager.autoNetwork.form.discoveryTxPower\")'\n\t\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ValidationProvider>\n\t\t\t\t\t<CInputCheckbox\n\t\t\t\t\t\t:checked.sync='autoNetwork.discoveryBeforeStart'\n\t\t\t\t\t\t:label='$t(\"iqrfnet.networkManager.autoNetwork.form.discoveryBeforeStart\")'\n\t\t\t\t\t/>\n\t\t\t\t\t<CInputCheckbox\n\t\t\t\t\t\t:checked.sync='autoNetwork.skipDiscoveryEachWave'\n\t\t\t\t\t\t:label='$t(\"iqrfnet.networkManager.autoNetwork.form.skipDiscoveryEachWave\")'\n\t\t\t\t\t/><hr>\n\t\t\t\t\t<ValidationProvider\n\t\t\t\t\t\tv-slot='{ errors, touched, valid }'\n\t\t\t\t\t\trules='integer|required|between:0,3'\n\t\t\t\t\t\t:custom-messages='{\n\t\t\t\t\t\t\tinteger: \"iqrfnet.networkManager.messages.invalid.integer\",\n\t\t\t\t\t\t\trequired: \"iqrfnet.networkManager.messages.autoNetwork.actionRetries\",\n\t\t\t\t\t\t\tbetween: \"iqrfnet.networkManager.messages.autoNetwork.actionRetries\"\n\t\t\t\t\t\t}'\n\t\t\t\t\t>\n\t\t\t\t\t\t<CInput\n\t\t\t\t\t\t\tv-model.number='autoNetwork.actionRetries'\n\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\tmin='0'\n\t\t\t\t\t\t\tmax='3'\n\t\t\t\t\t\t\t:label='$t(\"iqrfnet.networkManager.autoNetwork.form.actionRetries\")'\n\t\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ValidationProvider><hr>\n\t\t\t\t\t<h4>\n\t\t\t\t\t\t{{ $t('iqrfnet.networkManager.autoNetwork.form.bondingControl') }}\n\t\t\t\t\t</h4>\n\t\t\t\t\t<CInputCheckbox\n\t\t\t\t\t\t:checked.sync='useOverlappingNetworks'\n\t\t\t\t\t\t:label='$t(\"iqrfnet.networkManager.autoNetwork.form.overlappingNetworks\")'\n\t\t\t\t\t/>\n\t\t\t\t\t<ValidationProvider\n\t\t\t\t\t\tv-slot='{ errors, touched, valid }'\n\t\t\t\t\t\trules='integer|required|between:1,50'\n\t\t\t\t\t\t:custom-messages='{\n\t\t\t\t\t\t\tinteger: \"iqrfnet.networkManager.messages.invalid.integer\",\n\t\t\t\t\t\t\trequired: \"iqrfnet.networkManager.messages.autoNetwork.networks\",\n\t\t\t\t\t\t\tbetween: \"iqrfnet.networkManager.messages.autoNetwork.networks\"\n\t\t\t\t\t\t}'\n\t\t\t\t\t>\n\t\t\t\t\t\t<CInput\n\t\t\t\t\t\t\tv-model.number='overlappingNetworks.networks'\n\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\tmin='1'\n\t\t\t\t\t\t\tmax='50'\n\t\t\t\t\t\t\t:label='$t(\"iqrfnet.networkManager.autoNetwork.form.networks\")'\n\t\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\t\t:disabled='!useOverlappingNetworks'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ValidationProvider>\n\t\t\t\t\t<ValidationProvider\n\t\t\t\t\t\tv-slot='{ errors, touched, valid }'\n\t\t\t\t\t\trules='integer|required|between:1,50'\n\t\t\t\t\t\t:custom-messages='{\n\t\t\t\t\t\t\tinteger: \"iqrfnet.networkManager.messages.invalid.integer\",\n\t\t\t\t\t\t\trequired: \"iqrfnet.networkManager.messages.autoNetwork.network\",\n\t\t\t\t\t\t\tbetween: \"iqrfnet.networkManager.messages.autoNetwork.network\"\n\t\t\t\t\t\t}'\n\t\t\t\t\t>\n\t\t\t\t\t\t<CInput\n\t\t\t\t\t\t\tv-model.number='overlappingNetworks.network'\n\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\tmin='1'\n\t\t\t\t\t\t\tmax='50'\n\t\t\t\t\t\t\t:label='$t(\"iqrfnet.networkManager.autoNetwork.form.network\")'\n\t\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\t\t:disabled='!useOverlappingNetworks'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ValidationProvider><hr>\n\t\t\t\t\t<h4>\n\t\t\t\t\t\t{{ $t('iqrfnet.networkManager.autoNetwork.form.hwpidFiltering') }}\n\t\t\t\t\t</h4>\n\t\t\t\t\t<CInputCheckbox\n\t\t\t\t\t\t:checked.sync='useHwpidFiltering'\n\t\t\t\t\t\t:label='$t(\"iqrfnet.networkManager.autoNetwork.form.hwpidEnable\")'\n\t\t\t\t\t/>\n\t\t\t\t\t<ValidationProvider\n\t\t\t\t\t\tv-slot='{ errors, touched, valid }'\n\t\t\t\t\t\trules='hwpidFilter'\n\t\t\t\t\t\t:custom-messages='{\n\t\t\t\t\t\t\thwpidFilter: \"iqrfnet.networkManager.messages.invalid.autoNetwork.hwpidFilter\"\n\t\t\t\t\t\t}'\n\t\t\t\t\t>\n\t\t\t\t\t\t<CInput\n\t\t\t\t\t\t\tv-model='hwpidFiltering'\n\t\t\t\t\t\t\t:label='$t(\"iqrfnet.networkManager.autoNetwork.form.hwpids\")'\n\t\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\t\t:disabled='!useHwpidFiltering'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ValidationProvider><hr>\n\t\t\t\t\t<h4>\n\t\t\t\t\t\t{{ $t('iqrfnet.networkManager.autoNetwork.form.stopConditions') }}\n\t\t\t\t\t</h4>\n\t\t\t\t\t<div class='form-group'>\n\t\t\t\t\t\t<CInputCheckbox\n\t\t\t\t\t\t\t:checked.sync='useWaves'\n\t\t\t\t\t\t\t:label='$t(\"iqrfnet.networkManager.autoNetwork.form.waves\")'\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<ValidationProvider\n\t\t\t\t\t\t\tv-slot='{ errors, touched, valid }'\n\t\t\t\t\t\t\trules='integer|required|between:1,127'\n\t\t\t\t\t\t\t:custom-messages='{\n\t\t\t\t\t\t\t\tinteger: \"iqrfnet.networkManager.messages.invalid.integer\",\n\t\t\t\t\t\t\t\trequired: \"iqrfnet.networkManager.messages.autoNetwork.waves\",\n\t\t\t\t\t\t\t\tbetween: \"iqrfnet.networkManager.messages.autoNetwork.waves\"\n\t\t\t\t\t\t\t}'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<CInput\n\t\t\t\t\t\t\t\tv-model.number='stopConditions.waves'\n\t\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t\tmin='1'\n\t\t\t\t\t\t\t\tmax='127'\n\t\t\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\t\t\t:disabled='!useWaves'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</ValidationProvider>\n\t\t\t\t\t</div>\n\t\t\t\t\t<ValidationProvider\n\t\t\t\t\t\tv-slot='{ errors, touched, valid }'\n\t\t\t\t\t\trules='integer|required|between:1,127'\n\t\t\t\t\t\t:custom-messages='{\n\t\t\t\t\t\t\tinteger: \"iqrfnet.networkManager.messages.invalid.integer\",\n\t\t\t\t\t\t\trequired: \"iqrfnet.networkManager.messages.autoNetwork.emptyWaves\",\n\t\t\t\t\t\t\tbetween: \"iqrfnet.networkManager.messages.autoNetwork.emptyWaves\"\n\t\t\t\t\t\t}'\n\t\t\t\t\t>\n\t\t\t\t\t\t<CInput\n\t\t\t\t\t\t\tv-model.number='stopConditions.emptyWaves'\n\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\tmin='1'\n\t\t\t\t\t\t\tmax='127'\n\t\t\t\t\t\t\t:label='$t(\"iqrfnet.networkManager.autoNetwork.form.emptyWaves\")'\n\t\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ValidationProvider>\n\t\t\t\t\t<div class='form-group'>\n\t\t\t\t\t\t<CInputCheckbox\n\t\t\t\t\t\t\t:checked.sync='useNodes'\n\t\t\t\t\t\t\t:label='$t(\"iqrfnet.networkManager.autoNetwork.form.nodes\")'\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<CSelect\n\t\t\t\t\t\t\t:value.sync='nodeCondition'\n\t\t\t\t\t\t\t:options='[\n\t\t\t\t\t\t\t\t{value: \"new\", label: \"New\"},\n\t\t\t\t\t\t\t\t{value: \"total\", label: \"Total\"}\n\t\t\t\t\t\t\t]'\n\t\t\t\t\t\t\t:disabled='!useNodes'\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<ValidationProvider\n\t\t\t\t\t\t\tv-if='nodeCondition === \"total\"'\n\t\t\t\t\t\t\tv-slot='{ errors, touched, valid }'\n\t\t\t\t\t\t\trules='integer|required|between:1,239'\n\t\t\t\t\t\t\t:custom-messages='{\n\t\t\t\t\t\t\t\tinteger: \"iqrfnet.networkManager.messages.invalid.integer\",\n\t\t\t\t\t\t\t\trequired: \"iqrfnet.networkManager.messages.autoNetwork.totalNodes\",\n\t\t\t\t\t\t\t\tbetween: \"iqrfnet.networkManager.messages.autoNetwork.totalNodes\"\n\t\t\t\t\t\t\t}'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<CInput\n\t\t\t\t\t\t\t\tv-model.number='stopConditions.numberOfTotalNodes'\n\t\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t\tmin='1'\n\t\t\t\t\t\t\t\tmax='239'\n\t\t\t\t\t\t\t\t:label='$t(\"iqrfnet.networkManager.autoNetwork.form.numberOfTotalNodes\")'\n\t\t\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\t\t\t:disabled='!useNodes'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</ValidationProvider>\n\t\t\t\t\t\t<ValidationProvider\n\t\t\t\t\t\t\tv-if='nodeCondition === \"new\"'\n\t\t\t\t\t\t\tv-slot='{ errors, touched, valid }'\n\t\t\t\t\t\t\trules='integer|required|between:1,239'\n\t\t\t\t\t\t\t:custom-messages='{\n\t\t\t\t\t\t\t\tinteger: \"iqrfnet.networkManager.messages.invalid.integer\",\n\t\t\t\t\t\t\t\trequired: \"iqrfnet.networkManager.messages.autoNetwork.newNodes\",\n\t\t\t\t\t\t\t\tbetween: \"iqrfnet.networkManager.messages.autoNetwork.newNodes\"\n\t\t\t\t\t\t\t}'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<CInput\n\t\t\t\t\t\t\t\tv-model.number='stopConditions.numberOfNewNodes'\n\t\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t\tmin='1'\n\t\t\t\t\t\t\t\tmax='239'\n\t\t\t\t\t\t\t\t:label='$t(\"iqrfnet.networkManager.autoNetwork.form.numberOfNewNodes\")'\n\t\t\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\t\t\t:disabled='!useNodes'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</ValidationProvider>\n\t\t\t\t\t</div>\n\t\t\t\t\t<CInputCheckbox\n\t\t\t\t\t\t:checked.sync='stopConditions.abortOnTooManyNodesFound'\n\t\t\t\t\t\t:label='$t(\"iqrfnet.networkManager.autoNetwork.form.abortOnTooManyNodesFound\")'\n\t\t\t\t\t\t:disabled='!useNodes'\n\t\t\t\t\t/>\n\t\t\t\t\t<CButton \n\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\t:disabled='invalid'\n\t\t\t\t\t\t@click='processSubmitAutoNetwork'\n\t\t\t\t\t>\n\t\t\t\t\t\t{{ $t('forms.start') }}\n\t\t\t\t\t</CButton>\n\t\t\t\t</CForm>\n\t\t\t</ValidationObserver>\n\t\t</CCardBody>\n\t\t<CCardBody v-else>\n\t\t\t<CAlert color='danger'>\n\t\t\t\t{{ invalidVersionBody }}<br>\n\t\t\t\t<span v-if='daemonVersion !== null'>\n\t\t\t\t\tCurrent version: {{ daemonVersion }}\n\t\t\t\t</span>\n\t\t\t</CAlert>\n\t\t</CCardBody>\n\t</CCard>\n</template>\n\n<script>\nimport {CAlert, CButton, CCard, CCardBody, CForm, CInput, CInputCheckbox} from '@coreui/vue/src';\nimport {extend, ValidationObserver, ValidationProvider} from 'vee-validate';\nimport compareVersions from 'compare-versions';\nimport {timeout} from '../../helpers/timeout';\nimport {between, integer, required} from 'vee-validate/dist/rules';\nimport IqrfNetService from '../../services/IqrfNetService';\nimport VersionService from '../../services/VersionService';\n\nexport default {\n\tname: 'AutoNetwork',\n\tcomponents: {\n\t\tCAlert,\n\t\tCButton,\n\t\tCCard,\n\t\tCCardBody,\n\t\tCForm,\n\t\tCInput,\n\t\tCInputCheckbox,\n\t\tValidationObserver,\n\t\tValidationProvider\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tautoAddress: false,\n\t\t\tautoNetwork: {\n\t\t\t\tdiscoveryTxPower: 7,\n\t\t\t\tdiscoveryBeforeStart: false,\n\t\t\t\tskipDiscoveryEachWave: false,\n\t\t\t\tactionRetries: 1,\n\t\t\t},\n\t\t\tstopConditions: {\n\t\t\t\twaves: 10,\n\t\t\t\temptyWaves: 2,\n\t\t\t\tnumberOfTotalNodes: 1,\n\t\t\t\tnumberOfNewNodes: 1,\n\t\t\t\tabortOnTooManyNodesFound: false,\n\t\t\t},\n\t\t\toverlappingNetworks: {\n\t\t\t\tnetworks: 1,\n\t\t\t\tnetwork: 1\n\t\t\t},\n\t\t\thwpidFiltering: '',\n\t\t\ttimeout: null,\n\t\t\tuseHwpidFiltering: false,\n\t\t\tuseOverlappingNetworks: false,\n\t\t\tuseWaves: false,\n\t\t\tuseNodes: true,\n\t\t\tnodeCondition: 'new',\n\t\t\tmessages: {\n\t\t\t\tnodesTotal: '',\n\t\t\t\tnodesNew: '',\n\t\t\t},\n\t\t\tdaemonVersion: 'v2.2.2',\n\t\t};\n\t},\n\tcomputed: {\n\t\tinvalidVersionBody() {\n\t\t\tif (this.daemonVersion === null) {\n\t\t\t\treturn this.$t('iqrfnet.networkManager.messages.autoNetwork.versionMissing').toString();\n\t\t\t} else {\n\t\t\t\treturn this.$t('iqrfnet.networkManager.messages.autoNetwork.versionInvalid').toString();\n\t\t\t}\n\t\t},\n\t\tversionValid() {\n\t\t\tif (this.daemonVersion === null) {\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\tif (compareVersions.compare(this.daemonVersion, '2.3.0', '>=')) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t},\n\tcreated() {\n\t\textend('between', between);\n\t\textend('integer', integer);\n\t\textend('required', required);\n\t\textend('hwpidFilter', (val) => {\n\t\t\tconst regex = RegExp('^(6553[0-5]|655[0-2][0-9]|65[0-4][0-9]{2}|6[0-4][0-9]{3}|[1-5][0-9]{4}|[1-9][0-9]{1,3}|[1-9])( (6553[0-5]|655[0-2][0-9]|65[0-4][0-9]{2}|6[0-4][0-9]{3}|[1-5][0-9]{4}|[1-9][0-9]{1,3}|[1-9]))*$');\n\t\t\treturn regex.test(val);\n\t\t});\n\t\tthis.unsubscribe = this.$store.subscribe(mutation => {\n\t\t\tif (mutation.type === 'SOCKET_ONOPEN') {\n\t\t\t\tthis.getVersion();\n\t\t\t}\n\t\t\tif (mutation.type === 'SOCKET_ONSEND' &&\n\t\t\t\tmutation.payload.mType === 'iqmeshNetwork_autoNetwork') {\n\t\t\t\tthis.timeout = timeout('iqrfnet.networkManager.messages.submit.timeout', 30000);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (mutation.type === 'SOCKET_ONMESSAGE') {\n\t\t\t\tif (mutation.payload.mType === 'iqmeshNetwork_AutoNetwork') {\n\t\t\t\t\tclearTimeout(this.timeout);\n\t\t\t\t\tswitch(mutation.payload.data.status) {\n\t\t\t\t\t\tcase -1:\n\t\t\t\t\t\t\tthis.$store.commit('spinner/HIDE');\n\t\t\t\t\t\t\tthis.$toast.error(\n\t\t\t\t\t\t\t\tthis.$t('iqrfnet.networkManager.messages.submit.timeout')\n\t\t\t\t\t\t\t\t\t.toString()\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\tthis.$store.commit('spinner/UPDATE_TEXT', this.autoNetworkProgress(mutation.payload.data));\n\t\t\t\t\t\t\tif (mutation.payload.data.rsp.lastWave) {\n\t\t\t\t\t\t\t\tthis.$store.commit('spinner/HIDE');\n\t\t\t\t\t\t\t\tthis.$toast.success(\n\t\t\t\t\t\t\t\t\tthis.$t('iqrfnet.networkManager.messages.submit.autoNetwork.success')\n\t\t\t\t\t\t\t\t\t\t.toString()\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tthis.$emit('update-devices');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tthis.$toast.error(\n\t\t\t\t\t\t\t\tthis.$t('iqrfnet.networkManager.messages.submit.autoNetwork.failure')\n\t\t\t\t\t\t\t\t\t.toString()\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else if (mutation.payload.mType === 'messageError') {\n\t\t\t\t\tclearTimeout(this.timeout);\n\t\t\t\t\tthis.$store.commit('spinner/HIDE');\n\t\t\t\t\tthis.$toast.error(\n\t\t\t\t\t\tthis.$t('iqrfnet.networkManager.messages.submit.invalidMessage')\n\t\t\t\t\t\t\t.toString()\n\t\t\t\t\t);\n\t\t\t\t} else if (mutation.payload.mType === 'mngDaemon_Version') {\n\t\t\t\t\tthis.$store.commit('spinner/HIDE');\n\t\t\t\t\tif (mutation.payload.data.status === 0 ) {\n\t\t\t\t\t\tthis.daemonVersion = mutation.payload.data.rsp.version.substring(0, 6);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.$toast.error(this.$t('iqrfnet.networkManager.messages.autoNetwork.versionFailure').toString());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tif (this.$store.getters.isSocketConnected) {\n\t\t\tthis.getVersion();\n\t\t}\n\t},\n\tbeforeDestroy() {\n\t\tthis.unsubscribe();\n\t},\n\tmethods: {\n\t\tgetVersion() {\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\tVersionService.getVersion();\n\t\t},\n\t\tautoNetworkProgress(response) {\n\t\t\tlet message = '\\nWave ' + response.rsp.wave;\n\t\t\tif (this.autoNetwork.stopConditions.waves) {\n\t\t\t\tmessage += '/ ' + this.autoNetwork.stopConditions.waves;\n\t\t\t}\n\t\t\tmessage += '\\n[' + response.rsp.progress + '%] ';\n\t\t\tif (response.rsp.waveState) {\n\t\t\t\tmessage += response.rsp.waveState;\n\t\t\t}\n\t\t\tif (response.rsp.nodesNr) {\n\t\t\t\tthis.messages.nodesTotal = '\\nTotal number of nodes in network: ' + response.rsp.nodesNr;\n\t\t\t}\n\t\t\tif (response.rsp.newNodesNr) {\n\t\t\t\tthis.messages.nodesNew = '\\nNumber of nodes added in last wave: ' + response.rsp.newNodesNr;\n\t\t\t}\n\t\t\tmessage += this.messages.nodesTotal + this.messages.nodesNew;\n\t\t\treturn message;\n\t\t},\n\t\tprocessSubmitAutoNetwork() {\n\t\t\tthis.messages.nodesTotal = this.messages.nodesNew = '';\n\t\t\tlet submitData = this.autoNetwork;\n\t\t\tlet stopConditions = {};\n\t\t\tstopConditions['emptyWaves'] = this.stopConditions.emptyWaves;\n\t\t\tif (this.useWaves) {\n\t\t\t\tstopConditions['waves'] = this.stopConditions.waves;\n\t\t\t}\n\t\t\tif (this.useNodes) {\n\t\t\t\tstopConditions['abortOnTooManyNodesFound'] = this.stopConditions.abortOnTooManyNodesFound;\n\t\t\t\tif (this.nodeCondition === 'total') {\n\t\t\t\t\tstopConditions['numberOfTotalNodes'] = this.stopConditions.numberOfTotalNodes;\n\t\t\t\t} else {\n\t\t\t\t\tstopConditions['numberOfNewNodes'] = this.stopConditions.numberOfNewNodes;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (Object.keys(stopConditions).length > 0) {\n\t\t\t\tsubmitData['stopConditions'] = stopConditions;\n\t\t\t}\n\t\t\tif (this.useOverlappingNetworks) {\n\t\t\t\tsubmitData['overlappingNetworks'] = this.overlappingNetworks;\n\t\t\t}\n\t\t\tif (this.useHwpidFiltering && this.hwpidFiltering.length > 0) {\n\t\t\t\tsubmitData['hwpidFiltering'] = this.hwpidFiltering.split(', ').map((i) => parseInt(i));\n\t\t\t}\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\tIqrfNetService.autoNetwork(submitData);\n\t\t}\n\t}\n};\n</script>\n","import { render, staticRenderFns } from \"./AutoNetwork.vue?vue&type=template&id=54f7b580&\"\nimport script from \"./AutoNetwork.vue?vue&type=script&lang=js&\"\nexport * from \"./AutoNetwork.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('54f7b580')) {\n      api.createRecord('54f7b580', component.options)\n    } else {\n      api.reload('54f7b580', component.options)\n    }\n    module.hot.accept(\"./AutoNetwork.vue?vue&type=template&id=54f7b580&\", function () {\n      api.rerender('54f7b580', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/components/IqrfNet/AutoNetwork.vue\"\nexport default component.exports","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NetworkManager.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NetworkManager.vue?vue&type=script&lang=js&\"","<template>\n\t<CRow>\n\t\t<CCol lg='6'>\n\t\t\t<CCard>\n\t\t\t\t<CTabs variant='tabs' :active-tab='activeTab'>\n\t\t\t\t\t<CTab title='IQMESH'>\n\t\t\t\t\t\t<BondingManager @update-devices='updateDevices' />\n\t\t\t\t\t\t<DiscoveryManager @update-devices='updateDevices' />\n\t\t\t\t\t</CTab>\n\t\t\t\t\t<CTab title='AutoNetwork'>\n\t\t\t\t\t\t<AutoNetwork @update-devices='updateDevices' />\n\t\t\t\t\t</CTab>\n\t\t\t\t</CTabs>\n\t\t\t</CCard>\n\t\t</CCol>\n\t\t<CCol lg='6'>\n\t\t\t<DevicesInfo ref='devs' />\n\t\t</CCol>\n\t</CRow>\n</template>\n\n<script>\nimport {CCard, CTab, CTabs} from '@coreui/vue/src';\nimport BondingManager from '../../components/IqrfNet/BondingManager';\nimport DevicesInfo from '../../components/IqrfNet/DevicesInfo';\nimport DiscoveryManager from '../../components/IqrfNet/DiscoveryManager';\nimport AutoNetwork from '../../components/IqrfNet/AutoNetwork';\n\nexport default {\n\tname: 'NetworkManager',\n\tcomponents: {\n\t\tCCard,\n\t\tCTab,\n\t\tCTabs,\n\t\tAutoNetwork,\n\t\tBondingManager,\n\t\tDevicesInfo,\n\t\tDiscoveryManager,\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tactiveTab: 0,\n\t\t};\n\t},\n\tmethods: {\n\t\tupdateDevices() {\n\t\t\tthis.$refs.devs.getBondedDevices();\n\t\t},\n\t},\n\tmetaInfo: {\n\t\ttitle: 'iqrfnet.networkManager.title',\n\t},\n};\n</script>\n\n<style scoped>\n.tab {\n\tborder-bottom: 0;\n}\n\n.tabs {\n\tborder-bottom: 0;\n}\n</style>\n","import { render, staticRenderFns } from \"./NetworkManager.vue?vue&type=template&id=9bbbfec0&scoped=true&\"\nimport script from \"./NetworkManager.vue?vue&type=script&lang=js&\"\nexport * from \"./NetworkManager.vue?vue&type=script&lang=js&\"\nimport style0 from \"./NetworkManager.vue?vue&type=style&index=0&id=9bbbfec0&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"9bbbfec0\",\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('9bbbfec0')) {\n      api.createRecord('9bbbfec0', component.options)\n    } else {\n      api.reload('9bbbfec0', component.options)\n    }\n    module.hot.accept(\"./NetworkManager.vue?vue&type=template&id=9bbbfec0&scoped=true&\", function () {\n      api.rerender('9bbbfec0', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/pages/IqrfNet/NetworkManager.vue\"\nexport default component.exports","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\n        \"CCard\",\n        [\n          _c(\n            \"CCardHeader\",\n            [\n              _c(\n                \"CButton\",\n                {\n                  attrs: {\n                    color: \"primary\",\n                    size: \"sm\",\n                    href: \"https://docs.iqrf.org/iqrf-gateway/api.html\",\n                    target: \"_blank\"\n                  }\n                },\n                [\n                  _vm._v(\n                    \"\\n\\t\\t\\t\\t\" +\n                      _vm._s(_vm.$t(\"iqrfnet.sendJson.documentation\")) +\n                      \"\\n\\t\\t\\t\"\n                  )\n                ]\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _vm.daemonAvailable\n            ? _c(\n                \"CCardBody\",\n                [\n                  _c(\"ValidationObserver\", {\n                    scopedSlots: _vm._u(\n                      [\n                        {\n                          key: \"default\",\n                          fn: function(ref) {\n                            var invalid = ref.invalid\n                            return [\n                              _c(\n                                \"CForm\",\n                                {\n                                  on: {\n                                    submit: function($event) {\n                                      $event.preventDefault()\n                                      return _vm.processSubmit($event)\n                                    }\n                                  }\n                                },\n                                [\n                                  _c(\"ValidationProvider\", {\n                                    attrs: {\n                                      rules: \"required|json|mType\",\n                                      \"custom-messages\": {\n                                        required:\n                                          \"iqrfnet.sendJson.form.messages.missing\",\n                                        json:\n                                          \"iqrfnet.sendJson.form.messages.invalid\",\n                                        mType:\n                                          \"iqrfnet.sendJson.form.messages.mType\"\n                                      }\n                                    },\n                                    scopedSlots: _vm._u(\n                                      [\n                                        {\n                                          key: \"default\",\n                                          fn: function(ref) {\n                                            var errors = ref.errors\n                                            var touched = ref.touched\n                                            var valid = ref.valid\n                                            return [\n                                              _c(\"CTextarea\", {\n                                                directives: [\n                                                  {\n                                                    name: \"autogrow\",\n                                                    rawName: \"v-autogrow\"\n                                                  }\n                                                ],\n                                                attrs: {\n                                                  label: _vm.$t(\n                                                    \"iqrfnet.sendJson.form.json\"\n                                                  ),\n                                                  \"is-valid\": touched\n                                                    ? valid\n                                                    : null,\n                                                  \"invalid-feedback\": _vm.$t(\n                                                    errors[0]\n                                                  )\n                                                },\n                                                model: {\n                                                  value: _vm.json,\n                                                  callback: function($$v) {\n                                                    _vm.json = $$v\n                                                  },\n                                                  expression: \"json\"\n                                                }\n                                              })\n                                            ]\n                                          }\n                                        }\n                                      ],\n                                      null,\n                                      true\n                                    )\n                                  }),\n                                  _vm._v(\" \"),\n                                  _c(\n                                    \"CButton\",\n                                    {\n                                      attrs: {\n                                        color: \"primary\",\n                                        type: \"submit\",\n                                        disabled: invalid\n                                      }\n                                    },\n                                    [\n                                      _vm._v(\n                                        \"\\n\\t\\t\\t\\t\\t\\t\" +\n                                          _vm._s(_vm.$t(\"forms.send\")) +\n                                          \"\\n\\t\\t\\t\\t\\t\"\n                                      )\n                                    ]\n                                  )\n                                ],\n                                1\n                              )\n                            ]\n                          }\n                        }\n                      ],\n                      null,\n                      false,\n                      1364885438\n                    )\n                  })\n                ],\n                1\n              )\n            : _c(\n                \"CCardBody\",\n                [\n                  _c(\"CAlert\", { attrs: { color: \"danger\" } }, [\n                    _vm._v(\n                      \"\\n\\t\\t\\t\\t\" +\n                        _vm._s(\n                          _vm.$t(\"iqrfnet.sendJson.notAvailable\", {\n                            attempt: _vm.reconnectAttempt\n                          })\n                        ) +\n                        \"\\n\\t\\t\\t\"\n                    )\n                  ])\n                ],\n                1\n              )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"CRow\",\n        [\n          _vm.request !== null\n            ? _c(\n                \"CCol\",\n                { attrs: { md: \"6\" } },\n                [\n                  _c(\n                    \"CCard\",\n                    [\n                      _c(\n                        \"CCardHeader\",\n                        { staticClass: \"d-flex\" },\n                        [\n                          _c(\"span\", { staticClass: \"mr-auto\" }, [\n                            _vm._v(\n                              \"\\n\\t\\t\\t\\t\\t\\t\" +\n                                _vm._s(_vm.$t(\"iqrfnet.sendJson.request\")) +\n                                \"\\n\\t\\t\\t\\t\\t\"\n                            )\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\n                            \"CButton\",\n                            {\n                              directives: [\n                                {\n                                  name: \"clipboard\",\n                                  rawName: \"v-clipboard\",\n                                  value: _vm.request,\n                                  expression: \"request\"\n                                },\n                                {\n                                  name: \"clipboard\",\n                                  rawName: \"v-clipboard:success\",\n                                  value: function() {\n                                    return _vm.$toast.success(\n                                      _vm\n                                        .$t(\n                                          \"iqrfnet.sendJson.copy.messages.request\"\n                                        )\n                                        .toString()\n                                    )\n                                  },\n                                  expression:\n                                    '() => $toast.success($t(\"iqrfnet.sendJson.copy.messages.request\").toString())',\n                                  arg: \"success\"\n                                }\n                              ],\n                              attrs: { color: \"primary\", size: \"sm\" }\n                            },\n                            [\n                              _vm._v(\n                                \"\\n\\t\\t\\t\\t\\t\\t\" +\n                                  _vm._s(\n                                    _vm.$t(\"iqrfnet.sendJson.copy.request\")\n                                  ) +\n                                  \"\\n\\t\\t\\t\\t\\t\"\n                              )\n                            ]\n                          )\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"CCardBody\",\n                        [\n                          _c(\"prism-editor\", {\n                            attrs: {\n                              highlight: _vm.highlighter,\n                              readonly: true\n                            },\n                            model: {\n                              value: _vm.request,\n                              callback: function($$v) {\n                                _vm.request = $$v\n                              },\n                              expression: \"request\"\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            : _vm._e(),\n          _vm._v(\" \"),\n          _vm.response !== null\n            ? _c(\n                \"CCol\",\n                { attrs: { md: \"6\" } },\n                [\n                  _c(\n                    \"CCard\",\n                    [\n                      _c(\n                        \"CCardHeader\",\n                        { staticClass: \"d-flex\" },\n                        [\n                          _c(\"span\", { staticClass: \"mr-auto\" }, [\n                            _vm._v(\n                              \"\\n\\t\\t\\t\\t\\t\\t\" +\n                                _vm._s(_vm.$t(\"iqrfnet.sendJson.response\")) +\n                                \"\\n\\t\\t\\t\\t\\t\"\n                            )\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\n                            \"CButton\",\n                            {\n                              directives: [\n                                {\n                                  name: \"clipboard\",\n                                  rawName: \"v-clipboard\",\n                                  value: _vm.response,\n                                  expression: \"response\"\n                                },\n                                {\n                                  name: \"clipboard\",\n                                  rawName: \"v-clipboard:success\",\n                                  value: function() {\n                                    return _vm.$toast.success(\n                                      _vm\n                                        .$t(\n                                          \"iqrfnet.sendJson.copy.messages.response\"\n                                        )\n                                        .toString()\n                                    )\n                                  },\n                                  expression:\n                                    '() => $toast.success($t(\"iqrfnet.sendJson.copy.messages.response\").toString())',\n                                  arg: \"success\"\n                                }\n                              ],\n                              attrs: { color: \"primary\", size: \"sm\" }\n                            },\n                            [\n                              _vm._v(\n                                \"\\n\\t\\t\\t\\t\\t\\t\" +\n                                  _vm._s(\n                                    _vm.$t(\"iqrfnet.sendJson.copy.response\")\n                                  ) +\n                                  \"\\n\\t\\t\\t\\t\\t\"\n                              )\n                            ]\n                          )\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"CCardBody\",\n                        [\n                          _c(\"prism-editor\", {\n                            attrs: {\n                              highlight: _vm.highlighter,\n                              readonly: true\n                            },\n                            model: {\n                              value: _vm.response,\n                              callback: function($$v) {\n                                _vm.response = $$v\n                              },\n                              expression: \"response\"\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            : _vm._e()\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","/**\n * JSON request error status code messages\n */\nexport var StatusMessages;\n(function (StatusMessages) {\n    StatusMessages[StatusMessages[\"iqrfnet.sendJson.form.messages.error.timeout\"] = -1] = \"iqrfnet.sendJson.form.messages.error.timeout\";\n    StatusMessages[StatusMessages[\"iqrfnet.sendJson.form.messages.error.fail\"] = 1] = \"iqrfnet.sendJson.form.messages.error.fail\";\n    StatusMessages[StatusMessages[\"iqrfnet.sendJson.form.messages.error.pcmd\"] = 2] = \"iqrfnet.sendJson.form.messages.error.pcmd\";\n    StatusMessages[StatusMessages[\"iqrfnet.sendJson.form.messages.error.pnum\"] = 3] = \"iqrfnet.sendJson.form.messages.error.pnum\";\n    StatusMessages[StatusMessages[\"iqrfnet.sendJson.form.messages.error.addr\"] = 4] = \"iqrfnet.sendJson.form.messages.error.addr\";\n    StatusMessages[StatusMessages[\"iqrfnet.sendJson.form.messages.error.dataLen\"] = 5] = \"iqrfnet.sendJson.form.messages.error.dataLen\";\n    StatusMessages[StatusMessages[\"iqrfnet.sendJson.form.messages.error.data\"] = 6] = \"iqrfnet.sendJson.form.messages.error.data\";\n    StatusMessages[StatusMessages[\"iqrfnet.sendJson.form.messages.error.hwpid\"] = 7] = \"iqrfnet.sendJson.form.messages.error.hwpid\";\n    StatusMessages[StatusMessages[\"iqrfnet.sendJson.form.messages.error.nadr\"] = 8] = \"iqrfnet.sendJson.form.messages.error.nadr\";\n})(StatusMessages || (StatusMessages = {}));\n","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SendJsonRequest.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SendJsonRequest.vue?vue&type=script&lang=js&\"","<template>\n\t<div>\n\t\t<CCard>\n\t\t\t<CCardHeader>\n\t\t\t\t<CButton \n\t\t\t\t\tcolor='primary'\n\t\t\t\t\tsize='sm' \n\t\t\t\t\thref='https://docs.iqrf.org/iqrf-gateway/api.html'\n\t\t\t\t\ttarget='_blank'\n\t\t\t\t>\n\t\t\t\t\t{{ $t(\"iqrfnet.sendJson.documentation\") }}\n\t\t\t\t</CButton>\n\t\t\t</CCardHeader>\n\t\t\t<CCardBody v-if='daemonAvailable'>\n\t\t\t\t<ValidationObserver v-slot='{ invalid }'>\n\t\t\t\t\t<CForm @submit.prevent='processSubmit'>\n\t\t\t\t\t\t<ValidationProvider\n\t\t\t\t\t\t\tv-slot='{ errors, touched, valid }'\n\t\t\t\t\t\t\trules='required|json|mType'\n\t\t\t\t\t\t\t:custom-messages='{\n\t\t\t\t\t\t\t\trequired: \"iqrfnet.sendJson.form.messages.missing\",\n\t\t\t\t\t\t\t\tjson: \"iqrfnet.sendJson.form.messages.invalid\",\n\t\t\t\t\t\t\t\tmType: \"iqrfnet.sendJson.form.messages.mType\"\n\t\t\t\t\t\t\t}'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<CTextarea\n\t\t\t\t\t\t\t\tv-model='json'\n\t\t\t\t\t\t\t\tv-autogrow\n\t\t\t\t\t\t\t\t:label='$t(\"iqrfnet.sendJson.form.json\")'\n\t\t\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</ValidationProvider>\n\t\t\t\t\t\t<CButton color='primary' type='submit' :disabled='invalid'>\n\t\t\t\t\t\t\t{{ $t('forms.send') }}\n\t\t\t\t\t\t</CButton>\n\t\t\t\t\t</CForm>\n\t\t\t\t</ValidationObserver>\n\t\t\t</CCardBody>\n\t\t\t<CCardBody v-else>\n\t\t\t\t<CAlert color='danger'>\n\t\t\t\t\t{{ $t('iqrfnet.sendJson.notAvailable', {attempt: reconnectAttempt}) }}\n\t\t\t\t</CAlert>\n\t\t\t</CCardBody>\n\t\t</CCard>\n\t\t<CRow>\n\t\t\t<CCol v-if='request !== null' md='6'>\n\t\t\t\t<CCard>\n\t\t\t\t\t<CCardHeader class='d-flex'>\n\t\t\t\t\t\t<span class='mr-auto'>\n\t\t\t\t\t\t\t{{ $t('iqrfnet.sendJson.request') }}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<CButton\n\t\t\t\t\t\t\tv-clipboard='request'\n\t\t\t\t\t\t\tv-clipboard:success='() => $toast.success($t(\"iqrfnet.sendJson.copy.messages.request\").toString())'\n\t\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\t\tsize='sm'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{{ $t('iqrfnet.sendJson.copy.request') }}\n\t\t\t\t\t\t</CButton>\n\t\t\t\t\t</CCardHeader>\n\t\t\t\t\t<CCardBody>\n\t\t\t\t\t\t<prism-editor\n\t\t\t\t\t\t\tv-model='request'\n\t\t\t\t\t\t\t:highlight='highlighter'\n\t\t\t\t\t\t\t:readonly='true'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</CCardBody>\n\t\t\t\t</CCard>\n\t\t\t</CCol>\n\t\t\t<CCol v-if='response !== null' md='6'>\n\t\t\t\t<CCard>\n\t\t\t\t\t<CCardHeader class='d-flex'>\n\t\t\t\t\t\t<span class='mr-auto'>\n\t\t\t\t\t\t\t{{ $t('iqrfnet.sendJson.response') }}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<CButton\n\t\t\t\t\t\t\tv-clipboard='response'\n\t\t\t\t\t\t\tv-clipboard:success='() => $toast.success($t(\"iqrfnet.sendJson.copy.messages.response\").toString())'\n\t\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\t\tsize='sm'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{{ $t('iqrfnet.sendJson.copy.response') }}\n\t\t\t\t\t\t</CButton>\n\t\t\t\t\t</CCardHeader>\n\t\t\t\t\t<CCardBody>\n\t\t\t\t\t\t<prism-editor\n\t\t\t\t\t\t\tv-model='response'\n\t\t\t\t\t\t\t:highlight='highlighter'\n\t\t\t\t\t\t\t:readonly='true'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</CCardBody>\n\t\t\t\t</CCard>\n\t\t\t</CCol>\n\t\t</CRow>\n\t</div>\n</template>\n\n<script>\nimport {CAlert, CButton, CCard, CCardBody, CCardHeader, CForm, CTextarea} from '@coreui/vue/src';\nimport {extend, ValidationObserver, ValidationProvider} from 'vee-validate';\nimport {required} from 'vee-validate/dist/rules';\nimport {timeout} from '../../helpers/timeout';\nimport {TextareaAutogrowDirective} from 'vue-textarea-autogrow-directive/src/VueTextareaAutogrowDirective';\nimport {StatusMessages} from '../../iqrfNet/sendJson';\nimport IqrfNetService from '../../services/IqrfNetService';\n\nimport {PrismEditor} from 'vue-prism-editor';\nimport 'vue-prism-editor/dist/prismeditor.min.css';\nimport Prism from 'prismjs/components/prism-core';\nimport 'prismjs/components/prism-json';\nimport 'prismjs/themes/prism.css';\n\nexport default {\n\tname: 'SendJsonRequest',\n\tcomponents: {\n\t\tCAlert,\n\t\tCButton,\n\t\tCCard,\n\t\tCCardBody,\n\t\tCCardHeader,\n\t\tCForm,\n\t\tCTextarea,\n\t\tPrismEditor,\n\t\tValidationObserver,\n\t\tValidationProvider,\n\t},\n\tdirectives: {\n\t\t'autogrow': TextareaAutogrowDirective\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tjson: null,\n\t\t\trequest: null,\n\t\t\tresponse: null,\n\t\t\ttimeout: null,\n\t\t\tmType: null,\n\t\t\tdaemonAvailable: true,\n\t\t\treconnectAttempt: 0,\n\t\t};\n\t},\n\tcreated() {\n\t\textend('json', (json) => {\n\t\t\ttry {\n\t\t\t\tJSON.parse(json);\n\t\t\t\treturn true;\n\t\t\t} catch (error) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t\textend('mType', (json) => {\n\t\t\tlet object = JSON.parse(json);\n\t\t\treturn {}.hasOwnProperty.call(object, 'mType');\n\t\t});\n\t\textend('required', required);\n\t\tthis.unsubscribe = this.$store.subscribe(mutation => {\n\t\t\tif (mutation.type === 'SOCKET_ONOPEN') {\n\t\t\t\tthis.daemonAvailable = true;\n\t\t\t} else if (mutation.type === 'SOCKET_ONCLOSE' || \n\t\t\t\tmutation.type === 'SOCKET_ONERROR') {\n\t\t\t\tthis.daemonAvailable = false;\n\t\t\t} else if (mutation.type === 'SOCKET_RECONNECT') {\n\t\t\t\tthis.reconnectAttempt = mutation.payload;\n\t\t\t} else if (mutation.type === 'SOCKET_ONSEND') {\n\t\t\t\tthis.mType = mutation.payload.mType;\n\t\t\t\tthis.timeout = timeout('iqrfnet.sendJson.form.messages.timeout', 30000);\n\t\t\t} else if (mutation.type === 'SOCKET_ONMESSAGE') {\n\t\t\t\tif ({}.hasOwnProperty.call(mutation.payload, 'mType')) {\n\t\t\t\t\tclearTimeout(this.timeout);\n\t\t\t\t\tthis.$store.commit('spinner/HIDE');\n\t\t\t\t\tif (mutation.payload.mType === this.mType) {\n\t\t\t\t\t\tthis.response = JSON.stringify(mutation.payload, null, 4);\n\t\t\t\t\t\tif (mutation.payload.data.status === 0) {\n\t\t\t\t\t\t\tthis.$toast.success(\n\t\t\t\t\t\t\t\tthis.$t('iqrfnet.sendJson.form.messages.success')\n\t\t\t\t\t\t\t\t\t.toString()\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (mutation.payload.data.status in StatusMessages) {\n\t\t\t\t\t\t\t\tthis.$toast.error(\n\t\t\t\t\t\t\t\t\tthis.$t(StatusMessages[mutation.payload.data.status])\n\t\t\t\t\t\t\t\t\t\t.toString()\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.$toast.error(\n\t\t\t\t\t\t\t\t\tthis.$t('iqrfnet.sendJson.form.messages.error.fail')\n\t\t\t\t\t\t\t\t\t\t.toString()\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (mutation.payload.mType === 'messageError') {\n\t\t\t\t\t\tthis.response = JSON.stringify(mutation.payload, null, 4);\n\t\t\t\t\t\tthis.$toast.error(\n\t\t\t\t\t\t\tthis.$t('iqrfnet.sendJson.form.messages.error.messageError')\n\t\t\t\t\t\t\t\t.toString()\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t},\n\tbeforeDestroy() {\n\t\tthis.unsubscribe();\n\t},\n\tmethods: {\n\t\t/**\n\t\t * JSON highlighter method\n\t\t */\n\t\thighlighter(code) {\n\t\t\treturn Prism.highlight(code, Prism.languages.json, 'json');\n\t\t},\n\t\tprocessSubmit() {\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\tlet json = JSON.parse(this.json);\n\t\t\tthis.request = JSON.stringify(json, null, 4);\n\t\t\tthis.response = null;\n\t\t\tIqrfNetService.sendJson(json);\n\t\t},\n\t},\n\tmetaInfo: {\n\t\ttitle: 'iqrfnet.sendJson.title',\n\t},\n};\n</script>\n","import { render, staticRenderFns } from \"./SendJsonRequest.vue?vue&type=template&id=39c7ac2e&\"\nimport script from \"./SendJsonRequest.vue?vue&type=script&lang=js&\"\nexport * from \"./SendJsonRequest.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('39c7ac2e')) {\n      api.createRecord('39c7ac2e', component.options)\n    } else {\n      api.reload('39c7ac2e', component.options)\n    }\n    module.hot.accept(\"./SendJsonRequest.vue?vue&type=template&id=39c7ac2e&\", function () {\n      api.rerender('39c7ac2e', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/pages/IqrfNet/SendJsonRequest.vue\"\nexport default component.exports","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\n        \"CCard\",\n        { attrs: { \"body-wrapper\": \"\" } },\n        [\n          _c(\"ValidationObserver\", {\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(ref) {\n                  var invalid = ref.invalid\n                  return [\n                    _c(\n                      \"CForm\",\n                      {\n                        on: {\n                          submit: function($event) {\n                            $event.preventDefault()\n                            return _vm.handleSubmit($event)\n                          }\n                        }\n                      },\n                      [\n                        _c(\"ValidationProvider\", {\n                          attrs: {\n                            rules: \"dpaPacket|required\",\n                            \"custom-messages\": {\n                              required:\n                                \"iqrfnet.sendPacket.form.messages.missing.packet\"\n                            }\n                          },\n                          scopedSlots: _vm._u(\n                            [\n                              {\n                                key: \"default\",\n                                fn: function(ref) {\n                                  var valid = ref.valid\n                                  var touched = ref.touched\n                                  var errors = ref.errors\n                                  return [\n                                    _c(\"CInput\", {\n                                      attrs: {\n                                        label: _vm.$t(\n                                          \"iqrfnet.sendPacket.form.packet\"\n                                        ),\n                                        \"is-valid\": touched ? valid : null,\n                                        \"invalid-feedback\": _vm.$t(errors[0])\n                                      },\n                                      on: { input: _vm.setTimeout },\n                                      model: {\n                                        value: _vm.packet,\n                                        callback: function($$v) {\n                                          _vm.packet = $$v\n                                        },\n                                        expression: \"packet\"\n                                      }\n                                    })\n                                  ]\n                                }\n                              }\n                            ],\n                            null,\n                            true\n                          )\n                        }),\n                        _vm._v(\" \"),\n                        _c(\n                          \"CRow\",\n                          [\n                            _c(\n                              \"CCol\",\n                              { attrs: { md: \"6\" } },\n                              [\n                                _c(\"CInputCheckbox\", {\n                                  attrs: {\n                                    checked: _vm.addressOverwrite,\n                                    label: _vm.$t(\n                                      \"iqrfnet.sendPacket.form.addressOverwrite\"\n                                    )\n                                  },\n                                  on: {\n                                    \"update:checked\": function($event) {\n                                      _vm.addressOverwrite = $event\n                                    }\n                                  }\n                                }),\n                                _vm._v(\" \"),\n                                _c(\"ValidationProvider\", {\n                                  attrs: {\n                                    disabled: !_vm.addressOverwrite,\n                                    rules: _vm.addressOverwrite\n                                      ? \"integer|between:0,239|required\"\n                                      : \"\",\n                                    \"custom-messages\": {\n                                      between:\n                                        \"iqrfnet.sendPacket.form.messages.invalid.address\",\n                                      integer:\n                                        \"iqrfnet.sendPacket.form.messages.invalid.address\",\n                                      required:\n                                        \"iqrfnet.sendPacket.form.messages.missing.address\"\n                                    }\n                                  },\n                                  scopedSlots: _vm._u(\n                                    [\n                                      {\n                                        key: \"default\",\n                                        fn: function(ref) {\n                                          var valid = ref.valid\n                                          var touched = ref.touched\n                                          var errors = ref.errors\n                                          return [\n                                            _c(\"CInput\", {\n                                              attrs: {\n                                                disabled: !_vm.addressOverwrite,\n                                                label: _vm.$t(\n                                                  \"iqrfnet.sendPacket.form.address\"\n                                                ),\n                                                \"is-valid\":\n                                                  _vm.addressOverwrite &&\n                                                  touched\n                                                    ? valid\n                                                    : null,\n                                                \"invalid-feedback\": _vm.$t(\n                                                  errors[0]\n                                                ),\n                                                type: \"number\",\n                                                min: \"0\",\n                                                max: \"239\"\n                                              },\n                                              model: {\n                                                value: _vm.address,\n                                                callback: function($$v) {\n                                                  _vm.address = _vm._n($$v)\n                                                },\n                                                expression: \"address\"\n                                              }\n                                            })\n                                          ]\n                                        }\n                                      }\n                                    ],\n                                    null,\n                                    true\n                                  )\n                                })\n                              ],\n                              1\n                            ),\n                            _vm._v(\" \"),\n                            _c(\n                              \"CCol\",\n                              { attrs: { md: \"6\" } },\n                              [\n                                _c(\"CInputCheckbox\", {\n                                  attrs: {\n                                    checked: _vm.timeoutOverwrite,\n                                    label: _vm.$t(\n                                      \"iqrfnet.sendPacket.form.timeoutOverwrite\"\n                                    )\n                                  },\n                                  on: {\n                                    \"update:checked\": function($event) {\n                                      _vm.timeoutOverwrite = $event\n                                    }\n                                  }\n                                }),\n                                _vm._v(\" \"),\n                                _c(\"ValidationProvider\", {\n                                  attrs: {\n                                    rules: _vm.timeoutOverwrite\n                                      ? \"integer|min:0|required\"\n                                      : \"\",\n                                    \"custom-messages\": {\n                                      integer:\n                                        \"iqrfnet.sendPacket.form.messages.invalid.timeout\",\n                                      min:\n                                        \"iqrfnet.sendPacket.form.messages.invalid.timeout\",\n                                      required:\n                                        \"iqrfnet.sendPacket.form.messages.missing.timeout\"\n                                    }\n                                  },\n                                  scopedSlots: _vm._u(\n                                    [\n                                      {\n                                        key: \"default\",\n                                        fn: function(ref) {\n                                          var valid = ref.valid\n                                          var touched = ref.touched\n                                          var errors = ref.errors\n                                          return [\n                                            _c(\"CInput\", {\n                                              attrs: {\n                                                disabled: !_vm.timeoutOverwrite,\n                                                label: _vm.$t(\n                                                  \"iqrfnet.sendPacket.form.timeout\"\n                                                ),\n                                                \"is-valid\":\n                                                  _vm.timeoutOverwrite &&\n                                                  touched\n                                                    ? valid\n                                                    : null,\n                                                \"invalid-feedback\": _vm.$t(\n                                                  errors[0]\n                                                ),\n                                                type: \"number\"\n                                              },\n                                              model: {\n                                                value: _vm.timeout,\n                                                callback: function($$v) {\n                                                  _vm.timeout = _vm._n($$v)\n                                                },\n                                                expression: \"timeout\"\n                                              }\n                                            })\n                                          ]\n                                        }\n                                      }\n                                    ],\n                                    null,\n                                    true\n                                  )\n                                })\n                              ],\n                              1\n                            )\n                          ],\n                          1\n                        ),\n                        _vm._v(\" \"),\n                        _c(\n                          \"CButton\",\n                          {\n                            attrs: {\n                              color: \"primary\",\n                              type: \"submit\",\n                              disabled: invalid\n                            }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n\\t\\t\\t\\t\\t\" +\n                                _vm._s(_vm.$t(\"forms.send\")) +\n                                \"\\n\\t\\t\\t\\t\"\n                            )\n                          ]\n                        )\n                      ],\n                      1\n                    )\n                  ]\n                }\n              }\n            ])\n          })\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\"DpaMacros\", {\n        on: {\n          \"set-packet\": function($event) {\n            return _vm.setPacket($event)\n          }\n        }\n      }),\n      _vm._v(\" \"),\n      _c(\n        \"CRow\",\n        [\n          _c(\n            \"CCol\",\n            { attrs: { md: \"6\" } },\n            [\n              _vm.request !== null\n                ? _c(\n                    \"CCard\",\n                    [\n                      _c(\n                        \"CCardHeader\",\n                        { staticClass: \"d-flex\" },\n                        [\n                          _c(\"span\", { staticClass: \"mr-auto\" }, [\n                            _vm._v(\n                              \"\\n\\t\\t\\t\\t\\t\\t\" +\n                                _vm._s(_vm.$t(\"iqrfnet.sendPacket.request\")) +\n                                \"\\n\\t\\t\\t\\t\\t\"\n                            )\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\n                            \"CButton\",\n                            {\n                              directives: [\n                                {\n                                  name: \"clipboard\",\n                                  rawName: \"v-clipboard\",\n                                  value: _vm.request,\n                                  expression: \"request\"\n                                },\n                                {\n                                  name: \"clipboard\",\n                                  rawName: \"v-clipboard:success\",\n                                  value: function() {\n                                    return _vm.$toast.success(\n                                      _vm\n                                        .$t(\n                                          \"iqrfnet.sendPacket.copy.messages.request\"\n                                        )\n                                        .toString()\n                                    )\n                                  },\n                                  expression:\n                                    '() => $toast.success($t(\"iqrfnet.sendPacket.copy.messages.request\").toString())',\n                                  arg: \"success\"\n                                }\n                              ],\n                              attrs: { color: \"primary\", size: \"sm\" }\n                            },\n                            [\n                              _vm._v(\n                                \"\\n\\t\\t\\t\\t\\t\\t\" +\n                                  _vm._s(\n                                    _vm.$t(\"iqrfnet.sendPacket.copy.request\")\n                                  ) +\n                                  \"\\n\\t\\t\\t\\t\\t\"\n                              )\n                            ]\n                          )\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"CCardBody\",\n                        [\n                          _c(\"prism-editor\", {\n                            attrs: {\n                              highlight: _vm.highlighter,\n                              readonly: true\n                            },\n                            model: {\n                              value: _vm.request,\n                              callback: function($$v) {\n                                _vm.request = $$v\n                              },\n                              expression: \"request\"\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                : _vm._e()\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"CCol\",\n            { attrs: { md: \"6\" } },\n            [\n              _vm.response !== null\n                ? _c(\n                    \"CCard\",\n                    [\n                      _c(\n                        \"CCardHeader\",\n                        { staticClass: \"d-flex\" },\n                        [\n                          _c(\"span\", { staticClass: \"mr-auto\" }, [\n                            _vm._v(\n                              \"\\n\\t\\t\\t\\t\\t\\t\" +\n                                _vm._s(_vm.$t(\"iqrfnet.sendPacket.response\")) +\n                                \"\\n\\t\\t\\t\\t\\t\"\n                            )\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\n                            \"CButton\",\n                            {\n                              directives: [\n                                {\n                                  name: \"clipboard\",\n                                  rawName: \"v-clipboard\",\n                                  value: _vm.response,\n                                  expression: \"response\"\n                                },\n                                {\n                                  name: \"clipboard\",\n                                  rawName: \"v-clipboard:success\",\n                                  value: function() {\n                                    return _vm.$toast.success(\n                                      _vm\n                                        .$t(\n                                          \"iqrfnet.sendPacket.copy.messages.response\"\n                                        )\n                                        .toString()\n                                    )\n                                  },\n                                  expression:\n                                    '() => $toast.success($t(\"iqrfnet.sendPacket.copy.messages.response\").toString())',\n                                  arg: \"success\"\n                                }\n                              ],\n                              attrs: { color: \"primary\", size: \"sm\" }\n                            },\n                            [\n                              _vm._v(\n                                \"\\n\\t\\t\\t\\t\\t\\t\" +\n                                  _vm._s(\n                                    _vm.$t(\"iqrfnet.sendPacket.copy.response\")\n                                  ) +\n                                  \"\\n\\t\\t\\t\\t\\t\"\n                              )\n                            ]\n                          )\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"CCardBody\",\n                        [\n                          _c(\"prism-editor\", {\n                            attrs: {\n                              highlight: _vm.highlighter,\n                              readonly: true\n                            },\n                            model: {\n                              value: _vm.response,\n                              callback: function($$v) {\n                                _vm.response = $$v\n                              },\n                              expression: \"response\"\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                : _vm._e()\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _vm.macros\n    ? _c(\n        \"CCard\",\n        [\n          _c(\"CCardHeader\", [\n            _vm._v(\n              \"\\n\\t\\t\" + _vm._s(_vm.$t(\"iqrfnet.sendPacket.macros\")) + \"\\n\\t\"\n            )\n          ]),\n          _vm._v(\" \"),\n          _c(\n            \"CCardBody\",\n            [\n              _c(\n                \"CButtonGroup\",\n                { staticClass: \"flex-wrap\" },\n                _vm._l(_vm.macros, function(group) {\n                  return _c(\n                    \"CDropdown\",\n                    {\n                      key: group.id,\n                      attrs: {\n                        \"toggler-text\": group.name,\n                        color: \"primary\",\n                        placement: \"top-start\"\n                      }\n                    },\n                    _vm._l(group.macros, function(packet) {\n                      return _c(\n                        \"CDropdownItem\",\n                        {\n                          key: packet.name,\n                          on: {\n                            click: function($event) {\n                              return _vm.$emit(\"set-packet\", packet.request)\n                            }\n                          }\n                        },\n                        [\n                          _vm._v(\n                            \"\\n\\t\\t\\t\\t\\t\" + _vm._s(packet.name) + \"\\n\\t\\t\\t\\t\"\n                          )\n                        ]\n                      )\n                    }),\n                    1\n                  )\n                }),\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      )\n    : _vm._e()\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import axios from 'axios';\nimport { authorizationHeader } from '../helpers/authorizationHeader';\n/**\n * IQRF networks service\n */\nvar IqrfService = /** @class */ (function () {\n    function IqrfService() {\n    }\n    /**\n     * Retrieves IQRF interface ports\n     */\n    IqrfService.prototype.getInterfacePorts = function (interfaceType) {\n        return axios.get('iqrf/interfaces/', { headers: authorizationHeader() })\n            .then(function (response) {\n            return response.data[interfaceType];\n        });\n    };\n    /**\n     * Retrieves IQRF IDE Macros\n     */\n    IqrfService.prototype.getMacros = function () {\n        return axios.get('iqrf/macros/', { headers: authorizationHeader() });\n    };\n    return IqrfService;\n}());\nexport default new IqrfService();\n","import mod from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DpaMacros.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DpaMacros.vue?vue&type=script&lang=ts&\"","import Vue from 'vue';\nimport { CButtonGroup, CCard, CCardBody, CCardHeader, CDropdown, CDropdownItem } from '@coreui/vue/src';\nimport IqrfService from '../../services/IqrfService';\nexport default Vue.extend({\n    name: 'DpaMacros',\n    components: {\n        CButtonGroup: CButtonGroup,\n        CCard: CCard,\n        CCardBody: CCardBody,\n        CCardHeader: CCardHeader,\n        CDropdown: CDropdown,\n        CDropdownItem: CDropdownItem,\n    },\n    data: function () {\n        return {\n            macros: null,\n        };\n    },\n    created: function () {\n        var _this = this;\n        IqrfService.getMacros()\n            .then(function (response) {\n            _this.macros = response.data.filter(function (group) {\n                if (!group.enabled) {\n                    return null;\n                }\n                group.macros = group.macros.filter(function (packet) {\n                    if (packet.enabled) {\n                        return packet;\n                    }\n                });\n                return group;\n            });\n        });\n    },\n});\n","import { render, staticRenderFns } from \"./DpaMacros.vue?vue&type=template&id=676e4146&\"\nimport script from \"./DpaMacros.vue?vue&type=script&lang=ts&\"\nexport * from \"./DpaMacros.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('676e4146')) {\n      api.createRecord('676e4146', component.options)\n    } else {\n      api.reload('676e4146', component.options)\n    }\n    module.hot.accept(\"./DpaMacros.vue?vue&type=template&id=676e4146&\", function () {\n      api.rerender('676e4146', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/components/IqrfNet/DpaMacros.vue\"\nexport default component.exports","/**\n * Copyright 2017 MICRORISC s.r.o.\n * Copyright 2017-2019 IQRF Tech s.r.o.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\n/**\n * DPA packet\n */\nvar Packet = /** @class */ (function () {\n    /**\n     * Constructor\n     * @param nadr NADR\n     * @param pnum PNUM\n     * @param pcmd PCMD\n     * @param hwpid HWPID\n     * @param pdata PDATA\n     */\n    function Packet(nadr, pnum, pcmd, hwpid, pdata) {\n        this.nadr = nadr;\n        this.pnum = pnum;\n        this.pcmd = pcmd;\n        this.hwpid = hwpid;\n        this.pdata = pdata;\n    }\n    /**\n     * Detect timeout from parsed DPA packet\n     * @returns DPA timeout\n     */\n    Packet.prototype.detectTimeout = function () {\n        var timeout = null;\n        if (this.pnum === 0 && this.pcmd === 4) {\n            timeout = 12000;\n        }\n        else if (this.pnum === 0 && this.pcmd === 7) {\n            timeout = 0;\n        }\n        else if (this.pnum === 13 && this.pcmd === 0) {\n            timeout = 6000;\n        }\n        return timeout;\n    };\n    /**\n     * Parses DPA packet\n     * @param {string} packet DPA packet to parse\n     * @returns {Packet} Parsed DPA packet\n     */\n    Packet.parse = function (packet) {\n        var packetArray = packet.split('.');\n        var nadrLo = packetArray.shift();\n        var nadrHi = packetArray.shift();\n        var nadr = parseInt(nadrHi + nadrLo, 16);\n        var pnum = parseInt(packetArray.shift(), 16);\n        var pcmd = parseInt(packetArray.shift(), 16);\n        var hwpidLo = packetArray.shift();\n        var hwpidHi = packetArray.shift();\n        var hwpid = parseInt(hwpidHi + hwpidLo, 16);\n        var pdata = packetArray.map(function (hex) { return parseInt(hex, 16); });\n        return new Packet(nadr, pnum, pcmd, hwpid, pdata);\n    };\n    /**\n     * Returns DPA packet string\n     * @returns {string} DPA packet as string\n     */\n    Packet.prototype.toString = function () {\n        return __spreadArrays([\n            this.nadr & 255, this.nadr >> 8, this.pnum, this.pcmd,\n            this.hwpid & 255, this.hwpid >> 8\n        ], this.pdata).map(function (int) { return int.toString(16).padStart(2, '0'); }).join('.');\n    };\n    return Packet;\n}());\n/**\n * Validate DPA packet\n * @param packet DPA packet to validate\n * @returns Is valid DPA packet?\n */\nfunction validatePacket(packet) {\n    var re = new RegExp('^([0-9a-fA-F]{1,2}\\\\.){4,62}[0-9a-fA-F]{1,2}(\\\\.|)$', 'i');\n    return packet.match(re) !== null;\n}\n/**\n * Updates NADR in DPA packet\n * @param request DPA request to modify\n * @param address New NADR\n * @returns Modified DPA request\n */\nfunction updateNadr(request, address) {\n    var packet = Packet.parse(request);\n    packet.nadr = address;\n    return packet.toString();\n}\nexport default { Packet: Packet, updateNadr: updateNadr, validatePacket: validatePacket };\n","import mod from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SendDpaPacket.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SendDpaPacket.vue?vue&type=script&lang=ts&\"","import Vue from 'vue';\nimport { CButton, CCard, CCardBody, CCardHeader, CCol, CForm, CInput, CInputCheckbox, CRow } from '@coreui/vue/src';\nimport DpaMacros from '../../components/IqrfNet/DpaMacros';\nimport { between, integer, min_value, required } from 'vee-validate/dist/rules';\nimport { extend, ValidationObserver, ValidationProvider } from 'vee-validate';\nimport sendPacket from '../../iqrfNet/sendPacket';\nimport { PrismEditor } from 'vue-prism-editor';\nimport 'vue-prism-editor/dist/prismeditor.min.css';\n// @ts-ignore\nimport Prism from 'prismjs/components/prism-core';\nimport 'prismjs/components/prism-json';\nimport 'prismjs/themes/prism.css';\nexport default Vue.extend({\n    name: 'SendDpaPacket',\n    components: {\n        CButton: CButton,\n        CCard: CCard,\n        CCardBody: CCardBody,\n        CCardHeader: CCardHeader,\n        CCol: CCol,\n        CForm: CForm,\n        CInput: CInput,\n        CInputCheckbox: CInputCheckbox,\n        CRow: CRow,\n        DpaMacros: DpaMacros,\n        PrismEditor: PrismEditor,\n        ValidationObserver: ValidationObserver,\n        ValidationProvider: ValidationProvider,\n    },\n    data: function () {\n        return {\n            packet: null,\n            address: 0,\n            addressOverwrite: false,\n            timeout: 1000,\n            timeoutOverwrite: false,\n            request: null,\n            response: null,\n        };\n    },\n    created: function () {\n        var _this = this;\n        extend('between', between);\n        extend('integer', integer);\n        extend('min', min_value);\n        extend('required', required);\n        extend('dpaPacket', function (packet) {\n            return sendPacket.validatePacket(packet) ? true : 'iqrfnet.sendPacket.form.messages.invalid.packet';\n        });\n        this.unsubscribe = this.$store.subscribe(function (mutation) {\n            if (mutation.type === 'SOCKET_ONSEND' &&\n                mutation.payload.mType === 'iqrfRaw') {\n                _this.request = JSON.stringify(mutation.payload, null, 4);\n                _this.response = null;\n            }\n            if (mutation.type === 'SOCKET_ONMESSAGE' &&\n                mutation.payload.mType === 'iqrfRaw') {\n                _this.$store.commit('spinner/HIDE');\n                _this.response = JSON.stringify(mutation.payload, null, 4);\n                switch (mutation.payload.data.status) {\n                    case 0:\n                        _this.$toast.success(_this.$t('iqrfnet.sendPacket.messages.success').toString());\n                        break;\n                    case 2:\n                        _this.$toast.error(_this.$t('iqrfnet.sendPacket.messages.incorrect.pcmd').toString());\n                        break;\n                    case 3:\n                        _this.$toast.error(_this.$t('iqrfnet.sendPacket.messages.incorrect.pnum').toString());\n                        break;\n                    case 5:\n                        _this.$toast.error(_this.$t('iqrfnet.sendPacket.messages.incorrect.dataLength').toString());\n                        break;\n                    case 6:\n                        _this.$toast.error(_this.$t('iqrfnet.sendPacket.messages.incorrect.data').toString());\n                        break;\n                    case 7:\n                        _this.$toast.error(_this.$t('iqrfnet.sendPacket.messages.incorrect.hwpid').toString());\n                        break;\n                    case 8:\n                        _this.$toast.error(_this.$t('iqrfnet.sendPacket.messages.incorrect.nadr').toString());\n                        break;\n                    default:\n                        _this.$toast.error(_this.$t('iqrfnet.sendPacket.messages.failure').toString());\n                        break;\n                }\n            }\n        });\n    },\n    beforeDestroy: function () {\n        this.unsubscribe();\n    },\n    methods: {\n        /**\n         * Handles Send DPA packet form submit event\n         */\n        handleSubmit: function () {\n            if (this.packet === null || this.packet === '') {\n                this.$toast.error(this.$t('iqrfnet.sendPacket.form.messages.missing.packet').toString());\n                return;\n            }\n            this.$store.commit('spinner/SHOW');\n            var json = {\n                'mType': 'iqrfRaw',\n                'data': {\n                    'req': {\n                        'rData': this.packet,\n                    },\n                    'returnVerbose': true,\n                },\n            };\n            if (this.addressOverwrite && this.address !== null) {\n                json.data.req.rData = sendPacket.updateNadr(this.packet, this.address);\n            }\n            if (this.timeoutOverwrite && this.timeout !== null) {\n                json.data.timeout = this.timeout;\n            }\n            return this.$store.dispatch('sendRequest', json);\n        },\n        /**\n         * JSON highlighter method\n         */\n        highlighter: function (code) {\n            return Prism.highlight(code, Prism.languages.json, 'json');\n        },\n        /**\n         * Sets new DPA packet\n         * @param {string} newPacket New DPA packet\n         */\n        setPacket: function (newPacket) {\n            this.packet = newPacket;\n            this.setTimeout();\n        },\n        /**\n         * Sets DPA timeout\n         */\n        setTimeout: function () {\n            var packet = sendPacket.Packet.parse(this.packet);\n            var newTimeout = packet.detectTimeout();\n            if (newTimeout === null) {\n                this.timeoutOverwrite = false;\n                this.timeout = 1000;\n            }\n            else {\n                this.timeoutOverwrite = true;\n                this.timeout = newTimeout;\n            }\n        },\n    },\n    metaInfo: {\n        title: 'iqrfnet.sendPacket.title',\n    },\n});\n","import { render, staticRenderFns } from \"./SendDpaPacket.vue?vue&type=template&id=fea8cab8&\"\nimport script from \"./SendDpaPacket.vue?vue&type=script&lang=ts&\"\nexport * from \"./SendDpaPacket.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('fea8cab8')) {\n      api.createRecord('fea8cab8', component.options)\n    } else {\n      api.reload('fea8cab8', component.options)\n    }\n    module.hot.accept(\"./SendDpaPacket.vue?vue&type=template&id=fea8cab8&\", function () {\n      api.rerender('fea8cab8', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/pages/IqrfNet/SendDpaPacket.vue\"\nexport default component.exports","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"CRow\",\n    [\n      _c(\n        \"CCol\",\n        { attrs: { md: \"6\" } },\n        [_c(\"BinaryOutputManager\"), _vm._v(\" \"), _c(\"SensorManager\")],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"CCol\",\n        { attrs: { md: \"6\" } },\n        [_c(\"LightManager\"), _vm._v(\" \"), _c(\"DaliManager\")],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"CCard\",\n    [\n      _c(\"CCardHeader\", [\n        _vm._v(_vm._s(_vm.$t(\"iqrfnet.standard.binaryOutput.title\")))\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"CCardBody\",\n        [\n          _c(\"ValidationObserver\", {\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(ref) {\n                  var invalid = ref.invalid\n                  return [\n                    _c(\n                      \"CForm\",\n                      [\n                        _c(\"ValidationProvider\", {\n                          attrs: {\n                            rules: \"integer|required|between:1,239\",\n                            \"custom-messages\": {\n                              integer: \"forms.messages.integer\",\n                              required:\n                                \"iqrfnet.standard.form.messages.address\",\n                              between: \"iqrfnet.standard.form.messages.address\"\n                            }\n                          },\n                          scopedSlots: _vm._u(\n                            [\n                              {\n                                key: \"default\",\n                                fn: function(ref) {\n                                  var errors = ref.errors\n                                  var touched = ref.touched\n                                  var valid = ref.valid\n                                  return [\n                                    _c(\"CInput\", {\n                                      attrs: {\n                                        type: \"number\",\n                                        min: \"1\",\n                                        max: \"239\",\n                                        label: _vm.$t(\n                                          \"iqrfnet.standard.form.address\"\n                                        ),\n                                        \"is-valid\": touched ? valid : null,\n                                        \"invalid-feedback\": _vm.$t(errors[0])\n                                      },\n                                      model: {\n                                        value: _vm.address,\n                                        callback: function($$v) {\n                                          _vm.address = _vm._n($$v)\n                                        },\n                                        expression: \"address\"\n                                      }\n                                    })\n                                  ]\n                                }\n                              }\n                            ],\n                            null,\n                            true\n                          )\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"ValidationProvider\", {\n                          attrs: {\n                            rules: \"integer|required|between:0,31\",\n                            \"custom-messages\": {\n                              integer: \"forms.messages.integer\",\n                              required:\n                                \"iqrfnet.standard.binaryOutput.form.messages.index\",\n                              between:\n                                \"iqrfnet.standard.binaryOutput.form.messages.index\"\n                            }\n                          },\n                          scopedSlots: _vm._u(\n                            [\n                              {\n                                key: \"default\",\n                                fn: function(ref) {\n                                  var errors = ref.errors\n                                  var touched = ref.touched\n                                  var valid = ref.valid\n                                  return [\n                                    _c(\"CInput\", {\n                                      attrs: {\n                                        type: \"number\",\n                                        min: \"0\",\n                                        max: \"31\",\n                                        label: _vm.$t(\n                                          \"iqrfnet.standard.binaryOutput.form.index\"\n                                        ),\n                                        \"is-valid\": touched ? valid : null,\n                                        \"invalid-feedback\": _vm.$t(errors[0])\n                                      },\n                                      model: {\n                                        value: _vm.index,\n                                        callback: function($$v) {\n                                          _vm.index = _vm._n($$v)\n                                        },\n                                        expression: \"index\"\n                                      }\n                                    })\n                                  ]\n                                }\n                              }\n                            ],\n                            null,\n                            true\n                          )\n                        }),\n                        _vm._v(\" \"),\n                        _c(\n                          \"div\",\n                          { staticClass: \"form-group\" },\n                          [\n                            _c(\"label\", { attrs: { for: \"formStateSwitch\" } }, [\n                              _vm._v(\n                                \"\\n\\t\\t\\t\\t\\t\\t\" +\n                                  _vm._s(\n                                    _vm.$t(\n                                      \"iqrfnet.standard.binaryOutput.form.state\"\n                                    )\n                                  ) +\n                                  \"\\n\\t\\t\\t\\t\\t\"\n                              )\n                            ]),\n                            _c(\"br\"),\n                            _vm._v(\" \"),\n                            _c(\"CSwitch\", {\n                              attrs: {\n                                id: \"formStateSwitch\",\n                                checked: _vm.state,\n                                color: \"primary\",\n                                size: \"lg\",\n                                shape: \"pill\",\n                                \"label-on\": _vm.$t(\n                                  \"iqrfnet.standard.binaryOutput.form.enabled\"\n                                ),\n                                \"label-off\": _vm.$t(\n                                  \"iqrfnet.standard.binaryOutput.form.disabled\"\n                                )\n                              },\n                              on: {\n                                \"update:checked\": function($event) {\n                                  _vm.state = $event\n                                }\n                              }\n                            })\n                          ],\n                          1\n                        ),\n                        _vm._v(\" \"),\n                        _c(\n                          \"CButton\",\n                          {\n                            attrs: { color: \"primary\", disabled: invalid },\n                            on: {\n                              click: function($event) {\n                                $event.preventDefault()\n                                return _vm.submitEnumerate($event)\n                              }\n                            }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n\\t\\t\\t\\t\\t\" +\n                                _vm._s(_vm.$t(\"forms.enumerate\")) +\n                                \"\\n\\t\\t\\t\\t\"\n                            )\n                          ]\n                        ),\n                        _vm._v(\" \"),\n                        _c(\n                          \"CButton\",\n                          {\n                            attrs: { color: \"secondary\", disabled: invalid },\n                            on: {\n                              click: function($event) {\n                                $event.preventDefault()\n                                return _vm.submitGetStates($event)\n                              }\n                            }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n\\t\\t\\t\\t\\t\" +\n                                _vm._s(\n                                  _vm.$t(\n                                    \"iqrfnet.standard.binaryOutput.form.getStates\"\n                                  )\n                                ) +\n                                \"\\n\\t\\t\\t\\t\"\n                            )\n                          ]\n                        ),\n                        _vm._v(\" \"),\n                        _c(\n                          \"CButton\",\n                          {\n                            attrs: { color: \"secondary\", disabled: invalid },\n                            on: {\n                              click: function($event) {\n                                $event.preventDefault()\n                                return _vm.submitSetState($event)\n                              }\n                            }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n\\t\\t\\t\\t\\t\" +\n                                _vm._s(\n                                  _vm.$t(\n                                    \"iqrfnet.standard.binaryOutput.form.setState\"\n                                  )\n                                ) +\n                                \"\\n\\t\\t\\t\\t\"\n                            )\n                          ]\n                        )\n                      ],\n                      1\n                    )\n                  ]\n                }\n              }\n            ])\n          })\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _vm.responseType !== null\n        ? _c(\"CCardFooter\", [\n            _vm.responseType === \"enum\"\n              ? _c(\"table\", { staticClass: \"table\" }, [\n                  _c(\"thead\", [\n                    _vm._v(\n                      \"\\n\\t\\t\\t\\t\" +\n                        _vm._s(_vm.$t(\"iqrfnet.standard.binaryOutput.enum\")) +\n                        \"\\n\\t\\t\\t\"\n                    )\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"tbody\", [\n                    _c(\"tr\", [\n                      _c(\"th\", [\n                        _vm._v(\n                          _vm._s(\n                            _vm.$t(\"iqrfnet.standard.binaryOutput.outputs\")\n                          )\n                        )\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"td\", [_vm._v(_vm._s(_vm.numOutputs))])\n                    ])\n                  ])\n                ])\n              : _vm._e(),\n            _vm._v(\" \"),\n            _vm.responseType === \"set\"\n              ? _c(\"table\", { staticClass: \"table scroll-table\" }, [\n                  _c(\"thead\", [\n                    _vm._v(\n                      \"\\n\\t\\t\\t\\t\" +\n                        _vm._s(_vm.$t(\"iqrfnet.standard.binaryOutput.prev\")) +\n                        \"\\n\\t\\t\\t\"\n                    )\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"tbody\", [\n                    _c(\n                      \"tr\",\n                      [\n                        _c(\"th\", [\n                          _vm._v(\n                            _vm._s(\n                              _vm.$t(\"iqrfnet.standard.binaryOutput.index\")\n                            )\n                          )\n                        ]),\n                        _vm._v(\" \"),\n                        _vm._l(Array(32).keys(), function(col) {\n                          return _c(\"td\", { key: col }, [\n                            _vm._v(\n                              \"\\n\\t\\t\\t\\t\\t\\t\" + _vm._s(col) + \"\\n\\t\\t\\t\\t\\t\"\n                            )\n                          ])\n                        })\n                      ],\n                      2\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"tr\",\n                      [\n                        _c(\"th\", [\n                          _vm._v(\n                            _vm._s(\n                              _vm.$t(\"iqrfnet.standard.binaryOutput.state\")\n                            )\n                          )\n                        ]),\n                        _vm._v(\" \"),\n                        _vm._l(Array(32).keys(), function(ind) {\n                          return _c(\n                            \"td\",\n                            { key: ind },\n                            [\n                              _vm.states[ind] === true\n                                ? _c(\"CIcon\", {\n                                    staticClass: \"text-success\",\n                                    attrs: { content: _vm.$options.icons.on }\n                                  })\n                                : _vm._e(),\n                              _vm._v(\" \"),\n                              _vm.states[ind] === false\n                                ? _c(\"CIcon\", {\n                                    staticClass: \"text-danger\",\n                                    attrs: { content: _vm.$options.icons.off }\n                                  })\n                                : _vm._e()\n                            ],\n                            1\n                          )\n                        })\n                      ],\n                      2\n                    )\n                  ])\n                ])\n              : _vm._e()\n          ])\n        : _vm._e()\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import store from '../../store';\nvar StandardBinaryOutput = /** @class */ (function () {\n    /**\n     * Constructor\n     * @param index Index of the binary output\n     * @param state State of the binary output\n     */\n    function StandardBinaryOutput(index, state) {\n        this.index = index;\n        this.state = state;\n    }\n    return StandardBinaryOutput;\n}());\nexport { StandardBinaryOutput };\n/**\n * IQRF Standard binary output service\n */\nvar StandardBinaryOutputService = /** @class */ (function () {\n    function StandardBinaryOutputService() {\n    }\n    /**\n     * Performs Binary Output enumeration on device specified by address.\n     * @param address Node address\n     */\n    StandardBinaryOutputService.prototype.enumerate = function (address) {\n        return store.dispatch('sendRequest', {\n            'mType': 'iqrfBinaryoutput_Enumerate',\n            'data': {\n                'req': {\n                    'nAdr': address,\n                    'param': {},\n                },\n                'returnVerbose': true,\n            },\n        });\n    };\n    /**\n     * Retrieves states of binary outputs.\n     * @param address Node address\n     */\n    StandardBinaryOutputService.prototype.getOutputs = function (address) {\n        return this.setOutputs(address, []);\n    };\n    /**\n     * Sets binary outputs to a specified state.\n     * If no output settings are specified, only previous states of binary outputs are retrieved.\n     * @param address Node address\n     * @param outputs New output setting\n     */\n    StandardBinaryOutputService.prototype.setOutputs = function (address, outputs) {\n        if (outputs === void 0) { outputs = []; }\n        return store.dispatch('sendRequest', {\n            'mType': 'iqrfBinaryoutput_SetOutput',\n            'data': {\n                'req': {\n                    'nAdr': address,\n                    'param': {\n                        'binOuts': outputs,\n                    },\n                },\n                'returnVerbose': true,\n            },\n        });\n    };\n    return StandardBinaryOutputService;\n}());\nexport default new StandardBinaryOutputService();\n","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BinaryOutputManager.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BinaryOutputManager.vue?vue&type=script&lang=js&\"","<template>\n\t<CCard>\n\t\t<CCardHeader>{{ $t('iqrfnet.standard.binaryOutput.title') }}</CCardHeader>\n\t\t<CCardBody>\n\t\t\t<ValidationObserver v-slot='{ invalid }'>\n\t\t\t\t<CForm>\n\t\t\t\t\t<ValidationProvider\n\t\t\t\t\t\tv-slot='{ errors, touched, valid }'\n\t\t\t\t\t\trules='integer|required|between:1,239'\n\t\t\t\t\t\t:custom-messages='{\n\t\t\t\t\t\t\tinteger: \"forms.messages.integer\",\n\t\t\t\t\t\t\trequired: \"iqrfnet.standard.form.messages.address\",\n\t\t\t\t\t\t\tbetween: \"iqrfnet.standard.form.messages.address\"\n\t\t\t\t\t\t}'\n\t\t\t\t\t>\n\t\t\t\t\t\t<CInput\n\t\t\t\t\t\t\tv-model.number='address'\n\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\tmin='1'\n\t\t\t\t\t\t\tmax='239'\n\t\t\t\t\t\t\t:label='$t(\"iqrfnet.standard.form.address\")'\n\t\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ValidationProvider>\n\t\t\t\t\t<ValidationProvider\n\t\t\t\t\t\tv-slot='{ errors, touched, valid }'\n\t\t\t\t\t\trules='integer|required|between:0,31'\n\t\t\t\t\t\t:custom-messages='{\n\t\t\t\t\t\t\tinteger: \"forms.messages.integer\",\n\t\t\t\t\t\t\trequired: \"iqrfnet.standard.binaryOutput.form.messages.index\",\n\t\t\t\t\t\t\tbetween: \"iqrfnet.standard.binaryOutput.form.messages.index\"\n\t\t\t\t\t\t}'\n\t\t\t\t\t>\n\t\t\t\t\t\t<CInput\n\t\t\t\t\t\t\tv-model.number='index'\n\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\tmin='0'\n\t\t\t\t\t\t\tmax='31'\n\t\t\t\t\t\t\t:label='$t(\"iqrfnet.standard.binaryOutput.form.index\")'\n\t\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ValidationProvider>\n\t\t\t\t\t<div class='form-group'>\n\t\t\t\t\t\t<label for='formStateSwitch'>\n\t\t\t\t\t\t\t{{ $t('iqrfnet.standard.binaryOutput.form.state') }}\n\t\t\t\t\t\t</label><br>\n\t\t\t\t\t\t<CSwitch\n\t\t\t\t\t\t\tid='formStateSwitch'\n\t\t\t\t\t\t\t:checked.sync='state'\n\t\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\t\tsize='lg'\n\t\t\t\t\t\t\tshape='pill'\n\t\t\t\t\t\t\t:label-on='$t(\"iqrfnet.standard.binaryOutput.form.enabled\")'\n\t\t\t\t\t\t\t:label-off='$t(\"iqrfnet.standard.binaryOutput.form.disabled\")'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<CButton\n\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\t:disabled='invalid'\n\t\t\t\t\t\t@click.prevent='submitEnumerate'\n\t\t\t\t\t>\n\t\t\t\t\t\t{{ $t('forms.enumerate') }}\n\t\t\t\t\t</CButton>\n\t\t\t\t\t<CButton\n\t\t\t\t\t\tcolor='secondary'\n\t\t\t\t\t\t:disabled='invalid'\n\t\t\t\t\t\t@click.prevent='submitGetStates'\n\t\t\t\t\t>\n\t\t\t\t\t\t{{ $t('iqrfnet.standard.binaryOutput.form.getStates') }}\n\t\t\t\t\t</CButton>\n\t\t\t\t\t<CButton\n\t\t\t\t\t\tcolor='secondary'\n\t\t\t\t\t\t:disabled='invalid'\n\t\t\t\t\t\t@click.prevent='submitSetState'\n\t\t\t\t\t>\n\t\t\t\t\t\t{{ $t('iqrfnet.standard.binaryOutput.form.setState') }}\n\t\t\t\t\t</CButton>\n\t\t\t\t</CForm>\n\t\t\t</ValidationObserver>\n\t\t</CCardBody>\n\t\t<CCardFooter v-if='responseType !== null'>\n\t\t\t<table v-if='responseType === \"enum\"' class='table'>\n\t\t\t\t<thead>\n\t\t\t\t\t{{ $t('iqrfnet.standard.binaryOutput.enum') }}\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>{{ $t('iqrfnet.standard.binaryOutput.outputs') }}</th>\n\t\t\t\t\t\t<td>{{ numOutputs }}</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t\t<table v-if='responseType === \"set\"' class='table scroll-table'>\n\t\t\t\t<thead>\n\t\t\t\t\t{{ $t('iqrfnet.standard.binaryOutput.prev') }}\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>{{ $t('iqrfnet.standard.binaryOutput.index') }}</th>\n\t\t\t\t\t\t<td v-for='col of Array(32).keys()' :key='col'>\n\t\t\t\t\t\t\t{{ col }}\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>{{ $t('iqrfnet.standard.binaryOutput.state') }}</th>\n\t\t\t\t\t\t<td v-for='ind of Array(32).keys()' :key='ind'>\n\t\t\t\t\t\t\t<CIcon\n\t\t\t\t\t\t\t\tv-if='states[ind] === true'\n\t\t\t\t\t\t\t\tclass='text-success'\n\t\t\t\t\t\t\t\t:content='$options.icons.on'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<CIcon\n\t\t\t\t\t\t\t\tv-if='states[ind] === false'\n\t\t\t\t\t\t\t\tclass='text-danger'\n\t\t\t\t\t\t\t\t:content='$options.icons.off'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</CCardFooter>\n\t</CCard>\n</template>\n\n<script>\nimport {CButton, CCard, CCardBody, CCardHeader, CForm, CIcon, CInput, CSwitch} from '@coreui/vue/src';\nimport {cilCheckAlt, cilX} from '@coreui/icons';\nimport {extend, ValidationObserver, ValidationProvider} from 'vee-validate';\nimport {timeout} from '../../helpers/timeout';\nimport {between, integer, required} from 'vee-validate/dist/rules';\nimport StandardBinaryOutputService, {StandardBinaryOutput} from '../../services/DaemonApi/StandardBinaryOutputService';\n\nexport default {\n\tname: 'BinaryOutputManager',\n\tcomponents: {\n\t\tCButton,\n\t\tCCard,\n\t\tCCardBody,\n\t\tCCardHeader,\n\t\tCForm,\n\t\tCIcon,\n\t\tCInput,\n\t\tCSwitch,\n\t\tValidationObserver,\n\t\tValidationProvider\n\t},\n\tdata() {\n\t\treturn {\n\t\t\taddress: 1,\n\t\t\tallowedMTypes: [\n\t\t\t\t'iqrfBinaryoutput_Enumerate',\n\t\t\t\t'iqrfBinaryoutput_SetOutput'\n\t\t\t],\n\t\t\tindex: 0,\n\t\t\tnumOutputs: 0,\n\t\t\tresponseType: null,\n\t\t\tstate: false,\n\t\t\tstates: null,\n\t\t\ttimeout: null,\n\t\t};\n\t},\n\tcreated() {\n\t\textend('integer', integer);\n\t\textend('required', required);\n\t\textend('between', between);\n\t\tthis.unsubscribe = this.$store.subscribe(mutation => {\n\t\t\tif (mutation.type === 'SOCKET_ONSEND') {\n\t\t\t\tif (!this.allowedMTypes.includes(mutation.payload.mType)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.responseType = null;\n\t\t\t\tthis.timeout = timeout('iqrfnet.networkManager.messages.submit.timeout', 30000);\n\t\t\t}\n\t\t\tif (mutation.type === 'SOCKET_ONMESSAGE') {\n\t\t\t\tif (!this.allowedMTypes.includes(mutation.payload.mType)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tclearTimeout(this.timeout);\n\t\t\t\tthis.$store.commit('spinner/HIDE');\n\t\t\t\tswitch(mutation.payload.data.status) {\n\t\t\t\t\tcase -1:\n\t\t\t\t\t\tthis.$toast.error(\n\t\t\t\t\t\t\tthis.$t('iqrfnet.standard.binaryOutput.messages.timeout')\n\t\t\t\t\t\t\t\t.toString()\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tthis.$toast.success(\n\t\t\t\t\t\t\tthis.$t('iqrfnet.standard.binaryOutput.messages.success')\n\t\t\t\t\t\t\t\t.toString()\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (mutation.payload.mType === 'iqrfBinaryoutput_Enumerate') {\n\t\t\t\t\t\t\tthis.numOutputs = mutation.payload.data.rsp.result.binOuts;\n\t\t\t\t\t\t\tthis.responseType = 'enum';\n\t\t\t\t\t\t} else if (mutation.payload.mType === 'iqrfBinaryoutput_SetOutput') {\n\t\t\t\t\t\t\tthis.parseSetOutput(mutation.payload.data.rsp.result.prevVals);\n\t\t\t\t\t\t\tthis.responseType = 'set';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tthis.$toast.error(\n\t\t\t\t\t\t\tthis.$t('iqrfnet.standard.binaryOutput.messages.fail')\n\t\t\t\t\t\t\t\t.toString()\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tthis.$toast.error(\n\t\t\t\t\t\t\tthis.$t('iqrfnet.standard.binaryOutput.messages.pnum')\n\t\t\t\t\t\t\t\t.toString()\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t}\n\t\t});\n\t\tthis.generateStates();\n\t},\n\tbeforeDestroy() {\n\t\tthis.unsubscribe();\n\t},\n\tmethods: {\n\t\tgenerateStates() {\n\t\t\tthis.states = new Array(60).fill(false);\n\t\t},\n\t\tparseSetOutput(states) {\n\t\t\tfor(let i = 0; i < states.length; ++i) {\n\t\t\t\tthis.states[i] = states[i];\n\t\t\t}\n\t\t},\n\t\tsubmitEnumerate() {\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\tStandardBinaryOutputService.enumerate(this.address);\n\t\t},\n\t\tsubmitGetStates() {\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\tStandardBinaryOutputService.getOutputs(this.address);\n\t\t},\n\t\tsubmitSetState() {\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\tconst output = new StandardBinaryOutput(this.index, this.state);\n\t\t\tStandardBinaryOutputService.setOutputs(this.address, [output]);\n\t\t},\n\t},\n\ticons: {\n\t\ton: cilCheckAlt,\n\t\toff: cilX,\n\t},\n};\n</script>\n\n<style scoped>\n.scroll-table {\n    display: block;\n    overflow-x: auto;\n    white-space: nowrap;\n}\n</style>\n","import { render, staticRenderFns } from \"./BinaryOutputManager.vue?vue&type=template&id=1e7284a8&scoped=true&\"\nimport script from \"./BinaryOutputManager.vue?vue&type=script&lang=js&\"\nexport * from \"./BinaryOutputManager.vue?vue&type=script&lang=js&\"\nimport style0 from \"./BinaryOutputManager.vue?vue&type=style&index=0&id=1e7284a8&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"1e7284a8\",\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('1e7284a8')) {\n      api.createRecord('1e7284a8', component.options)\n    } else {\n      api.reload('1e7284a8', component.options)\n    }\n    module.hot.accept(\"./BinaryOutputManager.vue?vue&type=template&id=1e7284a8&scoped=true&\", function () {\n      api.rerender('1e7284a8', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/components/IqrfNet/BinaryOutputManager.vue\"\nexport default component.exports","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"CCard\",\n    [\n      _c(\"CCardHeader\", [\n        _vm._v(_vm._s(_vm.$t(\"iqrfnet.standard.dali.title\")))\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"CCardBody\",\n        [\n          _c(\"ValidationObserver\", {\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(ref) {\n                  var invalid = ref.invalid\n                  return [\n                    _c(\n                      \"CForm\",\n                      [\n                        _c(\"ValidationProvider\", {\n                          attrs: {\n                            rules: \"integer|required|between:1,239\",\n                            \"custom-messages\": {\n                              between: \"iqrfnet.standard.form.messages.address\",\n                              integer: \"forms.messages.integer\",\n                              required: \"iqrfnet.standard.form.messages.address\"\n                            }\n                          },\n                          scopedSlots: _vm._u(\n                            [\n                              {\n                                key: \"default\",\n                                fn: function(ref) {\n                                  var errors = ref.errors\n                                  var touched = ref.touched\n                                  var valid = ref.valid\n                                  return [\n                                    _c(\"CInput\", {\n                                      attrs: {\n                                        type: \"number\",\n                                        min: \"1\",\n                                        max: \"239\",\n                                        label: _vm.$t(\n                                          \"iqrfnet.standard.form.address\"\n                                        ),\n                                        \"is-valid\": touched ? valid : null,\n                                        \"invalid-feedback\": _vm.$t(errors[0])\n                                      },\n                                      model: {\n                                        value: _vm.address,\n                                        callback: function($$v) {\n                                          _vm.address = _vm._n($$v)\n                                        },\n                                        expression: \"address\"\n                                      }\n                                    })\n                                  ]\n                                }\n                              }\n                            ],\n                            null,\n                            true\n                          )\n                        }),\n                        _vm._v(\" \"),\n                        _vm._l(_vm.commands.length, function(i) {\n                          return _c(\n                            \"div\",\n                            { key: i, staticClass: \"form-group\" },\n                            [\n                              _c(\"ValidationProvider\", {\n                                attrs: {\n                                  rules: \"integer|required|between:0,65535\",\n                                  \"custom-messages\": {\n                                    between:\n                                      \"iqrfnet.standard.dali.form.messages.command\",\n                                    integer: \"forms.messages.integer\",\n                                    required:\n                                      \"iqrfnet.standard.dali.form.messages.command\"\n                                  }\n                                },\n                                scopedSlots: _vm._u(\n                                  [\n                                    {\n                                      key: \"default\",\n                                      fn: function(ref) {\n                                        var errors = ref.errors\n                                        var touched = ref.touched\n                                        var valid = ref.valid\n                                        return [\n                                          _c(\"CInput\", {\n                                            attrs: {\n                                              type: \"number\",\n                                              min: \"0\",\n                                              max: \"65535\",\n                                              label: _vm.$t(\n                                                \"iqrfnet.standard.dali.form.command\"\n                                              ),\n                                              \"is-valid\": touched\n                                                ? valid\n                                                : null,\n                                              \"invalid-feedback\": _vm.$t(\n                                                errors[0]\n                                              )\n                                            },\n                                            model: {\n                                              value: _vm.commands[i - 1],\n                                              callback: function($$v) {\n                                                _vm.$set(\n                                                  _vm.commands,\n                                                  i - 1,\n                                                  _vm._n($$v)\n                                                )\n                                              },\n                                              expression: \"commands[i-1]\"\n                                            }\n                                          })\n                                        ]\n                                      }\n                                    }\n                                  ],\n                                  null,\n                                  true\n                                )\n                              }),\n                              _vm._v(\" \"),\n                              _vm.commands.length > 1\n                                ? _c(\n                                    \"CButton\",\n                                    {\n                                      attrs: { color: \"danger\" },\n                                      on: {\n                                        click: function($event) {\n                                          $event.preventDefault()\n                                          return _vm.removeDaliCommand(i - 1)\n                                        }\n                                      }\n                                    },\n                                    [\n                                      _vm._v(\n                                        \"\\n\\t\\t\\t\\t\\t\\t\" +\n                                          _vm._s(\n                                            _vm.$t(\n                                              \"iqrfnet.standard.dali.form.removeCommand\"\n                                            )\n                                          ) +\n                                          \"\\n\\t\\t\\t\\t\\t\"\n                                      )\n                                    ]\n                                  )\n                                : _vm._e(),\n                              _vm._v(\" \"),\n                              i === _vm.commands.length\n                                ? _c(\n                                    \"CButton\",\n                                    {\n                                      attrs: {\n                                        color: \"success\",\n                                        disabled: invalid\n                                      },\n                                      on: {\n                                        click: function($event) {\n                                          $event.preventDefault()\n                                          return _vm.addDaliCommand($event)\n                                        }\n                                      }\n                                    },\n                                    [\n                                      _vm._v(\n                                        \"\\n\\t\\t\\t\\t\\t\\t\" +\n                                          _vm._s(\n                                            _vm.$t(\n                                              \"iqrfnet.standard.dali.form.addCommand\"\n                                            )\n                                          ) +\n                                          \"\\n\\t\\t\\t\\t\\t\"\n                                      )\n                                    ]\n                                  )\n                                : _vm._e()\n                            ],\n                            1\n                          )\n                        }),\n                        _vm._v(\" \"),\n                        _c(\n                          \"CButton\",\n                          {\n                            attrs: { color: \"primary\", disabled: invalid },\n                            on: {\n                              click: function($event) {\n                                $event.preventDefault()\n                                return _vm.sendDali($event)\n                              }\n                            }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n\\t\\t\\t\\t\\t\" +\n                                _vm._s(\n                                  _vm.$t(\n                                    \"iqrfnet.standard.dali.form.sendCommand\"\n                                  )\n                                ) +\n                                \"\\n\\t\\t\\t\\t\"\n                            )\n                          ]\n                        )\n                      ],\n                      2\n                    )\n                  ]\n                }\n              }\n            ])\n          })\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _vm.responseReceived\n        ? _c(\"CCardFooter\", [\n            _c(\"table\", { staticClass: \"table table-striped\" }, [\n              _c(\"thead\", [\n                _vm._v(\n                  \"\\n\\t\\t\\t\\t\" +\n                    _vm._s(_vm.$t(\"iqrfnet.standard.dali.answers\")) +\n                    \"\\n\\t\\t\\t\"\n                )\n              ]),\n              _vm._v(\" \"),\n              _c(\n                \"tbody\",\n                { staticClass: \"text-center\" },\n                [\n                  _c(\"tr\", [\n                    _c(\"th\", [\n                      _vm._v(_vm._s(_vm.$t(\"iqrfnet.standard.dali.status\")))\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"th\", [\n                      _vm._v(_vm._s(_vm.$t(\"iqrfnet.standard.dali.value\")))\n                    ])\n                  ]),\n                  _vm._v(\" \"),\n                  _vm._l(_vm.answers, function(answer, i) {\n                    return _c(\"tr\", { key: i }, [\n                      _c(\"td\", [_vm._v(_vm._s(answer.status))]),\n                      _vm._v(\" \"),\n                      _c(\"td\", [_vm._v(_vm._s(answer.value))])\n                    ])\n                  })\n                ],\n                2\n              )\n            ])\n          ])\n        : _vm._e()\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import store from '../../store';\n/**\n * IQRF Standard DALI service\n */\nvar StandardDaliService = /** @class */ (function () {\n    function StandardDaliService() {\n    }\n    /**\n     * Sends DALI commands to device specified by address.\n     * @param address Node address\n     * @param commands Array of DALI commands\n     */\n    StandardDaliService.prototype.send = function (address, commands) {\n        return store.dispatch('sendRequest', {\n            'mType': 'iqrfDali_SendCommands',\n            'data': {\n                'req': {\n                    'nAdr': address,\n                    'param': {\n                        'commands': commands,\n                    },\n                },\n                'returnVerbose': true,\n            },\n        });\n    };\n    return StandardDaliService;\n}());\nexport default new StandardDaliService();\n","import mod from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DaliManager.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DaliManager.vue?vue&type=script&lang=ts&\"","import Vue from 'vue';\nimport { CButton, CCard, CCardBody, CCardFooter, CCardHeader, CForm, CInput } from '@coreui/vue/src';\nimport { extend, ValidationObserver, ValidationProvider } from 'vee-validate';\nimport { timeout } from '../../helpers/timeout';\nimport { between, integer, required } from 'vee-validate/dist/rules';\nimport StandardDaliService from '../../services/DaemonApi/StandardDaliService';\nexport default Vue.extend({\n    name: 'DaliManager',\n    components: {\n        CButton: CButton,\n        CCard: CCard,\n        CCardBody: CCardBody,\n        CCardFooter: CCardFooter,\n        CCardHeader: CCardHeader,\n        CForm: CForm,\n        CInput: CInput,\n        ValidationObserver: ValidationObserver,\n        ValidationProvider: ValidationProvider\n    },\n    data: function () {\n        return {\n            address: 1,\n            answers: null,\n            commands: [null],\n            responseReceived: false,\n            timeout: null\n        };\n    },\n    created: function () {\n        var _this = this;\n        extend('between', between);\n        extend('integer', integer);\n        extend('required', required);\n        this.unsubscribe = this.$store.subscribe(function (mutation) {\n            if (mutation.type === 'SOCKET_ONSEND') {\n                if (mutation.payload.mType === 'iqrfDali_SendCommands') {\n                    _this.timeout = timeout('iqrfnet.networkManager.messages.submit.timeout', 30000);\n                }\n            }\n            if (mutation.type === 'SOCKET_ONMESSAGE') {\n                if (mutation.payload.mType === 'iqrfDali_SendCommands') {\n                    clearTimeout(_this.timeout);\n                    _this.$store.commit('spinner/HIDE');\n                    switch (mutation.payload.data.status) {\n                        case -1:\n                            _this.$toast.error(_this.$t('iqrfnet.standard.dali.messages.timeout').toString());\n                            break;\n                        case 0:\n                            _this.$toast.success(_this.$t('iqrfnet.standard.dali.messages.success').toString());\n                            _this.answers = mutation.payload.data.rsp.result.answers;\n                            _this.responseReceived = true;\n                            break;\n                        case 3:\n                            _this.$toast.error(_this.$t('iqrfnet.standard.dali.messages.pnum').toString());\n                            break;\n                        default:\n                            _this.$toast.error(_this.$t('iqrfnet.standard.dali.messages.failure').toString());\n                            break;\n                    }\n                }\n            }\n        });\n    },\n    beforeDestroy: function () {\n        this.unsubscribe();\n    },\n    methods: {\n        addDaliCommand: function () {\n            this.commands.push(null);\n        },\n        removeDaliCommand: function (index) {\n            this.commands.splice(index, 1);\n        },\n        sendDali: function () {\n            this.$store.commit('spinner/SHOW');\n            StandardDaliService.send(this.address, this.commands);\n        },\n    }\n});\n","import { render, staticRenderFns } from \"./DaliManager.vue?vue&type=template&id=11836d54&\"\nimport script from \"./DaliManager.vue?vue&type=script&lang=ts&\"\nexport * from \"./DaliManager.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('11836d54')) {\n      api.createRecord('11836d54', component.options)\n    } else {\n      api.reload('11836d54', component.options)\n    }\n    module.hot.accept(\"./DaliManager.vue?vue&type=template&id=11836d54&\", function () {\n      api.rerender('11836d54', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/components/IqrfNet/DaliManager.vue\"\nexport default component.exports","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"CCard\",\n    [\n      _c(\"CCardHeader\", [\n        _vm._v(_vm._s(_vm.$t(\"iqrfnet.standard.light.title\")))\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"CCardBody\",\n        [\n          _c(\"ValidationObserver\", {\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(ref) {\n                  var invalid = ref.invalid\n                  return [\n                    _c(\n                      \"CForm\",\n                      [\n                        _c(\"ValidationProvider\", {\n                          attrs: {\n                            rules: \"required|integer|between:1,239\",\n                            \"custom-messages\": {\n                              between: \"iqrfnet.standard.form.messages.address\",\n                              integer: \"forms.messages.integer\",\n                              required: \"iqrfnet.standard.form.messages.address\"\n                            }\n                          },\n                          scopedSlots: _vm._u(\n                            [\n                              {\n                                key: \"default\",\n                                fn: function(ref) {\n                                  var errors = ref.errors\n                                  var touched = ref.touched\n                                  var valid = ref.valid\n                                  return [\n                                    _c(\"CInput\", {\n                                      attrs: {\n                                        type: \"number\",\n                                        min: \"1\",\n                                        max: \"239\",\n                                        label: _vm.$t(\n                                          \"iqrfnet.standard.form.address\"\n                                        ),\n                                        \"is-valid\": touched ? valid : null,\n                                        \"invalid-feedback\": _vm.$t(errors[0])\n                                      },\n                                      model: {\n                                        value: _vm.address,\n                                        callback: function($$v) {\n                                          _vm.address = _vm._n($$v)\n                                        },\n                                        expression: \"address\"\n                                      }\n                                    })\n                                  ]\n                                }\n                              }\n                            ],\n                            null,\n                            true\n                          )\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"ValidationProvider\", {\n                          attrs: {\n                            rules: \"required|integer|between:0,31\",\n                            \"custom-messages\": {\n                              between:\n                                \"iqrfnet.standard.light.form.messages.index\",\n                              integer: \"forms.messages.integer\",\n                              required:\n                                \"iqrfnet.standard.light.form.messages.index\"\n                            }\n                          },\n                          scopedSlots: _vm._u(\n                            [\n                              {\n                                key: \"default\",\n                                fn: function(ref) {\n                                  var errors = ref.errors\n                                  var touched = ref.touched\n                                  var valid = ref.valid\n                                  return [\n                                    _c(\"CInput\", {\n                                      attrs: {\n                                        type: \"number\",\n                                        min: \"0\",\n                                        max: \"31\",\n                                        label: _vm.$t(\n                                          \"iqrfnet.standard.light.form.index\"\n                                        ),\n                                        \"is-valid\": touched ? valid : null,\n                                        \"invalid-feedback\": _vm.$t(errors[0])\n                                      },\n                                      model: {\n                                        value: _vm.index,\n                                        callback: function($$v) {\n                                          _vm.index = _vm._n($$v)\n                                        },\n                                        expression: \"index\"\n                                      }\n                                    })\n                                  ]\n                                }\n                              }\n                            ],\n                            null,\n                            true\n                          )\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"ValidationProvider\", {\n                          attrs: {\n                            rules: \"required|integer|between:0,100\",\n                            \"custom-messages\": {\n                              between:\n                                \"iqrfnet.standard.light.form.messages.power\",\n                              integer: \"forms.messages.integer\",\n                              required:\n                                \"iqrfnet.standard.light.form.messages.power\"\n                            }\n                          },\n                          scopedSlots: _vm._u(\n                            [\n                              {\n                                key: \"default\",\n                                fn: function(ref) {\n                                  var errors = ref.errors\n                                  var touched = ref.touched\n                                  var valid = ref.valid\n                                  return [\n                                    _c(\"CInput\", {\n                                      attrs: {\n                                        type: \"number\",\n                                        min: \"0\",\n                                        max: \"100\",\n                                        label: _vm.$t(\n                                          \"iqrfnet.standard.light.form.power\"\n                                        ),\n                                        \"is-valid\": touched ? valid : null,\n                                        \"invalid-feedback\": _vm.$t(errors[0])\n                                      },\n                                      model: {\n                                        value: _vm.power,\n                                        callback: function($$v) {\n                                          _vm.power = _vm._n($$v)\n                                        },\n                                        expression: \"power\"\n                                      }\n                                    })\n                                  ]\n                                }\n                              }\n                            ],\n                            null,\n                            true\n                          )\n                        }),\n                        _vm._v(\" \"),\n                        _c(\n                          \"CButton\",\n                          {\n                            attrs: { color: \"primary\", disabled: invalid },\n                            on: {\n                              click: function($event) {\n                                $event.preventDefault()\n                                return _vm.submitEnumerate($event)\n                              }\n                            }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n\\t\\t\\t\\t\\t\" +\n                                _vm._s(_vm.$t(\"forms.enumerate\")) +\n                                \"\\n\\t\\t\\t\\t\"\n                            )\n                          ]\n                        ),\n                        _vm._v(\" \"),\n                        _c(\n                          \"CButton\",\n                          {\n                            attrs: { color: \"secondary\", disabled: invalid },\n                            on: {\n                              click: function($event) {\n                                $event.preventDefault()\n                                return _vm.submitGetPower($event)\n                              }\n                            }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n\\t\\t\\t\\t\\t\" +\n                                _vm._s(\n                                  _vm.$t(\"iqrfnet.standard.light.form.getPower\")\n                                ) +\n                                \"\\n\\t\\t\\t\\t\"\n                            )\n                          ]\n                        ),\n                        _vm._v(\" \"),\n                        _c(\n                          \"CButton\",\n                          {\n                            attrs: { color: \"secondary\", disabled: invalid },\n                            on: {\n                              click: function($event) {\n                                $event.preventDefault()\n                                return _vm.submitSetPower($event)\n                              }\n                            }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n\\t\\t\\t\\t\\t\" +\n                                _vm._s(\n                                  _vm.$t(\"iqrfnet.standard.light.form.setPower\")\n                                ) +\n                                \"\\n\\t\\t\\t\\t\"\n                            )\n                          ]\n                        ),\n                        _vm._v(\" \"),\n                        _c(\n                          \"CButton\",\n                          {\n                            attrs: { color: \"secondary\", disabled: invalid },\n                            on: {\n                              click: function($event) {\n                                $event.preventDefault()\n                                return _vm.submitIncrementPower($event)\n                              }\n                            }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n\\t\\t\\t\\t\\t\" +\n                                _vm._s(\n                                  _vm.$t(\n                                    \"iqrfnet.standard.light.form.increment\"\n                                  )\n                                ) +\n                                \"\\n\\t\\t\\t\\t\"\n                            )\n                          ]\n                        ),\n                        _vm._v(\" \"),\n                        _c(\n                          \"CButton\",\n                          {\n                            attrs: { color: \"secondary\", disabled: invalid },\n                            on: {\n                              click: function($event) {\n                                $event.preventDefault()\n                                return _vm.submitDecrementPower($event)\n                              }\n                            }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n\\t\\t\\t\\t\\t\" +\n                                _vm._s(\n                                  _vm.$t(\n                                    \"iqrfnet.standard.light.form.decrement\"\n                                  )\n                                ) +\n                                \"\\n\\t\\t\\t\\t\"\n                            )\n                          ]\n                        )\n                      ],\n                      1\n                    )\n                  ]\n                }\n              }\n            ])\n          })\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _vm.responseType !== null\n        ? _c(\"CCardFooter\", [\n            _c(\"table\", { staticClass: \"table\" }, [\n              _c(\"thead\", [\n                _vm.responseType === \"enum\"\n                  ? _c(\"th\", { attrs: { colspan: \"2\" } }, [\n                      _vm._v(\n                        \"\\n\\t\\t\\t\\t\\t\" +\n                          _vm._s(_vm.$t(\"iqrfnet.standard.light.enum\")) +\n                          \"\\n\\t\\t\\t\\t\"\n                      )\n                    ])\n                  : _c(\"th\", { attrs: { colspan: \"2\" } }, [\n                      _vm._v(\n                        \"\\n\\t\\t\\t\\t\\t\" +\n                          _vm._s(_vm.$t(\"iqrfnet.standard.light.powerInfo\")) +\n                          \"\\n\\t\\t\\t\\t\"\n                      )\n                    ])\n              ]),\n              _vm._v(\" \"),\n              _vm.responseType === \"enum\"\n                ? _c(\"tbody\", [\n                    _c(\"tr\", [\n                      _c(\"th\", [\n                        _vm._v(_vm._s(_vm.$t(\"iqrfnet.standard.light.lights\")))\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"td\", [_vm._v(_vm._s(_vm.numLights))])\n                    ])\n                  ])\n                : _c(\"tbody\", [\n                    _c(\"tr\", [\n                      _c(\"th\", [\n                        _vm._v(_vm._s(_vm.$t(\"iqrfnet.standard.light.index\")))\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"td\", [_vm._v(_vm._s(_vm.index))])\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"tr\", [\n                      _c(\"th\", [\n                        _vm._v(_vm._s(_vm.$t(\"iqrfnet.standard.light.power\")))\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"td\", [_vm._v(_vm._s(_vm.prevPower))])\n                    ])\n                  ])\n            ])\n          ])\n        : _vm._e()\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import store from '../../store';\nvar StandardLight = /** @class */ (function () {\n    /**\n     * Constructor\n     * @param index Index of the light\n     * @param power Power level of the light from range <0;100>\n     */\n    function StandardLight(index, power) {\n        this.index = index;\n        this.power = power;\n    }\n    return StandardLight;\n}());\nexport { StandardLight };\n/**\n * IQRF Standard light service\n */\nvar StandardLightService = /** @class */ (function () {\n    function StandardLightService() {\n    }\n    /**\n     * Performs Light enumeration on device specified by address.\n     * @param address Node address\n     */\n    StandardLightService.prototype.enumerate = function (address) {\n        return store.dispatch('sendRequest', {\n            'mType': 'iqrfLight_Enumerate',\n            'data': {\n                'req': {\n                    'nAdr': address,\n                    'param': {},\n                },\n                'returnVerbose': true,\n            },\n        });\n    };\n    /**\n     * Decrements power of light at a device specified by address.\n     * @param address Node address\n     * @param lights Object containing light settings\n     */\n    StandardLightService.prototype.decrementPower = function (address, lights) {\n        return store.dispatch('sendRequest', {\n            'mType': 'iqrfLight_DecrementPower',\n            'data': {\n                'req': {\n                    'nAdr': address,\n                    'param': {\n                        'lights': lights,\n                    },\n                },\n                'returnVerbose': true,\n            },\n        });\n    };\n    /**\n     * Increments power of light at a device specified by address.\n     * @param address Node address\n     * @param lights Object containing light settings\n     */\n    StandardLightService.prototype.incrementPower = function (address, lights) {\n        return store.dispatch('sendRequest', {\n            'mType': 'iqrfLight_IncrementPower',\n            'data': {\n                'req': {\n                    'nAdr': address,\n                    'param': {\n                        'lights': lights,\n                    },\n                },\n                'returnVerbose': true,\n            },\n        });\n    };\n    /**\n     * Retrieves current power of a light specified by index.\n     * @param address Node address\n     * @param light Light index\n     */\n    StandardLightService.prototype.getPower = function (address, light) {\n        return this.setPower(address, [new StandardLight(light, 127)]);\n    };\n    /**\n     * Sets power of lights at a device specified by address.\n     * @param address Node address\n     * @param lights Object containing light settings\n     */\n    StandardLightService.prototype.setPower = function (address, lights) {\n        return store.dispatch('sendRequest', {\n            'mType': 'iqrfLight_SetPower',\n            'data': {\n                'req': {\n                    'nAdr': address,\n                    'param': {\n                        'lights': lights,\n                    },\n                },\n                'returnVerbose': true,\n            },\n        });\n    };\n    return StandardLightService;\n}());\nexport default new StandardLightService();\n","import mod from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./LightManager.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./LightManager.vue?vue&type=script&lang=ts&\"","import Vue from 'vue';\nimport { CButton, CCard, CCardBody, CCardFooter, CCardHeader, CForm, CInput } from '@coreui/vue/src';\nimport { extend, ValidationObserver, ValidationProvider } from 'vee-validate';\nimport { between, integer, required } from 'vee-validate/dist/rules';\nimport { timeout } from '../../helpers/timeout';\nimport StandardLightService, { StandardLight } from '../../services/DaemonApi/StandardLightService';\nexport default Vue.extend({\n    name: 'LightManager',\n    components: {\n        CButton: CButton,\n        CCard: CCard,\n        CCardBody: CCardBody,\n        CCardFooter: CCardFooter,\n        CCardHeader: CCardHeader,\n        CForm: CForm,\n        CInput: CInput,\n        ValidationObserver: ValidationObserver,\n        ValidationProvider: ValidationProvider\n    },\n    data: function () {\n        return {\n            address: 1,\n            allowedMTypes: [\n                'iqrfLight_Enumerate',\n                'iqrfLight_SetPower',\n                'iqrfLight_IncrementPower',\n                'iqrfLight_DecrementPower'\n            ],\n            index: 0,\n            lights: null,\n            numLights: 0,\n            power: 0,\n            prevPower: 0,\n            responseType: null,\n            timeout: null,\n        };\n    },\n    created: function () {\n        var _this = this;\n        extend('between', between);\n        extend('integer', integer);\n        extend('required', required);\n        this.unsubscribe = this.$store.subscribe(function (mutation) {\n            if (mutation.type === 'SOCKET_ONSEND') {\n                if (!_this.allowedMTypes.includes(mutation.payload.mType)) {\n                    return;\n                }\n                _this.responseType = null;\n                _this.timeout = timeout('iqrfnet.networkManager.messages.submit.timeout', 30000);\n            }\n            if (mutation.type === 'SOCKET_ONMESSAGE') {\n                if (!_this.allowedMTypes.includes(mutation.payload.mType)) {\n                    return;\n                }\n                clearTimeout(_this.timeout);\n                _this.$store.commit('spinner/HIDE');\n                switch (mutation.payload.data.status) {\n                    case -1:\n                        _this.$toast.error(_this.$t('iqrfnet.standard.light.messages.timeout').toString());\n                        break;\n                    case 0:\n                        _this.$toast.success(_this.$t('iqrfnet.standard.light.messages.success').toString());\n                        if (mutation.payload.mType === 'iqrfLight_Enumerate') {\n                            _this.numLights = mutation.payload.data.rsp.result.lights;\n                            _this.responseType = 'enum';\n                        }\n                        else {\n                            _this.prevPower = mutation.payload.data.rsp.result.prevVals[0];\n                            _this.responseType = 'power';\n                        }\n                        break;\n                    case 3:\n                        _this.$toast.error(_this.$t('iqrfnet.standard.light.messages.pnum').toString());\n                        break;\n                    default:\n                        _this.$toast.error(_this.$t('iqrfnet.standard.light.messages.failure').toString());\n                        break;\n                }\n            }\n        });\n    },\n    beforeDestroy: function () {\n        this.unsubscribe();\n    },\n    methods: {\n        submitEnumerate: function () {\n            this.$store.commit('spinner/SHOW');\n            StandardLightService.enumerate(this.address);\n        },\n        submitGetPower: function () {\n            this.$store.commit('spinner/SHOW');\n            StandardLightService.getPower(this.address, this.index);\n        },\n        submitSetPower: function () {\n            this.$store.commit('spinner/SHOW');\n            StandardLightService.setPower(this.address, [new StandardLight(this.index, this.power)]);\n        },\n        submitIncrementPower: function () {\n            this.$store.commit('spinner/SHOW');\n            StandardLightService.incrementPower(this.address, [new StandardLight(this.index, this.power)]);\n        },\n        submitDecrementPower: function () {\n            this.$store.commit('spinner/SHOW');\n            StandardLightService.decrementPower(this.address, [new StandardLight(this.index, this.power)]);\n        },\n    }\n});\n","import { render, staticRenderFns } from \"./LightManager.vue?vue&type=template&id=34619946&\"\nimport script from \"./LightManager.vue?vue&type=script&lang=ts&\"\nexport * from \"./LightManager.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('34619946')) {\n      api.createRecord('34619946', component.options)\n    } else {\n      api.reload('34619946', component.options)\n    }\n    module.hot.accept(\"./LightManager.vue?vue&type=template&id=34619946&\", function () {\n      api.rerender('34619946', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/components/IqrfNet/LightManager.vue\"\nexport default component.exports","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"CCard\",\n    [\n      _c(\"CCardHeader\", [\n        _vm._v(_vm._s(_vm.$t(\"iqrfnet.standard.sensor.title\")))\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"CCardBody\",\n        [\n          _c(\"ValidationObserver\", {\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(ref) {\n                  var invalid = ref.invalid\n                  return [\n                    _c(\n                      \"CForm\",\n                      [\n                        _c(\"ValidationProvider\", {\n                          attrs: {\n                            rules: \"integer|required|between:1,239\",\n                            \"custom-messages\": {\n                              integer: \"forms.messages.integer\",\n                              required:\n                                \"iqrfnet.standard.form.messages.address\",\n                              between: \"iqrfnet.standard.form.messages.address\"\n                            }\n                          },\n                          scopedSlots: _vm._u(\n                            [\n                              {\n                                key: \"default\",\n                                fn: function(ref) {\n                                  var errors = ref.errors\n                                  var touched = ref.touched\n                                  var valid = ref.valid\n                                  return [\n                                    _c(\"CInput\", {\n                                      attrs: {\n                                        type: \"number\",\n                                        min: \"1\",\n                                        max: \"239\",\n                                        label: _vm.$t(\n                                          \"iqrfnet.standard.form.address\"\n                                        ),\n                                        \"is-valid\": touched ? valid : null,\n                                        \"invalid-feedback\": _vm.$t(errors[0])\n                                      },\n                                      model: {\n                                        value: _vm.address,\n                                        callback: function($$v) {\n                                          _vm.address = _vm._n($$v)\n                                        },\n                                        expression: \"address\"\n                                      }\n                                    })\n                                  ]\n                                }\n                              }\n                            ],\n                            null,\n                            true\n                          )\n                        }),\n                        _vm._v(\" \"),\n                        _c(\n                          \"CButton\",\n                          {\n                            attrs: { color: \"primary\", disabled: invalid },\n                            on: {\n                              click: function($event) {\n                                $event.preventDefault()\n                                return _vm.submitEnumerate($event)\n                              }\n                            }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n\\t\\t\\t\\t\\t\" +\n                                _vm._s(_vm.$t(\"forms.enumerate\")) +\n                                \"\\n\\t\\t\\t\\t\"\n                            )\n                          ]\n                        ),\n                        _vm._v(\" \"),\n                        _c(\n                          \"CButton\",\n                          {\n                            attrs: { color: \"secondary\", disabeld: invalid },\n                            on: {\n                              click: function($event) {\n                                $event.preventDefault()\n                                return _vm.submitReadAll($event)\n                              }\n                            }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n\\t\\t\\t\\t\\t\" +\n                                _vm._s(\n                                  _vm.$t(\"iqrfnet.standard.sensor.readAll\")\n                                ) +\n                                \"\\n\\t\\t\\t\\t\"\n                            )\n                          ]\n                        )\n                      ],\n                      1\n                    )\n                  ]\n                }\n              }\n            ])\n          })\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _vm.responseType != null\n        ? _c(\"CCardFooter\", [\n            _c(\"table\", { staticClass: \"table\" }, [\n              _c(\"thead\", [\n                _vm._v(\n                  \"\\n\\t\\t\\t\\t\" +\n                    _vm._s(_vm.$t(\"iqrfnet.standard.sensor.sensors\")) +\n                    \"\\n\\t\\t\\t\"\n                )\n              ]),\n              _vm._v(\" \"),\n              _c(\"tbody\", [\n                _c(\n                  \"tr\",\n                  [\n                    _c(\"th\", [\n                      _vm._v(_vm._s(_vm.$t(\"iqrfnet.standard.sensor.type\")))\n                    ]),\n                    _vm._v(\" \"),\n                    _vm._l(_vm.sensors.length, function(i) {\n                      return _c(\"td\", { key: i }, [\n                        _vm._v(\n                          \"\\n\\t\\t\\t\\t\\t\\t\" +\n                            _vm._s(_vm.sensors[i - 1].type) +\n                            \"\\n\\t\\t\\t\\t\\t\"\n                        )\n                      ])\n                    })\n                  ],\n                  2\n                ),\n                _vm._v(\" \"),\n                _vm.responseType === \"enum\"\n                  ? _c(\n                      \"tr\",\n                      [\n                        _c(\"th\", [\n                          _vm._v(_vm._s(_vm.$t(\"iqrfnet.standard.sensor.unit\")))\n                        ]),\n                        _vm._v(\" \"),\n                        _vm._l(_vm.sensors.length, function(j) {\n                          return _c(\"td\", { key: j }, [\n                            _vm._v(\n                              \"\\n\\t\\t\\t\\t\\t\\t\" +\n                                _vm._s(_vm.sensors[j - 1].unit) +\n                                \"\\n\\t\\t\\t\\t\\t\"\n                            )\n                          ])\n                        })\n                      ],\n                      2\n                    )\n                  : _vm.responseType === \"read\"\n                  ? _c(\n                      \"tr\",\n                      [\n                        _c(\"th\", [\n                          _vm._v(\n                            _vm._s(_vm.$t(\"iqrfnet.standard.sensor.value\"))\n                          )\n                        ]),\n                        _vm._v(\" \"),\n                        _vm._l(_vm.sensors.length, function(k) {\n                          return _c(\"td\", { key: k }, [\n                            _vm._v(\n                              \"\\n\\t\\t\\t\\t\\t\\t\" +\n                                _vm._s(\n                                  _vm.sensors[k - 1].value +\n                                    \" \" +\n                                    _vm.sensors[k - 1].unit\n                                ) +\n                                \"\\n\\t\\t\\t\\t\\t\"\n                            )\n                          ])\n                        })\n                      ],\n                      2\n                    )\n                  : _vm._e()\n              ])\n            ])\n          ])\n        : _vm._e()\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import store from '../../store';\n/**\n * IQRF Standard Sensor service\n */\nvar StandardSensorService = /** @class */ (function () {\n    function StandardSensorService() {\n    }\n    /**\n     * Performs Sensor enumeration on device specified by address.\n     * @param address Node address\n     */\n    StandardSensorService.prototype.enumerate = function (address) {\n        return store.dispatch('sendRequest', {\n            'mType': 'iqrfSensor_Enumerate',\n            'data': {\n                'req': {\n                    'nAdr': address,\n                    'param': {},\n                },\n                'returnVerbose': true,\n            },\n        });\n    };\n    /**\n     * Reads information from all sensors implemented by a device.\n     * @param address Node address\n     */\n    StandardSensorService.prototype.readAll = function (address) {\n        return store.dispatch('sendRequest', {\n            'mType': 'iqrfSensor_ReadSensorsWithTypes',\n            'data': {\n                'req': {\n                    'nAdr': address,\n                    'param': {\n                        'sensorIndexes': -1,\n                    },\n                },\n                'returnVerbose': true,\n            },\n        });\n    };\n    return StandardSensorService;\n}());\nexport default new StandardSensorService();\n","import mod from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SensorManager.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SensorManager.vue?vue&type=script&lang=ts&\"","import Vue from 'vue';\nimport { CButton, CCard, CCardBody, CCardFooter, CCardHeader, CForm, CInput } from '@coreui/vue/src';\nimport { extend, ValidationObserver, ValidationProvider } from 'vee-validate';\nimport { between, integer, required } from 'vee-validate/dist/rules';\nimport { timeout } from '../../helpers/timeout';\nimport StandardSensorService from '../../services/DaemonApi/StandardSensorService';\nexport default Vue.extend({\n    name: 'SensorManager',\n    components: {\n        CButton: CButton,\n        CCard: CCard,\n        CCardBody: CCardBody,\n        CCardFooter: CCardFooter,\n        CCardHeader: CCardHeader,\n        CForm: CForm,\n        CInput: CInput,\n        ValidationObserver: ValidationObserver,\n        ValidationProvider: ValidationProvider\n    },\n    data: function () {\n        return {\n            address: 1,\n            allowedMTypes: [\n                'iqrfSensor_Enumerate',\n                'iqrfSensor_ReadSensorsWithTypes'\n            ],\n            responseType: null,\n            sensors: null,\n            timeout: null\n        };\n    },\n    created: function () {\n        var _this = this;\n        extend('between', between);\n        extend('integer', integer);\n        extend('required', required);\n        this.unsubscribe = this.$store.subscribe(function (mutation) {\n            if (mutation.type === 'SOCKET_ONSEND') {\n                if (!_this.allowedMTypes.includes(mutation.payload.mType)) {\n                    return;\n                }\n                _this.responseType = null;\n                _this.timeout = timeout('iqrfnet.networkManager.messages.submit.timeout', 30000);\n            }\n            if (mutation.type === 'SOCKET_ONMESSAGE') {\n                if (!_this.allowedMTypes.includes(mutation.payload.mType)) {\n                    return;\n                }\n                clearTimeout(_this.timeout);\n                _this.$store.commit('spinner/HIDE');\n                switch (mutation.payload.data.status) {\n                    case -1:\n                        _this.$toast.error(_this.$t('iqrfnet.standard.sensor.messages.timeout').toString());\n                        break;\n                    case 0:\n                        _this.$toast.success(_this.$t('iqrfnet.standard.sensor.messages.success').toString());\n                        if (mutation.payload.mType === 'iqrfSensor_Enumerate') {\n                            _this.parseEnumerate(mutation.payload.data.rsp.result.sensors);\n                            _this.responseType = 'enum';\n                        }\n                        else if (mutation.payload.mType === 'iqrfSensor_ReadSensorsWithTypes') {\n                            _this.parseReadAll(mutation.payload.data.rsp.result.sensors);\n                            _this.responseType = 'read';\n                        }\n                        break;\n                    case 3:\n                        _this.$toast.error(_this.$t('iqrfnet.standard.sensor.messages.pnum').toString());\n                        break;\n                    default:\n                        _this.$toast.error(_this.$t('iqrfnet.standard.sensor.messages.failure').toString());\n                        break;\n                }\n            }\n        });\n    },\n    beforeDestroy: function () {\n        this.unsubscribe();\n    },\n    methods: {\n        parseEnumerate: function (sensors) {\n            var _this = this;\n            this.sensors = [];\n            sensors.forEach(function (item) {\n                if (item.id === 'BINARYDATA7') {\n                    item = item.breakdown[0];\n                }\n                _this.sensors.push({ 'type': item.name, 'unit': item.unit });\n            });\n        },\n        parseReadAll: function (sensors) {\n            var _this = this;\n            this.sensors = [];\n            sensors.forEach(function (item) {\n                if (item.id === 'BINARYDATA7') {\n                    item = item.breakdown[0];\n                }\n                _this.sensors.push({ 'type': item.name, 'value': item.value, 'unit': item.unit });\n            });\n        },\n        submitReadAll: function () {\n            this.$store.commit('spinner/SHOW');\n            StandardSensorService.readAll(this.address);\n        },\n        submitEnumerate: function () {\n            this.$store.commit('spinner/SHOW');\n            StandardSensorService.enumerate(this.address);\n        },\n    }\n});\n","import { render, staticRenderFns } from \"./SensorManager.vue?vue&type=template&id=09a96214&scoped=true&\"\nimport script from \"./SensorManager.vue?vue&type=script&lang=ts&\"\nexport * from \"./SensorManager.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./SensorManager.vue?vue&type=style&index=0&id=09a96214&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"09a96214\",\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('09a96214')) {\n      api.createRecord('09a96214', component.options)\n    } else {\n      api.reload('09a96214', component.options)\n    }\n    module.hot.accept(\"./SensorManager.vue?vue&type=template&id=09a96214&scoped=true&\", function () {\n      api.rerender('09a96214', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/components/IqrfNet/SensorManager.vue\"\nexport default component.exports","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./StandardManager.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./StandardManager.vue?vue&type=script&lang=js&\"","<template>\n\t<CRow>\n\t\t<CCol md='6'>\n\t\t\t<BinaryOutputManager />\n\t\t\t<SensorManager />\n\t\t</CCol>\n\t\t<CCol md='6'>\n\t\t\t<LightManager />\n\t\t\t<DaliManager />\n\t\t</CCol>\n\t</CRow>\n</template>\n\n<script>\nimport BinaryOutputManager from '../../components/IqrfNet/BinaryOutputManager';\nimport DaliManager from '../../components/IqrfNet/DaliManager';\nimport LightManager from '../../components/IqrfNet/LightManager';\nimport SensorManager from '../../components/IqrfNet/SensorManager';\n\nexport default {\n\tname: 'StandardManager',\n\tcomponents: {\n\t\tBinaryOutputManager,\n\t\tDaliManager,\n\t\tLightManager,\n\t\tSensorManager,\n\t},\n\tmetaInfo: {\n\t\ttitle: 'iqrfnet.standard.title',\n\t},\n};\n</script>\n","import { render, staticRenderFns } from \"./StandardManager.vue?vue&type=template&id=1f0c2c02&\"\nimport script from \"./StandardManager.vue?vue&type=script&lang=js&\"\nexport * from \"./StandardManager.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('1f0c2c02')) {\n      api.createRecord('1f0c2c02', component.options)\n    } else {\n      api.reload('1f0c2c02', component.options)\n    }\n    module.hot.accept(\"./StandardManager.vue?vue&type=template&id=1f0c2c02&\", function () {\n      api.rerender('1f0c2c02', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/pages/IqrfNet/StandardManager.vue\"\nexport default component.exports","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\"AddressChanger\", { attrs: { \"current-address\": _vm.address } }),\n      _vm._v(\" \"),\n      _vm.config !== null\n        ? _c(\n            \"CCard\",\n            [\n              _c(\"CCardHeader\", [\n                _vm._v(_vm._s(_vm.$t(\"iqrfnet.trConfiguration.title\")))\n              ]),\n              _vm._v(\" \"),\n              _c(\n                \"CCardBody\",\n                [\n                  _c(\"ValidationObserver\", {\n                    scopedSlots: _vm._u(\n                      [\n                        {\n                          key: \"default\",\n                          fn: function(ref) {\n                            var invalid = ref.invalid\n                            return [\n                              _c(\n                                \"CForm\",\n                                {\n                                  on: {\n                                    submit: function($event) {\n                                      $event.preventDefault()\n                                      return _vm.handleSubmit($event)\n                                    }\n                                  }\n                                },\n                                [\n                                  _c(\n                                    \"CRow\",\n                                    [\n                                      _c(\n                                        \"CCol\",\n                                        { attrs: { md: \"6\" } },\n                                        [\n                                          _c(\"h2\", [\n                                            _vm._v(\n                                              _vm._s(\n                                                _vm.$t(\n                                                  \"iqrfnet.trConfiguration.form.rf\"\n                                                )\n                                              )\n                                            )\n                                          ]),\n                                          _vm._v(\" \"),\n                                          _c(\"CSelect\", {\n                                            attrs: {\n                                              label: _vm.$t(\n                                                \"iqrfnet.trConfiguration.form.rfBand\"\n                                              ),\n                                              options: [\n                                                {\n                                                  value: \"443\",\n                                                  label: _vm.$t(\n                                                    \"iqrfnet.trConfiguration.form.rfBands.443\"\n                                                  )\n                                                },\n                                                {\n                                                  value: \"868\",\n                                                  label: _vm.$t(\n                                                    \"iqrfnet.trConfiguration.form.rfBands.868\"\n                                                  )\n                                                },\n                                                {\n                                                  value: \"916\",\n                                                  label: _vm.$t(\n                                                    \"iqrfnet.trConfiguration.form.rfBands.916\"\n                                                  )\n                                                }\n                                              ],\n                                              disabled: \"true\"\n                                            },\n                                            model: {\n                                              value: _vm.config.rfBand,\n                                              callback: function($$v) {\n                                                _vm.$set(\n                                                  _vm.config,\n                                                  \"rfBand\",\n                                                  $$v\n                                                )\n                                              },\n                                              expression: \"config.rfBand\"\n                                            }\n                                          }),\n                                          _vm._v(\" \"),\n                                          _c(\"ValidationProvider\", {\n                                            attrs: {\n                                              rules: _vm.rfChannelRules.rule,\n                                              \"custom-messages\":\n                                                _vm.rfChannelValidatorMessages\n                                            },\n                                            scopedSlots: _vm._u(\n                                              [\n                                                {\n                                                  key: \"default\",\n                                                  fn: function(ref) {\n                                                    var valid = ref.valid\n                                                    var touched = ref.touched\n                                                    var errors = ref.errors\n                                                    return [\n                                                      _c(\"CInput\", {\n                                                        attrs: {\n                                                          label: _vm.$t(\n                                                            \"iqrfnet.trConfiguration.form.rfChannelA\"\n                                                          ),\n                                                          \"is-valid\": touched\n                                                            ? valid\n                                                            : null,\n                                                          \"invalid-feedback\": _vm.$t(\n                                                            errors[0]\n                                                          ),\n                                                          type: \"number\",\n                                                          max:\n                                                            _vm.rfChannelRules\n                                                              .max,\n                                                          min:\n                                                            _vm.rfChannelRules\n                                                              .min\n                                                        },\n                                                        model: {\n                                                          value:\n                                                            _vm.config\n                                                              .rfChannelA,\n                                                          callback: function(\n                                                            $$v\n                                                          ) {\n                                                            _vm.$set(\n                                                              _vm.config,\n                                                              \"rfChannelA\",\n                                                              _vm._n($$v)\n                                                            )\n                                                          },\n                                                          expression:\n                                                            \"config.rfChannelA\"\n                                                        }\n                                                      })\n                                                    ]\n                                                  }\n                                                }\n                                              ],\n                                              null,\n                                              true\n                                            )\n                                          }),\n                                          _vm._v(\" \"),\n                                          _c(\"ValidationProvider\", {\n                                            attrs: {\n                                              rules: _vm.rfChannelRules.rule,\n                                              \"custom-messages\":\n                                                _vm.rfChannelValidatorMessages\n                                            },\n                                            scopedSlots: _vm._u(\n                                              [\n                                                {\n                                                  key: \"default\",\n                                                  fn: function(ref) {\n                                                    var valid = ref.valid\n                                                    var touched = ref.touched\n                                                    var errors = ref.errors\n                                                    return [\n                                                      _c(\"CInput\", {\n                                                        attrs: {\n                                                          label: _vm.$t(\n                                                            \"iqrfnet.trConfiguration.form.rfChannelB\"\n                                                          ),\n                                                          \"is-valid\": touched\n                                                            ? valid\n                                                            : null,\n                                                          \"invalid-feedback\": _vm.$t(\n                                                            errors[0]\n                                                          ),\n                                                          type: \"number\",\n                                                          max:\n                                                            _vm.rfChannelRules\n                                                              .max,\n                                                          min:\n                                                            _vm.rfChannelRules\n                                                              .min\n                                                        },\n                                                        model: {\n                                                          value:\n                                                            _vm.config\n                                                              .rfChannelB,\n                                                          callback: function(\n                                                            $$v\n                                                          ) {\n                                                            _vm.$set(\n                                                              _vm.config,\n                                                              \"rfChannelB\",\n                                                              _vm._n($$v)\n                                                            )\n                                                          },\n                                                          expression:\n                                                            \"config.rfChannelB\"\n                                                        }\n                                                      })\n                                                    ]\n                                                  }\n                                                }\n                                              ],\n                                              null,\n                                              true\n                                            )\n                                          }),\n                                          _vm._v(\" \"),\n                                          _vm.config.rfSubChannelA !== undefined\n                                            ? _c(\"ValidationProvider\", {\n                                                attrs: {\n                                                  rules:\n                                                    _vm.rfChannelRules.rule,\n                                                  \"custom-messages\":\n                                                    _vm.rfChannelValidatorMessages\n                                                },\n                                                scopedSlots: _vm._u(\n                                                  [\n                                                    {\n                                                      key: \"default\",\n                                                      fn: function(ref) {\n                                                        var valid = ref.valid\n                                                        var touched =\n                                                          ref.touched\n                                                        var errors = ref.errors\n                                                        return [\n                                                          _c(\"CInput\", {\n                                                            attrs: {\n                                                              label: _vm.$t(\n                                                                \"iqrfnet.trConfiguration.form.rfSubChannelA\"\n                                                              ),\n                                                              \"is-valid\": touched\n                                                                ? valid\n                                                                : null,\n                                                              \"invalid-feedback\": _vm.$t(\n                                                                errors[0]\n                                                              ),\n                                                              type: \"number\",\n                                                              max:\n                                                                _vm\n                                                                  .rfChannelRules\n                                                                  .max,\n                                                              min:\n                                                                _vm\n                                                                  .rfChannelRules\n                                                                  .min\n                                                            },\n                                                            model: {\n                                                              value:\n                                                                _vm.config\n                                                                  .rfSubChannelA,\n                                                              callback: function(\n                                                                $$v\n                                                              ) {\n                                                                _vm.$set(\n                                                                  _vm.config,\n                                                                  \"rfSubChannelA\",\n                                                                  _vm._n($$v)\n                                                                )\n                                                              },\n                                                              expression:\n                                                                \"config.rfSubChannelA\"\n                                                            }\n                                                          })\n                                                        ]\n                                                      }\n                                                    }\n                                                  ],\n                                                  null,\n                                                  true\n                                                )\n                                              })\n                                            : _vm._e(),\n                                          _vm._v(\" \"),\n                                          _vm.config.rfSubChannelB !== undefined\n                                            ? _c(\"ValidationProvider\", {\n                                                attrs: {\n                                                  rules:\n                                                    _vm.rfChannelRules.rule,\n                                                  \"custom-messages\":\n                                                    _vm.rfChannelValidatorMessages\n                                                },\n                                                scopedSlots: _vm._u(\n                                                  [\n                                                    {\n                                                      key: \"default\",\n                                                      fn: function(ref) {\n                                                        var valid = ref.valid\n                                                        var touched =\n                                                          ref.touched\n                                                        var errors = ref.errors\n                                                        return [\n                                                          _c(\"CInput\", {\n                                                            attrs: {\n                                                              label: _vm.$t(\n                                                                \"iqrfnet.trConfiguration.form.rfSubChannelB\"\n                                                              ),\n                                                              \"is-valid\": touched\n                                                                ? valid\n                                                                : null,\n                                                              \"invalid-feedback\": _vm.$t(\n                                                                errors[0]\n                                                              ),\n                                                              type: \"number\",\n                                                              max:\n                                                                _vm\n                                                                  .rfChannelRules\n                                                                  .max,\n                                                              min:\n                                                                _vm\n                                                                  .rfChannelRules\n                                                                  .min\n                                                            },\n                                                            model: {\n                                                              value:\n                                                                _vm.config\n                                                                  .rfSubChannelB,\n                                                              callback: function(\n                                                                $$v\n                                                              ) {\n                                                                _vm.$set(\n                                                                  _vm.config,\n                                                                  \"rfSubChannelB\",\n                                                                  _vm._n($$v)\n                                                                )\n                                                              },\n                                                              expression:\n                                                                \"config.rfSubChannelB\"\n                                                            }\n                                                          })\n                                                        ]\n                                                      }\n                                                    }\n                                                  ],\n                                                  null,\n                                                  true\n                                                )\n                                              })\n                                            : _vm._e(),\n                                          _vm._v(\" \"),\n                                          _vm.config.rfAltDsmChannel !==\n                                          undefined\n                                            ? _c(\"ValidationProvider\", {\n                                                attrs: {\n                                                  rules:\n                                                    _vm.rfChannelRules.rule,\n                                                  \"custom-messages\":\n                                                    _vm.rfChannelValidatorMessages\n                                                },\n                                                scopedSlots: _vm._u(\n                                                  [\n                                                    {\n                                                      key: \"default\",\n                                                      fn: function(ref) {\n                                                        var valid = ref.valid\n                                                        var touched =\n                                                          ref.touched\n                                                        var errors = ref.errors\n                                                        return [\n                                                          _c(\"CInput\", {\n                                                            attrs: {\n                                                              label: _vm.$t(\n                                                                \"iqrfnet.trConfiguration.form.rfAltDsmChannel\"\n                                                              ),\n                                                              \"is-valid\": touched\n                                                                ? valid\n                                                                : null,\n                                                              \"invalid-feedback\": _vm.$t(\n                                                                errors[0]\n                                                              ),\n                                                              type: \"number\",\n                                                              max:\n                                                                _vm\n                                                                  .rfChannelRules\n                                                                  .max,\n                                                              min:\n                                                                _vm\n                                                                  .rfChannelRules\n                                                                  .min\n                                                            },\n                                                            model: {\n                                                              value:\n                                                                _vm.config\n                                                                  .rfAltDsmChannel,\n                                                              callback: function(\n                                                                $$v\n                                                              ) {\n                                                                _vm.$set(\n                                                                  _vm.config,\n                                                                  \"rfAltDsmChannel\",\n                                                                  _vm._n($$v)\n                                                                )\n                                                              },\n                                                              expression:\n                                                                \"config.rfAltDsmChannel\"\n                                                            }\n                                                          })\n                                                        ]\n                                                      }\n                                                    }\n                                                  ],\n                                                  null,\n                                                  true\n                                                )\n                                              })\n                                            : _vm._e(),\n                                          _vm._v(\" \"),\n                                          _vm.config.stdAndLpNetwork === false\n                                            ? _c(\n                                                \"CAlert\",\n                                                { attrs: { color: \"warning\" } },\n                                                [\n                                                  _vm._v(\n                                                    \"\\n\\t\\t\\t\\t\\t\\t\\t\\t\" +\n                                                      _vm._s(\n                                                        _vm.$t(\n                                                          \"iqrfnet.trConfiguration.form.messages.breakInteroperability\"\n                                                        )\n                                                      ) +\n                                                      \"\\n\\t\\t\\t\\t\\t\\t\\t\"\n                                                  )\n                                                ]\n                                              )\n                                            : _vm._e(),\n                                          _vm._v(\" \"),\n                                          _vm.config.stdAndLpNetwork !==\n                                          undefined\n                                            ? _c(\"CInputCheckbox\", {\n                                                attrs: {\n                                                  checked:\n                                                    _vm.config.stdAndLpNetwork,\n                                                  label: _vm.$t(\n                                                    \"iqrfnet.trConfiguration.form.stdAndLpNetwork\"\n                                                  )\n                                                },\n                                                on: {\n                                                  \"update:checked\": function(\n                                                    $event\n                                                  ) {\n                                                    return _vm.$set(\n                                                      _vm.config,\n                                                      \"stdAndLpNetwork\",\n                                                      $event\n                                                    )\n                                                  }\n                                                }\n                                              })\n                                            : _vm._e(),\n                                          _vm._v(\" \"),\n                                          _c(\"ValidationProvider\", {\n                                            attrs: {\n                                              rules:\n                                                \"integer|between:0,7|required\",\n                                              \"custom-messages\": {\n                                                between:\n                                                  \"iqrfnet.trConfiguration.form.messages.txPower\",\n                                                integer:\n                                                  \"iqrfnet.trConfiguration.form.messages.txPower\",\n                                                required:\n                                                  \"iqrfnet.trConfiguration.form.messages.txPower\"\n                                              }\n                                            },\n                                            scopedSlots: _vm._u(\n                                              [\n                                                {\n                                                  key: \"default\",\n                                                  fn: function(ref) {\n                                                    var valid = ref.valid\n                                                    var touched = ref.touched\n                                                    var errors = ref.errors\n                                                    return [\n                                                      _c(\"CInput\", {\n                                                        attrs: {\n                                                          label: _vm.$t(\n                                                            \"iqrfnet.trConfiguration.form.txPower\"\n                                                          ),\n                                                          \"is-valid\": touched\n                                                            ? valid\n                                                            : null,\n                                                          \"invalid-feedback\": _vm.$t(\n                                                            errors[0]\n                                                          ),\n                                                          type: \"number\",\n                                                          max: \"7\",\n                                                          min: \"0\"\n                                                        },\n                                                        model: {\n                                                          value:\n                                                            _vm.config.txPower,\n                                                          callback: function(\n                                                            $$v\n                                                          ) {\n                                                            _vm.$set(\n                                                              _vm.config,\n                                                              \"txPower\",\n                                                              _vm._n($$v)\n                                                            )\n                                                          },\n                                                          expression:\n                                                            \"config.txPower\"\n                                                        }\n                                                      })\n                                                    ]\n                                                  }\n                                                }\n                                              ],\n                                              null,\n                                              true\n                                            )\n                                          }),\n                                          _vm._v(\" \"),\n                                          _c(\"ValidationProvider\", {\n                                            attrs: {\n                                              rules:\n                                                \"integer|between:0,64|required\",\n                                              \"custom-messages\": {\n                                                between:\n                                                  \"iqrfnet.trConfiguration.form.messages.rxFilter\",\n                                                integer:\n                                                  \"iqrfnet.trConfiguration.form.messages.rxFilter\",\n                                                required:\n                                                  \"iqrfnet.trConfiguration.form.messages.rxFilter\"\n                                              }\n                                            },\n                                            scopedSlots: _vm._u(\n                                              [\n                                                {\n                                                  key: \"default\",\n                                                  fn: function(ref) {\n                                                    var valid = ref.valid\n                                                    var touched = ref.touched\n                                                    var errors = ref.errors\n                                                    return [\n                                                      _c(\"CInput\", {\n                                                        attrs: {\n                                                          label: _vm.$t(\n                                                            \"iqrfnet.trConfiguration.form.rxFilter\"\n                                                          ),\n                                                          \"is-valid\": touched\n                                                            ? valid\n                                                            : null,\n                                                          \"invalid-feedback\": _vm.$t(\n                                                            errors[0]\n                                                          ),\n                                                          type: \"number\",\n                                                          max: \"64\",\n                                                          min: \"0\"\n                                                        },\n                                                        model: {\n                                                          value:\n                                                            _vm.config.rxFilter,\n                                                          callback: function(\n                                                            $$v\n                                                          ) {\n                                                            _vm.$set(\n                                                              _vm.config,\n                                                              \"rxFilter\",\n                                                              _vm._n($$v)\n                                                            )\n                                                          },\n                                                          expression:\n                                                            \"config.rxFilter\"\n                                                        }\n                                                      })\n                                                    ]\n                                                  }\n                                                }\n                                              ],\n                                              null,\n                                              true\n                                            )\n                                          }),\n                                          _vm._v(\" \"),\n                                          _c(\"ValidationProvider\", {\n                                            attrs: {\n                                              rules:\n                                                \"integer|between:1,255|required\",\n                                              \"custom-messages\": {\n                                                between:\n                                                  \"iqrfnet.trConfiguration.form.messages.lpRxTimeout\",\n                                                integer:\n                                                  \"iqrfnet.trConfiguration.form.messages.lpRxTimeout\",\n                                                required:\n                                                  \"iqrfnet.trConfiguration.form.messages.lpRxTimeout\"\n                                              }\n                                            },\n                                            scopedSlots: _vm._u(\n                                              [\n                                                {\n                                                  key: \"default\",\n                                                  fn: function(ref) {\n                                                    var valid = ref.valid\n                                                    var touched = ref.touched\n                                                    var errors = ref.errors\n                                                    return [\n                                                      _c(\"CInput\", {\n                                                        attrs: {\n                                                          label: _vm.$t(\n                                                            \"iqrfnet.trConfiguration.form.lpRxTimeout\"\n                                                          ),\n                                                          \"is-valid\": touched\n                                                            ? valid\n                                                            : null,\n                                                          \"invalid-feedback\": _vm.$t(\n                                                            errors[0]\n                                                          ),\n                                                          type: \"number\"\n                                                        },\n                                                        model: {\n                                                          value:\n                                                            _vm.config\n                                                              .lpRxTimeout,\n                                                          callback: function(\n                                                            $$v\n                                                          ) {\n                                                            _vm.$set(\n                                                              _vm.config,\n                                                              \"lpRxTimeout\",\n                                                              _vm._n($$v)\n                                                            )\n                                                          },\n                                                          expression:\n                                                            \"config.lpRxTimeout\"\n                                                        }\n                                                      })\n                                                    ]\n                                                  }\n                                                }\n                                              ],\n                                              null,\n                                              true\n                                            )\n                                          }),\n                                          _vm._v(\" \"),\n                                          _c(\"h2\", [\n                                            _vm._v(\n                                              _vm._s(\n                                                _vm.$t(\n                                                  \"iqrfnet.trConfiguration.form.rfPgm\"\n                                                )\n                                              )\n                                            )\n                                          ]),\n                                          _vm._v(\" \"),\n                                          _c(\"CInputCheckbox\", {\n                                            attrs: {\n                                              checked:\n                                                _vm.config\n                                                  .rfPgmEnableAfterReset,\n                                              label: _vm.$t(\n                                                \"iqrfnet.trConfiguration.form.rfPgmEnableAfterReset\"\n                                              )\n                                            },\n                                            on: {\n                                              \"update:checked\": function(\n                                                $event\n                                              ) {\n                                                return _vm.$set(\n                                                  _vm.config,\n                                                  \"rfPgmEnableAfterReset\",\n                                                  $event\n                                                )\n                                              }\n                                            }\n                                          }),\n                                          _vm._v(\" \"),\n                                          _c(\"CInputCheckbox\", {\n                                            attrs: {\n                                              checked:\n                                                _vm.config\n                                                  .rfPgmTerminateAfter1Min,\n                                              label: _vm.$t(\n                                                \"iqrfnet.trConfiguration.form.rfPgmTerminateAfter1Min\"\n                                              )\n                                            },\n                                            on: {\n                                              \"update:checked\": function(\n                                                $event\n                                              ) {\n                                                return _vm.$set(\n                                                  _vm.config,\n                                                  \"rfPgmTerminateAfter1Min\",\n                                                  $event\n                                                )\n                                              }\n                                            }\n                                          }),\n                                          _vm._v(\" \"),\n                                          _c(\"CInputCheckbox\", {\n                                            attrs: {\n                                              checked:\n                                                _vm.config.rfPgmTerminateMcuPin,\n                                              label: _vm.$t(\n                                                \"iqrfnet.trConfiguration.form.rfPgmTerminateMcuPin\"\n                                              )\n                                            },\n                                            on: {\n                                              \"update:checked\": function(\n                                                $event\n                                              ) {\n                                                return _vm.$set(\n                                                  _vm.config,\n                                                  \"rfPgmTerminateMcuPin\",\n                                                  $event\n                                                )\n                                              }\n                                            }\n                                          }),\n                                          _vm._v(\" \"),\n                                          _c(\"CInputCheckbox\", {\n                                            attrs: {\n                                              checked:\n                                                _vm.config.rfPgmDualChannel,\n                                              label: _vm.$t(\n                                                \"iqrfnet.trConfiguration.form.rfPgmDualChannel\"\n                                              )\n                                            },\n                                            on: {\n                                              \"update:checked\": function(\n                                                $event\n                                              ) {\n                                                return _vm.$set(\n                                                  _vm.config,\n                                                  \"rfPgmDualChannel\",\n                                                  $event\n                                                )\n                                              }\n                                            }\n                                          }),\n                                          _vm._v(\" \"),\n                                          _c(\"CInputCheckbox\", {\n                                            attrs: {\n                                              checked: _vm.config.rfPgmLpMode,\n                                              label: _vm.$t(\n                                                \"iqrfnet.trConfiguration.form.rfPgmLpMode\"\n                                              )\n                                            },\n                                            on: {\n                                              \"update:checked\": function(\n                                                $event\n                                              ) {\n                                                return _vm.$set(\n                                                  _vm.config,\n                                                  \"rfPgmLpMode\",\n                                                  $event\n                                                )\n                                              }\n                                            }\n                                          }),\n                                          _vm._v(\" \"),\n                                          _c(\"CInputCheckbox\", {\n                                            attrs: {\n                                              checked:\n                                                _vm.config.rfPgmIncorrectUpload,\n                                              label: _vm.$t(\n                                                \"iqrfnet.trConfiguration.form.rfPgmIncorrectUpload\"\n                                              ),\n                                              disabled: \"true\"\n                                            },\n                                            on: {\n                                              \"update:checked\": function(\n                                                $event\n                                              ) {\n                                                return _vm.$set(\n                                                  _vm.config,\n                                                  \"rfPgmIncorrectUpload\",\n                                                  $event\n                                                )\n                                              }\n                                            }\n                                          })\n                                        ],\n                                        1\n                                      ),\n                                      _vm._v(\" \"),\n                                      _c(\n                                        \"CCol\",\n                                        { attrs: { md: \"6\" } },\n                                        [\n                                          _c(\"h2\", [\n                                            _vm._v(\n                                              _vm._s(\n                                                _vm.$t(\n                                                  \"iqrfnet.trConfiguration.form.dpa.embeddedPeripherals\"\n                                                )\n                                              )\n                                            )\n                                          ]),\n                                          _vm._v(\" \"),\n                                          _vm._l(_vm.peripherals, function(\n                                            peripheral\n                                          ) {\n                                            return _c(\"CInputCheckbox\", {\n                                              key: peripheral.name,\n                                              attrs: {\n                                                checked: peripheral.enabled,\n                                                disabled: _vm.unchangeablePeripherals.includes(\n                                                  peripheral.name\n                                                ),\n                                                label: _vm.$t(\n                                                  \"iqrfnet.trConfiguration.form.embPers.\" +\n                                                    peripheral.name\n                                                )\n                                              },\n                                              on: {\n                                                \"update:checked\": function(\n                                                  $event\n                                                ) {\n                                                  return _vm.$set(\n                                                    peripheral,\n                                                    \"enabled\",\n                                                    $event\n                                                  )\n                                                }\n                                              }\n                                            })\n                                          }),\n                                          _vm._v(\" \"),\n                                          _c(\"h2\", [\n                                            _vm._v(\n                                              _vm._s(\n                                                _vm.$t(\n                                                  \"iqrfnet.trConfiguration.form.dpa.other\"\n                                                )\n                                              )\n                                            )\n                                          ]),\n                                          _vm._v(\" \"),\n                                          _c(\"CInputCheckbox\", {\n                                            attrs: {\n                                              checked:\n                                                _vm.config.customDpaHandler,\n                                              label: _vm.$t(\n                                                \"iqrfnet.trConfiguration.form.customDpaHandler\"\n                                              ),\n                                              disabled: !_vm.dpaHandlerDetected\n                                            },\n                                            on: {\n                                              \"update:checked\": function(\n                                                $event\n                                              ) {\n                                                return _vm.$set(\n                                                  _vm.config,\n                                                  \"customDpaHandler\",\n                                                  $event\n                                                )\n                                              }\n                                            }\n                                          }),\n                                          _vm._v(\" \"),\n                                          _vm.config.dpaPeerToPeer !== undefined\n                                            ? _c(\"CInputCheckbox\", {\n                                                attrs: {\n                                                  checked:\n                                                    _vm.config.dpaPeerToPeer,\n                                                  label: _vm.$t(\n                                                    \"iqrfnet.trConfiguration.form.dpaPeerToPeer\"\n                                                  )\n                                                },\n                                                on: {\n                                                  \"update:checked\": function(\n                                                    $event\n                                                  ) {\n                                                    return _vm.$set(\n                                                      _vm.config,\n                                                      \"dpaPeerToPeer\",\n                                                      $event\n                                                    )\n                                                  }\n                                                }\n                                              })\n                                            : _vm._e(),\n                                          _vm._v(\" \"),\n                                          _c(\"CInputCheckbox\", {\n                                            attrs: {\n                                              checked: _vm.config.peerToPeer,\n                                              label: _vm.$t(\n                                                \"iqrfnet.trConfiguration.form.peerToPeer\"\n                                              )\n                                            },\n                                            on: {\n                                              \"update:checked\": function(\n                                                $event\n                                              ) {\n                                                return _vm.$set(\n                                                  _vm.config,\n                                                  \"peerToPeer\",\n                                                  $event\n                                                )\n                                              }\n                                            }\n                                          }),\n                                          _vm._v(\" \"),\n                                          _vm.config.localFrcReception !==\n                                            undefined && _vm.address !== 0\n                                            ? _c(\"CInputCheckbox\", {\n                                                attrs: {\n                                                  checked:\n                                                    _vm.config\n                                                      .localFrcReception,\n                                                  label: _vm.$t(\n                                                    \"iqrfnet.trConfiguration.form.localFrcReception\"\n                                                  )\n                                                },\n                                                on: {\n                                                  \"update:checked\": function(\n                                                    $event\n                                                  ) {\n                                                    return _vm.$set(\n                                                      _vm.config,\n                                                      \"localFrcReception\",\n                                                      $event\n                                                    )\n                                                  }\n                                                }\n                                              })\n                                            : _vm._e(),\n                                          _vm._v(\" \"),\n                                          _c(\"CInputCheckbox\", {\n                                            attrs: {\n                                              checked: _vm.config.ioSetup,\n                                              label: _vm.$t(\n                                                \"iqrfnet.trConfiguration.form.ioSetup\"\n                                              )\n                                            },\n                                            on: {\n                                              \"update:checked\": function(\n                                                $event\n                                              ) {\n                                                return _vm.$set(\n                                                  _vm.config,\n                                                  \"ioSetup\",\n                                                  $event\n                                                )\n                                              }\n                                            }\n                                          }),\n                                          _vm._v(\" \"),\n                                          _c(\"CInputCheckbox\", {\n                                            attrs: {\n                                              checked: _vm.config.dpaAutoexec,\n                                              label: _vm.$t(\n                                                \"iqrfnet.trConfiguration.form.dpaAutoexec\"\n                                              )\n                                            },\n                                            on: {\n                                              \"update:checked\": function(\n                                                $event\n                                              ) {\n                                                return _vm.$set(\n                                                  _vm.config,\n                                                  \"dpaAutoexec\",\n                                                  $event\n                                                )\n                                              }\n                                            }\n                                          }),\n                                          _vm._v(\" \"),\n                                          _c(\"CInputCheckbox\", {\n                                            attrs: {\n                                              checked: _vm.config.routingOff,\n                                              label: _vm.$t(\n                                                \"iqrfnet.trConfiguration.form.routingOff\"\n                                              )\n                                            },\n                                            on: {\n                                              \"update:checked\": function(\n                                                $event\n                                              ) {\n                                                return _vm.$set(\n                                                  _vm.config,\n                                                  \"routingOff\",\n                                                  $event\n                                                )\n                                              }\n                                            }\n                                          }),\n                                          _vm._v(\" \"),\n                                          _vm.config.neverSleep !== undefined\n                                            ? _c(\"CInputCheckbox\", {\n                                                attrs: {\n                                                  checked:\n                                                    _vm.config.neverSleep,\n                                                  label: _vm.$t(\n                                                    \"iqrfnet.trConfiguration.form.neverSleep\"\n                                                  )\n                                                },\n                                                on: {\n                                                  \"update:checked\": function(\n                                                    $event\n                                                  ) {\n                                                    return _vm.$set(\n                                                      _vm.config,\n                                                      \"neverSleep\",\n                                                      $event\n                                                    )\n                                                  }\n                                                }\n                                              })\n                                            : _vm._e(),\n                                          _vm._v(\" \"),\n                                          _c(\"ValidationProvider\", {\n                                            attrs: {\n                                              rules: \"required\",\n                                              \"custom-messages\": {\n                                                required:\n                                                  \"iqrfnet.trConfiguration.form.messages.uartBaudrate\"\n                                              }\n                                            },\n                                            scopedSlots: _vm._u(\n                                              [\n                                                {\n                                                  key: \"default\",\n                                                  fn: function(ref) {\n                                                    var valid = ref.valid\n                                                    var touched = ref.touched\n                                                    var errors = ref.errors\n                                                    return [\n                                                      _c(\"CSelect\", {\n                                                        attrs: {\n                                                          value:\n                                                            _vm.config\n                                                              .uartBaudrate,\n                                                          label: _vm.$t(\n                                                            \"iqrfnet.trConfiguration.form.uartBaudrate\"\n                                                          ),\n                                                          \"is-valid\": touched\n                                                            ? valid\n                                                            : null,\n                                                          \"invalid-feedback\": _vm.$t(\n                                                            errors[0]\n                                                          ),\n                                                          placeholder: _vm.$t(\n                                                            \"iqrfnet.trConfiguration.form.messages.uartBaudrate\"\n                                                          ),\n                                                          options:\n                                                            _vm.uartBaudRates\n                                                        },\n                                                        on: {\n                                                          \"update:value\": function(\n                                                            $event\n                                                          ) {\n                                                            return _vm.$set(\n                                                              _vm.config,\n                                                              \"uartBaudrate\",\n                                                              $event\n                                                            )\n                                                          }\n                                                        }\n                                                      })\n                                                    ]\n                                                  }\n                                                }\n                                              ],\n                                              null,\n                                              true\n                                            )\n                                          }),\n                                          _vm._v(\" \"),\n                                          _vm.config.nodeDpaInterface !==\n                                          undefined\n                                            ? _c(\"CInputCheckbox\", {\n                                                attrs: {\n                                                  checked:\n                                                    _vm.config.nodeDpaInterface,\n                                                  label: _vm.$t(\n                                                    \"iqrfnet.trConfiguration.form.nodeDpaInterface\"\n                                                  )\n                                                },\n                                                on: {\n                                                  \"update:checked\": function(\n                                                    $event\n                                                  ) {\n                                                    return _vm.$set(\n                                                      _vm.config,\n                                                      \"nodeDpaInterface\",\n                                                      $event\n                                                    )\n                                                  }\n                                                }\n                                              })\n                                            : _vm._e()\n                                        ],\n                                        2\n                                      )\n                                    ],\n                                    1\n                                  ),\n                                  _vm._v(\" \"),\n                                  _c(\n                                    \"CButton\",\n                                    {\n                                      attrs: {\n                                        color: \"primary\",\n                                        type: \"submit\",\n                                        disabled: invalid\n                                      }\n                                    },\n                                    [\n                                      _vm._v(\n                                        \"\\n\\t\\t\\t\\t\\t\\t\" +\n                                          _vm._s(_vm.$t(\"forms.write\")) +\n                                          \"\\n\\t\\t\\t\\t\\t\"\n                                      )\n                                    ]\n                                  )\n                                ],\n                                1\n                              )\n                            ]\n                          }\n                        }\n                      ],\n                      null,\n                      false,\n                      2043800768\n                    )\n                  })\n                ],\n                1\n              )\n            ],\n            1\n          )\n        : _vm._e(),\n      _vm._v(\" \"),\n      _c(\"SecurityForm\", { attrs: { address: _vm.address } })\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"CCard\",\n    [\n      _c(\"CCardHeader\", [\n        _vm._v(\n          \"\\n\\t\\t\" + _vm._s(_vm.$t(\"iqrfnet.addressChange.title\")) + \"\\n\\t\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"CCardBody\",\n        [\n          _c(\"ValidationObserver\", {\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(ref) {\n                  var invalid = ref.invalid\n                  return [\n                    _c(\n                      \"CForm\",\n                      {\n                        on: {\n                          submit: function($event) {\n                            $event.preventDefault()\n                            return _vm.changeAddress($event)\n                          }\n                        }\n                      },\n                      [\n                        _c(\"ValidationProvider\", {\n                          attrs: {\n                            rules: \"integer|required|between:0,239\",\n                            \"custom-messages\": {\n                              between: \"iqrfnet.addressChange.messages.address\",\n                              integer: \"iqrfnet.addressChange.messages.address\",\n                              required: \"iqrfnet.addressChange.messages.address\"\n                            }\n                          },\n                          scopedSlots: _vm._u(\n                            [\n                              {\n                                key: \"default\",\n                                fn: function(ref) {\n                                  var errors = ref.errors\n                                  var touched = ref.touched\n                                  var valid = ref.valid\n                                  return [\n                                    _c(\"CInput\", {\n                                      attrs: {\n                                        type: \"number\",\n                                        min: \"0\",\n                                        max: \"239\",\n                                        label: _vm.$t(\n                                          \"iqrfnet.addressChange.address\"\n                                        ),\n                                        \"is-valid\": touched ? valid : null,\n                                        \"invalid-feedback\": _vm.$t(errors[0])\n                                      },\n                                      model: {\n                                        value: _vm.address,\n                                        callback: function($$v) {\n                                          _vm.address = _vm._n($$v)\n                                        },\n                                        expression: \"address\"\n                                      }\n                                    })\n                                  ]\n                                }\n                              }\n                            ],\n                            null,\n                            true\n                          )\n                        }),\n                        _vm._v(\" \"),\n                        _c(\n                          \"CButton\",\n                          {\n                            attrs: {\n                              color: \"primary\",\n                              type: \"submit\",\n                              disabled: invalid\n                            }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n\\t\\t\\t\\t\\t\" +\n                                _vm._s(_vm.$t(\"forms.read\")) +\n                                \"\\n\\t\\t\\t\\t\"\n                            )\n                          ]\n                        )\n                      ],\n                      1\n                    )\n                  ]\n                }\n              }\n            ])\n          })\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import Vue from 'vue';\nimport { CButton, CCard, CCardBody, CCardHeader, CForm, CInput } from '@coreui/vue/src';\nimport { extend, ValidationObserver, ValidationProvider } from 'vee-validate';\nimport { between, integer, required } from 'vee-validate/dist/rules';\nexport default Vue.extend({\n    name: 'AddressChanger',\n    components: {\n        CButton: CButton,\n        CCard: CCard,\n        CCardBody: CCardBody,\n        CCardHeader: CCardHeader,\n        CForm: CForm,\n        CInput: CInput,\n        ValidationObserver: ValidationObserver,\n        ValidationProvider: ValidationProvider,\n    },\n    props: {\n        currentAddress: {\n            type: Number,\n            required: true\n        },\n    },\n    data: function () {\n        return {\n            address: null,\n        };\n    },\n    created: function () {\n        extend('between', between);\n        extend('integer', integer);\n        extend('required', required);\n        this.address = this.currentAddress;\n    },\n    methods: {\n        changeAddress: function () {\n            this.$router.push('/iqrfnet/tr-config/' + this.address);\n        },\n    },\n});\n","import mod from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AddressChanger.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AddressChanger.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./AddressChanger.vue?vue&type=template&id=211e5a7d&\"\nimport script from \"./AddressChanger.vue?vue&type=script&lang=ts&\"\nexport * from \"./AddressChanger.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('211e5a7d')) {\n      api.createRecord('211e5a7d', component.options)\n    } else {\n      api.reload('211e5a7d', component.options)\n    }\n    module.hot.accept(\"./AddressChanger.vue?vue&type=template&id=211e5a7d&\", function () {\n      api.rerender('211e5a7d', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/components/IqrfNet/AddressChanger.vue\"\nexport default component.exports","/**\n * Security format enum\n */\nexport var SecurityFormat;\n(function (SecurityFormat) {\n    SecurityFormat[SecurityFormat[\"ASCII\"] = 0] = \"ASCII\";\n    SecurityFormat[SecurityFormat[\"HEX\"] = 1] = \"HEX\";\n})(SecurityFormat || (SecurityFormat = {}));\n","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"CCard\",\n    [\n      _c(\"CCardHeader\", [\n        _vm._v(_vm._s(_vm.$t(\"iqrfnet.trConfiguration.security.title\")))\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"CCardBody\",\n        [\n          _c(\n            \"CForm\",\n            [\n              _c(\"CSelect\", {\n                attrs: {\n                  value: _vm.format,\n                  options: _vm.selectOptions,\n                  label: _vm.$t(\"iqrfnet.trConfiguration.security.form.format\")\n                },\n                on: {\n                  \"update:value\": function($event) {\n                    _vm.format = $event\n                  }\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"CInput\", {\n                attrs: {\n                  label: _vm.$t(\n                    \"iqrfnet.trConfiguration.security.form.password\"\n                  )\n                },\n                model: {\n                  value: _vm.password,\n                  callback: function($$v) {\n                    _vm.password = $$v\n                  },\n                  expression: \"password\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\n                \"CButton\",\n                {\n                  attrs: { color: \"primary\" },\n                  on: {\n                    click: function($event) {\n                      return _vm.save(true)\n                    }\n                  }\n                },\n                [\n                  _vm._v(\n                    \"\\n\\t\\t\\t\\t\" +\n                      _vm._s(\n                        _vm.$t(\n                          \"iqrfnet.trConfiguration.security.form.setPassword\"\n                        )\n                      ) +\n                      \"\\n\\t\\t\\t\"\n                  )\n                ]\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"CButton\",\n                {\n                  attrs: { color: \"primary\" },\n                  on: {\n                    click: function($event) {\n                      return _vm.save(false)\n                    }\n                  }\n                },\n                [\n                  _vm._v(\n                    \"\\n\\t\\t\\t\\t\" +\n                      _vm._s(\n                        _vm.$t(\"iqrfnet.trConfiguration.security.form.setKey\")\n                      ) +\n                      \"\\n\\t\\t\\t\"\n                  )\n                ]\n              )\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import store from '../store';\nimport { SecurityFormat } from '../iqrfNet/securityFormat';\n/**\n * TR configuration security service\n */\nvar SecurityService = /** @class */ (function () {\n    function SecurityService() {\n    }\n    /**\n     * Sets IQMESH security\n     * @param nadr Network device address\n     * @param password\n     * @param inputFormat\n     * @param type\n     */\n    SecurityService.prototype.setSecurity = function (nadr, password, inputFormat, type) {\n        return store.dispatch('sendRequest', {\n            'mType': 'iqrfEmbedOs_SetSecurity',\n            'data': {\n                'req': {\n                    'nAdr': nadr,\n                    'param': {\n                        'type': type,\n                        'data': this.convert(password, inputFormat),\n                    },\n                },\n                'returnVerbose': true,\n            },\n        });\n    };\n    /**\n     * Converts an access password or an user key to HEX format\n     * @param password access password or user key\n     * @param format input data format (ASCII or HEX)\n     */\n    SecurityService.prototype.convert = function (password, format) {\n        var data = null;\n        if (format === SecurityFormat.ASCII) {\n            data = '';\n            for (var i = 0; i < password.length; ++i) {\n                data += password.charCodeAt(i).toString(16);\n            }\n        }\n        else {\n            data = password;\n        }\n        data = data.padEnd(32, '0');\n        var array = [];\n        for (var i = 0; i < 16; ++i) {\n            array.push(parseInt(data.substr(i * 2, 2), 16));\n        }\n        return array;\n    };\n    return SecurityService;\n}());\nexport default new SecurityService();\n","import mod from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SecurityForm.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SecurityForm.vue?vue&type=script&lang=ts&\"","import Vue from 'vue';\nimport { CButton, CCard, CCardBody, CCardHeader, CForm, CInput, CSelect } from '@coreui/vue/src';\nimport SecurityService from '../../services/SecurityService';\nimport { SecurityFormat } from '../../iqrfNet/securityFormat';\nexport default Vue.extend({\n    name: 'SecurityForm',\n    components: {\n        CButton: CButton,\n        CCard: CCard,\n        CCardBody: CCardBody,\n        CCardHeader: CCardHeader,\n        CForm: CForm,\n        CInput: CInput,\n        CSelect: CSelect,\n    },\n    props: {\n        address: {\n            type: Number,\n            required: true,\n        },\n    },\n    data: function () {\n        return {\n            selectOptions: [\n                {\n                    value: SecurityFormat.ASCII.valueOf(),\n                    label: this.$t('iqrfnet.trConfiguration.security.form.ascii').toString(),\n                },\n                {\n                    value: SecurityFormat.HEX.valueOf(),\n                    label: this.$t('iqrfnet.trConfiguration.security.form.hex').toString(),\n                }\n            ],\n            format: SecurityFormat.ASCII.valueOf(),\n            password: '',\n        };\n    },\n    created: function () {\n        var _this = this;\n        this.unsubscribe = this.$store.subscribe(function (mutation) {\n            if (mutation.type !== 'SOCKET_ONMESSAGE') {\n                return;\n            }\n            if (mutation.payload.mType === 'iqrfEmbedOs_SetSecurity') {\n                if (mutation.payload.data.status === 0) {\n                    _this.$store.commit('spinner/HIDE');\n                    _this.$toast.success(_this.$t('iqrfnet.trConfiguration.security.messages.success').toString());\n                }\n                else {\n                    _this.$toast.error(_this.$t('iqrfnet.trConfiguration.security.messages.failure').toString());\n                }\n            }\n        });\n    },\n    beforeDestroy: function () {\n        this.unsubscribe();\n    },\n    methods: {\n        save: function (password) {\n            var regex = null;\n            if (this.format === SecurityFormat.ASCII) {\n                regex = RegExp('^[ -~]{0,16}$');\n            }\n            else {\n                regex = RegExp('^[a-fA-F0-9]{0,32}$');\n            }\n            if (!regex.test(this.password)) {\n                this.$toast.error('Password string is not valid for the selected format.');\n                return;\n            }\n            this.$store.commit('spinner/SHOW');\n            if (password) {\n                SecurityService.setSecurity(this.address, this.password, this.format, 0);\n            }\n            else {\n                SecurityService.setSecurity(this.address, this.password, this.format, 1);\n            }\n        }\n    },\n});\n","import { render, staticRenderFns } from \"./SecurityForm.vue?vue&type=template&id=0f804533&\"\nimport script from \"./SecurityForm.vue?vue&type=script&lang=ts&\"\nexport * from \"./SecurityForm.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('0f804533')) {\n      api.createRecord('0f804533', component.options)\n    } else {\n      api.reload('0f804533', component.options)\n    }\n    module.hot.accept(\"./SecurityForm.vue?vue&type=template&id=0f804533&\", function () {\n      api.rerender('0f804533', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/components/IqrfNet/SecurityForm.vue\"\nexport default component.exports","<template>\n\t<div>\n\t\t<AddressChanger :current-address='address' />\n\t\t<CCard v-if='config !== null'>\n\t\t\t<CCardHeader>{{ $t('iqrfnet.trConfiguration.title') }}</CCardHeader>\n\t\t\t<CCardBody>\n\t\t\t\t<ValidationObserver v-slot='{ invalid }'>\n\t\t\t\t\t<CForm @submit.prevent='handleSubmit'>\n\t\t\t\t\t\t<CRow>\n\t\t\t\t\t\t\t<CCol md='6'>\n\t\t\t\t\t\t\t\t<h2>{{ $t('iqrfnet.trConfiguration.form.rf') }}</h2>\n\t\t\t\t\t\t\t\t<CSelect\n\t\t\t\t\t\t\t\t\tv-model='config.rfBand'\n\t\t\t\t\t\t\t\t\t:label='$t(\"iqrfnet.trConfiguration.form.rfBand\")'\n\t\t\t\t\t\t\t\t\t:options='[\n\t\t\t\t\t\t\t\t\t\t{value: \"443\", label: $t(\"iqrfnet.trConfiguration.form.rfBands.443\")},\n\t\t\t\t\t\t\t\t\t\t{value: \"868\", label: $t(\"iqrfnet.trConfiguration.form.rfBands.868\")},\n\t\t\t\t\t\t\t\t\t\t{value: \"916\", label: $t(\"iqrfnet.trConfiguration.form.rfBands.916\")},\n\t\t\t\t\t\t\t\t\t]'\n\t\t\t\t\t\t\t\t\tdisabled='true'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<ValidationProvider\n\t\t\t\t\t\t\t\t\tv-slot='{ valid, touched, errors }'\n\t\t\t\t\t\t\t\t\t:rules='rfChannelRules.rule'\n\t\t\t\t\t\t\t\t\t:custom-messages='rfChannelValidatorMessages'\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<CInput\n\t\t\t\t\t\t\t\t\t\tv-model.number='config.rfChannelA'\n\t\t\t\t\t\t\t\t\t\t:label='$t(\"iqrfnet.trConfiguration.form.rfChannelA\")'\n\t\t\t\t\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t\t\t\t:max='rfChannelRules.max'\n\t\t\t\t\t\t\t\t\t\t:min='rfChannelRules.min'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</ValidationProvider>\n\t\t\t\t\t\t\t\t<ValidationProvider\n\t\t\t\t\t\t\t\t\tv-slot='{ valid, touched, errors }'\n\t\t\t\t\t\t\t\t\t:rules='rfChannelRules.rule'\n\t\t\t\t\t\t\t\t\t:custom-messages='rfChannelValidatorMessages'\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<CInput\n\t\t\t\t\t\t\t\t\t\tv-model.number='config.rfChannelB'\n\t\t\t\t\t\t\t\t\t\t:label='$t(\"iqrfnet.trConfiguration.form.rfChannelB\")'\n\t\t\t\t\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t\t\t\t:max='rfChannelRules.max'\n\t\t\t\t\t\t\t\t\t\t:min='rfChannelRules.min'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</ValidationProvider>\n\t\t\t\t\t\t\t\t<ValidationProvider\n\t\t\t\t\t\t\t\t\tv-if='config.rfSubChannelA !== undefined'\n\t\t\t\t\t\t\t\t\tv-slot='{ valid, touched, errors }'\n\t\t\t\t\t\t\t\t\t:rules='rfChannelRules.rule'\n\t\t\t\t\t\t\t\t\t:custom-messages='rfChannelValidatorMessages'\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<CInput\n\t\t\t\t\t\t\t\t\t\tv-model.number='config.rfSubChannelA'\n\t\t\t\t\t\t\t\t\t\t:label='$t(\"iqrfnet.trConfiguration.form.rfSubChannelA\")'\n\t\t\t\t\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t\t\t\t:max='rfChannelRules.max'\n\t\t\t\t\t\t\t\t\t\t:min='rfChannelRules.min'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</ValidationProvider>\n\t\t\t\t\t\t\t\t<ValidationProvider\n\t\t\t\t\t\t\t\t\tv-if='config.rfSubChannelB !== undefined'\n\t\t\t\t\t\t\t\t\tv-slot='{ valid, touched, errors }'\n\t\t\t\t\t\t\t\t\t:rules='rfChannelRules.rule'\n\t\t\t\t\t\t\t\t\t:custom-messages='rfChannelValidatorMessages'\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<CInput\n\t\t\t\t\t\t\t\t\t\tv-model.number='config.rfSubChannelB'\n\t\t\t\t\t\t\t\t\t\t:label='$t(\"iqrfnet.trConfiguration.form.rfSubChannelB\")'\n\t\t\t\t\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t\t\t\t:max='rfChannelRules.max'\n\t\t\t\t\t\t\t\t\t\t:min='rfChannelRules.min'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</ValidationProvider>\n\t\t\t\t\t\t\t\t<ValidationProvider\n\t\t\t\t\t\t\t\t\tv-if='config.rfAltDsmChannel !== undefined'\n\t\t\t\t\t\t\t\t\tv-slot='{ valid, touched, errors }'\n\t\t\t\t\t\t\t\t\t:rules='rfChannelRules.rule'\n\t\t\t\t\t\t\t\t\t:custom-messages='rfChannelValidatorMessages'\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<CInput\n\t\t\t\t\t\t\t\t\t\tv-model.number='config.rfAltDsmChannel'\n\t\t\t\t\t\t\t\t\t\t:label='$t(\"iqrfnet.trConfiguration.form.rfAltDsmChannel\")'\n\t\t\t\t\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t\t\t\t:max='rfChannelRules.max'\n\t\t\t\t\t\t\t\t\t\t:min='rfChannelRules.min'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</ValidationProvider>\n\t\t\t\t\t\t\t\t<CAlert v-if='config.stdAndLpNetwork === false' color='warning'>\n\t\t\t\t\t\t\t\t\t{{ $t('iqrfnet.trConfiguration.form.messages.breakInteroperability') }}\n\t\t\t\t\t\t\t\t</CAlert>\n\t\t\t\t\t\t\t\t<CInputCheckbox\n\t\t\t\t\t\t\t\t\tv-if='config.stdAndLpNetwork !== undefined'\n\t\t\t\t\t\t\t\t\t:checked.sync='config.stdAndLpNetwork'\n\t\t\t\t\t\t\t\t\t:label='$t(\"iqrfnet.trConfiguration.form.stdAndLpNetwork\")'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<ValidationProvider\n\t\t\t\t\t\t\t\t\tv-slot='{ valid, touched, errors }'\n\t\t\t\t\t\t\t\t\trules='integer|between:0,7|required'\n\t\t\t\t\t\t\t\t\t:custom-messages='{\n\t\t\t\t\t\t\t\t\t\tbetween: \"iqrfnet.trConfiguration.form.messages.txPower\",\n\t\t\t\t\t\t\t\t\t\tinteger: \"iqrfnet.trConfiguration.form.messages.txPower\",\n\t\t\t\t\t\t\t\t\t\trequired: \"iqrfnet.trConfiguration.form.messages.txPower\",\n\t\t\t\t\t\t\t\t\t}'\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<CInput\n\t\t\t\t\t\t\t\t\t\tv-model.number='config.txPower'\n\t\t\t\t\t\t\t\t\t\t:label='$t(\"iqrfnet.trConfiguration.form.txPower\")'\n\t\t\t\t\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t\t\t\tmax='7'\n\t\t\t\t\t\t\t\t\t\tmin='0'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</ValidationProvider>\n\t\t\t\t\t\t\t\t<ValidationProvider\n\t\t\t\t\t\t\t\t\tv-slot='{ valid, touched, errors }'\n\t\t\t\t\t\t\t\t\trules='integer|between:0,64|required'\n\t\t\t\t\t\t\t\t\t:custom-messages='{\n\t\t\t\t\t\t\t\t\t\tbetween: \"iqrfnet.trConfiguration.form.messages.rxFilter\",\n\t\t\t\t\t\t\t\t\t\tinteger: \"iqrfnet.trConfiguration.form.messages.rxFilter\",\n\t\t\t\t\t\t\t\t\t\trequired: \"iqrfnet.trConfiguration.form.messages.rxFilter\",\n\t\t\t\t\t\t\t\t\t}'\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<CInput\n\t\t\t\t\t\t\t\t\t\tv-model.number='config.rxFilter'\n\t\t\t\t\t\t\t\t\t\t:label='$t(\"iqrfnet.trConfiguration.form.rxFilter\")'\n\t\t\t\t\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t\t\t\tmax='64'\n\t\t\t\t\t\t\t\t\t\tmin='0'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</ValidationProvider>\n\t\t\t\t\t\t\t\t<ValidationProvider\n\t\t\t\t\t\t\t\t\tv-slot='{ valid, touched, errors }'\n\t\t\t\t\t\t\t\t\trules='integer|between:1,255|required'\n\t\t\t\t\t\t\t\t\t:custom-messages='{\n\t\t\t\t\t\t\t\t\t\tbetween: \"iqrfnet.trConfiguration.form.messages.lpRxTimeout\",\n\t\t\t\t\t\t\t\t\t\tinteger: \"iqrfnet.trConfiguration.form.messages.lpRxTimeout\",\n\t\t\t\t\t\t\t\t\t\trequired: \"iqrfnet.trConfiguration.form.messages.lpRxTimeout\",\n\t\t\t\t\t\t\t\t\t}'\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<CInput\n\t\t\t\t\t\t\t\t\t\tv-model.number='config.lpRxTimeout'\n\t\t\t\t\t\t\t\t\t\t:label='$t(\"iqrfnet.trConfiguration.form.lpRxTimeout\")'\n\t\t\t\t\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</ValidationProvider>\n\t\t\t\t\t\t\t\t<h2>{{ $t('iqrfnet.trConfiguration.form.rfPgm') }}</h2>\n\t\t\t\t\t\t\t\t<CInputCheckbox\n\t\t\t\t\t\t\t\t\t:checked.sync='config.rfPgmEnableAfterReset'\n\t\t\t\t\t\t\t\t\t:label='$t(\"iqrfnet.trConfiguration.form.rfPgmEnableAfterReset\")'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<CInputCheckbox\n\t\t\t\t\t\t\t\t\t:checked.sync='config.rfPgmTerminateAfter1Min'\n\t\t\t\t\t\t\t\t\t:label='$t(\"iqrfnet.trConfiguration.form.rfPgmTerminateAfter1Min\")'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<CInputCheckbox\n\t\t\t\t\t\t\t\t\t:checked.sync='config.rfPgmTerminateMcuPin'\n\t\t\t\t\t\t\t\t\t:label='$t(\"iqrfnet.trConfiguration.form.rfPgmTerminateMcuPin\")'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<CInputCheckbox\n\t\t\t\t\t\t\t\t\t:checked.sync='config.rfPgmDualChannel'\n\t\t\t\t\t\t\t\t\t:label='$t(\"iqrfnet.trConfiguration.form.rfPgmDualChannel\")'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<CInputCheckbox\n\t\t\t\t\t\t\t\t\t:checked.sync='config.rfPgmLpMode'\n\t\t\t\t\t\t\t\t\t:label='$t(\"iqrfnet.trConfiguration.form.rfPgmLpMode\")'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<CInputCheckbox\n\t\t\t\t\t\t\t\t\t:checked.sync='config.rfPgmIncorrectUpload'\n\t\t\t\t\t\t\t\t\t:label='$t(\"iqrfnet.trConfiguration.form.rfPgmIncorrectUpload\")'\n\t\t\t\t\t\t\t\t\tdisabled='true'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</CCol>\n\t\t\t\t\t\t\t<CCol md='6'>\n\t\t\t\t\t\t\t\t<h2>{{ $t('iqrfnet.trConfiguration.form.dpa.embeddedPeripherals') }}</h2>\n\t\t\t\t\t\t\t\t<CInputCheckbox\n\t\t\t\t\t\t\t\t\tv-for='peripheral of peripherals'\n\t\t\t\t\t\t\t\t\t:key='peripheral.name'\n\t\t\t\t\t\t\t\t\t:checked.sync='peripheral.enabled'\n\t\t\t\t\t\t\t\t\t:disabled='unchangeablePeripherals.includes(peripheral.name)'\n\t\t\t\t\t\t\t\t\t:label='$t(\"iqrfnet.trConfiguration.form.embPers.\" + peripheral.name)'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<h2>{{ $t('iqrfnet.trConfiguration.form.dpa.other') }}</h2>\n\t\t\t\t\t\t\t\t<CInputCheckbox\n\t\t\t\t\t\t\t\t\t:checked.sync='config.customDpaHandler'\n\t\t\t\t\t\t\t\t\t:label='$t(\"iqrfnet.trConfiguration.form.customDpaHandler\")'\n\t\t\t\t\t\t\t\t\t:disabled='!dpaHandlerDetected'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<CInputCheckbox\n\t\t\t\t\t\t\t\t\tv-if='config.dpaPeerToPeer !== undefined'\n\t\t\t\t\t\t\t\t\t:checked.sync='config.dpaPeerToPeer'\n\t\t\t\t\t\t\t\t\t:label='$t(\"iqrfnet.trConfiguration.form.dpaPeerToPeer\")'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<CInputCheckbox\n\t\t\t\t\t\t\t\t\t:checked.sync='config.peerToPeer'\n\t\t\t\t\t\t\t\t\t:label='$t(\"iqrfnet.trConfiguration.form.peerToPeer\")'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<CInputCheckbox\n\t\t\t\t\t\t\t\t\tv-if='config.localFrcReception !== undefined && address !== 0'\n\t\t\t\t\t\t\t\t\t:checked.sync='config.localFrcReception'\n\t\t\t\t\t\t\t\t\t:label='$t(\"iqrfnet.trConfiguration.form.localFrcReception\")'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<CInputCheckbox\n\t\t\t\t\t\t\t\t\t:checked.sync='config.ioSetup'\n\t\t\t\t\t\t\t\t\t:label='$t(\"iqrfnet.trConfiguration.form.ioSetup\")'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<CInputCheckbox\n\t\t\t\t\t\t\t\t\t:checked.sync='config.dpaAutoexec'\n\t\t\t\t\t\t\t\t\t:label='$t(\"iqrfnet.trConfiguration.form.dpaAutoexec\")'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<CInputCheckbox\n\t\t\t\t\t\t\t\t\t:checked.sync='config.routingOff'\n\t\t\t\t\t\t\t\t\t:label='$t(\"iqrfnet.trConfiguration.form.routingOff\")'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<CInputCheckbox\n\t\t\t\t\t\t\t\t\tv-if='config.neverSleep !== undefined'\n\t\t\t\t\t\t\t\t\t:checked.sync='config.neverSleep'\n\t\t\t\t\t\t\t\t\t:label='$t(\"iqrfnet.trConfiguration.form.neverSleep\")'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<ValidationProvider\n\t\t\t\t\t\t\t\t\tv-slot='{ valid, touched, errors }'\n\t\t\t\t\t\t\t\t\trules='required'\n\t\t\t\t\t\t\t\t\t:custom-messages='{\n\t\t\t\t\t\t\t\t\t\trequired: \"iqrfnet.trConfiguration.form.messages.uartBaudrate\",\n\t\t\t\t\t\t\t\t\t}'\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<CSelect\n\t\t\t\t\t\t\t\t\t\t:value.sync='config.uartBaudrate'\n\t\t\t\t\t\t\t\t\t\t:label='$t(\"iqrfnet.trConfiguration.form.uartBaudrate\")'\n\t\t\t\t\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\t\t\t\t\t:placeholder='$t(\"iqrfnet.trConfiguration.form.messages.uartBaudrate\")'\n\t\t\t\t\t\t\t\t\t\t:options='uartBaudRates'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</ValidationProvider>\n\t\t\t\t\t\t\t\t<CInputCheckbox\n\t\t\t\t\t\t\t\t\tv-if='config.nodeDpaInterface !== undefined'\n\t\t\t\t\t\t\t\t\t:checked.sync='config.nodeDpaInterface'\n\t\t\t\t\t\t\t\t\t:label='$t(\"iqrfnet.trConfiguration.form.nodeDpaInterface\")'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</CCol>\n\t\t\t\t\t\t</CRow>\n\t\t\t\t\t\t<CButton color='primary' type='submit' :disabled='invalid'>\n\t\t\t\t\t\t\t{{ $t('forms.write') }}\n\t\t\t\t\t\t</CButton>\n\t\t\t\t\t</CForm>\n\t\t\t\t</ValidationObserver>\n\t\t\t</CCardBody>\n\t\t</CCard>\n\t\t<SecurityForm :address='address' />\n\t</div>\n</template>\n\n<script>\nimport {CCard, CCardBody, CCardHeader, CForm, CInput} from '@coreui/vue/src';\nimport {\n\tbetween,\n\tinteger,\n\tmin_value,\n\tmax_value,\n\trequired,\n} from 'vee-validate/dist/rules';\nimport {extend, ValidationObserver, ValidationProvider} from 'vee-validate';\nimport AddressChanger from '../../components/IqrfNet/AddressChanger';\nimport SecurityForm from '../../components/IqrfNet/SecurityForm';\nimport IqrfNetService from '../../services/IqrfNetService';\n\nexport default {\n\tname: 'TrConfiguration',\n\tcomponents: {\n\t\tAddressChanger,\n\t\tCCard,\n\t\tCCardBody,\n\t\tCCardHeader,\n\t\tCForm,\n\t\tCInput,\n\t\tSecurityForm,\n\t\tValidationObserver,\n\t\tValidationProvider,\n\t},\n\tprops: {\n\t\taddress: {\n\t\t\ttype: Number,\n\t\t\trequired: true,\n\t\t},\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tconfig: null,\n\t\t\tperipherals: [],\n\t\t\tdpaHandlerDetected: null,\n\t\t\tdpaVersion: null,\n\t\t\tunchangeablePeripherals: ['coordinator', 'node', 'os'],\n\t\t};\n\t},\n\tcomputed: {\n\t\trfChannelRules() {\n\t\t\tswitch (this.config.rfBand) {\n\t\t\t\tcase '433':\n\t\t\t\t\treturn {rule:'integer|between:0,16|required', min: 0, max: 16};\n\t\t\t\tcase '868':\n\t\t\t\t\treturn {rule: 'integer|between:0,67|required', min: 0, max: 67};\n\t\t\t\tcase '916':\n\t\t\t\t\treturn {rule: 'integer|between:0,255|required', min: 0, max: 255};\n\t\t\t}\n\t\t\treturn undefined;\n\t\t},\n\t\trfChannelValidatorMessages() {\n\t\t\tlet message = '';\n\t\t\tswitch (this.config.rfBand) {\n\t\t\t\tcase '433':\n\t\t\t\t\tmessage = 'iqrfnet.trConfiguration.form.messages.rfChannel.433';\n\t\t\t\t\tbreak;\n\t\t\t\tcase '868':\n\t\t\t\t\tmessage = 'iqrfnet.trConfiguration.form.messages.rfChannel.868';\n\t\t\t\t\tbreak;\n\t\t\t\tcase '916':\n\t\t\t\t\tmessage = 'iqrfnet.trConfiguration.form.messages.rfChannel.916';\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tbetween: message,\n\t\t\t\tinteger: message,\n\t\t\t\trequired: message\n\t\t\t};\n\t\t},\n\t\tuartBaudRates() {\n\t\t\tconst uartBaudRates = [1200, 2400, 4800, 9600, 19200, 38400, 57600, 115200, 230400];\n\t\t\treturn uartBaudRates.map((uartBaudRate) => {\n\t\t\t\treturn {\n\t\t\t\t\tvalue: uartBaudRate,\n\t\t\t\t\tlabel: this.$t('iqrfnet.trConfiguration.form.uartBaudrates.' + uartBaudRate).toString(),\n\t\t\t\t};\n\t\t\t});\n\t\t},\n\t},\n\twatch: {\n\t\taddress: function (newVal) {\n\t\t\tthis.config = null;\n\t\t\tthis.peripherals = [];\n\t\t\tthis.address = newVal;\n\t\t\tif (this.$store.getters.isSocketConnected) {\n\t\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\t\tIqrfNetService.enumerateDevice(this.address);\n\t\t\t}\n\t\t},\n\t},\n\tcreated() {\n\t\textend('between', between);\n\t\textend('integer', integer);\n\t\textend('min', min_value);\n\t\textend('max', max_value);\n\t\textend('required', required);\n\t\tthis.unsubscribe = this.$store.subscribe(mutation => {\n\t\t\tif (mutation.type === 'SOCKET_ONOPEN') {\n\t\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\t\tIqrfNetService.enumerateDevice(this.address);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (mutation.type !== 'SOCKET_ONMESSAGE') {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (mutation.payload.mType === 'iqmeshNetwork_WriteTrConf') {\n\t\t\t\tthis.handleWriteResponse(mutation.payload);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (mutation.payload.mType === 'iqmeshNetwork_EnumerateDevice') {\n\t\t\t\tthis.handleEnumerationResponse(mutation.payload);\n\t\t\t}\n\t\t});\n\t\tif (this.$store.getters.isSocketConnected) {\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\tIqrfNetService.enumerateDevice(this.address);\n\t\t}\n\t},\n\tbeforeDestroy() {\n\t\tthis.unsubscribe();\n\t},\n\tmethods: {\n\t\thandleEnumerationResponse(response) {\n\t\t\tif (response.data.status !== 0) {\n\t\t\t\tthis.$store.commit('spinner/HIDE');\n\t\t\t\tthis.$toast.error(\n\t\t\t\t\tthis.$t('iqrfnet.trConfiguration.messages.read.failure').toString()\n\t\t\t\t);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet rsp = response.data.rsp;\n\t\t\tthis.config = rsp.trConfiguration;\n\t\t\tthis.dpaHandlerDetected = rsp.osRead.flags.dpaHandlerDetected;\n\t\t\tthis.dpaVersion = rsp.peripheralEnumeration.dpaVer;\n\t\t\tthis.setEmbeddedPeripherals();\n\t\t\tthis.$store.commit('spinner/HIDE');\n\t\t\tif (this.$store.getters['user/getRole'] === 'normal') {\n\t\t\t\tthis.$toast.success(\n\t\t\t\t\tthis.$t('iqrfnet.trConfiguration.messages.read.success').toString()\n\t\t\t\t);\n\t\t\t}\n\t\t},\n\t\thandleSubmit() {\n\t\t\tlet config = JSON.parse(JSON.stringify(this.config));\n\t\t\tconfig.embPers = this.getEmbeddedPeripherals();\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\tIqrfNetService.writeTrConfiguration(this.address, config);\n\t\t},\n\t\thandleWriteResponse(response) {\n\t\t\tthis.$store.commit('spinner/HIDE');\n\t\t\tif (response.data.status === 0) {\n\t\t\t\tthis.$toast.success(\n\t\t\t\t\tthis.$t('iqrfnet.trConfiguration.messages.write.success').toString()\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tthis.$toast.error(\n\t\t\t\t\tthis.$t('iqrfnet.trConfiguration.messages.write.failure').toString()\n\t\t\t\t);\n\t\t\t}\n\t\t},\n\t\tsetEmbeddedPeripherals() {\n\t\t\tlet peripherals = JSON.parse(JSON.stringify(this.config.embPers));\n\t\t\tthis.peripherals = [];\n\t\t\tfor (let peripheral in peripherals) {\n\t\t\t\tif (!peripherals.hasOwnProperty(peripheral)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (typeof this.config.embPers[peripheral] !== 'boolean') {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (this.unchangeablePeripherals.includes(peripheral) &&\n\t\t\t\t\t\tthis.$store.getters['user/getRole'] === 'normal') {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthis.peripherals.push({\n\t\t\t\t\tname: peripheral,\n\t\t\t\t\tenabled: this.config.embPers[peripheral],\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tgetEmbeddedPeripherals() {\n\t\t\tlet peripherals = {};\n\t\t\tfor (let peripheral of this.peripherals) {\n\t\t\t\tperipherals[peripheral.name] = peripheral.enabled;\n\t\t\t}\n\t\t\treturn peripherals;\n\t\t}\n\t},\n};\n</script>\n","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TrConfiguration.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TrConfiguration.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./TrConfiguration.vue?vue&type=template&id=6888dee7&\"\nimport script from \"./TrConfiguration.vue?vue&type=script&lang=js&\"\nexport * from \"./TrConfiguration.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('6888dee7')) {\n      api.createRecord('6888dee7', component.options)\n    } else {\n      api.reload('6888dee7', component.options)\n    }\n    module.hot.accept(\"./TrConfiguration.vue?vue&type=template&id=6888dee7&\", function () {\n      api.rerender('6888dee7', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/pages/IqrfNet/TrConfiguration.vue\"\nexport default component.exports","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", [_c(\"FileUpload\"), _vm._v(\" \"), _c(\"DpaUpdater\")], 1)\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"CCard\",\n    [\n      _c(\"CCardHeader\", [_vm._v(_vm._s(_vm.$t(\"iqrfnet.dpaUpload.title\")))]),\n      _vm._v(\" \"),\n      _c(\n        \"CCardBody\",\n        [\n          _c(\"ValidationObserver\", {\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(ref) {\n                  var invalid = ref.invalid\n                  return [\n                    _c(\n                      \"CForm\",\n                      {\n                        on: {\n                          submit: function($event) {\n                            $event.preventDefault()\n                            return _vm.upload($event)\n                          }\n                        }\n                      },\n                      [\n                        _c(\"ValidationProvider\", {\n                          attrs: {\n                            rules: \"required\",\n                            \"custom-messages\": {\n                              required: \"iqrfnet.dpaUpload.missing.version\"\n                            }\n                          },\n                          scopedSlots: _vm._u(\n                            [\n                              {\n                                key: \"default\",\n                                fn: function(ref) {\n                                  var valid = ref.valid\n                                  var touched = ref.touched\n                                  var errors = ref.errors\n                                  return [\n                                    _c(\"CSelect\", {\n                                      attrs: {\n                                        value: _vm.version,\n                                        label: _vm.$t(\n                                          \"iqrfnet.dpaUpload.version\"\n                                        ),\n                                        \"is-valid\": touched ? valid : null,\n                                        \"invalid-feedback\": _vm.$t(errors[0]),\n                                        placeholder: _vm.$t(\n                                          \"iqrfnet.dpaUpload.missing.version\"\n                                        ),\n                                        options: _vm.versions\n                                      },\n                                      on: {\n                                        \"update:value\": function($event) {\n                                          _vm.version = $event\n                                        }\n                                      }\n                                    })\n                                  ]\n                                }\n                              }\n                            ],\n                            null,\n                            true\n                          )\n                        }),\n                        _vm._v(\" \"),\n                        _c(\n                          \"CButton\",\n                          {\n                            attrs: {\n                              type: \"submit\",\n                              color: \"primary\",\n                              disabled: invalid\n                            }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n\\t\\t\\t\\t\\t\" +\n                                _vm._s(_vm.$t(\"forms.upload\")) +\n                                \"\\n\\t\\t\\t\\t\"\n                            )\n                          ]\n                        )\n                      ],\n                      1\n                    )\n                  ]\n                }\n              }\n            ])\n          })\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","/**\n * File upload format enum\n */\nexport var FileFormat;\n(function (FileFormat) {\n    FileFormat[\"HEX\"] = \"hex\";\n    FileFormat[\"IQRF\"] = \"iqrf\";\n    FileFormat[\"TRCNFG\"] = \"trncfg\";\n})(FileFormat || (FileFormat = {}));\n","import axios from 'axios';\nimport { authorizationHeader } from '../../helpers/authorizationHeader';\n/**\n * DPA version entity\n */\nvar DpaVersion = /** @class */ (function () {\n    /**\n     * DPA version entity\n     * @param osBuild Supported IQRF OS build\n     * @param version Raw DPA version\n     * @param notes DPA version notes\n     * @param downloadPath DPA files download path\n     */\n    function DpaVersion(osBuild, version, notes, downloadPath) {\n        this.osBuild = osBuild;\n        this.version = version;\n        this.notes = notes;\n        this.downloadPath = downloadPath;\n    }\n    /**\n     * Returns IQRF OS build\n     * @return IQRF OS build\n     */\n    DpaVersion.prototype.getOsBuild = function () {\n        return this.osBuild;\n    };\n    /**\n     * Returns DPA version\n     * @param pretty Pretty formatting\n     * @return DPA version\n     */\n    DpaVersion.prototype.getVersion = function (pretty) {\n        if (!pretty) {\n            return this.version;\n        }\n        var versionInt = Number.parseInt(this.version, 16);\n        var major = versionInt >> 8;\n        var minor = versionInt & 0xff;\n        return major.toString() + '.' + minor.toString(16).padStart(2, '0');\n    };\n    /**\n     * Returns DPA version notes\n     * @return DPA version notes\n     */\n    DpaVersion.prototype.getNotes = function () {\n        return this.notes;\n    };\n    /**\n     * Returns DPA files download path\n     * @return DPA files download path\n     */\n    DpaVersion.prototype.getDownloadPath = function () {\n        return this.downloadPath;\n    };\n    return DpaVersion;\n}());\nexport { DpaVersion };\n/**\n * TR RF mode enum\n */\nexport var RFMode;\n(function (RFMode) {\n    RFMode[\"STD\"] = \"STD\";\n    RFMode[\"LP\"] = \"LP\";\n})(RFMode || (RFMode = {}));\n/**\n * IQRF Repository DPA service\n */\nvar DpaService = /** @class */ (function () {\n    function DpaService() {\n    }\n    /**\n     * Retrieves available DPA versions\n     * @param osBuild Current IQRF OS build\n     */\n    DpaService.prototype.getVersions = function (osBuild) {\n        var url = 'https://repository.iqrfalliance.org/api/osdpa/';\n        return axios.get(url, { params: { os: osBuild } })\n            .then(function (response) {\n            var versions = [];\n            for (var _i = 0, _a = response.data; _i < _a.length; _i++) {\n                var version = _a[_i];\n                versions.push(new DpaVersion(version.os, version.dpa, version.notes, version.downloadPath));\n            }\n            return versions;\n        });\n    };\n    /**\n     * Retrieves name of DPA file to upload\n     * @param metadata DPA file metadata\n     */\n    DpaService.prototype.getDpaFile = function (metadata) {\n        return axios.post('iqrf/dpaFile', metadata, { headers: authorizationHeader() });\n    };\n    return DpaService;\n}());\nexport default new DpaService();\n","import store from '../../store';\n/**\n * OS service\n */\nvar OsService = /** @class */ (function () {\n    function OsService() {\n    }\n    /**\n     * Sends OS Read request\n     * @param address Address\n     */\n    OsService.prototype.sendRead = function (address) {\n        return store.dispatch('sendRequest', {\n            mType: 'iqrfEmbedOs_Read',\n            data: {\n                req: {\n                    nAdr: address,\n                    param: {},\n                },\n            },\n        });\n    };\n    return OsService;\n}());\nexport default new OsService();\n","import store from '../store';\nimport axios from 'axios';\nimport { authorizationHeader } from '../helpers/authorizationHeader';\n/**\n * Native upload service\n */\nvar NativeUploadService = /** @class */ (function () {\n    function NativeUploadService() {\n    }\n    /**\n     * Sends Daemon API request to upload file\n     * @param filePath path to file\n     * @param format file format\n     */\n    NativeUploadService.prototype.upload = function (filePath, format) {\n        return store.dispatch('sendRequest', {\n            'mType': 'mngDaemon_Upload',\n            'data': {\n                'req': {\n                    'fileName': filePath,\n                    'target': format,\n                },\n                'returnVerbose': true,\n            },\n        });\n    };\n    /**\n     * Uploads file via rest API\n     * @param data file data and metadata\n     */\n    NativeUploadService.prototype.uploadREST = function (data) {\n        return axios.post('iqrf/upload', data, { headers: authorizationHeader() });\n    };\n    return NativeUploadService;\n}());\nexport default new NativeUploadService();\n","import mod from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DpaUpdater.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DpaUpdater.vue?vue&type=script&lang=ts&\"","import Vue from 'vue';\nimport { CButton, CCard, CCardBody, CCardHeader, CForm, CSelect } from '@coreui/vue/src';\nimport { extend, ValidationObserver, ValidationProvider } from 'vee-validate';\nimport { required } from 'vee-validate/dist/rules';\nimport { FileFormat } from '../../iqrfNet/fileFormat';\nimport DpaService, { RFMode } from '../../services/IqrfRepository/DpaService';\nimport OsService from '../../services/DaemonApi/OsService';\nimport NativeUploadService from '../../services/NativeUploadService';\nexport default Vue.extend({\n    name: 'DpaUpdater',\n    components: {\n        CButton: CButton,\n        CCard: CCard,\n        CCardBody: CCardBody,\n        CCardHeader: CCardHeader,\n        CForm: CForm,\n        CSelect: CSelect,\n        ValidationObserver: ValidationObserver,\n        ValidationProvider: ValidationProvider,\n    },\n    data: function () {\n        return {\n            address: 0,\n            osBuild: undefined,\n            trType: null,\n            version: undefined,\n            versions: [],\n            requestSent: false,\n        };\n    },\n    created: function () {\n        var _this = this;\n        extend('required', required);\n        if (this.$store.state.webSocketClient.socket.isConnected) {\n            this.getOsInfo();\n        }\n        this.unsubscribe = this.$store.subscribe(function (mutation) {\n            if (mutation.type === 'SOCKET_ONOPEN' &&\n                _this.osBuild === undefined) {\n                _this.getOsInfo();\n                return;\n            }\n            if (mutation.type !== 'SOCKET_ONMESSAGE') {\n                return;\n            }\n            if (mutation.payload.mType === 'iqrfEmbedOs_Read') {\n                _this.$store.dispatch('spinner/hide');\n                if (mutation.payload.data.status === 0) {\n                    _this.handleResponse(mutation.payload);\n                }\n                else {\n                    _this.$toast.error(_this.$t('iqrfnet.trUpload.messages.osInfoFail').toString());\n                }\n            }\n            else if (mutation.payload.mType === 'mngDaemon_Upload') {\n                if (!_this.requestSent) {\n                    return;\n                }\n                _this.requestSent = false;\n                _this.$store.dispatch('spinner/hide');\n                clearTimeout(_this.timeout);\n                if (mutation.payload.data.status === 0) {\n                    _this.$toast.success(_this.$t('iqrfnet.trUpload.messages.success').toString());\n                }\n                else {\n                    _this.$toast.error(_this.$t('iqrfnet.trUpload.messages.failure').toString());\n                }\n            }\n        });\n    },\n    beforeDestroy: function () {\n        this.unsubscribe();\n    },\n    methods: {\n        convertVersion: function (version) {\n            return Number.parseInt(version).toString(16).padStart(4, '0').toUpperCase();\n        },\n        getOsInfo: function () {\n            this.$store.dispatch('spinner/show', { timeout: 10000 });\n            this.requestSent = true;\n            OsService.sendRead(this.address);\n        },\n        handleResponse: function (response) {\n            var _this = this;\n            var result = response.data.rsp.result;\n            this.osBuild = this.convertVersion(result.osBuild);\n            this.trType = result.trMcuType;\n            this.version = this.convertVersion(result.dpaVer);\n            DpaService.getVersions(this.osBuild)\n                .then(function (versions) {\n                for (var _i = 0, versions_1 = versions; _i < versions_1.length; _i++) {\n                    var version = versions_1[_i];\n                    var dpaVer = Number.parseInt(version.getVersion(false));\n                    if (dpaVer < 400) {\n                        _this.versions.push({\n                            value: version.getVersion(false) + '-' + RFMode.LP,\n                            label: version.getVersion(true) + ', ' + RFMode.LP + ' RF mode'\n                        });\n                        _this.versions.push({\n                            value: version.getVersion(false) + '-' + RFMode.STD,\n                            label: version.getVersion(true) + ', ' + RFMode.STD + ' RF mode'\n                        });\n                    }\n                    else {\n                        _this.versions.push({\n                            value: version.getVersion(false),\n                            label: version.getVersion(true),\n                        });\n                    }\n                }\n                _this.versions.sort().reverse();\n            })\n                .catch(function () {\n                _this.$toast.error(_this.$t('iqrfnet.trUpload.messages.osBuildFail').toString());\n            });\n        },\n        upload: function () {\n            var _this = this;\n            var request = {\n                'osBuild': this.osBuild,\n                'trSeries': this.trType,\n            };\n            if (this.version.endsWith('-STD')) {\n                Object.assign(request, { 'dpa': this.version.split('-')[0] });\n                Object.assign(request, { 'rfMode': RFMode.STD });\n            }\n            else if (this.version.endsWith('-LP')) {\n                Object.assign(request, { 'dpa': this.version.split('-')[0] });\n                Object.assign(request, { 'rfMode': RFMode.LP });\n            }\n            else {\n                Object.assign(request, { 'dpa': this.version });\n            }\n            DpaService.getDpaFile(request)\n                .then(function (response) {\n                _this.$store.dispatch('spinner/show', { timeout: 30000 });\n                _this.requestSent = true;\n                NativeUploadService.upload(response.data.fileName, FileFormat.IQRF);\n            })\n                .catch(function (error) {\n                _this.$store.commit('spinner/HIDE');\n                if (error.response !== null) {\n                    switch (error.response.status) {\n                        case 400:\n                            _this.$toast.error(_this.$t('iqrfnet.trUpload.messagess.badRequest').toString());\n                            break;\n                        case 404:\n                            _this.$toast.error(_this.$t('iqrfnet.trUpload.messages.notFound').toString());\n                            break;\n                        case 500: {\n                            var msg = error.response.data.message;\n                            if (msg === 'Filesystem failure') {\n                                _this.$toast.error(_this.$t('iqrfnet.trUpload.messagess.moveFailure').toString());\n                            }\n                            else if (msg === 'Download failure') {\n                                _this.$toast.error(_this.$t('iqrfnet.trUpload.messagess.downloadFailure').toString());\n                            }\n                            else {\n                                _this.$toast.error(_this.$t('iqrfnet.trUpload.messagess.genericError').toString());\n                            }\n                            break;\n                        }\n                    }\n                }\n                else {\n                    _this.$toast.error(_this.$t('iqrfnet.trUpload.messagess.genericError').toString());\n                }\n            });\n        },\n    },\n});\n","import { render, staticRenderFns } from \"./DpaUpdater.vue?vue&type=template&id=56cf9083&\"\nimport script from \"./DpaUpdater.vue?vue&type=script&lang=ts&\"\nexport * from \"./DpaUpdater.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('56cf9083')) {\n      api.createRecord('56cf9083', component.options)\n    } else {\n      api.reload('56cf9083', component.options)\n    }\n    module.hot.accept(\"./DpaUpdater.vue?vue&type=template&id=56cf9083&\", function () {\n      api.rerender('56cf9083', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/components/IqrfNet/DpaUpdater.vue\"\nexport default component.exports","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"CCard\",\n    [\n      _c(\"CCardHeader\", [_vm._v(_vm._s(_vm.$t(\"iqrfnet.trUpload.title\")))]),\n      _vm._v(\" \"),\n      _c(\n        \"CCardBody\",\n        [\n          _c(\n            \"CForm\",\n            {\n              on: {\n                submit: function($event) {\n                  $event.preventDefault()\n                  return _vm.submitUpload($event)\n                }\n              }\n            },\n            [\n              _c(\n                \"div\",\n                { staticClass: \"form-group\" },\n                [\n                  _c(\"CInputFile\", {\n                    ref: \"fileUpload\",\n                    attrs: {\n                      accept: \".hex,.iqrf,.trcnfg\",\n                      label: _vm.$t(\"iqrfnet.trUpload.file\")\n                    },\n                    on: { input: _vm.isEmpty, click: _vm.isEmpty }\n                  }),\n                  _vm._v(\" \"),\n                  _vm.fileEmpty && !_vm.fileUntouched\n                    ? _c(\"p\", { staticStyle: { color: \"red\" } }, [\n                        _vm._v(\n                          \"\\n\\t\\t\\t\\t\\t\" +\n                            _vm._s(_vm.$t(\"iqrfnet.trUpload.messages.file\")) +\n                            \"\\n\\t\\t\\t\\t\"\n                        )\n                      ])\n                    : _vm._e()\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _vm.$store.getters[\"user/getRole\"] === \"power\"\n                ? _c(\"CSelect\", {\n                    attrs: {\n                      value: _vm.format,\n                      label: _vm.$t(\"iqrfnet.trUpload.fileFormat\"),\n                      options: _vm.selectOptions,\n                      placeholder: _vm.$t(\n                        \"iqrfnet.trUpload.messages.fileFormat\"\n                      )\n                    },\n                    on: {\n                      \"update:value\": function($event) {\n                        _vm.format = $event\n                      }\n                    }\n                  })\n                : _vm._e(),\n              _vm._v(\" \"),\n              _c(\n                \"CButton\",\n                {\n                  attrs: {\n                    type: \"submit\",\n                    color: \"primary\",\n                    disabled: _vm.fileEmpty\n                  }\n                },\n                [\n                  _vm._v(\n                    \"\\n\\t\\t\\t\\t\" + _vm._s(_vm.$t(\"forms.upload\")) + \"\\n\\t\\t\\t\"\n                  )\n                ]\n              )\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","<template>\n\t<CCard>\n\t\t<CCardHeader>{{ $t('iqrfnet.trUpload.title') }}</CCardHeader>\n\t\t<CCardBody>\n\t\t\t<CForm @submit.prevent='submitUpload'>\n\t\t\t\t<div class='form-group'>\n\t\t\t\t\t<CInputFile\n\t\t\t\t\t\tref='fileUpload'\n\t\t\t\t\t\taccept='.hex,.iqrf,.trcnfg'\n\t\t\t\t\t\t:label='$t(\"iqrfnet.trUpload.file\")'\n\t\t\t\t\t\t@input='isEmpty'\n\t\t\t\t\t\t@click='isEmpty'\n\t\t\t\t\t/>\n\t\t\t\t\t<p v-if='fileEmpty && !fileUntouched' style='color:red'>\n\t\t\t\t\t\t{{ $t('iqrfnet.trUpload.messages.file') }}\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<CSelect \n\t\t\t\t\tv-if='$store.getters[\"user/getRole\"] === \"power\"'\n\t\t\t\t\t:value.sync='format'\n\t\t\t\t\t:label='$t(\"iqrfnet.trUpload.fileFormat\")'\n\t\t\t\t\t:options='selectOptions'\n\t\t\t\t\t:placeholder='$t(\"iqrfnet.trUpload.messages.fileFormat\")'\n\t\t\t\t/>\n\t\t\t\t<CButton\n\t\t\t\t\ttype='submit'\n\t\t\t\t\tcolor='primary'\n\t\t\t\t\t:disabled='fileEmpty'\n\t\t\t\t>\n\t\t\t\t\t{{ $t('forms.upload') }}\n\t\t\t\t</CButton>\n\t\t\t</CForm>\n\t\t</CCardBody>\n\t</CCard>\n</template>\n\n<script>\nimport {CButton, CCard, CCardBody, CCardHeader, CForm, CInputFile, CSelect} from '@coreui/vue/src';\nimport {FileFormat} from '../../iqrfNet/fileFormat';\nimport NativeUploadService from '../../services/NativeUploadService';\n\nexport default {\n\tname: 'FileUpload',\n\tcomponents: {\n\t\tCButton,\n\t\tCCard,\n\t\tCCardBody,\n\t\tCCardHeader,\n\t\tCForm,\n\t\tCInputFile,\n\t\tCSelect\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tfileEmpty: true,\n\t\t\tfileUntouched: true,\n\t\t\tselectOptions: [\n\t\t\t\t{value: null, label: this.$t('iqrfnet.trUpload.messages.fileFormat')},\n\t\t\t\t{value: FileFormat.HEX, label: this.$t('iqrfnet.trUpload.fileFormats.hex')},\n\t\t\t\t{value: FileFormat.IQRF, label: this.$t('iqrfnet.trUpload.fileFormats.iqrf')},\n\t\t\t\t{value: FileFormat.TRCNFG, label: this.$t('iqrfnet.trUpload.fileFormats.trcnfg')}\n\t\t\t],\n\t\t\tfailed: false,\n\t\t\tformat: null,\n\t\t\trequestSent: false,\n\t\t\ttimeout: null,\n\t\t};\n\t},\n\tcreated() {\n\t\tthis.unsubscribe = this.$store.subscribe(mutation => {\n\t\t\tif (mutation.type === 'SOCKET_ONSEND') {\n\t\t\t\tif (!this.requestSent) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (mutation.payload.mType !== 'mngDaemon_Upload') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.timeout = setTimeout(() => {\n\t\t\t\t\tthis.$toast.error(\n\t\t\t\t\t\tthis.$t('iqrfnet.trUpload.messages.timeout').toString()\n\t\t\t\t\t);\n\t\t\t\t\tthis.failed = true;\n\t\t\t\t}, 30000);\n\t\t\t}\n\t\t\tif (mutation.type === 'SOCKET_ONMESSAGE') {\n\t\t\t\tif (this.failed) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (mutation.payload.mType === 'mngDaemon_Upload') {\n\t\t\t\t\tif (!this.requestSent) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tthis.requestSent = false;\n\t\t\t\t\tthis.$store.dispatch('spinner/hide');\n\t\t\t\t\tclearTimeout(this.timeout);\n\t\t\t\t\tif (mutation.payload.data.status === 0) {\n\t\t\t\t\t\tthis.$toast.success(\n\t\t\t\t\t\t\tthis.$t('iqrfnet.trUpload.messages.success').toString()\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.$toast.error(\n\t\t\t\t\t\t\tthis.$t('iqrfnet.trUpload.messages.failure').toString()\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t},\n\tbeforeDestroy() {\n\t\tclearTimeout(this.timeout);\n\t\tthis.unsubscribe();\n\t},\n\tmethods: {\n\t\tsubmitUpload() {\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\tconst formData = new FormData();\n\t\t\tif (this.$store.getters['user/getRole'] === 'power' && this.format !== null) {\n\t\t\t\tformData.append('format', this.format);\n\t\t\t}\n\t\t\tformData.append('file', this.$refs.fileUpload.$el.children[1].files[0]);\n\t\t\tthis.requestSent = true;\n\t\t\tNativeUploadService.uploadREST(formData)\n\t\t\t\t.then((response) => {\n\t\t\t\t\tthis.$store.dispatch('spinner/show', {timeout: 30000});\n\t\t\t\t\tNativeUploadService.upload(response.data.fileName, response.data.format);\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tthis.$store.commit('spinner/HIDE');\n\t\t\t\t\tthis.$toast.error(\n\t\t\t\t\t\tthis.$t('iqrfnet.trUpload.messages.failure').toString()\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t},\n\t\tisEmpty() {\n\t\t\tif (this.fileUntouched) {\n\t\t\t\tthis.fileUntouched = false;\n\t\t\t}\n\t\t\tthis.fileEmpty = this.$refs.fileUpload.$el.children[1].files.length === 0;\n\t\t}\n\t},\n};\n</script>\n","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FileUpload.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FileUpload.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./FileUpload.vue?vue&type=template&id=6422c628&\"\nimport script from \"./FileUpload.vue?vue&type=script&lang=js&\"\nexport * from \"./FileUpload.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('6422c628')) {\n      api.createRecord('6422c628', component.options)\n    } else {\n      api.reload('6422c628', component.options)\n    }\n    module.hot.accept(\"./FileUpload.vue?vue&type=template&id=6422c628&\", function () {\n      api.rerender('6422c628', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/components/IqrfNet/FileUpload.vue\"\nexport default component.exports","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TrUpload.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TrUpload.vue?vue&type=script&lang=js&\"","<template>\n\t<div>\n\t\t<FileUpload />\n\t\t<DpaUpdater />\n\t</div>\n</template>\n\n<script>\nimport DpaUpdater from '../../components/IqrfNet/DpaUpdater';\nimport FileUpload from '../../components/IqrfNet/FileUpload';\n\nexport default {\n\tname: 'TrUpload',\n\tcomponents: {\n\t\tDpaUpdater,\n\t\tFileUpload\n\t},\n\tmetaInfo: {\n\t\ttitle: 'iqrfnet.trUpload.title'\n\t}\n};\n</script>\n","import { render, staticRenderFns } from \"./TrUpload.vue?vue&type=template&id=00c4b7e0&\"\nimport script from \"./TrUpload.vue?vue&type=script&lang=js&\"\nexport * from \"./TrUpload.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('00c4b7e0')) {\n      api.createRecord('00c4b7e0', component.options)\n    } else {\n      api.reload('00c4b7e0', component.options)\n    }\n    module.hot.accept(\"./TrUpload.vue?vue&type=template&id=00c4b7e0&\", function () {\n      api.rerender('00c4b7e0', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/pages/IqrfNet/TrUpload.vue\"\nexport default component.exports","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"CCard\",\n    { attrs: { \"body-wrapper\": \"\" } },\n    [\n      _c(\n        \"CListGroup\",\n        [\n          _vm.$store.getters[\"user/getRole\"] === \"power\"\n            ? _c(\"CListGroupItem\", { attrs: { to: \"/config/main/\" } }, [\n                _c(\"header\", { staticClass: \"list-group-item-heading\" }, [\n                  _vm._v(\n                    \"\\n\\t\\t\\t\\t\" +\n                      _vm._s(_vm.$t(\"config.main.title\")) +\n                      \"\\n\\t\\t\\t\"\n                  )\n                ]),\n                _vm._v(\" \"),\n                _c(\"p\", { staticClass: \"list-group-item-text\" }, [\n                  _vm._v(\n                    \"\\n\\t\\t\\t\\t\" +\n                      _vm._s(_vm.$t(\"config.main.description\")) +\n                      \"\\n\\t\\t\\t\"\n                  )\n                ])\n              ])\n            : _vm._e(),\n          _vm._v(\" \"),\n          _vm.$store.getters[\"user/getRole\"] === \"power\"\n            ? _c(\"CListGroupItem\", { attrs: { to: \"/config/component/\" } }, [\n                _c(\"header\", { staticClass: \"list-group-item-heading\" }, [\n                  _vm._v(\n                    \"\\n\\t\\t\\t\\t\" +\n                      _vm._s(_vm.$t(\"config.components.title\")) +\n                      \"\\n\\t\\t\\t\"\n                  )\n                ]),\n                _vm._v(\" \"),\n                _c(\"p\", { staticClass: \"list-group-item-text\" }, [\n                  _vm._v(\n                    \"\\n\\t\\t\\t\\t\" +\n                      _vm._s(_vm.$t(\"config.components.description\")) +\n                      \"\\n\\t\\t\\t\"\n                  )\n                ])\n              ])\n            : _vm._e(),\n          _vm._v(\" \"),\n          _vm.$store.getters[\"user/getRole\"] === \"normal\"\n            ? _c(\"CListGroupItem\", { attrs: { to: \"/config/component/\" } }, [\n                _c(\"header\", { staticClass: \"list-group-item-heading\" }, [\n                  _vm._v(\n                    \"\\n\\t\\t\\t\\t\" +\n                      _vm._s(_vm.$t(\"config.selectedComponents.title\")) +\n                      \"\\n\\t\\t\\t\"\n                  )\n                ]),\n                _vm._v(\" \"),\n                _c(\"p\", { staticClass: \"list-group-item-text\" }, [\n                  _vm._v(\n                    \"\\n\\t\\t\\t\\t\" +\n                      _vm._s(_vm.$t(\"config.selectedComponents.description\")) +\n                      \"\\n\\t\\t\\t\"\n                  )\n                ])\n              ])\n            : _vm._e(),\n          _vm._v(\" \"),\n          _c(\"CListGroupItem\", { attrs: { to: \"/config/iqrf-spi/\" } }, [\n            _c(\"header\", { staticClass: \"list-group-item-heading\" }, [\n              _vm._v(\n                \"\\n\\t\\t\\t\\t\" +\n                  _vm._s(_vm.$t(\"config.iqrfSpi.title\")) +\n                  \"\\n\\t\\t\\t\"\n              )\n            ]),\n            _vm._v(\" \"),\n            _c(\"p\", { staticClass: \"list-group-item-text\" }, [\n              _vm._v(\n                \"\\n\\t\\t\\t\\t\" +\n                  _vm._s(_vm.$t(\"config.iqrfSpi.description\")) +\n                  \"\\n\\t\\t\\t\"\n              )\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\"CListGroupItem\", { attrs: { to: \"/config/iqrf-cdc/\" } }, [\n            _c(\"header\", { staticClass: \"list-group-item-heading\" }, [\n              _vm._v(\n                \"\\n\\t\\t\\t\\t\" +\n                  _vm._s(_vm.$t(\"config.iqrfCdc.title\")) +\n                  \"\\n\\t\\t\\t\"\n              )\n            ]),\n            _vm._v(\" \"),\n            _c(\"p\", { staticClass: \"list-group-item-text\" }, [\n              _vm._v(\n                \"\\n\\t\\t\\t\\t\" +\n                  _vm._s(_vm.$t(\"config.iqrfCdc.description\")) +\n                  \"\\n\\t\\t\\t\"\n              )\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\"CListGroupItem\", { attrs: { to: \"/config/iqrf-uart/\" } }, [\n            _c(\"header\", { staticClass: \"list-group-item-heading\" }, [\n              _vm._v(\n                \"\\n\\t\\t\\t\\t\" +\n                  _vm._s(_vm.$t(\"config.iqrfUart.title\")) +\n                  \"\\n\\t\\t\\t\"\n              )\n            ]),\n            _vm._v(\" \"),\n            _c(\"p\", { staticClass: \"list-group-item-text\" }, [\n              _vm._v(\n                \"\\n\\t\\t\\t\\t\" +\n                  _vm._s(_vm.$t(\"config.iqrfUart.description\")) +\n                  \"\\n\\t\\t\\t\"\n              )\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\"CListGroupItem\", { attrs: { to: \"/config/iqrf-dpa/\" } }, [\n            _c(\"header\", { staticClass: \"list-group-item-heading\" }, [\n              _vm._v(\n                \"\\n\\t\\t\\t\\t\" +\n                  _vm._s(_vm.$t(\"config.iqrfDpa.title\")) +\n                  \"\\n\\t\\t\\t\"\n              )\n            ]),\n            _vm._v(\" \"),\n            _c(\"p\", { staticClass: \"list-group-item-text\" }, [\n              _vm._v(\n                \"\\n\\t\\t\\t\\t\" +\n                  _vm._s(_vm.$t(\"config.iqrfDpa.description\")) +\n                  \"\\n\\t\\t\\t\"\n              )\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\"CListGroupItem\", { attrs: { to: \"/config/iqrf-repository/\" } }, [\n            _c(\"header\", { staticClass: \"list-group-item-heading\" }, [\n              _vm._v(\n                \"\\n\\t\\t\\t\\t\" +\n                  _vm._s(_vm.$t(\"config.iqrfRepository.title\")) +\n                  \"\\n\\t\\t\\t\"\n              )\n            ]),\n            _vm._v(\" \"),\n            _c(\"p\", { staticClass: \"list-group-item-text\" }, [\n              _vm._v(\n                \"\\n\\t\\t\\t\\t\" +\n                  _vm._s(_vm.$t(\"config.iqrfRepository.description\")) +\n                  \"\\n\\t\\t\\t\"\n              )\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\"CListGroupItem\", { attrs: { to: \"/config/iqrf-info/\" } }, [\n            _c(\"header\", { staticClass: \"list-group-item-heading\" }, [\n              _vm._v(\n                \"\\n\\t\\t\\t\\t\" +\n                  _vm._s(_vm.$t(\"config.iqrfInfo.title\")) +\n                  \"\\n\\t\\t\\t\"\n              )\n            ]),\n            _vm._v(\" \"),\n            _c(\"p\", { staticClass: \"list-group-item-text\" }, [\n              _vm._v(\n                \"\\n\\t\\t\\t\\t\" +\n                  _vm._s(_vm.$t(\"config.iqrfInfo.description\")) +\n                  \"\\n\\t\\t\\t\"\n              )\n            ])\n          ]),\n          _vm._v(\" \"),\n          _vm.$store.getters[\"user/getRole\"] === \"power\"\n            ? _c(\"CListGroupItem\", { attrs: { to: \"/config/iqmesh/\" } }, [\n                _c(\"header\", { staticClass: \"list-group-item-heading\" }, [\n                  _vm._v(\n                    \"\\n\\t\\t\\t\\t\" +\n                      _vm._s(_vm.$t(\"config.iqmesh.title\")) +\n                      \"\\n\\t\\t\\t\"\n                  )\n                ]),\n                _vm._v(\" \"),\n                _c(\"p\", { staticClass: \"list-group-item-text\" }, [\n                  _vm._v(\n                    \"\\n\\t\\t\\t\\t\" +\n                      _vm._s(_vm.$t(\"config.iqmesh.description\")) +\n                      \"\\n\\t\\t\\t\"\n                  )\n                ])\n              ])\n            : _vm._e(),\n          _vm._v(\" \"),\n          _c(\"CListGroupItem\", { attrs: { to: \"/config/mqtt/\" } }, [\n            _c(\"header\", { staticClass: \"list-group-item-heading\" }, [\n              _vm._v(\n                \"\\n\\t\\t\\t\\t\" + _vm._s(_vm.$t(\"config.mqtt.title\")) + \"\\n\\t\\t\\t\"\n              )\n            ]),\n            _vm._v(\" \"),\n            _c(\"p\", { staticClass: \"list-group-item-text\" }, [\n              _vm._v(\n                \"\\n\\t\\t\\t\\t\" +\n                  _vm._s(_vm.$t(\"config.mqtt.description\")) +\n                  \"\\n\\t\\t\\t\"\n              )\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\"CListGroupItem\", { attrs: { to: \"/config/websocket/\" } }, [\n            _c(\"header\", { staticClass: \"list-group-item-heading\" }, [\n              _vm._v(\n                \"\\n\\t\\t\\t\\t\" +\n                  _vm._s(_vm.$t(\"config.websocket.title\")) +\n                  \"\\n\\t\\t\\t\"\n              )\n            ]),\n            _vm._v(\" \"),\n            _c(\"p\", { staticClass: \"list-group-item-text\" }, [\n              _vm._v(\n                \"\\n\\t\\t\\t\\t\" +\n                  _vm._s(_vm.$t(\"config.websocket.description\")) +\n                  \"\\n\\t\\t\\t\"\n              )\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\"CListGroupItem\", { attrs: { to: \"/config/mq/\" } }, [\n            _c(\"header\", { staticClass: \"list-group-item-heading\" }, [\n              _vm._v(\n                \"\\n\\t\\t\\t\\t\" + _vm._s(_vm.$t(\"config.mq.title\")) + \"\\n\\t\\t\\t\"\n              )\n            ]),\n            _vm._v(\" \"),\n            _c(\"p\", { staticClass: \"list-group-item-text\" }, [\n              _vm._v(\n                \"\\n\\t\\t\\t\\t\" +\n                  _vm._s(_vm.$t(\"config.mq.description\")) +\n                  \"\\n\\t\\t\\t\"\n              )\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\"CListGroupItem\", { attrs: { to: \"/config/udp/\" } }, [\n            _c(\"header\", { staticClass: \"list-group-item-heading\" }, [\n              _vm._v(\n                \"\\n\\t\\t\\t\\t\" + _vm._s(_vm.$t(\"config.udp.title\")) + \"\\n\\t\\t\\t\"\n              )\n            ]),\n            _vm._v(\" \"),\n            _c(\"p\", { staticClass: \"list-group-item-text\" }, [\n              _vm._v(\n                \"\\n\\t\\t\\t\\t\" +\n                  _vm._s(_vm.$t(\"config.udp.description\")) +\n                  \"\\n\\t\\t\\t\"\n              )\n            ])\n          ]),\n          _vm._v(\" \"),\n          _vm.$store.getters[\"user/getRole\"] === \"power\"\n            ? _c(\"CListGroupItem\", { attrs: { to: \"/config/json-raw-api/\" } }, [\n                _c(\"header\", { staticClass: \"list-group-item-heading\" }, [\n                  _vm._v(\n                    \"\\n\\t\\t\\t\\t\" +\n                      _vm._s(_vm.$t(\"config.jsonRawApi.title\")) +\n                      \"\\n\\t\\t\\t\"\n                  )\n                ]),\n                _vm._v(\" \"),\n                _c(\"p\", { staticClass: \"list-group-item-text\" }, [\n                  _vm._v(\n                    \"\\n\\t\\t\\t\\t\" +\n                      _vm._s(_vm.$t(\"config.jsonRawApi.description\")) +\n                      \"\\n\\t\\t\\t\"\n                  )\n                ])\n              ])\n            : _vm._e(),\n          _vm._v(\" \"),\n          _c(\n            \"CListGroupItem\",\n            { attrs: { to: \"/config/json-mng-meta-data-api/\" } },\n            [\n              _c(\"header\", { staticClass: \"list-group-item-heading\" }, [\n                _vm._v(\n                  \"\\n\\t\\t\\t\\t\" +\n                    _vm._s(_vm.$t(\"config.jsonMngMetaDataApi.title\")) +\n                    \"\\n\\t\\t\\t\"\n                )\n              ]),\n              _vm._v(\" \"),\n              _c(\"p\", { staticClass: \"list-group-item-text\" }, [\n                _vm._v(\n                  \"\\n\\t\\t\\t\\t\" +\n                    _vm._s(_vm.$t(\"config.jsonMngMetaDataApi.description\")) +\n                    \"\\n\\t\\t\\t\"\n                )\n              ])\n            ]\n          ),\n          _vm._v(\" \"),\n          _vm.$store.getters[\"user/getRole\"] === \"power\"\n            ? _c(\n                \"CListGroupItem\",\n                { attrs: { to: \"/config/json-splitter/\" } },\n                [\n                  _c(\"header\", { staticClass: \"list-group-item-heading\" }, [\n                    _vm._v(\n                      \"\\n\\t\\t\\t\\t\" +\n                        _vm._s(_vm.$t(\"config.jsonSplitter.title\")) +\n                        \"\\n\\t\\t\\t\"\n                    )\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"p\", { staticClass: \"list-group-item-text\" }, [\n                    _vm._v(\n                      \"\\n\\t\\t\\t\\t\" +\n                        _vm._s(_vm.$t(\"config.jsonSplitter.description\")) +\n                        \"\\n\\t\\t\\t\"\n                    )\n                  ])\n                ]\n              )\n            : _vm._e(),\n          _vm._v(\" \"),\n          _c(\"CListGroupItem\", { attrs: { to: \"/config/scheduler/\" } }, [\n            _c(\"header\", { staticClass: \"list-group-item-heading\" }, [\n              _vm._v(\n                \"\\n\\t\\t\\t\\t\" +\n                  _vm._s(_vm.$t(\"config.scheduler.title\")) +\n                  \"\\n\\t\\t\\t\"\n              )\n            ]),\n            _vm._v(\" \"),\n            _c(\"p\", { staticClass: \"list-group-item-text\" }, [\n              _vm._v(\n                \"\\n\\t\\t\\t\\t\" +\n                  _vm._s(_vm.$t(\"config.scheduler.description\")) +\n                  \"\\n\\t\\t\\t\"\n              )\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\"CListGroupItem\", { attrs: { to: \"/config/tracer/\" } }, [\n            _c(\"header\", { staticClass: \"list-group-item-heading\" }, [\n              _vm._v(\n                \"\\n\\t\\t\\t\\t\" +\n                  _vm._s(_vm.$t(\"config.tracer.title\")) +\n                  \"\\n\\t\\t\\t\"\n              )\n            ]),\n            _vm._v(\" \"),\n            _c(\"p\", { staticClass: \"list-group-item-text\" }, [\n              _vm._v(\n                \"\\n\\t\\t\\t\\t\" +\n                  _vm._s(_vm.$t(\"config.tracer.description\")) +\n                  \"\\n\\t\\t\\t\"\n              )\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\"CListGroupItem\", { attrs: { to: \"/config/monitor/\" } }, [\n            _c(\"header\", { staticClass: \"list-group-item-heading\" }, [\n              _vm._v(\n                \"\\n\\t\\t\\t\\t\" +\n                  _vm._s(_vm.$t(\"config.monitor.title\")) +\n                  \"\\n\\t\\t\\t\"\n              )\n            ]),\n            _vm._v(\" \"),\n            _c(\"p\", { staticClass: \"list-group-item-text\" }, [\n              _vm._v(\n                \"\\n\\t\\t\\t\\t\" +\n                  _vm._s(_vm.$t(\"config.monitor.description\")) +\n                  \"\\n\\t\\t\\t\"\n              )\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\"CListGroupItem\", { attrs: { to: \"/config/migration/\" } }, [\n            _c(\"header\", { staticClass: \"list-group-item-heading\" }, [\n              _vm._v(\n                \"\\n\\t\\t\\t\\t\" +\n                  _vm._s(_vm.$t(\"config.migration.title\")) +\n                  \"\\n\\t\\t\\t\"\n              )\n            ]),\n            _vm._v(\" \"),\n            _c(\"p\", { staticClass: \"list-group-item-text\" }, [\n              _vm._v(\n                \"\\n\\t\\t\\t\\t\" +\n                  _vm._s(_vm.$t(\"config.migration.description\")) +\n                  \"\\n\\t\\t\\t\"\n              )\n            ])\n          ]),\n          _vm._v(\" \"),\n          _vm.$store.getters[\"features/isEnabled\"](\"networkManager\")\n            ? _c(\"CListGroupItem\", { attrs: { to: \"/network/\" } }, [\n                _c(\"header\", { staticClass: \"list-group-item-heading\" }, [\n                  _vm._v(\n                    \"\\n\\t\\t\\t\\t\" +\n                      _vm._s(_vm.$t(\"translatorConfig.title\")) +\n                      \"\\n\\t\\t\\t\"\n                  )\n                ]),\n                _vm._v(\" \"),\n                _c(\"p\", { staticClass: \"list-group-item-text\" }, [\n                  _vm._v(\n                    \"\\n\\t\\t\\t\\t\" +\n                      _vm._s(_vm.$t(\"translatorConfig.description\")) +\n                      \"\\n\\t\\t\\t\"\n                  )\n                ])\n              ])\n            : _vm._e(),\n          _vm._v(\" \"),\n          _vm.$store.getters[\"features/isEnabled\"](\"iqrfGatewayController\")\n            ? _c(\"CListGroupItem\", { attrs: { to: \"/config/controller/\" } }, [\n                _c(\"header\", { staticClass: \"list-group-item-heading\" }, [\n                  _vm._v(\n                    \"\\n\\t\\t\\t\\t\" +\n                      _vm._s(_vm.$t(\"controllerConfig.title\")) +\n                      \"\\n\\t\\t\\t\"\n                  )\n                ]),\n                _vm._v(\" \"),\n                _c(\"p\", { staticClass: \"list-group-item-text\" }, [\n                  _vm._v(\n                    \"\\n\\t\\t\\t\\t\" +\n                      _vm._s(_vm.$t(\"controllerConfig.description\")) +\n                      \"\\n\\t\\t\\t\"\n                  )\n                ])\n              ])\n            : _vm._e(),\n          _vm._v(\" \"),\n          _vm.$store.getters[\"features/isEnabled\"](\"mender\")\n            ? _c(\"CListGroupItem\", { attrs: { to: \"/config/mender/\" } }, [\n                _c(\"header\", { staticClass: \"list-group-item-heading\" }, [\n                  _vm._v(\n                    \"\\n\\t\\t\\t\\t\" +\n                      _vm._s(_vm.$t(\"config.mender.title\")) +\n                      \"\\n\\t\\t\\t\"\n                  )\n                ]),\n                _vm._v(\" \"),\n                _c(\"p\", { staticClass: \"list-group-item-text\" }, [\n                  _vm._v(\n                    \"\\n\\t\\t\\t\\t\" +\n                      _vm._s(_vm.$t(\"config.mender.description\")) +\n                      \"\\n\\t\\t\\t\"\n                  )\n                ])\n              ])\n            : _vm._e()\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import Vue from 'vue';\nimport { CCard, CListGroup, CListGroupItem } from '@coreui/vue/src';\nexport default Vue.extend({\n    name: 'ConfigDisambiguation',\n    components: {\n        CCard: CCard,\n        CListGroup: CListGroup,\n        CListGroupItem: CListGroupItem\n    },\n    metaInfo: {\n        title: 'config.title',\n    },\n});\n","import mod from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ConfigDisambiguation.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ConfigDisambiguation.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./ConfigDisambiguation.vue?vue&type=template&id=3bd66e9c&\"\nimport script from \"./ConfigDisambiguation.vue?vue&type=script&lang=ts&\"\nexport * from \"./ConfigDisambiguation.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('3bd66e9c')) {\n      api.createRecord('3bd66e9c', component.options)\n    } else {\n      api.reload('3bd66e9c', component.options)\n    }\n    module.hot.accept(\"./ConfigDisambiguation.vue?vue&type=template&id=3bd66e9c&\", function () {\n      api.rerender('3bd66e9c', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/pages/Config/ConfigDisambiguation.vue\"\nexport default component.exports","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"CCard\",\n    [\n      _c(\n        \"CCardBody\",\n        [\n          _c(\n            \"CForm\",\n            [\n              _c(\n                \"div\",\n                { staticClass: \"form-group\" },\n                [\n                  _c(\"CInputFile\", {\n                    ref: \"configZip\",\n                    attrs: {\n                      accept: \".zip\",\n                      label: _vm.$t(\"config.migration.form.importButton\")\n                    },\n                    on: { click: _vm.isEmpty, input: _vm.isEmpty }\n                  }),\n                  _vm._v(\" \"),\n                  _vm.configEmpty && !_vm.firstConfig\n                    ? _c(\"p\", { staticClass: \"text-danger\" }, [\n                        _vm._v(\n                          \"\\n\\t\\t\\t\\t\\t\" +\n                            _vm._s(\n                              _vm.$t(\"config.migration.messages.importButton\")\n                            ) +\n                            \"\\n\\t\\t\\t\\t\"\n                        )\n                      ])\n                    : _vm._e()\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"CButton\",\n                {\n                  attrs: { color: \"primary\", disabled: _vm.configEmpty },\n                  on: {\n                    click: function($event) {\n                      $event.preventDefault()\n                      return _vm.importConfig($event)\n                    }\n                  }\n                },\n                [\n                  _vm._v(\n                    \"\\n\\t\\t\\t\\t\" +\n                      _vm._s(_vm.$t(\"config.migration.form.import\")) +\n                      \"\\n\\t\\t\\t\"\n                  )\n                ]\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"CButton\",\n                {\n                  attrs: { color: \"secondary\" },\n                  on: {\n                    click: function($event) {\n                      $event.preventDefault()\n                      return _vm.exportConfig($event)\n                    }\n                  }\n                },\n                [\n                  _vm._v(\n                    \"\\n\\t\\t\\t\\t\" +\n                      _vm._s(_vm.$t(\"config.migration.form.export\")) +\n                      \"\\n\\t\\t\\t\"\n                  )\n                ]\n              )\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import axios from 'axios';\nimport { authorizationHeader } from '../helpers/authorizationHeader';\n/**\n * Daemon configuration service\n */\nvar DaemonConfigurationService = /** @class */ (function () {\n    function DaemonConfigurationService() {\n    }\n    /**\n     * Creates a new component\n     * @param configuration Daemon component configuration\n     */\n    DaemonConfigurationService.prototype.createComponent = function (configuration) {\n        var url = 'config/daemon/';\n        return axios.post(url, configuration, { headers: authorizationHeader() });\n    };\n    /**\n     * Creates a new component instance\n     * @param component Daemon component name\n     * @param configuration Daemon component instance configuration\n     */\n    DaemonConfigurationService.prototype.createInstance = function (component, configuration) {\n        var url = 'config/daemon/' + encodeURIComponent(component);\n        return axios.post(url, configuration, { headers: authorizationHeader() });\n    };\n    /**\n     * Retrieves the component configuration and instances\n     * @param component Daemon component name\n     */\n    DaemonConfigurationService.prototype.getComponent = function (component) {\n        var url = 'config/daemon/' + encodeURIComponent(component);\n        return axios.get(url, { headers: authorizationHeader() });\n    };\n    /**\n     * Retrieves the component instance configuration and instances\n     * @param component Daemon component name\n     * @param instance Daemon component instance name\n     */\n    DaemonConfigurationService.prototype.getInstance = function (component, instance) {\n        var url = 'config/daemon/' + encodeURIComponent(component) + '/' + encodeURIComponent(instance);\n        return axios.get(url, { headers: authorizationHeader() });\n    };\n    /**\n     * Deletes the component\n     * @param component Daemon component name\n     */\n    DaemonConfigurationService.prototype.deleteComponent = function (component) {\n        var url = 'config/daemon/' + encodeURIComponent(component);\n        return axios.delete(url, { headers: authorizationHeader() });\n    };\n    /**\n     * Deletes the component instance\n     * @param component Daemon component name\n     * @param instance Daemon component instance name\n     */\n    DaemonConfigurationService.prototype.deleteInstance = function (component, instance) {\n        var url = 'config/daemon/' + encodeURIComponent(component) + '/' + encodeURIComponent(instance);\n        return axios.delete(url, { headers: authorizationHeader() });\n    };\n    /**\n     * Exports daemon configuration\n     */\n    DaemonConfigurationService.prototype.export = function () {\n        var url = 'config/daemon/migration/export';\n        return axios.get(url, { headers: authorizationHeader(), responseType: 'arraybuffer' });\n    };\n    /**\n     * Imports daemon configuration\n     * @param config daemon configuration\n     */\n    DaemonConfigurationService.prototype.import = function (config) {\n        var url = 'config/daemon/migration/import';\n        return axios.post(url, config, { headers: authorizationHeader() });\n    };\n    /**\n     * Updates the component configuration\n     * @param component Daemon component name\n     * @param configuration Daemon component configuration\n     */\n    DaemonConfigurationService.prototype.updateComponent = function (component, configuration) {\n        var url = 'config/daemon/' + encodeURIComponent(component);\n        return axios.put(url, configuration, { headers: authorizationHeader() });\n    };\n    /**\n     * Updates the component instance configuration\n     * @param component Daemon component name\n     * @param instance Daemon component instance name\n     * @param configuration Daemon component instance configuration\n     */\n    DaemonConfigurationService.prototype.updateInstance = function (component, instance, configuration) {\n        var url = 'config/daemon/' + encodeURIComponent(component) + '/' + encodeURIComponent(instance);\n        return axios.put(url, configuration, { headers: authorizationHeader() });\n    };\n    return DaemonConfigurationService;\n}());\nexport default new DaemonConfigurationService();\n","import mod from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ConfigMigration.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ConfigMigration.vue?vue&type=script&lang=ts&\"","import Vue from 'vue';\nimport { CButton, CCard, CCardBody, CForm, CInputFile } from '@coreui/vue/src';\nimport DaemonConfigurationService from '../../services/DaemonConfigurationService';\nimport { fileDownloader } from '../../helpers/fileDownloader';\nexport default Vue.extend({\n    name: 'ConfigMigration',\n    components: {\n        CButton: CButton,\n        CCard: CCard,\n        CCardBody: CCardBody,\n        CForm: CForm,\n        CInputFile: CInputFile\n    },\n    data: function () {\n        return {\n            configEmpty: true,\n            firstConfig: true,\n        };\n    },\n    methods: {\n        getFiles: function () {\n            var input = this.$refs.configZip.$el.children[1];\n            return input.files;\n        },\n        exportConfig: function () {\n            var _this = this;\n            this.$store.commit('spinner/SHOW');\n            DaemonConfigurationService.export()\n                .then(function (response) {\n                var fileName = 'iqrf-gateway-configuration_' + new Date().toISOString();\n                var file = fileDownloader(response, 'application/zip', fileName);\n                _this.$store.commit('spinner/HIDE');\n                file.click();\n            });\n        },\n        importConfig: function () {\n            var _this = this;\n            this.$store.commit('spinner/SHOW');\n            var files = this.getFiles();\n            if (files === null || files.length === 0) {\n                this.$toast.error(this.$t('config.migration.messages.importButton').toString());\n                return;\n            }\n            DaemonConfigurationService.import(files[0])\n                .then(function () {\n                _this.$store.commit('spinner/HIDE');\n                _this.$toast.success(_this.$t('config.migration.messages.imported').toString());\n            })\n                .catch(function (error) {\n                _this.$store.commit('spinner/HIDE');\n                if (error.response === undefined) {\n                    console.error(error);\n                    return;\n                }\n                if (error.response.status === 400) {\n                    _this.$toast.error(_this.$t('config.migration.messages.invalidConfig').toString());\n                }\n                else if (error.response.status === 415) {\n                    _this.$toast.error(_this.$t('config.migration.messages.invalidFormat').toString());\n                }\n            });\n        },\n        isEmpty: function () {\n            if (this.firstConfig) {\n                this.firstConfig = false;\n            }\n            var files = this.getFiles();\n            this.configEmpty = files === null || files.length === 0;\n        }\n    },\n    metaInfo: {\n        title: 'config.migration.title',\n    },\n});\n","import { render, staticRenderFns } from \"./ConfigMigration.vue?vue&type=template&id=1dafdb1c&\"\nimport script from \"./ConfigMigration.vue?vue&type=script&lang=ts&\"\nexport * from \"./ConfigMigration.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('1dafdb1c')) {\n      api.createRecord('1dafdb1c', component.options)\n    } else {\n      api.reload('1dafdb1c', component.options)\n    }\n    module.hot.accept(\"./ConfigMigration.vue?vue&type=template&id=1dafdb1c&\", function () {\n      api.rerender('1dafdb1c', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/pages/Config/ConfigMigration.vue\"\nexport default component.exports","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\n        \"CCard\",\n        { attrs: { \"body-wrapper\": \"\" } },\n        [\n          _vm.config !== null\n            ? _c(\"ValidationObserver\", {\n                scopedSlots: _vm._u(\n                  [\n                    {\n                      key: \"default\",\n                      fn: function(ref) {\n                        var invalid = ref.invalid\n                        return [\n                          _c(\n                            \"CForm\",\n                            {\n                              on: {\n                                submit: function($event) {\n                                  $event.preventDefault()\n                                  return _vm.processSubmit($event)\n                                }\n                              }\n                            },\n                            [\n                              _c(\n                                \"CRow\",\n                                [\n                                  _c(\n                                    \"CCol\",\n                                    { attrs: { md: \"6\" } },\n                                    [\n                                      _c(\"h3\", [\n                                        _vm._v(\n                                          _vm._s(\n                                            _vm.$t(\n                                              \"translatorConfig.form.mqtt.title\"\n                                            )\n                                          )\n                                        )\n                                      ]),\n                                      _vm._v(\" \"),\n                                      _c(\"ValidationProvider\", {\n                                        attrs: {\n                                          rules: \"required\",\n                                          \"custom-messages\": {\n                                            required:\n                                              \"translatorConfig.form.messages.missing.maddr\"\n                                          }\n                                        },\n                                        scopedSlots: _vm._u(\n                                          [\n                                            {\n                                              key: \"default\",\n                                              fn: function(ref) {\n                                                var errors = ref.errors\n                                                var touched = ref.touched\n                                                var valid = ref.valid\n                                                return [\n                                                  _c(\"CInput\", {\n                                                    attrs: {\n                                                      label: _vm.$t(\n                                                        \"translatorConfig.form.mqtt.addr\"\n                                                      ),\n                                                      \"is-valid\": touched\n                                                        ? valid\n                                                        : null,\n                                                      \"invalid-feedback\": _vm.$t(\n                                                        errors[0]\n                                                      )\n                                                    },\n                                                    model: {\n                                                      value:\n                                                        _vm.config.mqtt.addr,\n                                                      callback: function($$v) {\n                                                        _vm.$set(\n                                                          _vm.config.mqtt,\n                                                          \"addr\",\n                                                          $$v\n                                                        )\n                                                      },\n                                                      expression:\n                                                        \"config.mqtt.addr\"\n                                                    }\n                                                  })\n                                                ]\n                                              }\n                                            }\n                                          ],\n                                          null,\n                                          true\n                                        )\n                                      }),\n                                      _vm._v(\" \"),\n                                      _c(\"ValidationProvider\", {\n                                        attrs: {\n                                          rules:\n                                            \"required|integer|between:1,49151\",\n                                          \"custom-messages\": {\n                                            integer:\n                                              \"translatorConfig.form.messages.integer\",\n                                            required:\n                                              \"translatorConfig.form.messages.port\",\n                                            between:\n                                              \"translatorConfig.form.messages.port\"\n                                          }\n                                        },\n                                        scopedSlots: _vm._u(\n                                          [\n                                            {\n                                              key: \"default\",\n                                              fn: function(ref) {\n                                                var errors = ref.errors\n                                                var touched = ref.touched\n                                                var valid = ref.valid\n                                                return [\n                                                  _c(\"CInput\", {\n                                                    attrs: {\n                                                      type: \"number\",\n                                                      min: \"1\",\n                                                      max: \"49151\",\n                                                      label: _vm.$t(\n                                                        \"translatorConfig.form.mqtt.port\"\n                                                      ),\n                                                      \"is-valid\": touched\n                                                        ? valid\n                                                        : null,\n                                                      \"invalid-feedback\": _vm.$t(\n                                                        errors[0]\n                                                      )\n                                                    },\n                                                    model: {\n                                                      value:\n                                                        _vm.config.mqtt.port,\n                                                      callback: function($$v) {\n                                                        _vm.$set(\n                                                          _vm.config.mqtt,\n                                                          \"port\",\n                                                          _vm._n($$v)\n                                                        )\n                                                      },\n                                                      expression:\n                                                        \"config.mqtt.port\"\n                                                    }\n                                                  })\n                                                ]\n                                              }\n                                            }\n                                          ],\n                                          null,\n                                          true\n                                        )\n                                      }),\n                                      _vm._v(\" \"),\n                                      _c(\"ValidationProvider\", {\n                                        attrs: {\n                                          rules: \"required|client_id\",\n                                          \"custom-messages\": {\n                                            required:\n                                              \"translatorConfig.form.messages.missing.mcid\",\n                                            client_id:\n                                              \"translatorConfig.form.messages.invalid.mcid\"\n                                          }\n                                        },\n                                        scopedSlots: _vm._u(\n                                          [\n                                            {\n                                              key: \"default\",\n                                              fn: function(ref) {\n                                                var errors = ref.errors\n                                                var touched = ref.touched\n                                                var valid = ref.valid\n                                                return [\n                                                  _c(\"CInput\", {\n                                                    attrs: {\n                                                      label: _vm.$t(\n                                                        \"translatorConfig.form.mqtt.cid\"\n                                                      ),\n                                                      \"is-valid\": touched\n                                                        ? valid\n                                                        : null,\n                                                      \"invalid-feedback\": _vm.$t(\n                                                        errors[0]\n                                                      )\n                                                    },\n                                                    model: {\n                                                      value:\n                                                        _vm.config.mqtt.cid,\n                                                      callback: function($$v) {\n                                                        _vm.$set(\n                                                          _vm.config.mqtt,\n                                                          \"cid\",\n                                                          $$v\n                                                        )\n                                                      },\n                                                      expression:\n                                                        \"config.mqtt.cid\"\n                                                    }\n                                                  })\n                                                ]\n                                              }\n                                            }\n                                          ],\n                                          null,\n                                          true\n                                        )\n                                      }),\n                                      _vm._v(\" \"),\n                                      _c(\"ValidationProvider\", {\n                                        attrs: {\n                                          rules: \"topic|required\",\n                                          \"custom-messages\": {\n                                            required:\n                                              \"translatorConfig.form.messages.missing.mtopic\",\n                                            topic:\n                                              \"translatorConfig.form.messages.invalid.mtopic\"\n                                          }\n                                        },\n                                        scopedSlots: _vm._u(\n                                          [\n                                            {\n                                              key: \"default\",\n                                              fn: function(ref) {\n                                                var errors = ref.errors\n                                                var touched = ref.touched\n                                                var valid = ref.valid\n                                                return [\n                                                  _c(\"CInput\", {\n                                                    attrs: {\n                                                      label: _vm.$t(\n                                                        \"translatorConfig.form.mqtt.topic\"\n                                                      ),\n                                                      \"is-valid\": touched\n                                                        ? valid\n                                                        : null,\n                                                      \"invalid-feedback\": _vm.$t(\n                                                        errors[0]\n                                                      )\n                                                    },\n                                                    model: {\n                                                      value:\n                                                        _vm.config.mqtt.topic,\n                                                      callback: function($$v) {\n                                                        _vm.$set(\n                                                          _vm.config.mqtt,\n                                                          \"topic\",\n                                                          $$v\n                                                        )\n                                                      },\n                                                      expression:\n                                                        \"config.mqtt.topic\"\n                                                    }\n                                                  })\n                                                ]\n                                              }\n                                            }\n                                          ],\n                                          null,\n                                          true\n                                        )\n                                      }),\n                                      _vm._v(\" \"),\n                                      _c(\"ValidationProvider\", {\n                                        scopedSlots: _vm._u(\n                                          [\n                                            {\n                                              key: \"default\",\n                                              fn: function(ref) {\n                                                var errors = ref.errors\n                                                var touched = ref.touched\n                                                var valid = ref.valid\n                                                return [\n                                                  _c(\"CInput\", {\n                                                    attrs: {\n                                                      autocomplete: \"off\",\n                                                      label: _vm.$t(\n                                                        \"translatorConfig.form.mqtt.user\"\n                                                      ),\n                                                      \"is-valid\": touched\n                                                        ? valid\n                                                        : null,\n                                                      \"invalid-feedback\": _vm.$t(\n                                                        errors[0]\n                                                      )\n                                                    },\n                                                    model: {\n                                                      value:\n                                                        _vm.config.mqtt.user,\n                                                      callback: function($$v) {\n                                                        _vm.$set(\n                                                          _vm.config.mqtt,\n                                                          \"user\",\n                                                          $$v\n                                                        )\n                                                      },\n                                                      expression:\n                                                        \"config.mqtt.user\"\n                                                    }\n                                                  })\n                                                ]\n                                              }\n                                            }\n                                          ],\n                                          null,\n                                          true\n                                        )\n                                      }),\n                                      _vm._v(\" \"),\n                                      _c(\"ValidationProvider\", {\n                                        scopedSlots: _vm._u(\n                                          [\n                                            {\n                                              key: \"default\",\n                                              fn: function(ref) {\n                                                var errors = ref.errors\n                                                var touched = ref.touched\n                                                var valid = ref.valid\n                                                return [\n                                                  _c(\"CInput\", {\n                                                    attrs: {\n                                                      autocomplete: \"off\",\n                                                      label: _vm.$t(\n                                                        \"translatorConfig.form.mqtt.pw\"\n                                                      ),\n                                                      \"is-valid\": touched\n                                                        ? valid\n                                                        : null,\n                                                      \"invalid-feedback\": _vm.$t(\n                                                        errors[0]\n                                                      ),\n                                                      type: _vm.visibility\n                                                    },\n                                                    scopedSlots: _vm._u(\n                                                      [\n                                                        {\n                                                          key: \"append-content\",\n                                                          fn: function() {\n                                                            return [\n                                                              _c(\n                                                                \"span\",\n                                                                {\n                                                                  on: {\n                                                                    click:\n                                                                      _vm.changeVisibility\n                                                                  }\n                                                                },\n                                                                [\n                                                                  _vm.visibility ===\n                                                                  \"password\"\n                                                                    ? _c(\n                                                                        \"CIcon\",\n                                                                        {\n                                                                          attrs: {\n                                                                            content:\n                                                                              _vm\n                                                                                .$options\n                                                                                .icons\n                                                                                .hidden\n                                                                          }\n                                                                        }\n                                                                      )\n                                                                    : _c(\n                                                                        \"CIcon\",\n                                                                        {\n                                                                          attrs: {\n                                                                            content:\n                                                                              _vm\n                                                                                .$options\n                                                                                .icons\n                                                                                .shown\n                                                                          }\n                                                                        }\n                                                                      )\n                                                                ],\n                                                                1\n                                                              )\n                                                            ]\n                                                          },\n                                                          proxy: true\n                                                        }\n                                                      ],\n                                                      null,\n                                                      true\n                                                    ),\n                                                    model: {\n                                                      value: _vm.config.mqtt.pw,\n                                                      callback: function($$v) {\n                                                        _vm.$set(\n                                                          _vm.config.mqtt,\n                                                          \"pw\",\n                                                          $$v\n                                                        )\n                                                      },\n                                                      expression:\n                                                        \"config.mqtt.pw\"\n                                                    }\n                                                  })\n                                                ]\n                                              }\n                                            }\n                                          ],\n                                          null,\n                                          true\n                                        )\n                                      })\n                                    ],\n                                    1\n                                  ),\n                                  _vm._v(\" \"),\n                                  _c(\n                                    \"CCol\",\n                                    { attrs: { md: \"6\" } },\n                                    [\n                                      _c(\"h3\", [\n                                        _vm._v(\n                                          _vm._s(\n                                            _vm.$t(\n                                              \"translatorConfig.form.rest.title\"\n                                            )\n                                          )\n                                        )\n                                      ]),\n                                      _vm._v(\" \"),\n                                      _c(\"ValidationProvider\", {\n                                        attrs: {\n                                          rules: \"required\",\n                                          \"custom-messages\": {\n                                            required:\n                                              \"translatorConfig.form.messages.missing.raddr\"\n                                          }\n                                        },\n                                        scopedSlots: _vm._u(\n                                          [\n                                            {\n                                              key: \"default\",\n                                              fn: function(ref) {\n                                                var errors = ref.errors\n                                                var touched = ref.touched\n                                                var valid = ref.valid\n                                                return [\n                                                  _c(\"CInput\", {\n                                                    attrs: {\n                                                      label: _vm.$t(\n                                                        \"translatorConfig.form.rest.addr\"\n                                                      ),\n                                                      \"is-valid\": touched\n                                                        ? valid\n                                                        : null,\n                                                      \"invalid-feedback\": _vm.$t(\n                                                        errors[0]\n                                                      )\n                                                    },\n                                                    model: {\n                                                      value:\n                                                        _vm.config.rest.addr,\n                                                      callback: function($$v) {\n                                                        _vm.$set(\n                                                          _vm.config.rest,\n                                                          \"addr\",\n                                                          $$v\n                                                        )\n                                                      },\n                                                      expression:\n                                                        \"config.rest.addr\"\n                                                    }\n                                                  })\n                                                ]\n                                              }\n                                            }\n                                          ],\n                                          null,\n                                          true\n                                        )\n                                      }),\n                                      _vm._v(\" \"),\n                                      _c(\"ValidationProvider\", {\n                                        attrs: {\n                                          rules:\n                                            \"required|integer|between:1,49151\",\n                                          \"custom-messages\": {\n                                            integer:\n                                              \"translatorConfig.form.messages.integer\",\n                                            required:\n                                              \"translatorConfig.form.messages.port\",\n                                            between:\n                                              \"translatorConfig.form.messages.port\"\n                                          }\n                                        },\n                                        scopedSlots: _vm._u(\n                                          [\n                                            {\n                                              key: \"default\",\n                                              fn: function(ref) {\n                                                var errors = ref.errors\n                                                var touched = ref.touched\n                                                var valid = ref.valid\n                                                return [\n                                                  _c(\"CInput\", {\n                                                    attrs: {\n                                                      type: \"number\",\n                                                      min: \"1\",\n                                                      max: \"49151\",\n                                                      label: _vm.$t(\n                                                        \"translatorConfig.form.rest.port\"\n                                                      ),\n                                                      \"is-valid\": touched\n                                                        ? valid\n                                                        : null,\n                                                      \"invalid-feedback\": _vm.$t(\n                                                        errors[0]\n                                                      )\n                                                    },\n                                                    model: {\n                                                      value:\n                                                        _vm.config.rest.port,\n                                                      callback: function($$v) {\n                                                        _vm.$set(\n                                                          _vm.config.rest,\n                                                          \"port\",\n                                                          _vm._n($$v)\n                                                        )\n                                                      },\n                                                      expression:\n                                                        \"config.rest.port\"\n                                                    }\n                                                  })\n                                                ]\n                                              }\n                                            }\n                                          ],\n                                          null,\n                                          true\n                                        )\n                                      }),\n                                      _vm._v(\" \"),\n                                      _c(\"ValidationProvider\", {\n                                        attrs: {\n                                          rules: \"api_key_r|required\",\n                                          \"custom-messages\": {\n                                            required:\n                                              \"translatorConfig.form.messages.missing.rapi_key\",\n                                            api_key_r:\n                                              \"translatorConfig.form.messages.invalid.api_key\"\n                                          }\n                                        },\n                                        scopedSlots: _vm._u(\n                                          [\n                                            {\n                                              key: \"default\",\n                                              fn: function(ref) {\n                                                var errors = ref.errors\n                                                var touched = ref.touched\n                                                var valid = ref.valid\n                                                return [\n                                                  _c(\"CInput\", {\n                                                    attrs: {\n                                                      label: _vm.$t(\n                                                        \"translatorConfig.form.rest.api_key\"\n                                                      ),\n                                                      \"is-valid\": touched\n                                                        ? valid\n                                                        : null,\n                                                      \"invalid-feedback\": _vm.$t(\n                                                        errors[0]\n                                                      )\n                                                    },\n                                                    model: {\n                                                      value:\n                                                        _vm.config.rest.api_key,\n                                                      callback: function($$v) {\n                                                        _vm.$set(\n                                                          _vm.config.rest,\n                                                          \"api_key\",\n                                                          $$v\n                                                        )\n                                                      },\n                                                      expression:\n                                                        \"config.rest.api_key\"\n                                                    }\n                                                  })\n                                                ]\n                                              }\n                                            }\n                                          ],\n                                          null,\n                                          true\n                                        )\n                                      })\n                                    ],\n                                    1\n                                  )\n                                ],\n                                1\n                              ),\n                              _vm._v(\" \"),\n                              _c(\n                                \"CButton\",\n                                {\n                                  attrs: {\n                                    color: \"primary\",\n                                    type: \"submit\",\n                                    disabled: invalid\n                                  }\n                                },\n                                [\n                                  _vm._v(\n                                    \"\\n\\t\\t\\t\\t\\t\" +\n                                      _vm._s(_vm.$t(\"forms.save\")) +\n                                      \"\\n\\t\\t\\t\\t\"\n                                  )\n                                ]\n                              )\n                            ],\n                            1\n                          )\n                        ]\n                      }\n                    }\n                  ],\n                  null,\n                  false,\n                  487245618\n                )\n              })\n            : _vm._e()\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import axios from 'axios';\nimport { authorizationHeader } from '../helpers/authorizationHeader';\n/**\n * Feature configuration service\n */\nvar FeatureConfigService = /** @class */ (function () {\n    function FeatureConfigService() {\n    }\n    /**\n     * Retrieves feature configuration\n     * @param featureName feature name\n     */\n    FeatureConfigService.prototype.getConfig = function (featureName) {\n        return axios.get('config/' + featureName, { headers: authorizationHeader() });\n    };\n    /**\n     * Saves new feature configuration\n     * @param featureName feature name\n     * @param config new feature configuration\n     */\n    FeatureConfigService.prototype.saveConfig = function (featureName, config) {\n        return axios.put('config/' + featureName, config, { headers: authorizationHeader() });\n    };\n    return FeatureConfigService;\n}());\nexport default new FeatureConfigService();\n","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TranslatorConfig.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TranslatorConfig.vue?vue&type=script&lang=js&\"","<template>\n\t<div>\n\t\t<CCard body-wrapper>\n\t\t\t<ValidationObserver v-if='config !== null' v-slot='{ invalid }'>\n\t\t\t\t<CForm @submit.prevent='processSubmit'>\n\t\t\t\t\t<CRow>\n\t\t\t\t\t\t<CCol md='6'>\n\t\t\t\t\t\t\t<h3>{{ $t(\"translatorConfig.form.mqtt.title\") }}</h3>\n\t\t\t\t\t\t\t<ValidationProvider \n\t\t\t\t\t\t\t\tv-slot='{ errors, touched, valid }' \n\t\t\t\t\t\t\t\trules='required'\n\t\t\t\t\t\t\t\t:custom-messages='{required: \"translatorConfig.form.messages.missing.maddr\"}'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<CInput\n\t\t\t\t\t\t\t\t\tv-model='config.mqtt.addr'\n\t\t\t\t\t\t\t\t\t:label='$t(\"translatorConfig.form.mqtt.addr\")'\n\t\t\t\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</ValidationProvider>\n\t\t\t\t\t\t\t<ValidationProvider \n\t\t\t\t\t\t\t\tv-slot='{ errors, touched, valid }' \n\t\t\t\t\t\t\t\trules='required|integer|between:1,49151'\n\t\t\t\t\t\t\t\t:custom-messages='{\n\t\t\t\t\t\t\t\t\tinteger: \"translatorConfig.form.messages.integer\",\n\t\t\t\t\t\t\t\t\trequired: \"translatorConfig.form.messages.port\",\n\t\t\t\t\t\t\t\t\tbetween: \"translatorConfig.form.messages.port\"\n\t\t\t\t\t\t\t\t}'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<CInput\n\t\t\t\t\t\t\t\t\tv-model.number='config.mqtt.port'\n\t\t\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t\t\tmin='1'\n\t\t\t\t\t\t\t\t\tmax='49151'\n\t\t\t\t\t\t\t\t\t:label='$t(\"translatorConfig.form.mqtt.port\")'\n\t\t\t\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</ValidationProvider>\n\t\t\t\t\t\t\t<ValidationProvider \n\t\t\t\t\t\t\t\tv-slot='{ errors, touched, valid }' \n\t\t\t\t\t\t\t\trules='required|client_id'\n\t\t\t\t\t\t\t\t:custom-messages='{\n\t\t\t\t\t\t\t\t\trequired: \"translatorConfig.form.messages.missing.mcid\",\n\t\t\t\t\t\t\t\t\tclient_id: \"translatorConfig.form.messages.invalid.mcid\",\n\t\t\t\t\t\t\t\t}'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<CInput\n\t\t\t\t\t\t\t\t\tv-model='config.mqtt.cid'\n\t\t\t\t\t\t\t\t\t:label='$t(\"translatorConfig.form.mqtt.cid\")'\n\t\t\t\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</ValidationProvider>\n\t\t\t\t\t\t\t<ValidationProvider \n\t\t\t\t\t\t\t\tv-slot='{ errors, touched, valid }' \n\t\t\t\t\t\t\t\trules='topic|required'\n\t\t\t\t\t\t\t\t:custom-messages='{\n\t\t\t\t\t\t\t\t\trequired: \"translatorConfig.form.messages.missing.mtopic\",\n\t\t\t\t\t\t\t\t\ttopic: \"translatorConfig.form.messages.invalid.mtopic\",\n\t\t\t\t\t\t\t\t}'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<CInput\n\t\t\t\t\t\t\t\t\tv-model='config.mqtt.topic'\n\t\t\t\t\t\t\t\t\t:label='$t(\"translatorConfig.form.mqtt.topic\")'\n\t\t\t\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</ValidationProvider>\n\t\t\t\t\t\t\t<ValidationProvider \n\t\t\t\t\t\t\t\tv-slot='{ errors, touched, valid }'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<CInput\n\t\t\t\t\t\t\t\t\tv-model='config.mqtt.user'\n\t\t\t\t\t\t\t\t\tautocomplete='off'\n\t\t\t\t\t\t\t\t\t:label='$t(\"translatorConfig.form.mqtt.user\")'\n\t\t\t\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</ValidationProvider>\n\t\t\t\t\t\t\t<ValidationProvider \n\t\t\t\t\t\t\t\tv-slot='{ errors, touched, valid }'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<CInput\n\t\t\t\t\t\t\t\t\tv-model='config.mqtt.pw'\n\t\t\t\t\t\t\t\t\tautocomplete='off'\n\t\t\t\t\t\t\t\t\t:label='$t(\"translatorConfig.form.mqtt.pw\")'\n\t\t\t\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\t\t\t\t:type='visibility'\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<template #append-content>\n\t\t\t\t\t\t\t\t\t\t<span @click='changeVisibility'>\n\t\t\t\t\t\t\t\t\t\t\t<CIcon\n\t\t\t\t\t\t\t\t\t\t\t\tv-if='visibility ===\"password\"'\n\t\t\t\t\t\t\t\t\t\t\t\t:content='$options.icons.hidden'\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t<CIcon v-else :content='$options.icons.shown' />\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t\t</CInput>\n\t\t\t\t\t\t\t</ValidationProvider>\n\t\t\t\t\t\t</CCol>\n\t\t\t\t\t\t<CCol md='6'>\n\t\t\t\t\t\t\t<h3>{{ $t(\"translatorConfig.form.rest.title\") }}</h3>\n\t\t\t\t\t\t\t<ValidationProvider\n\t\t\t\t\t\t\t\tv-slot='{ errors, touched, valid }'\n\t\t\t\t\t\t\t\trules='required'\n\t\t\t\t\t\t\t\t:custom-messages='{required: \"translatorConfig.form.messages.missing.raddr\"}'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<CInput\n\t\t\t\t\t\t\t\t\tv-model='config.rest.addr' \n\t\t\t\t\t\t\t\t\t:label='$t(\"translatorConfig.form.rest.addr\")' \n\t\t\t\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</ValidationProvider>\n\t\t\t\t\t\t\t<ValidationProvider \n\t\t\t\t\t\t\t\tv-slot='{ errors, touched, valid }'\n\t\t\t\t\t\t\t\trules='required|integer|between:1,49151'\n\t\t\t\t\t\t\t\t:custom-messages='{\n\t\t\t\t\t\t\t\t\tinteger: \"translatorConfig.form.messages.integer\",\n\t\t\t\t\t\t\t\t\trequired: \"translatorConfig.form.messages.port\",\n\t\t\t\t\t\t\t\t\tbetween: \"translatorConfig.form.messages.port\"\n\t\t\t\t\t\t\t\t}'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<CInput\n\t\t\t\t\t\t\t\t\tv-model.number='config.rest.port'\n\t\t\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t\t\tmin='1'\n\t\t\t\t\t\t\t\t\tmax='49151'\n\t\t\t\t\t\t\t\t\t:label='$t(\"translatorConfig.form.rest.port\")' \n\t\t\t\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</ValidationProvider>\n\t\t\t\t\t\t\t<ValidationProvider \n\t\t\t\t\t\t\t\tv-slot='{ errors, touched, valid }' \n\t\t\t\t\t\t\t\trules='api_key_r|required'\n\t\t\t\t\t\t\t\t:custom-messages='{\n\t\t\t\t\t\t\t\t\trequired: \"translatorConfig.form.messages.missing.rapi_key\",\n\t\t\t\t\t\t\t\t\tapi_key_r: \"translatorConfig.form.messages.invalid.api_key\"\n\t\t\t\t\t\t\t\t}'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<CInput\n\t\t\t\t\t\t\t\t\tv-model='config.rest.api_key' \n\t\t\t\t\t\t\t\t\t:label='$t(\"translatorConfig.form.rest.api_key\")'\n\t\t\t\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</ValidationProvider>\n\t\t\t\t\t\t</CCol>\n\t\t\t\t\t</CRow>\n\t\t\t\t\t<CButton color='primary' type='submit' :disabled='invalid'>\n\t\t\t\t\t\t{{ $t('forms.save') }}\n\t\t\t\t\t</CButton>\n\t\t\t\t</CForm>\n\t\t\t</ValidationObserver>\n\t\t</CCard>\n\t</div>\n</template>\n\n<script>\n\nimport {CButton, CCard, CForm, CIcon, CInput} from '@coreui/vue/src';\nimport {cilLockLocked, cilLockUnlocked} from '@coreui/icons';\nimport {between, integer, required} from 'vee-validate/dist/rules';\nimport {extend, ValidationObserver, ValidationProvider} from 'vee-validate';\nimport FormErrorHandler from '../../helpers/FormErrorHandler';\nimport FeatureConfigService from '../../services/FeatureConfigService';\n\nexport default {\n\tname: 'TranslatorConfig',\n\tcomponents: {\n\t\tCButton,\n\t\tCCard,\n\t\tCForm,\n\t\tCIcon,\n\t\tCInput,\n\t\tValidationObserver,\n\t\tValidationProvider\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tname: 'translator',\n\t\t\tvisibility: 'password',\n\t\t\tconfig: null,\n\t\t};\n\t},\n\tcreated() {\n\t\textend('between', between);\n\t\textend('integer', integer);\n\t\textend('required', required);\n\t\textend('api_key_r', (key) => {\n\t\t\tconst regex = RegExp('^[./A-Za-z0-9]{22}\\\\.[A-Za-z0-9+/=]{44}$');\n\t\t\treturn regex.test(key);\n\t\t});\n\t\textend('client_id', (id) => {\n\t\t\tconst regex = RegExp('^[A-F0-9]{16}$');\n\t\t\treturn regex.test(id);\n\t\t});\n\t\textend('topic', (topic) => {\n\t\t\tconst regex = RegExp('^gateway\\\\/[A-F0-9]{16}\\\\/rest\\\\/requests\\\\/\\\\+\\\\/#$');\n\t\t\treturn regex.test(topic);\n\t\t});\n\t\tthis.getConfig();\n\t},\n\tmethods: {\n\t\tgetConfig() {\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\tFeatureConfigService.getConfig(this.name)\n\t\t\t\t.then((response) => {\n\t\t\t\t\tthis.$store.commit('spinner/HIDE');\n\t\t\t\t\tthis.config = response.data;\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tFormErrorHandler.configError(error);\n\t\t\t\t});\n\t\t},\n\t\tprocessSubmit() {\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\tFeatureConfigService.saveConfig(this.name, this.config)\n\t\t\t\t.then(() => {\n\t\t\t\t\tthis.$store.commit('spinner/HIDE');\n\t\t\t\t\tthis.$toast.success(this.$t('forms.messages.saveSuccess').toString());\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tFormErrorHandler.configError(error);\n\t\t\t\t});\n\t\t},\n\t\tchangeVisibility() {\n\t\t\tthis.visibility = this.visibility === 'password' ? 'text' : 'password';\n\t\t},\n\t},\n\tbeforeRouteEnter(to, from, next) {\n\t\tnext(vm => {\n\t\t\tif (!vm.$store.getters['features/isEnabled']('iqrfGatewayTranslator')) {\n\t\t\t\tvm.$toast.error(\n\t\t\t\t\tvm.$t('translatorConfig.messages.disabled').toString()\n\t\t\t\t);\n\t\t\t\tvm.$router.push(from.path);\n\t\t\t}\n\t\t});\n\t},\n\ticons: {\n\t\thidden: cilLockLocked,\n\t\tshown: cilLockUnlocked\n\t},\n\tmetaInfo: {\n\t\ttitle: 'translatorConfig.description',\n\t},\n};\n\n</script>\n","import { render, staticRenderFns } from \"./TranslatorConfig.vue?vue&type=template&id=4858a5b4&\"\nimport script from \"./TranslatorConfig.vue?vue&type=script&lang=js&\"\nexport * from \"./TranslatorConfig.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('4858a5b4')) {\n      api.createRecord('4858a5b4', component.options)\n    } else {\n      api.reload('4858a5b4', component.options)\n    }\n    module.hot.accept(\"./TranslatorConfig.vue?vue&type=template&id=4858a5b4&\", function () {\n      api.rerender('4858a5b4', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/pages/Config/TranslatorConfig.vue\"\nexport default component.exports","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\n        \"CCard\",\n        { attrs: { \"body-wrapper\": \"\" } },\n        [\n          _vm.config !== null\n            ? _c(\"ValidationObserver\", {\n                scopedSlots: _vm._u(\n                  [\n                    {\n                      key: \"default\",\n                      fn: function(ref) {\n                        var invalid = ref.invalid\n                        return [\n                          _c(\n                            \"CForm\",\n                            {\n                              on: {\n                                submit: function($event) {\n                                  $event.preventDefault()\n                                  return _vm.processSubmit($event)\n                                }\n                              }\n                            },\n                            [\n                              _c(\n                                \"CRow\",\n                                [\n                                  _c(\n                                    \"CCol\",\n                                    { attrs: { md: \"6\" } },\n                                    [\n                                      _c(\"h3\", [\n                                        _vm._v(\n                                          _vm._s(\n                                            _vm.$t(\n                                              \"controllerConfig.form.wsServers.title\"\n                                            )\n                                          )\n                                        )\n                                      ]),\n                                      _vm._v(\" \"),\n                                      _c(\"ValidationProvider\", {\n                                        attrs: {\n                                          rules: \"required|ws_addr\",\n                                          \"custom-messages\": {\n                                            required:\n                                              \"controllerConfig.form.messages.missing.ws_api\",\n                                            ws_addr:\n                                              \"controllerConfig.form.messages.invalid.ws_format\"\n                                          }\n                                        },\n                                        scopedSlots: _vm._u(\n                                          [\n                                            {\n                                              key: \"default\",\n                                              fn: function(ref) {\n                                                var errors = ref.errors\n                                                var touched = ref.touched\n                                                var valid = ref.valid\n                                                return [\n                                                  _c(\"CInput\", {\n                                                    attrs: {\n                                                      label: _vm.$t(\n                                                        \"controllerConfig.form.wsServers.api\"\n                                                      ),\n                                                      \"is-valid\": touched\n                                                        ? valid\n                                                        : null,\n                                                      \"invalid-feedback\": _vm.$t(\n                                                        errors[0]\n                                                      )\n                                                    },\n                                                    model: {\n                                                      value:\n                                                        _vm.config.wsServers\n                                                          .api,\n                                                      callback: function($$v) {\n                                                        _vm.$set(\n                                                          _vm.config.wsServers,\n                                                          \"api\",\n                                                          $$v\n                                                        )\n                                                      },\n                                                      expression:\n                                                        \"config.wsServers.api\"\n                                                    }\n                                                  })\n                                                ]\n                                              }\n                                            }\n                                          ],\n                                          null,\n                                          true\n                                        )\n                                      }),\n                                      _vm._v(\" \"),\n                                      _c(\"ValidationProvider\", {\n                                        attrs: {\n                                          rules: \"required|ws_addr\",\n                                          \"custom-messages\": {\n                                            required:\n                                              \"controllerConfig.form.messages.missing.ws_monitor\",\n                                            ws_addr:\n                                              \"controllerConfig.form.messages.invalid.ws_format\"\n                                          }\n                                        },\n                                        scopedSlots: _vm._u(\n                                          [\n                                            {\n                                              key: \"default\",\n                                              fn: function(ref) {\n                                                var errors = ref.errors\n                                                var touched = ref.touched\n                                                var valid = ref.valid\n                                                return [\n                                                  _c(\"CInput\", {\n                                                    attrs: {\n                                                      label: _vm.$t(\n                                                        \"controllerConfig.form.wsServers.monitor\"\n                                                      ),\n                                                      \"is-valid\": touched\n                                                        ? valid\n                                                        : null,\n                                                      \"invalid-feedback\": _vm.$t(\n                                                        errors[0]\n                                                      )\n                                                    },\n                                                    model: {\n                                                      value:\n                                                        _vm.config.wsServers\n                                                          .monitor,\n                                                      callback: function($$v) {\n                                                        _vm.$set(\n                                                          _vm.config.wsServers,\n                                                          \"monitor\",\n                                                          $$v\n                                                        )\n                                                      },\n                                                      expression:\n                                                        \"config.wsServers.monitor\"\n                                                    }\n                                                  })\n                                                ]\n                                              }\n                                            }\n                                          ],\n                                          null,\n                                          true\n                                        )\n                                      })\n                                    ],\n                                    1\n                                  ),\n                                  _vm._v(\" \"),\n                                  _c(\n                                    \"CCol\",\n                                    { attrs: { md: \"6\" } },\n                                    [\n                                      _c(\"h3\", [\n                                        _vm._v(\n                                          _vm._s(\n                                            _vm.$t(\n                                              \"controllerConfig.form.logger.title\"\n                                            )\n                                          )\n                                        )\n                                      ]),\n                                      _vm._v(\" \"),\n                                      _c(\"ValidationProvider\", {\n                                        attrs: {\n                                          rules: \"required\",\n                                          \"custom-messages\": {\n                                            required:\n                                              \"controllerConfig.form.messages.missing.l_file\"\n                                          }\n                                        },\n                                        scopedSlots: _vm._u(\n                                          [\n                                            {\n                                              key: \"default\",\n                                              fn: function(ref) {\n                                                var errors = ref.errors\n                                                var touched = ref.touched\n                                                var valid = ref.valid\n                                                return [\n                                                  _c(\"CInput\", {\n                                                    attrs: {\n                                                      label: _vm.$t(\n                                                        \"controllerConfig.form.logger.filePath\"\n                                                      ),\n                                                      \"is-valid\": touched\n                                                        ? valid\n                                                        : null,\n                                                      \"invalid-feedback\": _vm.$t(\n                                                        errors[0]\n                                                      )\n                                                    },\n                                                    model: {\n                                                      value:\n                                                        _vm.config.logger\n                                                          .filePath,\n                                                      callback: function($$v) {\n                                                        _vm.$set(\n                                                          _vm.config.logger,\n                                                          \"filePath\",\n                                                          $$v\n                                                        )\n                                                      },\n                                                      expression:\n                                                        \"config.logger.filePath\"\n                                                    }\n                                                  })\n                                                ]\n                                              }\n                                            }\n                                          ],\n                                          null,\n                                          true\n                                        )\n                                      }),\n                                      _vm._v(\" \"),\n                                      _c(\"ValidationProvider\", {\n                                        attrs: {\n                                          rules: \"required\",\n                                          \"custom-messages\": {\n                                            required:\n                                              \"controllerConfig.form.messages.missing.l_severity\"\n                                          }\n                                        },\n                                        scopedSlots: _vm._u(\n                                          [\n                                            {\n                                              key: \"default\",\n                                              fn: function(ref) {\n                                                var valid = ref.valid\n                                                var touched = ref.touched\n                                                var errors = ref.errors\n                                                return [\n                                                  _c(\"CSelect\", {\n                                                    attrs: {\n                                                      value:\n                                                        _vm.config.logger\n                                                          .severity,\n                                                      options: [\n                                                        {\n                                                          value: \"trace\",\n                                                          label: \"Trace\"\n                                                        },\n                                                        {\n                                                          value: \"debug\",\n                                                          label: \"Debug\"\n                                                        },\n                                                        {\n                                                          value: \"info\",\n                                                          label: \"Info\"\n                                                        },\n                                                        {\n                                                          value: \"warning\",\n                                                          label: \"Warning\"\n                                                        },\n                                                        {\n                                                          value: \"error\",\n                                                          label: \"Error\"\n                                                        }\n                                                      ],\n                                                      label: _vm.$t(\n                                                        \"controllerConfig.form.logger.severity\"\n                                                      ),\n                                                      \"is-valid\": touched\n                                                        ? valid\n                                                        : null,\n                                                      \"invalid-feedback\": _vm.$t(\n                                                        errors[0]\n                                                      ),\n                                                      placeholder: _vm.$t(\n                                                        \"controllerConfig.form.messages.missing.l_severity\"\n                                                      )\n                                                    },\n                                                    on: {\n                                                      \"update:value\": function(\n                                                        $event\n                                                      ) {\n                                                        return _vm.$set(\n                                                          _vm.config.logger,\n                                                          \"severity\",\n                                                          $event\n                                                        )\n                                                      }\n                                                    }\n                                                  })\n                                                ]\n                                              }\n                                            }\n                                          ],\n                                          null,\n                                          true\n                                        )\n                                      })\n                                    ],\n                                    1\n                                  )\n                                ],\n                                1\n                              ),\n                              _c(\"hr\"),\n                              _vm._v(\" \"),\n                              _c(\n                                \"CRow\",\n                                [\n                                  _c(\n                                    \"CCol\",\n                                    { attrs: { md: \"6\" } },\n                                    [\n                                      _c(\"h3\", [\n                                        _vm._v(\n                                          _vm._s(\n                                            _vm.$t(\n                                              \"controllerConfig.form.resetButton.title\"\n                                            )\n                                          )\n                                        )\n                                      ]),\n                                      _vm._v(\" \"),\n                                      _c(\"CSelect\", {\n                                        attrs: {\n                                          value: _vm.config.resetButton.api,\n                                          options: [\n                                            {\n                                              value: \"autoNetwork\",\n                                              label: \"AutoNetwork\"\n                                            },\n                                            {\n                                              value: \"discovery\",\n                                              label: \"Discovery\"\n                                            }\n                                          ],\n                                          label: _vm.$t(\n                                            \"controllerConfig.form.resetButton.api\"\n                                          )\n                                        },\n                                        on: {\n                                          \"update:value\": function($event) {\n                                            return _vm.$set(\n                                              _vm.config.resetButton,\n                                              \"api\",\n                                              $event\n                                            )\n                                          }\n                                        }\n                                      }),\n                                      _c(\"hr\"),\n                                      _vm._v(\" \"),\n                                      _vm.config.resetButton.api ===\n                                      \"autoNetwork\"\n                                        ? _c(\n                                            \"div\",\n                                            [\n                                              _c(\"h3\", [\n                                                _vm._v(\n                                                  \"\\n\\t\\t\\t\\t\\t\\t\\t\\t\" +\n                                                    _vm._s(\n                                                      _vm.$t(\n                                                        \"controllerConfig.form.daemonApi.autoNetwork.title\"\n                                                      )\n                                                    ) +\n                                                    \"\\n\\t\\t\\t\\t\\t\\t\\t\"\n                                                )\n                                              ]),\n                                              _vm._v(\" \"),\n                                              _c(\"ValidationProvider\", {\n                                                attrs: {\n                                                  rules:\n                                                    \"required|integer|between:0,3\",\n                                                  \"custom-messages\": {\n                                                    integer:\n                                                      \"iqrfnet.networkManager.messages.invalid.integer\",\n                                                    required:\n                                                      \"iqrfnet.networkManager.messages.autoNetwork.actionRetries\",\n                                                    between:\n                                                      \"iqrfnet.networkManager.messages.autoNetwork.actionRetries\"\n                                                  }\n                                                },\n                                                scopedSlots: _vm._u(\n                                                  [\n                                                    {\n                                                      key: \"default\",\n                                                      fn: function(ref) {\n                                                        var errors = ref.errors\n                                                        var touched =\n                                                          ref.touched\n                                                        var valid = ref.valid\n                                                        return [\n                                                          _c(\"CInput\", {\n                                                            attrs: {\n                                                              type: \"number\",\n                                                              min: \"0\",\n                                                              max: \"3\",\n                                                              label: _vm.$t(\n                                                                \"iqrfnet.networkManager.autoNetwork.form.actionRetries\"\n                                                              ),\n                                                              \"is-valid\": touched\n                                                                ? valid\n                                                                : null,\n                                                              \"invalid-feedback\": _vm.$t(\n                                                                errors[0]\n                                                              )\n                                                            },\n                                                            model: {\n                                                              value:\n                                                                _vm.config\n                                                                  .daemonApi\n                                                                  .autoNetwork\n                                                                  .actionRetries,\n                                                              callback: function(\n                                                                $$v\n                                                              ) {\n                                                                _vm.$set(\n                                                                  _vm.config\n                                                                    .daemonApi\n                                                                    .autoNetwork,\n                                                                  \"actionRetries\",\n                                                                  _vm._n($$v)\n                                                                )\n                                                              },\n                                                              expression:\n                                                                \"config.daemonApi.autoNetwork.actionRetries\"\n                                                            }\n                                                          })\n                                                        ]\n                                                      }\n                                                    }\n                                                  ],\n                                                  null,\n                                                  true\n                                                )\n                                              }),\n                                              _vm._v(\" \"),\n                                              _c(\"CInputCheckbox\", {\n                                                attrs: {\n                                                  checked:\n                                                    _vm.config.daemonApi\n                                                      .autoNetwork\n                                                      .discoveryBeforeStart,\n                                                  label: _vm.$t(\n                                                    \"iqrfnet.networkManager.autoNetwork.form.discoveryBeforeStart\"\n                                                  )\n                                                },\n                                                on: {\n                                                  \"update:checked\": function(\n                                                    $event\n                                                  ) {\n                                                    return _vm.$set(\n                                                      _vm.config.daemonApi\n                                                        .autoNetwork,\n                                                      \"discoveryBeforeStart\",\n                                                      $event\n                                                    )\n                                                  }\n                                                }\n                                              }),\n                                              _vm._v(\" \"),\n                                              _c(\"ValidationProvider\", {\n                                                attrs: {\n                                                  rules:\n                                                    \"integer|required|between:0,7\",\n                                                  \"custom-messages\": {\n                                                    integer:\n                                                      \"iqrfnet.networkManager.messages.invalid.integer\",\n                                                    required:\n                                                      \"iqrfnet.networkManager.messages.discovery.txPower\",\n                                                    between:\n                                                      \"iqrfnet.networkManager.messages.discovery.txPower\"\n                                                  }\n                                                },\n                                                scopedSlots: _vm._u(\n                                                  [\n                                                    {\n                                                      key: \"default\",\n                                                      fn: function(ref) {\n                                                        var errors = ref.errors\n                                                        var touched =\n                                                          ref.touched\n                                                        var valid = ref.valid\n                                                        return [\n                                                          _c(\"CInput\", {\n                                                            attrs: {\n                                                              type: \"number\",\n                                                              min: \"0\",\n                                                              max: \"7\",\n                                                              label: _vm.$t(\n                                                                \"iqrfnet.networkManager.autoNetwork.form.discoveryTxPower\"\n                                                              ),\n                                                              \"is-valid\": touched\n                                                                ? valid\n                                                                : null,\n                                                              \"invalid-feedback\": _vm.$t(\n                                                                errors[0]\n                                                              )\n                                                            },\n                                                            model: {\n                                                              value:\n                                                                _vm.config\n                                                                  .daemonApi\n                                                                  .autoNetwork\n                                                                  .discoveryTxPower,\n                                                              callback: function(\n                                                                $$v\n                                                              ) {\n                                                                _vm.$set(\n                                                                  _vm.config\n                                                                    .daemonApi\n                                                                    .autoNetwork,\n                                                                  \"discoveryTxPower\",\n                                                                  _vm._n($$v)\n                                                                )\n                                                              },\n                                                              expression:\n                                                                \"config.daemonApi.autoNetwork.discoveryTxPower\"\n                                                            }\n                                                          })\n                                                        ]\n                                                      }\n                                                    }\n                                                  ],\n                                                  null,\n                                                  true\n                                                )\n                                              }),\n                                              _vm._v(\" \"),\n                                              _c(\"CInputCheckbox\", {\n                                                attrs: {\n                                                  checked:\n                                                    _vm.config.daemonApi\n                                                      .autoNetwork\n                                                      .skipDiscoveryEachWave,\n                                                  label: _vm.$t(\n                                                    \"iqrfnet.networkManager.autoNetwork.form.skipDiscoveryEachWave\"\n                                                  )\n                                                },\n                                                on: {\n                                                  \"update:checked\": function(\n                                                    $event\n                                                  ) {\n                                                    return _vm.$set(\n                                                      _vm.config.daemonApi\n                                                        .autoNetwork,\n                                                      \"skipDiscoveryEachWave\",\n                                                      $event\n                                                    )\n                                                  }\n                                                }\n                                              }),\n                                              _c(\"hr\"),\n                                              _vm._v(\" \"),\n                                              _c(\"h4\", [\n                                                _vm._v(\n                                                  \"\\n\\t\\t\\t\\t\\t\\t\\t\\t\" +\n                                                    _vm._s(\n                                                      _vm.$t(\n                                                        \"iqrfnet.networkManager.autoNetwork.form.stopConditions\"\n                                                      )\n                                                    ) +\n                                                    \"\\n\\t\\t\\t\\t\\t\\t\\t\"\n                                                )\n                                              ]),\n                                              _vm._v(\" \"),\n                                              _c(\"CInputCheckbox\", {\n                                                attrs: {\n                                                  checked:\n                                                    _vm.config.daemonApi\n                                                      .autoNetwork\n                                                      .stopConditions\n                                                      .abortOnTooManyNodesFound,\n                                                  label: _vm.$t(\n                                                    \"iqrfnet.networkManager.autoNetwork.form.abortOnTooManyNodesFound\"\n                                                  )\n                                                },\n                                                on: {\n                                                  \"update:checked\": function(\n                                                    $event\n                                                  ) {\n                                                    return _vm.$set(\n                                                      _vm.config.daemonApi\n                                                        .autoNetwork\n                                                        .stopConditions,\n                                                      \"abortOnTooManyNodesFound\",\n                                                      $event\n                                                    )\n                                                  }\n                                                }\n                                              }),\n                                              _vm._v(\" \"),\n                                              _c(\"ValidationProvider\", {\n                                                attrs: {\n                                                  rules:\n                                                    \"integer|required|between:1,127\",\n                                                  \"custom-messages\": {\n                                                    integer:\n                                                      \"iqrfnet.networkManager.messages.invalid.integer\",\n                                                    required:\n                                                      \"iqrfnet.networkManager.messages.autoNetwork.emptyWaves\",\n                                                    between:\n                                                      \"iqrfnet.networkManager.messages.autoNetwork.emptyWaves\"\n                                                  }\n                                                },\n                                                scopedSlots: _vm._u(\n                                                  [\n                                                    {\n                                                      key: \"default\",\n                                                      fn: function(ref) {\n                                                        var errors = ref.errors\n                                                        var touched =\n                                                          ref.touched\n                                                        var valid = ref.valid\n                                                        return [\n                                                          _c(\"CInput\", {\n                                                            attrs: {\n                                                              type: \"number\",\n                                                              min: \"1\",\n                                                              max: \"127\",\n                                                              label: _vm.$t(\n                                                                \"iqrfnet.networkManager.autoNetwork.form.emptyWaves\"\n                                                              ),\n                                                              \"is-valid\": touched\n                                                                ? valid\n                                                                : null,\n                                                              \"invalid-feedback\": _vm.$t(\n                                                                errors[0]\n                                                              )\n                                                            },\n                                                            model: {\n                                                              value:\n                                                                _vm.config\n                                                                  .daemonApi\n                                                                  .autoNetwork\n                                                                  .stopConditions\n                                                                  .emptyWaves,\n                                                              callback: function(\n                                                                $$v\n                                                              ) {\n                                                                _vm.$set(\n                                                                  _vm.config\n                                                                    .daemonApi\n                                                                    .autoNetwork\n                                                                    .stopConditions,\n                                                                  \"emptyWaves\",\n                                                                  _vm._n($$v)\n                                                                )\n                                                              },\n                                                              expression:\n                                                                \"config.daemonApi.autoNetwork.stopConditions.emptyWaves\"\n                                                            }\n                                                          })\n                                                        ]\n                                                      }\n                                                    }\n                                                  ],\n                                                  null,\n                                                  true\n                                                )\n                                              }),\n                                              _vm._v(\" \"),\n                                              _c(\"ValidationProvider\", {\n                                                attrs: {\n                                                  rules:\n                                                    \"integer|required|between:1,127\",\n                                                  \"custom-messages\": {\n                                                    integer:\n                                                      \"iqrfnet.networkManager.messages.invalid.integer\",\n                                                    required:\n                                                      \"iqrfnet.networkManager.messages.autoNetwork.waves\",\n                                                    between:\n                                                      \"iqrfnet.networkManager.messages.autoNetwork.waves\"\n                                                  }\n                                                },\n                                                scopedSlots: _vm._u(\n                                                  [\n                                                    {\n                                                      key: \"default\",\n                                                      fn: function(ref) {\n                                                        var errors = ref.errors\n                                                        var touched =\n                                                          ref.touched\n                                                        var valid = ref.valid\n                                                        return [\n                                                          _c(\"CInput\", {\n                                                            attrs: {\n                                                              type: \"number\",\n                                                              min: \"1\",\n                                                              max: \"127\",\n                                                              label: _vm.$t(\n                                                                \"iqrfnet.networkManager.autoNetwork.form.waves\"\n                                                              ),\n                                                              \"is-valid\": touched\n                                                                ? valid\n                                                                : null,\n                                                              \"invalid-feedback\": _vm.$t(\n                                                                errors[0]\n                                                              )\n                                                            },\n                                                            model: {\n                                                              value:\n                                                                _vm.config\n                                                                  .daemonApi\n                                                                  .autoNetwork\n                                                                  .stopConditions\n                                                                  .waves,\n                                                              callback: function(\n                                                                $$v\n                                                              ) {\n                                                                _vm.$set(\n                                                                  _vm.config\n                                                                    .daemonApi\n                                                                    .autoNetwork\n                                                                    .stopConditions,\n                                                                  \"waves\",\n                                                                  _vm._n($$v)\n                                                                )\n                                                              },\n                                                              expression:\n                                                                \"config.daemonApi.autoNetwork.stopConditions.waves\"\n                                                            }\n                                                          })\n                                                        ]\n                                                      }\n                                                    }\n                                                  ],\n                                                  null,\n                                                  true\n                                                )\n                                              }),\n                                              _c(\"hr\"),\n                                              _vm._v(\" \"),\n                                              _c(\"CInputCheckbox\", {\n                                                attrs: {\n                                                  checked:\n                                                    _vm.config.daemonApi\n                                                      .autoNetwork\n                                                      .returnVerbose,\n                                                  label: _vm.$t(\n                                                    \"controllerConfig.form.daemonApi.autoNetwork.verbose\"\n                                                  )\n                                                },\n                                                on: {\n                                                  \"update:checked\": function(\n                                                    $event\n                                                  ) {\n                                                    return _vm.$set(\n                                                      _vm.config.daemonApi\n                                                        .autoNetwork,\n                                                      \"returnVerbose\",\n                                                      $event\n                                                    )\n                                                  }\n                                                }\n                                              })\n                                            ],\n                                            1\n                                          )\n                                        : _vm.config.resetButton.api ===\n                                          \"discovery\"\n                                        ? _c(\n                                            \"div\",\n                                            [\n                                              _c(\"h3\", [\n                                                _vm._v(\n                                                  \"\\n\\t\\t\\t\\t\\t\\t\\t\\t\" +\n                                                    _vm._s(\n                                                      _vm.$t(\n                                                        \"controllerConfig.form.daemonApi.discovery.title\"\n                                                      )\n                                                    ) +\n                                                    \"\\n\\t\\t\\t\\t\\t\\t\\t\"\n                                                )\n                                              ]),\n                                              _vm._v(\" \"),\n                                              _c(\"ValidationProvider\", {\n                                                attrs: {\n                                                  rules:\n                                                    \"integer|required|between:0,239\",\n                                                  \"custom-messages\": {\n                                                    between:\n                                                      \"iqrfnet.networkManager.messages.discovery.maxAddr\",\n                                                    integer:\n                                                      \"iqrfnet.networkManager.messages.invalid.integer\",\n                                                    required:\n                                                      \"iqrfnet.networkManager.messages.discovery.maxAddr\"\n                                                  }\n                                                },\n                                                scopedSlots: _vm._u(\n                                                  [\n                                                    {\n                                                      key: \"default\",\n                                                      fn: function(ref) {\n                                                        var errors = ref.errors\n                                                        var touched =\n                                                          ref.touched\n                                                        var valid = ref.valid\n                                                        return [\n                                                          _c(\"CInput\", {\n                                                            attrs: {\n                                                              type: \"number\",\n                                                              min: \"0\",\n                                                              max: \"239\",\n                                                              label: _vm.$t(\n                                                                \"iqrfnet.networkManager.discovery.form.maxAddr\"\n                                                              ),\n                                                              \"is-valid\": touched\n                                                                ? valid\n                                                                : null,\n                                                              \"invalid-feedback\": _vm.$t(\n                                                                errors[0]\n                                                              )\n                                                            },\n                                                            model: {\n                                                              value:\n                                                                _vm.config\n                                                                  .daemonApi\n                                                                  .discovery\n                                                                  .maxAddr,\n                                                              callback: function(\n                                                                $$v\n                                                              ) {\n                                                                _vm.$set(\n                                                                  _vm.config\n                                                                    .daemonApi\n                                                                    .discovery,\n                                                                  \"maxAddr\",\n                                                                  _vm._n($$v)\n                                                                )\n                                                              },\n                                                              expression:\n                                                                \"config.daemonApi.discovery.maxAddr\"\n                                                            }\n                                                          })\n                                                        ]\n                                                      }\n                                                    }\n                                                  ],\n                                                  null,\n                                                  true\n                                                )\n                                              }),\n                                              _vm._v(\" \"),\n                                              _c(\"ValidationProvider\", {\n                                                attrs: {\n                                                  rules:\n                                                    \"integer|required|between:0,7\",\n                                                  \"custom-messages\": {\n                                                    integer:\n                                                      \"iqrfnet.networkManager.messages.invalid.integer\",\n                                                    required:\n                                                      \"iqrfnet.networkManager.messages.discovery.txPower\",\n                                                    between:\n                                                      \"iqrfnet.networkManager.messages.discovery.txPower\"\n                                                  }\n                                                },\n                                                scopedSlots: _vm._u(\n                                                  [\n                                                    {\n                                                      key: \"default\",\n                                                      fn: function(ref) {\n                                                        var errors = ref.errors\n                                                        var touched =\n                                                          ref.touched\n                                                        var valid = ref.valid\n                                                        return [\n                                                          _c(\"CInput\", {\n                                                            attrs: {\n                                                              type: \"number\",\n                                                              min: \"0\",\n                                                              max: \"7\",\n                                                              label: _vm.$t(\n                                                                \"iqrfnet.networkManager.discovery.form.txPower\"\n                                                              ),\n                                                              \"is-valid\": touched\n                                                                ? valid\n                                                                : null,\n                                                              \"invalid-feedback\": _vm.$t(\n                                                                errors[0]\n                                                              )\n                                                            },\n                                                            model: {\n                                                              value:\n                                                                _vm.config\n                                                                  .daemonApi\n                                                                  .discovery\n                                                                  .txPower,\n                                                              callback: function(\n                                                                $$v\n                                                              ) {\n                                                                _vm.$set(\n                                                                  _vm.config\n                                                                    .daemonApi\n                                                                    .discovery,\n                                                                  \"txPower\",\n                                                                  _vm._n($$v)\n                                                                )\n                                                              },\n                                                              expression:\n                                                                \"config.daemonApi.discovery.txPower\"\n                                                            }\n                                                          })\n                                                        ]\n                                                      }\n                                                    }\n                                                  ],\n                                                  null,\n                                                  true\n                                                )\n                                              }),\n                                              _vm._v(\" \"),\n                                              _c(\"CInputCheckbox\", {\n                                                attrs: {\n                                                  checked:\n                                                    _vm.config.daemonApi\n                                                      .discovery.returnVerbose,\n                                                  label: _vm.$t(\n                                                    \"controllerConfig.form.daemonApi.discovery.verbose\"\n                                                  )\n                                                },\n                                                on: {\n                                                  \"update:checked\": function(\n                                                    $event\n                                                  ) {\n                                                    return _vm.$set(\n                                                      _vm.config.daemonApi\n                                                        .discovery,\n                                                      \"returnVerbose\",\n                                                      $event\n                                                    )\n                                                  }\n                                                }\n                                              })\n                                            ],\n                                            1\n                                          )\n                                        : _vm._e()\n                                    ],\n                                    1\n                                  ),\n                                  _vm._v(\" \"),\n                                  _c(\n                                    \"CCol\",\n                                    { attrs: { md: \"6\" } },\n                                    [\n                                      _c(\"h3\", [\n                                        _vm._v(\n                                          _vm._s(\n                                            _vm.$t(\n                                              \"controllerConfig.form.factoryReset.title\"\n                                            )\n                                          )\n                                        )\n                                      ]),\n                                      _vm._v(\" \"),\n                                      _c(\"CInputCheckbox\", {\n                                        attrs: {\n                                          checked:\n                                            _vm.config.factoryReset.coordinator,\n                                          label: _vm.$t(\n                                            \"controllerConfig.form.factoryReset.coordinator\"\n                                          )\n                                        },\n                                        on: {\n                                          \"update:checked\": function($event) {\n                                            return _vm.$set(\n                                              _vm.config.factoryReset,\n                                              \"coordinator\",\n                                              $event\n                                            )\n                                          }\n                                        }\n                                      }),\n                                      _vm._v(\" \"),\n                                      _c(\"CInputCheckbox\", {\n                                        attrs: {\n                                          checked:\n                                            _vm.config.factoryReset.daemon,\n                                          label: _vm.$t(\n                                            \"controllerConfig.form.factoryReset.daemon\"\n                                          )\n                                        },\n                                        on: {\n                                          \"update:checked\": function($event) {\n                                            return _vm.$set(\n                                              _vm.config.factoryReset,\n                                              \"daemon\",\n                                              $event\n                                            )\n                                          }\n                                        }\n                                      }),\n                                      _vm._v(\" \"),\n                                      _c(\"CInputCheckbox\", {\n                                        attrs: {\n                                          checked:\n                                            _vm.config.factoryReset.network,\n                                          label: _vm.$t(\n                                            \"controllerConfig.form.factoryReset.network\"\n                                          )\n                                        },\n                                        on: {\n                                          \"update:checked\": function($event) {\n                                            return _vm.$set(\n                                              _vm.config.factoryReset,\n                                              \"network\",\n                                              $event\n                                            )\n                                          }\n                                        }\n                                      }),\n                                      _vm._v(\" \"),\n                                      _c(\"CInputCheckbox\", {\n                                        attrs: {\n                                          checked:\n                                            _vm.config.factoryReset.webapp,\n                                          label: _vm.$t(\n                                            \"controllerConfig.form.factoryReset.webapp\"\n                                          )\n                                        },\n                                        on: {\n                                          \"update:checked\": function($event) {\n                                            return _vm.$set(\n                                              _vm.config.factoryReset,\n                                              \"webapp\",\n                                              $event\n                                            )\n                                          }\n                                        }\n                                      })\n                                    ],\n                                    1\n                                  )\n                                ],\n                                1\n                              ),\n                              _vm._v(\" \"),\n                              _c(\n                                \"CButton\",\n                                {\n                                  attrs: {\n                                    color: \"primary\",\n                                    type: \"submit\",\n                                    disabled: invalid\n                                  }\n                                },\n                                [\n                                  _vm._v(\n                                    \"\\n\\t\\t\\t\\t\\t\" +\n                                      _vm._s(_vm.$t(\"forms.save\")) +\n                                      \"\\n\\t\\t\\t\\t\"\n                                  )\n                                ]\n                              )\n                            ],\n                            1\n                          )\n                        ]\n                      }\n                    }\n                  ],\n                  null,\n                  false,\n                  303612668\n                )\n              })\n            : _vm._e()\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","<template>\n\t<div>\n\t\t<CCard body-wrapper>\n\t\t\t<ValidationObserver v-if='config !== null' v-slot='{ invalid }'>\n\t\t\t\t<CForm @submit.prevent='processSubmit'>\n\t\t\t\t\t<CRow>\n\t\t\t\t\t\t<CCol md='6'>\n\t\t\t\t\t\t\t<h3>{{ $t(\"controllerConfig.form.wsServers.title\") }}</h3>\n\t\t\t\t\t\t\t<ValidationProvider\n\t\t\t\t\t\t\t\tv-slot='{ errors, touched, valid }'\n\t\t\t\t\t\t\t\trules='required|ws_addr'\n\t\t\t\t\t\t\t\t:custom-messages='{\n\t\t\t\t\t\t\t\t\trequired: \"controllerConfig.form.messages.missing.ws_api\",\n\t\t\t\t\t\t\t\t\tws_addr: \"controllerConfig.form.messages.invalid.ws_format\"\n\t\t\t\t\t\t\t\t}'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<CInput\n\t\t\t\t\t\t\t\t\tv-model='config.wsServers.api'\n\t\t\t\t\t\t\t\t\t:label='$t(\"controllerConfig.form.wsServers.api\")'\n\t\t\t\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</ValidationProvider>\n\t\t\t\t\t\t\t<ValidationProvider\n\t\t\t\t\t\t\t\tv-slot='{ errors, touched, valid }'\n\t\t\t\t\t\t\t\trules='required|ws_addr'\n\t\t\t\t\t\t\t\t:custom-messages='{\n\t\t\t\t\t\t\t\t\trequired: \"controllerConfig.form.messages.missing.ws_monitor\",\n\t\t\t\t\t\t\t\t\tws_addr: \"controllerConfig.form.messages.invalid.ws_format\"\n\t\t\t\t\t\t\t\t}'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<CInput\n\t\t\t\t\t\t\t\t\tv-model='config.wsServers.monitor'\n\t\t\t\t\t\t\t\t\t:label='$t(\"controllerConfig.form.wsServers.monitor\")'\n\t\t\t\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</ValidationProvider>\n\t\t\t\t\t\t</CCol>\n\t\t\t\t\t\t<CCol md='6'>\n\t\t\t\t\t\t\t<h3>{{ $t(\"controllerConfig.form.logger.title\") }}</h3>\n\t\t\t\t\t\t\t<ValidationProvider\n\t\t\t\t\t\t\t\tv-slot='{ errors, touched, valid }'\n\t\t\t\t\t\t\t\trules='required'\n\t\t\t\t\t\t\t\t:custom-messages='{required: \"controllerConfig.form.messages.missing.l_file\"}'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<CInput\n\t\t\t\t\t\t\t\t\tv-model='config.logger.filePath'\n\t\t\t\t\t\t\t\t\t:label='$t(\"controllerConfig.form.logger.filePath\")'\n\t\t\t\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</ValidationProvider>\n\t\t\t\t\t\t\t<ValidationProvider\n\t\t\t\t\t\t\t\tv-slot='{ valid, touched, errors }'\n\t\t\t\t\t\t\t\trules='required'\n\t\t\t\t\t\t\t\t:custom-messages='{\n\t\t\t\t\t\t\t\t\trequired: \"controllerConfig.form.messages.missing.l_severity\",\n\t\t\t\t\t\t\t\t}'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<CSelect\n\t\t\t\t\t\t\t\t\t:value.sync='config.logger.severity'\n\t\t\t\t\t\t\t\t\t:options='[\n\t\t\t\t\t\t\t\t\t\t{value: \"trace\", label: \"Trace\"},\n\t\t\t\t\t\t\t\t\t\t{value: \"debug\", label: \"Debug\"},\n\t\t\t\t\t\t\t\t\t\t{value: \"info\", label: \"Info\"},\n\t\t\t\t\t\t\t\t\t\t{value: \"warning\", label: \"Warning\"},\n\t\t\t\t\t\t\t\t\t\t{value: \"error\", label: \"Error\"}\n\t\t\t\t\t\t\t\t\t]'\n\t\t\t\t\t\t\t\t\t:label='$t(\"controllerConfig.form.logger.severity\")'\n\t\t\t\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\t\t\t\t:placeholder='$t(\"controllerConfig.form.messages.missing.l_severity\")'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</ValidationProvider>\n\t\t\t\t\t\t</CCol>\n\t\t\t\t\t</CRow><hr>\n\t\t\t\t\t<CRow>\n\t\t\t\t\t\t<CCol md='6'>\n\t\t\t\t\t\t\t<h3>{{ $t(\"controllerConfig.form.resetButton.title\") }}</h3>\n\t\t\t\t\t\t\t<CSelect\n\t\t\t\t\t\t\t\t:value.sync='config.resetButton.api'\n\t\t\t\t\t\t\t\t:options='[\n\t\t\t\t\t\t\t\t\t{value: \"autoNetwork\", label: \"AutoNetwork\"},\n\t\t\t\t\t\t\t\t\t{value: \"discovery\", label: \"Discovery\"},\n\t\t\t\t\t\t\t\t]'\n\t\t\t\t\t\t\t\t:label='$t(\"controllerConfig.form.resetButton.api\")'\n\t\t\t\t\t\t\t/><hr>\n\t\t\t\t\t\t\t<div v-if='config.resetButton.api === \"autoNetwork\"'>\n\t\t\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t\t\t{{ $t(\"controllerConfig.form.daemonApi.autoNetwork.title\") }}\n\t\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t\t<ValidationProvider\n\t\t\t\t\t\t\t\t\tv-slot='{ errors, touched, valid }'\n\t\t\t\t\t\t\t\t\trules='required|integer|between:0,3'\n\t\t\t\t\t\t\t\t\t:custom-messages='{\n\t\t\t\t\t\t\t\t\t\tinteger: \"iqrfnet.networkManager.messages.invalid.integer\",\n\t\t\t\t\t\t\t\t\t\trequired: \"iqrfnet.networkManager.messages.autoNetwork.actionRetries\",\n\t\t\t\t\t\t\t\t\t\tbetween: \"iqrfnet.networkManager.messages.autoNetwork.actionRetries\"\n\t\t\t\t\t\t\t\t\t}'\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<CInput\n\t\t\t\t\t\t\t\t\t\tv-model.number='config.daemonApi.autoNetwork.actionRetries'\n\t\t\t\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t\t\t\tmin='0'\n\t\t\t\t\t\t\t\t\t\tmax='3'\n\t\t\t\t\t\t\t\t\t\t:label='$t(\"iqrfnet.networkManager.autoNetwork.form.actionRetries\")'\n\t\t\t\t\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</ValidationProvider>\n\t\t\t\t\t\t\t\t<CInputCheckbox\n\t\t\t\t\t\t\t\t\t:checked.sync='config.daemonApi.autoNetwork.discoveryBeforeStart'\n\t\t\t\t\t\t\t\t\t:label='$t(\"iqrfnet.networkManager.autoNetwork.form.discoveryBeforeStart\")'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<ValidationProvider\n\t\t\t\t\t\t\t\t\tv-slot='{ errors, touched, valid }'\n\t\t\t\t\t\t\t\t\trules='integer|required|between:0,7'\n\t\t\t\t\t\t\t\t\t:custom-messages='{\n\t\t\t\t\t\t\t\t\t\tinteger: \"iqrfnet.networkManager.messages.invalid.integer\",\n\t\t\t\t\t\t\t\t\t\trequired: \"iqrfnet.networkManager.messages.discovery.txPower\",\n\t\t\t\t\t\t\t\t\t\tbetween: \"iqrfnet.networkManager.messages.discovery.txPower\"\n\t\t\t\t\t\t\t\t\t}'\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<CInput\n\t\t\t\t\t\t\t\t\t\tv-model.number='config.daemonApi.autoNetwork.discoveryTxPower'\n\t\t\t\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t\t\t\tmin='0'\n\t\t\t\t\t\t\t\t\t\tmax='7'\n\t\t\t\t\t\t\t\t\t\t:label='$t(\"iqrfnet.networkManager.autoNetwork.form.discoveryTxPower\")'\n\t\t\t\t\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</ValidationProvider>\n\t\t\t\t\t\t\t\t<CInputCheckbox\n\t\t\t\t\t\t\t\t\t:checked.sync='config.daemonApi.autoNetwork.skipDiscoveryEachWave'\n\t\t\t\t\t\t\t\t\t:label='$t(\"iqrfnet.networkManager.autoNetwork.form.skipDiscoveryEachWave\")'\n\t\t\t\t\t\t\t\t/><hr>\n\t\t\t\t\t\t\t\t<h4>\n\t\t\t\t\t\t\t\t\t{{ $t(\"iqrfnet.networkManager.autoNetwork.form.stopConditions\") }}\n\t\t\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t\t\t<CInputCheckbox\n\t\t\t\t\t\t\t\t\t:checked.sync='config.daemonApi.autoNetwork.stopConditions.abortOnTooManyNodesFound'\n\t\t\t\t\t\t\t\t\t:label='$t(\"iqrfnet.networkManager.autoNetwork.form.abortOnTooManyNodesFound\")'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<ValidationProvider\n\t\t\t\t\t\t\t\t\tv-slot='{ errors, touched, valid }'\n\t\t\t\t\t\t\t\t\trules='integer|required|between:1,127'\n\t\t\t\t\t\t\t\t\t:custom-messages='{\n\t\t\t\t\t\t\t\t\t\tinteger: \"iqrfnet.networkManager.messages.invalid.integer\",\n\t\t\t\t\t\t\t\t\t\trequired: \"iqrfnet.networkManager.messages.autoNetwork.emptyWaves\",\n\t\t\t\t\t\t\t\t\t\tbetween: \"iqrfnet.networkManager.messages.autoNetwork.emptyWaves\"\n\t\t\t\t\t\t\t\t\t}'\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<CInput\n\t\t\t\t\t\t\t\t\t\tv-model.number='config.daemonApi.autoNetwork.stopConditions.emptyWaves'\n\t\t\t\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t\t\t\tmin='1'\n\t\t\t\t\t\t\t\t\t\tmax='127'\n\t\t\t\t\t\t\t\t\t\t:label='$t(\"iqrfnet.networkManager.autoNetwork.form.emptyWaves\")'\n\t\t\t\t\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</ValidationProvider>\n\t\t\t\t\t\t\t\t<ValidationProvider\n\t\t\t\t\t\t\t\t\tv-slot='{ errors, touched, valid }'\n\t\t\t\t\t\t\t\t\trules='integer|required|between:1,127'\n\t\t\t\t\t\t\t\t\t:custom-messages='{\n\t\t\t\t\t\t\t\t\t\tinteger: \"iqrfnet.networkManager.messages.invalid.integer\",\n\t\t\t\t\t\t\t\t\t\trequired: \"iqrfnet.networkManager.messages.autoNetwork.waves\",\n\t\t\t\t\t\t\t\t\t\tbetween: \"iqrfnet.networkManager.messages.autoNetwork.waves\"\n\t\t\t\t\t\t\t\t\t}'\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<CInput\n\t\t\t\t\t\t\t\t\t\tv-model.number='config.daemonApi.autoNetwork.stopConditions.waves'\n\t\t\t\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t\t\t\tmin='1'\n\t\t\t\t\t\t\t\t\t\tmax='127'\n\t\t\t\t\t\t\t\t\t\t:label='$t(\"iqrfnet.networkManager.autoNetwork.form.waves\")'\n\t\t\t\t\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</ValidationProvider><hr>\n\t\t\t\t\t\t\t\t<CInputCheckbox\n\t\t\t\t\t\t\t\t\t:checked.sync='config.daemonApi.autoNetwork.returnVerbose'\n\t\t\t\t\t\t\t\t\t:label='$t(\"controllerConfig.form.daemonApi.autoNetwork.verbose\")'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div v-else-if='config.resetButton.api === \"discovery\"'>\n\t\t\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t\t\t{{ $t(\"controllerConfig.form.daemonApi.discovery.title\") }}\n\t\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t\t<ValidationProvider\n\t\t\t\t\t\t\t\t\tv-slot='{ errors, touched, valid }'\n\t\t\t\t\t\t\t\t\trules='integer|required|between:0,239'\n\t\t\t\t\t\t\t\t\t:custom-messages='{\n\t\t\t\t\t\t\t\t\t\tbetween: \"iqrfnet.networkManager.messages.discovery.maxAddr\",\n\t\t\t\t\t\t\t\t\t\tinteger: \"iqrfnet.networkManager.messages.invalid.integer\",\n\t\t\t\t\t\t\t\t\t\trequired: \"iqrfnet.networkManager.messages.discovery.maxAddr\"\n\t\t\t\t\t\t\t\t\t}'\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<CInput\n\t\t\t\t\t\t\t\t\t\tv-model.number='config.daemonApi.discovery.maxAddr'\n\t\t\t\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t\t\t\tmin='0'\n\t\t\t\t\t\t\t\t\t\tmax='239'\n\t\t\t\t\t\t\t\t\t\t:label='$t(\"iqrfnet.networkManager.discovery.form.maxAddr\")'\n\t\t\t\t\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</ValidationProvider>\n\t\t\t\t\t\t\t\t<ValidationProvider\n\t\t\t\t\t\t\t\t\tv-slot='{ errors, touched, valid }'\n\t\t\t\t\t\t\t\t\trules='integer|required|between:0,7'\n\t\t\t\t\t\t\t\t\t:custom-messages='{\n\t\t\t\t\t\t\t\t\t\tinteger: \"iqrfnet.networkManager.messages.invalid.integer\",\n\t\t\t\t\t\t\t\t\t\trequired: \"iqrfnet.networkManager.messages.discovery.txPower\",\n\t\t\t\t\t\t\t\t\t\tbetween: \"iqrfnet.networkManager.messages.discovery.txPower\"\n\t\t\t\t\t\t\t\t\t}'\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<CInput\n\t\t\t\t\t\t\t\t\t\tv-model.number='config.daemonApi.discovery.txPower'\n\t\t\t\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t\t\t\tmin='0'\n\t\t\t\t\t\t\t\t\t\tmax='7'\n\t\t\t\t\t\t\t\t\t\t:label='$t(\"iqrfnet.networkManager.discovery.form.txPower\")'\n\t\t\t\t\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</ValidationProvider>\n\t\t\t\t\t\t\t\t<CInputCheckbox\n\t\t\t\t\t\t\t\t\t:checked.sync='config.daemonApi.discovery.returnVerbose'\n\t\t\t\t\t\t\t\t\t:label='$t(\"controllerConfig.form.daemonApi.discovery.verbose\")'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</CCol>\n\t\t\t\t\t\t<CCol md='6'>\n\t\t\t\t\t\t\t<h3>{{ $t(\"controllerConfig.form.factoryReset.title\") }}</h3>\n\t\t\t\t\t\t\t<CInputCheckbox\n\t\t\t\t\t\t\t\t:checked.sync='config.factoryReset.coordinator'\n\t\t\t\t\t\t\t\t:label='$t(\"controllerConfig.form.factoryReset.coordinator\")'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<CInputCheckbox\n\t\t\t\t\t\t\t\t:checked.sync='config.factoryReset.daemon'\n\t\t\t\t\t\t\t\t:label='$t(\"controllerConfig.form.factoryReset.daemon\")'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<CInputCheckbox\n\t\t\t\t\t\t\t\t:checked.sync='config.factoryReset.network'\n\t\t\t\t\t\t\t\t:label='$t(\"controllerConfig.form.factoryReset.network\")'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<CInputCheckbox\n\t\t\t\t\t\t\t\t:checked.sync='config.factoryReset.webapp'\n\t\t\t\t\t\t\t\t:label='$t(\"controllerConfig.form.factoryReset.webapp\")'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</CCol>\n\t\t\t\t\t</CRow>\n\t\t\t\t\t<CButton color='primary' type='submit' :disabled='invalid'>\n\t\t\t\t\t\t{{ $t('forms.save') }}\n\t\t\t\t\t</CButton>\n\t\t\t\t</CForm>\n\t\t\t</ValidationObserver>\n\t\t</CCard>\n\t</div>\n</template>\n\n<script>\nimport {CButton, CCard , CForm, CInput, CInputCheckbox, CSelect} from '@coreui/vue/src';\nimport {extend, ValidationObserver, ValidationProvider} from 'vee-validate';\nimport {between, integer, required} from 'vee-validate/dist/rules';\nimport FormErrorHandler from '../../helpers/FormErrorHandler';\nimport FeatureConfigService from '../../services/FeatureConfigService';\n\nexport default {\n\tname: 'ControllerConfig',\n\tcomponents: {\n\t\tCButton,\n\t\tCCard,\n\t\tCForm,\n\t\tCInput,\n\t\tCInputCheckbox,\n\t\tCSelect,\n\t\tValidationObserver,\n\t\tValidationProvider\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tname: 'controller',\n\t\t\tconfig: null,\n\t\t};\n\t},\n\tcreated() {\n\t\textend('between', between);\n\t\textend('integer', integer);\n\t\textend('required', required);\n\t\textend('ws_addr', (addr) => {\n\t\t\tconst regex = RegExp('^ws:\\\\/\\\\/.+:([1-9]|[1-9][0-9]|[1-9][0-9]{2}|[1-9][0-9]{3}|[1-4][0-9][0-1][0-5][0-1])$');\n\t\t\treturn regex.test(addr);\n\t\t});\n\t\tthis.getConfig();\n\t},\n\tmethods: {\n\t\tgetConfig() {\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\tFeatureConfigService.getConfig(this.name)\n\t\t\t\t.then((response) => {\n\t\t\t\t\tthis.$store.commit('spinner/HIDE');\n\t\t\t\t\tthis.config = response.data;\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tFormErrorHandler.configError(error);\n\t\t\t\t});\n\t\t},\n\t\tprocessSubmit() {\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\tFeatureConfigService.saveConfig(this.name, this.config)\n\t\t\t\t.then(() => {\n\t\t\t\t\tthis.$store.commit('spinner/HIDE');\n\t\t\t\t\tthis.$toast.success(this.$t('forms.messages.saveSuccess').toString());\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tFormErrorHandler.configError(error);\n\t\t\t\t});\n\t\t},\n\t},\n\tbeforeRouteEnter(to, from, next) {\n\t\tnext(vm => {\n\t\t\tif (!vm.$store.getters['features/isEnabled']('iqrfGatewayController')) {\n\t\t\t\tvm.$toast.error(\n\t\t\t\t\tvm.$t('controllerConfig.messages.disabled').toString()\n\t\t\t\t);\n\t\t\t\tvm.$router.push(from.path);\n\t\t\t}\n\t\t});\n\t},\n\tmetaInfo: {\n\t\ttitle: 'controllerConfig.description',\n\t},\n};\n</script>\n","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ControllerConfig.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ControllerConfig.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ControllerConfig.vue?vue&type=template&id=0ff85c28&\"\nimport script from \"./ControllerConfig.vue?vue&type=script&lang=js&\"\nexport * from \"./ControllerConfig.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('0ff85c28')) {\n      api.createRecord('0ff85c28', component.options)\n    } else {\n      api.reload('0ff85c28', component.options)\n    }\n    module.hot.accept(\"./ControllerConfig.vue?vue&type=template&id=0ff85c28&\", function () {\n      api.rerender('0ff85c28', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/pages/Config/ControllerConfig.vue\"\nexport default component.exports","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"CCard\",\n    { attrs: { \"body-wrapper\": \"\" } },\n    [\n      _vm.config !== null\n        ? _c(\"ValidationObserver\", {\n            scopedSlots: _vm._u(\n              [\n                {\n                  key: \"default\",\n                  fn: function(ref) {\n                    var invalid = ref.invalid\n                    return [\n                      _c(\n                        \"CForm\",\n                        {\n                          on: {\n                            submit: function($event) {\n                              $event.preventDefault()\n                              return _vm.processSubmit($event)\n                            }\n                          }\n                        },\n                        [\n                          _c(\"ValidationProvider\", {\n                            attrs: {\n                              rules: \"addr|required\",\n                              \"custom-messages\": {\n                                addr:\n                                  \"config.mender.form.messages.invalid.server\",\n                                required:\n                                  \"config.mender.form.messages.missing.server\"\n                              }\n                            },\n                            scopedSlots: _vm._u(\n                              [\n                                {\n                                  key: \"default\",\n                                  fn: function(ref) {\n                                    var errors = ref.errors\n                                    var touched = ref.touched\n                                    var valid = ref.valid\n                                    return [\n                                      _c(\"CInput\", {\n                                        attrs: {\n                                          label: _vm.$t(\n                                            \"config.mender.form.server\"\n                                          ),\n                                          \"is-valid\": touched ? valid : null,\n                                          \"invalid-feedback\": _vm.$t(errors[0])\n                                        },\n                                        model: {\n                                          value: _vm.config.ServerURL,\n                                          callback: function($$v) {\n                                            _vm.$set(\n                                              _vm.config,\n                                              \"ServerURL\",\n                                              $$v\n                                            )\n                                          },\n                                          expression: \"config.ServerURL\"\n                                        }\n                                      })\n                                    ]\n                                  }\n                                }\n                              ],\n                              null,\n                              true\n                            )\n                          }),\n                          _vm._v(\" \"),\n                          _c(\"ValidationProvider\", {\n                            attrs: {\n                              rules: \"required\",\n                              \"custom-messages\": {\n                                required:\n                                  \"config.mender.form.messages.missing.tenantToken\"\n                              }\n                            },\n                            scopedSlots: _vm._u(\n                              [\n                                {\n                                  key: \"default\",\n                                  fn: function(ref) {\n                                    var errors = ref.errors\n                                    var touched = ref.touched\n                                    var valid = ref.valid\n                                    return [\n                                      _c(\"CInput\", {\n                                        attrs: {\n                                          label: _vm.$t(\n                                            \"config.mender.form.tenantToken\"\n                                          ),\n                                          \"is-valid\": touched ? valid : null,\n                                          \"invalid-feedback\": _vm.$t(errors[0])\n                                        },\n                                        model: {\n                                          value: _vm.config.TenantToken,\n                                          callback: function($$v) {\n                                            _vm.$set(\n                                              _vm.config,\n                                              \"TenantToken\",\n                                              $$v\n                                            )\n                                          },\n                                          expression: \"config.TenantToken\"\n                                        }\n                                      })\n                                    ]\n                                  }\n                                }\n                              ],\n                              null,\n                              true\n                            )\n                          }),\n                          _vm._v(\" \"),\n                          _c(\"ValidationProvider\", {\n                            attrs: {\n                              rules: \"min:0|required|integer\",\n                              \"custom-messages\": {\n                                integer: \"forms.messages.integer\",\n                                min:\n                                  \"config.mender.form.messages.inventoryPollInterval\",\n                                required:\n                                  \"config.mender.form.messages.inventoryPollInterval\"\n                              }\n                            },\n                            scopedSlots: _vm._u(\n                              [\n                                {\n                                  key: \"default\",\n                                  fn: function(ref) {\n                                    var errors = ref.errors\n                                    var touched = ref.touched\n                                    var valid = ref.valid\n                                    return [\n                                      _c(\"CInput\", {\n                                        attrs: {\n                                          type: \"number\",\n                                          min: \"0\",\n                                          label: _vm.$t(\n                                            \"config.mender.form.inventoryPollInterval\"\n                                          ),\n                                          \"is-valid\": touched ? valid : null,\n                                          \"invalid-feedback\": _vm.$t(errors[0])\n                                        },\n                                        model: {\n                                          value:\n                                            _vm.config\n                                              .InventoryPollIntervalSeconds,\n                                          callback: function($$v) {\n                                            _vm.$set(\n                                              _vm.config,\n                                              \"InventoryPollIntervalSeconds\",\n                                              _vm._n($$v)\n                                            )\n                                          },\n                                          expression:\n                                            \"config.InventoryPollIntervalSeconds\"\n                                        }\n                                      })\n                                    ]\n                                  }\n                                }\n                              ],\n                              null,\n                              true\n                            )\n                          }),\n                          _vm._v(\" \"),\n                          _c(\"ValidationProvider\", {\n                            attrs: {\n                              rules: \"min:0|required|integer\",\n                              \"custom-messages\": {\n                                integer: \"forms.messages.integer\",\n                                min:\n                                  \"config.mender.form.messages.retryPollInterval\",\n                                required:\n                                  \"config.mender.form.messages.retryPollInterval\"\n                              }\n                            },\n                            scopedSlots: _vm._u(\n                              [\n                                {\n                                  key: \"default\",\n                                  fn: function(ref) {\n                                    var errors = ref.errors\n                                    var touched = ref.touched\n                                    var valid = ref.valid\n                                    return [\n                                      _c(\"CInput\", {\n                                        attrs: {\n                                          type: \"number\",\n                                          min: \"0\",\n                                          label: _vm.$t(\n                                            \"config.mender.form.retryPollInterval\"\n                                          ),\n                                          \"is-valid\": touched ? valid : null,\n                                          \"invalid-feedback\": _vm.$t(errors[0])\n                                        },\n                                        model: {\n                                          value:\n                                            _vm.config.RetryPollIntervalSeconds,\n                                          callback: function($$v) {\n                                            _vm.$set(\n                                              _vm.config,\n                                              \"RetryPollIntervalSeconds\",\n                                              _vm._n($$v)\n                                            )\n                                          },\n                                          expression:\n                                            \"config.RetryPollIntervalSeconds\"\n                                        }\n                                      })\n                                    ]\n                                  }\n                                }\n                              ],\n                              null,\n                              true\n                            )\n                          }),\n                          _vm._v(\" \"),\n                          _c(\"ValidationProvider\", {\n                            attrs: {\n                              rules: \"min:0|required|integer\",\n                              \"custom-messages\": {\n                                integer: \"forms.messages.integer\",\n                                min:\n                                  \"config.mender.form.messages.updatePollInterval\",\n                                required:\n                                  \"config.mender.form.messages.updatePollInterval\"\n                              }\n                            },\n                            scopedSlots: _vm._u(\n                              [\n                                {\n                                  key: \"default\",\n                                  fn: function(ref) {\n                                    var errors = ref.errors\n                                    var touched = ref.touched\n                                    var valid = ref.valid\n                                    return [\n                                      _c(\"CInput\", {\n                                        attrs: {\n                                          type: \"number\",\n                                          min: \"0\",\n                                          label: _vm.$t(\n                                            \"config.mender.form.updatePollInterval\"\n                                          ),\n                                          \"is-valid\": touched ? valid : null,\n                                          \"invalid-feedback\": _vm.$t(errors[0])\n                                        },\n                                        model: {\n                                          value:\n                                            _vm.config\n                                              .UpdatePollIntervalSeconds,\n                                          callback: function($$v) {\n                                            _vm.$set(\n                                              _vm.config,\n                                              \"UpdatePollIntervalSeconds\",\n                                              _vm._n($$v)\n                                            )\n                                          },\n                                          expression:\n                                            \"config.UpdatePollIntervalSeconds\"\n                                        }\n                                      })\n                                    ]\n                                  }\n                                }\n                              ],\n                              null,\n                              true\n                            )\n                          }),\n                          _vm._v(\" \"),\n                          _c(\n                            \"CButton\",\n                            {\n                              attrs: {\n                                color: \"primary\",\n                                type: \"submit\",\n                                disabled: invalid\n                              }\n                            },\n                            [\n                              _vm._v(\n                                \"\\n\\t\\t\\t\\t\" +\n                                  _vm._s(_vm.$t(\"forms.save\")) +\n                                  \"\\n\\t\\t\\t\"\n                              )\n                            ]\n                          )\n                        ],\n                        1\n                      )\n                    ]\n                  }\n                }\n              ],\n              null,\n              false,\n              366184783\n            )\n          })\n        : _vm._e()\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","<template>\n\t<CCard body-wrapper>\n\t\t<ValidationObserver v-if='config !== null' v-slot='{ invalid }'>\n\t\t\t<CForm @submit.prevent='processSubmit'>\n\t\t\t\t<ValidationProvider\n\t\t\t\t\tv-slot='{ errors, touched, valid }'\n\t\t\t\t\trules='addr|required'\n\t\t\t\t\t:custom-messages='{\n\t\t\t\t\t\taddr: \"config.mender.form.messages.invalid.server\",\n\t\t\t\t\t\trequired: \"config.mender.form.messages.missing.server\"\n\t\t\t\t\t}'\n\t\t\t\t>\n\t\t\t\t\t<CInput\n\t\t\t\t\t\tv-model='config.ServerURL'\n\t\t\t\t\t\t:label='$t(\"config.mender.form.server\")'\n\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t/>\n\t\t\t\t</ValidationProvider>\n\t\t\t\t<ValidationProvider\n\t\t\t\t\tv-slot='{ errors, touched, valid }'\n\t\t\t\t\trules='required'\n\t\t\t\t\t:custom-messages='{\n\t\t\t\t\t\trequired: \"config.mender.form.messages.missing.tenantToken\"\n\t\t\t\t\t}'\n\t\t\t\t>\n\t\t\t\t\t<CInput\n\t\t\t\t\t\tv-model='config.TenantToken'\n\t\t\t\t\t\t:label='$t(\"config.mender.form.tenantToken\")'\n\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t/>\n\t\t\t\t</ValidationProvider>\n\t\t\t\t<ValidationProvider\n\t\t\t\t\tv-slot='{ errors, touched, valid }'\n\t\t\t\t\trules='min:0|required|integer'\n\t\t\t\t\t:custom-messages='{\n\t\t\t\t\t\tinteger: \"forms.messages.integer\",\n\t\t\t\t\t\tmin: \"config.mender.form.messages.inventoryPollInterval\",\n\t\t\t\t\t\trequired: \"config.mender.form.messages.inventoryPollInterval\"\n\t\t\t\t\t}'\n\t\t\t\t>\n\t\t\t\t\t<CInput\n\t\t\t\t\t\tv-model.number='config.InventoryPollIntervalSeconds'\n\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\tmin='0'\n\t\t\t\t\t\t:label='$t(\"config.mender.form.inventoryPollInterval\")'\n\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t/>\n\t\t\t\t</ValidationProvider>\n\t\t\t\t<ValidationProvider\n\t\t\t\t\tv-slot='{ errors, touched, valid }'\n\t\t\t\t\trules='min:0|required|integer'\n\t\t\t\t\t:custom-messages='{\n\t\t\t\t\t\tinteger: \"forms.messages.integer\",\n\t\t\t\t\t\tmin: \"config.mender.form.messages.retryPollInterval\",\n\t\t\t\t\t\trequired: \"config.mender.form.messages.retryPollInterval\"\n\t\t\t\t\t}'\n\t\t\t\t>\n\t\t\t\t\t<CInput\n\t\t\t\t\t\tv-model.number='config.RetryPollIntervalSeconds'\n\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\tmin='0'\n\t\t\t\t\t\t:label='$t(\"config.mender.form.retryPollInterval\")'\n\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t/>\n\t\t\t\t</ValidationProvider>\n\t\t\t\t<ValidationProvider\n\t\t\t\t\tv-slot='{ errors, touched, valid}'\n\t\t\t\t\trules='min:0|required|integer'\n\t\t\t\t\t:custom-messages='{\n\t\t\t\t\t\tinteger: \"forms.messages.integer\",\n\t\t\t\t\t\tmin: \"config.mender.form.messages.updatePollInterval\",\n\t\t\t\t\t\trequired: \"config.mender.form.messages.updatePollInterval\"\n\t\t\t\t\t}'\n\t\t\t\t>\n\t\t\t\t\t<CInput\n\t\t\t\t\t\tv-model.number='config.UpdatePollIntervalSeconds'\n\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\tmin='0'\n\t\t\t\t\t\t:label='$t(\"config.mender.form.updatePollInterval\")'\n\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t/>\n\t\t\t\t</ValidationProvider>\n\t\t\t\t<CButton color='primary' type='submit' :disabled='invalid'>\n\t\t\t\t\t{{ $t('forms.save') }}\n\t\t\t\t</CButton>\n\t\t\t</CForm>\n\t\t</ValidationObserver>\n\t</CCard>\n</template>\n\n<script>\nimport {CButton, CCard, CForm, CInput} from '@coreui/vue/src';\nimport {integer, min_value, required} from 'vee-validate/dist/rules';\nimport {extend, ValidationObserver, ValidationProvider} from 'vee-validate';\nimport FormErrorHandler from '../../helpers/FormErrorHandler';\nimport FeatureConfigService from '../../services/FeatureConfigService';\n\nexport default {\n\tname: 'MenderConfig',\n\tcomponents: {\n\t\tCButton,\n\t\tCCard,\n\t\tCForm,\n\t\tCInput,\n\t\tValidationObserver,\n\t\tValidationProvider\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tname: 'mender',\n\t\t\tconfig: null,\n\t\t};\n\t},\n\tcreated() {\n\t\textend('integer', integer);\n\t\textend('required', required);\n\t\textend('min', min_value);\n\t\textend('addr', (addr) => {\n\t\t\tconst regex = RegExp('(http|https):\\\\/\\\\/.*');\n\t\t\treturn regex.test(addr);\n\t\t});\n\t\tthis.getConfig();\n\t},\n\tmethods: {\n\t\tgetConfig() {\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\tFeatureConfigService.getConfig(this.name)\n\t\t\t\t.then((response) => {\n\t\t\t\t\tthis.$store.commit('spinner/HIDE');\n\t\t\t\t\tthis.config = response.data;\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tFormErrorHandler.configError(error);\n\t\t\t\t});\n\t\t},\n\t\tprocessSubmit() {\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\tFeatureConfigService.saveConfig(this.name, this.config)\n\t\t\t\t.then(() => {\n\t\t\t\t\tthis.$store.commit('spinner/HIDE');\n\t\t\t\t\tthis.$toast.success(this.$t('forms.messages.saveSuccess').toString());\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tFormErrorHandler.configError(error);\n\t\t\t\t});\n\t\t},\n\t},\n\tbeforeRouteEnter(to, from, next) {\n\t\tnext(vm => {\n\t\t\tif (!vm.$store.getters['features/isEnabled']('pixla')) {\n\t\t\t\tvm.$toast.error(\n\t\t\t\t\tvm.$t('config.mender.messages.disabled').toString()\n\t\t\t\t);\n\t\t\t\tvm.$router.push(from.path);\n\t\t\t}\n\t\t});\n\t},\n\tmetaInfo: {\n\t\ttitle: 'config.mender.title',\n\t},\n};\n</script>\n","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MenderConfig.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MenderConfig.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./MenderConfig.vue?vue&type=template&id=d23b6572&\"\nimport script from \"./MenderConfig.vue?vue&type=script&lang=js&\"\nexport * from \"./MenderConfig.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('d23b6572')) {\n      api.createRecord('d23b6572', component.options)\n    } else {\n      api.reload('d23b6572', component.options)\n    }\n    module.hot.accept(\"./MenderConfig.vue?vue&type=template&id=d23b6572&\", function () {\n      api.rerender('d23b6572', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/pages/Config/MenderConfig.vue\"\nexport default component.exports","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"CCard\",\n    [\n      _c(\n        \"CCardBody\",\n        [\n          _c(\"ValidationObserver\", {\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(ref) {\n                  var invalid = ref.invalid\n                  return [\n                    _c(\n                      \"CForm\",\n                      {\n                        on: {\n                          submit: function($event) {\n                            $event.preventDefault()\n                            return _vm.saveConfig($event)\n                          }\n                        }\n                      },\n                      [\n                        _c(\"ValidationProvider\", {\n                          attrs: {\n                            rules: \"required\",\n                            \"custom-messages\": {\n                              required: \"config.iqrfInfo.messages.instance\"\n                            }\n                          },\n                          scopedSlots: _vm._u(\n                            [\n                              {\n                                key: \"default\",\n                                fn: function(ref) {\n                                  var errors = ref.errors\n                                  var touched = ref.touched\n                                  var valid = ref.valid\n                                  return [\n                                    _c(\"CInput\", {\n                                      attrs: {\n                                        label: _vm.$t(\n                                          \"config.iqrfInfo.form.instance\"\n                                        ),\n                                        \"is-valid\": touched ? valid : null,\n                                        \"invalid-feedback\": _vm.$t(errors[0])\n                                      },\n                                      model: {\n                                        value: _vm.configuration.instance,\n                                        callback: function($$v) {\n                                          _vm.$set(\n                                            _vm.configuration,\n                                            \"instance\",\n                                            $$v\n                                          )\n                                        },\n                                        expression: \"configuration.instance\"\n                                      }\n                                    })\n                                  ]\n                                }\n                              }\n                            ],\n                            null,\n                            true\n                          )\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"CInputCheckbox\", {\n                          attrs: {\n                            checked: _vm.configuration.enumAtStartUp,\n                            label: _vm.$t(\"config.iqrfInfo.form.enumAtStartUp\")\n                          },\n                          on: {\n                            \"update:checked\": function($event) {\n                              return _vm.$set(\n                                _vm.configuration,\n                                \"enumAtStartUp\",\n                                $event\n                              )\n                            }\n                          }\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"ValidationProvider\", {\n                          attrs: {\n                            rules: _vm.configuration.enumAtStartUp\n                              ? \"integer|min:0|required\"\n                              : \"\",\n                            \"custom-messages\": {\n                              required: \"config.iqrfInfo.messages.enumPeriod\",\n                              min: \"config.iqrfInfo.messages.enumPeriod\",\n                              integer: \"forms.messages.integer\"\n                            }\n                          },\n                          scopedSlots: _vm._u(\n                            [\n                              {\n                                key: \"default\",\n                                fn: function(ref) {\n                                  var errors = ref.errors\n                                  var touched = ref.touched\n                                  var valid = ref.valid\n                                  return [\n                                    _c(\"CInput\", {\n                                      attrs: {\n                                        type: \"number\",\n                                        min: \"0\",\n                                        label: _vm.$t(\n                                          \"config.iqrfInfo.form.enumPeriod\"\n                                        ),\n                                        \"is-valid\": touched ? valid : null,\n                                        \"invalid-feedback\": _vm.$t(errors[0])\n                                      },\n                                      model: {\n                                        value: _vm.configuration.enumPeriod,\n                                        callback: function($$v) {\n                                          _vm.$set(\n                                            _vm.configuration,\n                                            \"enumPeriod\",\n                                            _vm._n($$v)\n                                          )\n                                        },\n                                        expression: \"configuration.enumPeriod\"\n                                      }\n                                    })\n                                  ]\n                                }\n                              }\n                            ],\n                            null,\n                            true\n                          )\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"CInputCheckbox\", {\n                          attrs: {\n                            checked: _vm.configuration.enumUniformDpaVer,\n                            label: _vm.$t(\n                              \"config.iqrfInfo.form.enumUniformDpaVer\"\n                            )\n                          },\n                          on: {\n                            \"update:checked\": function($event) {\n                              return _vm.$set(\n                                _vm.configuration,\n                                \"enumUniformDpaVer\",\n                                $event\n                              )\n                            }\n                          }\n                        }),\n                        _vm._v(\" \"),\n                        _c(\n                          \"CButton\",\n                          {\n                            attrs: {\n                              type: \"submit\",\n                              color: \"primary\",\n                              disabled: invalid\n                            }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n\\t\\t\\t\\t\\t\" +\n                                _vm._s(_vm.$t(\"forms.save\")) +\n                                \"\\n\\t\\t\\t\\t\"\n                            )\n                          ]\n                        )\n                      ],\n                      1\n                    )\n                  ]\n                }\n              }\n            ])\n          })\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import Vue from 'vue';\nimport { CButton, CCard, CCardBody, CForm, CInput, CInputCheckbox } from '@coreui/vue/src';\nimport { extend, ValidationObserver, ValidationProvider } from 'vee-validate';\nimport { integer, min_value, required } from 'vee-validate/dist/rules';\nimport DaemonConfigurationService from '../../services/DaemonConfigurationService';\nimport FormErrorHandler from '../../helpers/FormErrorHandler';\nexport default Vue.extend({\n    name: 'IqrfInfo',\n    components: {\n        CButton: CButton,\n        CCard: CCard,\n        CCardBody: CCardBody,\n        CForm: CForm,\n        CInput: CInput,\n        CInputCheckbox: CInputCheckbox,\n        ValidationObserver: ValidationObserver,\n        ValidationProvider: ValidationProvider,\n    },\n    data: function () {\n        return {\n            componentName: 'iqrf::IqrfInfo',\n            instance: null,\n            configuration: {\n                instance: '',\n                enumAtStartUp: false,\n                enumPeriod: 0,\n                enumUniformDpaVer: false,\n            },\n        };\n    },\n    created: function () {\n        extend('integer', integer);\n        extend('min', min_value);\n        extend('required', required);\n        this.getConfig();\n    },\n    methods: {\n        getConfig: function () {\n            var _this = this;\n            this.$store.commit('spinner/SHOW');\n            DaemonConfigurationService.getComponent(this.componentName)\n                .then(function (response) {\n                _this.$store.commit('spinner/HIDE');\n                if (response.data.instances.length > 0) {\n                    _this.configuration = response.data.instances[0];\n                    _this.instance = _this.configuration.instance;\n                }\n            })\n                .catch(function (error) { return FormErrorHandler.configError(error); });\n        },\n        saveConfig: function () {\n            var _this = this;\n            this.$store.commit('spinner/SHOW');\n            if (this.instance !== null) {\n                DaemonConfigurationService.updateInstance(this.componentName, this.instance, this.configuration)\n                    .then(function () { return _this.successfulSave(); })\n                    .catch(function (error) { return FormErrorHandler.configError(error); });\n            }\n            else {\n                DaemonConfigurationService.createInstance(this.componentName, this.configuration)\n                    .then(function () { return _this.successfulSave(); })\n                    .catch(function (error) { return FormErrorHandler.configError(error); });\n            }\n        },\n        successfulSave: function () {\n            this.$store.commit('spinner/HIDE');\n            this.$toast.success(this.$t('config.success').toString());\n        },\n    },\n    metaInfo: {\n        title: 'config.iqrfInfo.title',\n    },\n});\n","import mod from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./IqrfInfo.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./IqrfInfo.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./IqrfInfo.vue?vue&type=template&id=b124b358&\"\nimport script from \"./IqrfInfo.vue?vue&type=script&lang=ts&\"\nexport * from \"./IqrfInfo.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('b124b358')) {\n      api.createRecord('b124b358', component.options)\n    } else {\n      api.reload('b124b358', component.options)\n    }\n    module.hot.accept(\"./IqrfInfo.vue?vue&type=template&id=b124b358&\", function () {\n      api.rerender('b124b358', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/pages/Config/IqrfInfo.vue\"\nexport default component.exports","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"CCard\",\n    [\n      _c(\n        \"CCardBody\",\n        [\n          _c(\"ValidationObserver\", {\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(ref) {\n                  var invalid = ref.invalid\n                  return [\n                    _c(\n                      \"CForm\",\n                      {\n                        on: {\n                          submit: function($event) {\n                            $event.preventDefault()\n                            return _vm.saveConfig($event)\n                          }\n                        }\n                      },\n                      [\n                        _c(\"ValidationProvider\", {\n                          attrs: {\n                            rules: \"required\",\n                            \"custom-messages\": {\n                              required:\n                                \"config.iqrfRepository.form.messages.instance\"\n                            }\n                          },\n                          scopedSlots: _vm._u(\n                            [\n                              {\n                                key: \"default\",\n                                fn: function(ref) {\n                                  var errors = ref.errors\n                                  var touched = ref.touched\n                                  var valid = ref.valid\n                                  return [\n                                    _c(\"CInput\", {\n                                      attrs: {\n                                        label: _vm.$t(\n                                          \"config.iqrfRepository.form.instance\"\n                                        ),\n                                        \"is-valid\": touched ? valid : null,\n                                        \"invalid-feedback\": _vm.$t(errors[0])\n                                      },\n                                      model: {\n                                        value: _vm.configuration.instance,\n                                        callback: function($$v) {\n                                          _vm.$set(\n                                            _vm.configuration,\n                                            \"instance\",\n                                            $$v\n                                          )\n                                        },\n                                        expression: \"configuration.instance\"\n                                      }\n                                    })\n                                  ]\n                                }\n                              }\n                            ],\n                            null,\n                            true\n                          )\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"ValidationProvider\", {\n                          attrs: {\n                            rules: \"required\",\n                            \"custom-messages\": {\n                              required:\n                                \"config.iqrfRepository.form.messages.urlRepo\"\n                            }\n                          },\n                          scopedSlots: _vm._u(\n                            [\n                              {\n                                key: \"default\",\n                                fn: function(ref) {\n                                  var errors = ref.errors\n                                  var touched = ref.touched\n                                  var valid = ref.valid\n                                  return [\n                                    _c(\"CInput\", {\n                                      attrs: {\n                                        label: _vm.$t(\n                                          \"config.iqrfRepository.form.urlRepo\"\n                                        ),\n                                        \"is-valid\": touched ? valid : null,\n                                        \"invalid-feedback\": _vm.$t(errors[0])\n                                      },\n                                      model: {\n                                        value: _vm.configuration.urlRepo,\n                                        callback: function($$v) {\n                                          _vm.$set(\n                                            _vm.configuration,\n                                            \"urlRepo\",\n                                            $$v\n                                          )\n                                        },\n                                        expression: \"configuration.urlRepo\"\n                                      }\n                                    })\n                                  ]\n                                }\n                              }\n                            ],\n                            null,\n                            true\n                          )\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"ValidationProvider\", {\n                          attrs: {\n                            rules: \"integer|required|min:0\",\n                            \"custom-messages\": {\n                              integer: \"forms.messages.integer\",\n                              required:\n                                \"config.iqrfRepository.form.messages.checkPeriod\",\n                              min:\n                                \"config.iqrfRepository.form.messages.checkPeriod\"\n                            }\n                          },\n                          scopedSlots: _vm._u(\n                            [\n                              {\n                                key: \"default\",\n                                fn: function(ref) {\n                                  var errors = ref.errors\n                                  var touched = ref.touched\n                                  var valid = ref.valid\n                                  return [\n                                    _c(\"CInput\", {\n                                      attrs: {\n                                        type: \"number\",\n                                        min: \"0\",\n                                        label: _vm.$t(\n                                          \"config.iqrfRepository.form.checkPeriod\"\n                                        ),\n                                        \"is-valid\": touched ? valid : null,\n                                        \"invalid-feedback\": _vm.$t(errors[0])\n                                      },\n                                      model: {\n                                        value:\n                                          _vm.configuration\n                                            .checkPeriodInMinutes,\n                                        callback: function($$v) {\n                                          _vm.$set(\n                                            _vm.configuration,\n                                            \"checkPeriodInMinutes\",\n                                            _vm._n($$v)\n                                          )\n                                        },\n                                        expression:\n                                          \"configuration.checkPeriodInMinutes\"\n                                      }\n                                    })\n                                  ]\n                                }\n                              }\n                            ],\n                            null,\n                            true\n                          )\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"CInputCheckbox\", {\n                          attrs: {\n                            checked: _vm.configuration.downloadIfRepoCacheEmpty,\n                            label: _vm.$t(\n                              \"config.iqrfRepository.form.downloadIfEmpty\"\n                            )\n                          },\n                          on: {\n                            \"update:checked\": function($event) {\n                              return _vm.$set(\n                                _vm.configuration,\n                                \"downloadIfRepoCacheEmpty\",\n                                $event\n                              )\n                            }\n                          }\n                        }),\n                        _vm._v(\" \"),\n                        _c(\n                          \"CButton\",\n                          {\n                            attrs: {\n                              type: \"submit\",\n                              color: \"primary\",\n                              disabled: invalid\n                            }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n\\t\\t\\t\\t\\t\" +\n                                _vm._s(_vm.$t(\"forms.save\")) +\n                                \"\\n\\t\\t\\t\\t\"\n                            )\n                          ]\n                        )\n                      ],\n                      1\n                    )\n                  ]\n                }\n              }\n            ])\n          })\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import Vue from 'vue';\nimport { CButton, CCard, CCardBody, CForm, CInput, CInputCheckbox } from '@coreui/vue/src';\nimport { extend, ValidationObserver, ValidationProvider } from 'vee-validate';\nimport { integer, min_value, required } from 'vee-validate/dist/rules';\nimport FormErrorHandler from '../../helpers/FormErrorHandler';\nimport DaemonConfigurationService from '../../services/DaemonConfigurationService';\nexport default Vue.extend({\n    name: 'IqrfRepository',\n    components: {\n        CButton: CButton,\n        CCard: CCard,\n        CCardBody: CCardBody,\n        CForm: CForm,\n        CInput: CInput,\n        CInputCheckbox: CInputCheckbox,\n        ValidationObserver: ValidationObserver,\n        ValidationProvider: ValidationProvider,\n    },\n    data: function () {\n        return {\n            componentName: 'iqrf::JsCache',\n            instance: null,\n            configuration: {\n                instance: null,\n                urlRepo: null,\n                checkPeriodInMinutes: 0,\n                downloadIfRepoCacheEmpty: true,\n            },\n        };\n    },\n    created: function () {\n        extend('integer', integer);\n        extend('min', min_value);\n        extend('required', required);\n        this.getConfig();\n    },\n    methods: {\n        getConfig: function () {\n            var _this = this;\n            this.$store.commit('spinner/SHOW');\n            DaemonConfigurationService.getComponent(this.componentName)\n                .then(function (response) {\n                _this.$store.commit('spinner/HIDE');\n                if (response.data.instances.length > 0) {\n                    _this.configuration = response.data.instances[0];\n                    _this.instance = _this.configuration.instance;\n                }\n            })\n                .catch(function (error) { return FormErrorHandler.configError(error); });\n        },\n        saveConfig: function () {\n            var _this = this;\n            this.$store.commit('spinner/SHOW');\n            if (this.instance !== null) {\n                DaemonConfigurationService.updateInstance(this.componentName, this.instance, this.configuration)\n                    .then(function () { return _this.successfulSave(); })\n                    .catch(function (error) { return FormErrorHandler.configError(error); });\n            }\n            else {\n                DaemonConfigurationService.createInstance(this.componentName, this.configuration)\n                    .then(function () { return _this.successfulSave(); })\n                    .catch(function (error) { return FormErrorHandler.configError(error); });\n            }\n        },\n        successfulSave: function () {\n            this.$store.commit('spinner/HIDE');\n            this.$toast.success(this.$t('config.success').toString());\n        },\n    },\n    metaInfo: {\n        title: 'config.iqrfRepository.title',\n    },\n});\n","import mod from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./IqrfRepository.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./IqrfRepository.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./IqrfRepository.vue?vue&type=template&id=3505a720&\"\nimport script from \"./IqrfRepository.vue?vue&type=script&lang=ts&\"\nexport * from \"./IqrfRepository.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('3505a720')) {\n      api.createRecord('3505a720', component.options)\n    } else {\n      api.reload('3505a720', component.options)\n    }\n    module.hot.accept(\"./IqrfRepository.vue?vue&type=template&id=3505a720&\", function () {\n      api.rerender('3505a720', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/pages/Config/IqrfRepository.vue\"\nexport default component.exports","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\n        \"CCard\",\n        [\n          _c(\n            \"CCardBody\",\n            [\n              _c(\"ValidationObserver\", {\n                scopedSlots: _vm._u([\n                  {\n                    key: \"default\",\n                    fn: function(ref) {\n                      var invalid = ref.invalid\n                      return [\n                        _c(\n                          \"CForm\",\n                          {\n                            on: {\n                              submit: function($event) {\n                                $event.preventDefault()\n                                return _vm.saveConfig($event)\n                              }\n                            }\n                          },\n                          [\n                            _c(\"ValidationProvider\", {\n                              attrs: {\n                                rules: \"required\",\n                                \"custom-messages\": {\n                                  required:\n                                    \"config.iqrfCdc.form.messages.instance\"\n                                }\n                              },\n                              scopedSlots: _vm._u(\n                                [\n                                  {\n                                    key: \"default\",\n                                    fn: function(ref) {\n                                      var errors = ref.errors\n                                      var touched = ref.touched\n                                      var valid = ref.valid\n                                      return [\n                                        _c(\"CInput\", {\n                                          attrs: {\n                                            label: _vm.$t(\n                                              \"config.iqrfCdc.form.instance\"\n                                            ),\n                                            \"is-valid\": touched ? valid : null,\n                                            \"invalid-feedback\": _vm.$t(\n                                              errors[0]\n                                            )\n                                          },\n                                          model: {\n                                            value: _vm.configuration.instance,\n                                            callback: function($$v) {\n                                              _vm.$set(\n                                                _vm.configuration,\n                                                \"instance\",\n                                                $$v\n                                              )\n                                            },\n                                            expression: \"configuration.instance\"\n                                          }\n                                        })\n                                      ]\n                                    }\n                                  }\n                                ],\n                                null,\n                                true\n                              )\n                            }),\n                            _vm._v(\" \"),\n                            _c(\"ValidationProvider\", {\n                              attrs: {\n                                rules: \"required\",\n                                \"custom-messages\": {\n                                  required:\n                                    \"config.iqrfCdc.form.messages.interface\"\n                                }\n                              },\n                              scopedSlots: _vm._u(\n                                [\n                                  {\n                                    key: \"default\",\n                                    fn: function(ref) {\n                                      var errors = ref.errors\n                                      var touched = ref.touched\n                                      var valid = ref.valid\n                                      return [\n                                        _c(\"CInput\", {\n                                          attrs: {\n                                            label: _vm.$t(\n                                              \"config.iqrfCdc.form.interface\"\n                                            ),\n                                            \"is-valid\": touched ? valid : null,\n                                            \"invalid-feedback\": _vm.$t(\n                                              errors[0]\n                                            )\n                                          },\n                                          model: {\n                                            value:\n                                              _vm.configuration.IqrfInterface,\n                                            callback: function($$v) {\n                                              _vm.$set(\n                                                _vm.configuration,\n                                                \"IqrfInterface\",\n                                                $$v\n                                              )\n                                            },\n                                            expression:\n                                              \"configuration.IqrfInterface\"\n                                          }\n                                        })\n                                      ]\n                                    }\n                                  }\n                                ],\n                                null,\n                                true\n                              )\n                            }),\n                            _vm._v(\" \"),\n                            _c(\n                              \"CButton\",\n                              {\n                                attrs: {\n                                  type: \"submit\",\n                                  color: \"primary\",\n                                  disabled: invalid\n                                }\n                              },\n                              [\n                                _vm._v(\n                                  \"\\n\\t\\t\\t\\t\\t\\t\" +\n                                    _vm._s(_vm.$t(\"forms.save\")) +\n                                    \"\\n\\t\\t\\t\\t\\t\"\n                                )\n                              ]\n                            )\n                          ],\n                          1\n                        )\n                      ]\n                    }\n                  }\n                ])\n              })\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"CCard\",\n        [\n          _c(\"CCardHeader\", [\n            _vm._v(_vm._s(_vm.$t(\"config.iqrfCdc.mappings\")))\n          ]),\n          _vm._v(\" \"),\n          _c(\n            \"CCardBody\",\n            [\n              _c(\"InterfacePorts\", {\n                attrs: { \"interface-type\": \"cdc\" },\n                on: { updatePort: _vm.updatePort }\n              })\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _vm.ports !== []\n    ? _c(\n        \"div\",\n        [\n          _c(\"h4\", [\n            _vm._v(_vm._s(_vm.$t(\"config.interfaceMapping.interfaces\")))\n          ]),\n          _vm._v(\" \"),\n          _c(\n            \"CButtonGroup\",\n            _vm._l(_vm.ports, function(port) {\n              return _c(\n                \"CButton\",\n                {\n                  key: port,\n                  attrs: { color: \"primary\" },\n                  on: {\n                    click: function($event) {\n                      return _vm.setPort(port)\n                    }\n                  }\n                },\n                [_vm._v(\"\\n\\t\\t\\t\" + _vm._s(port) + \"\\n\\t\\t\")]\n              )\n            }),\n            1\n          )\n        ],\n        1\n      )\n    : _vm._e()\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import Vue from 'vue';\nimport { CButton, CButtonGroup } from '@coreui/vue/src';\nimport IqrfService from '../../services/IqrfService';\nexport default Vue.extend({\n    name: 'InterfacePorts',\n    components: {\n        CButton: CButton,\n        CButtonGroup: CButtonGroup,\n    },\n    props: {\n        interfaceType: {\n            type: String,\n            required: true,\n        },\n    },\n    data: function () {\n        return {\n            ports: [],\n        };\n    },\n    created: function () {\n        var _this = this;\n        IqrfService.getInterfacePorts(this.interfaceType)\n            .then(function (ports) { return (_this.ports = ports); })\n            .catch(function () { return (_this.ports = []); });\n    },\n    methods: {\n        setPort: function (port) {\n            this.$emit('updatePort', port);\n        },\n    },\n});\n","import mod from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./InterfacePorts.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./InterfacePorts.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./InterfacePorts.vue?vue&type=template&id=e1b25216&\"\nimport script from \"./InterfacePorts.vue?vue&type=script&lang=ts&\"\nexport * from \"./InterfacePorts.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('e1b25216')) {\n      api.createRecord('e1b25216', component.options)\n    } else {\n      api.reload('e1b25216', component.options)\n    }\n    module.hot.accept(\"./InterfacePorts.vue?vue&type=template&id=e1b25216&\", function () {\n      api.rerender('e1b25216', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/components/Config/InterfacePorts.vue\"\nexport default component.exports","import mod from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./IqrfCdc.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./IqrfCdc.vue?vue&type=script&lang=ts&\"","import Vue from 'vue';\nimport { CButton, CCard, CCardBody, CCardHeader, CForm, CInput } from '@coreui/vue/src';\nimport { extend, ValidationObserver, ValidationProvider } from 'vee-validate';\nimport { required } from 'vee-validate/dist/rules';\nimport InterfacePorts from '../../components/Config/InterfacePorts';\nimport FormErrorHandler from '../../helpers/FormErrorHandler';\nimport DaemonConfigurationService from '../../services/DaemonConfigurationService';\nexport default Vue.extend({\n    name: 'IqrfCdc',\n    components: {\n        CButton: CButton,\n        CCard: CCard,\n        CCardBody: CCardBody,\n        CCardHeader: CCardHeader,\n        CForm: CForm,\n        CInput: CInput,\n        InterfacePorts: InterfacePorts,\n        ValidationObserver: ValidationObserver,\n        ValidationProvider: ValidationProvider,\n    },\n    data: function () {\n        return {\n            componentName: 'iqrf::IqrfCdc',\n            configuration: {\n                instance: null,\n                IqrfInterface: null,\n            },\n            instance: null,\n        };\n    },\n    created: function () {\n        extend('required', required);\n        this.getConfig();\n    },\n    methods: {\n        getConfig: function () {\n            var _this = this;\n            this.$store.commit('spinner/SHOW');\n            DaemonConfigurationService.getComponent(this.componentName)\n                .then(function (response) {\n                _this.$store.commit('spinner/HIDE');\n                if (response.data.instances.length > 0) {\n                    _this.configuration = response.data.instances[0];\n                    _this.instance = _this.configuration.instance;\n                }\n            })\n                .catch(function (error) { return FormErrorHandler.configError(error); });\n        },\n        saveConfig: function () {\n            var _this = this;\n            this.$store.commit('spinner/SHOW');\n            if (this.instance !== null) {\n                DaemonConfigurationService.updateInstance(this.componentName, this.instance, this.configuration)\n                    .then(function () { return _this.successfulSave(); })\n                    .catch(function (error) { return FormErrorHandler.configError(error); });\n            }\n            else {\n                DaemonConfigurationService.createInstance(this.componentName, this.configuration)\n                    .then(function () { return _this.successfulSave(); })\n                    .catch(function (error) { return FormErrorHandler.configError(error); });\n            }\n        },\n        successfulSave: function () {\n            this.$store.commit('spinner/HIDE');\n            this.$toast.success(this.$t('config.success').toString());\n        },\n        updatePort: function (port) {\n            this.configuration.IqrfInterface = port;\n        },\n    },\n    metaInfo: {\n        title: 'config.iqrfCdc.title',\n    },\n});\n","import { render, staticRenderFns } from \"./IqrfCdc.vue?vue&type=template&id=d4bc7c28&\"\nimport script from \"./IqrfCdc.vue?vue&type=script&lang=ts&\"\nexport * from \"./IqrfCdc.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('d4bc7c28')) {\n      api.createRecord('d4bc7c28', component.options)\n    } else {\n      api.reload('d4bc7c28', component.options)\n    }\n    module.hot.accept(\"./IqrfCdc.vue?vue&type=template&id=d4bc7c28&\", function () {\n      api.rerender('d4bc7c28', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/pages/Config/IqrfCdc.vue\"\nexport default component.exports","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"CCard\",\n    [\n      _c(\n        \"CCardBody\",\n        [\n          _c(\"ValidationObserver\", {\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(ref) {\n                  var invalid = ref.invalid\n                  return [\n                    _c(\n                      \"CForm\",\n                      {\n                        on: {\n                          submit: function($event) {\n                            $event.preventDefault()\n                            return _vm.saveConfig($event)\n                          }\n                        }\n                      },\n                      [\n                        _c(\"ValidationProvider\", {\n                          attrs: {\n                            rules: \"required\",\n                            \"custom-messages\": {\n                              required: \"config.iqrfDpa.form.messages.instance\"\n                            }\n                          },\n                          scopedSlots: _vm._u(\n                            [\n                              {\n                                key: \"default\",\n                                fn: function(ref) {\n                                  var errors = ref.errors\n                                  var touched = ref.touched\n                                  var valid = ref.valid\n                                  return [\n                                    _c(\"CInput\", {\n                                      attrs: {\n                                        label: _vm.$t(\n                                          \"config.iqrfDpa.form.instance\"\n                                        ),\n                                        \"is-valid\": touched ? valid : null,\n                                        \"invalid-feedback\": _vm.$t(errors[0])\n                                      },\n                                      model: {\n                                        value: _vm.configuration.instance,\n                                        callback: function($$v) {\n                                          _vm.$set(\n                                            _vm.configuration,\n                                            \"instance\",\n                                            $$v\n                                          )\n                                        },\n                                        expression: \"configuration.instance\"\n                                      }\n                                    })\n                                  ]\n                                }\n                              }\n                            ],\n                            null,\n                            true\n                          )\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"ValidationProvider\", {\n                          attrs: {\n                            rules: \"integer|required|min:0\",\n                            \"custom-messages\": {\n                              integer: \"forms.messages.integer\",\n                              min:\n                                \"config.iqrfDpa.form.messages.DpaHandlerTimeout\",\n                              required:\n                                \"config.iqrfDpa.form.messages.DpaHandlerTimeout\"\n                            }\n                          },\n                          scopedSlots: _vm._u(\n                            [\n                              {\n                                key: \"default\",\n                                fn: function(ref) {\n                                  var errors = ref.errors\n                                  var touched = ref.touched\n                                  var valid = ref.valid\n                                  return [\n                                    _c(\"CInput\", {\n                                      attrs: {\n                                        type: \"number\",\n                                        min: \"0\",\n                                        label: _vm.$t(\n                                          \"config.iqrfDpa.form.DpaHandlerTimeout\"\n                                        ),\n                                        \"is-valid\": touched ? valid : null,\n                                        \"invalid-feedback\": _vm.$t(errors[0])\n                                      },\n                                      model: {\n                                        value:\n                                          _vm.configuration.DpaHandlerTimeout,\n                                        callback: function($$v) {\n                                          _vm.$set(\n                                            _vm.configuration,\n                                            \"DpaHandlerTimeout\",\n                                            _vm._n($$v)\n                                          )\n                                        },\n                                        expression:\n                                          \"configuration.DpaHandlerTimeout\"\n                                      }\n                                    })\n                                  ]\n                                }\n                              }\n                            ],\n                            null,\n                            true\n                          )\n                        }),\n                        _vm._v(\" \"),\n                        _c(\n                          \"CButton\",\n                          {\n                            attrs: {\n                              type: \"submit\",\n                              color: \"primary\",\n                              disabled: invalid\n                            }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n\\t\\t\\t\\t\\t\" +\n                                _vm._s(_vm.$t(\"forms.save\")) +\n                                \"\\n\\t\\t\\t\\t\"\n                            )\n                          ]\n                        )\n                      ],\n                      1\n                    )\n                  ]\n                }\n              }\n            ])\n          })\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import Vue from 'vue';\nimport { CButton, CCard, CCardBody, CForm, CInput } from '@coreui/vue/src';\nimport { extend, ValidationObserver, ValidationProvider } from 'vee-validate';\nimport { integer, min_value, required } from 'vee-validate/dist/rules';\nimport FormErrorHandler from '../../helpers/FormErrorHandler';\nimport DaemonConfigurationService from '../../services/DaemonConfigurationService';\nexport default Vue.extend({\n    name: 'IqrfDpa',\n    components: {\n        CButton: CButton,\n        CCard: CCard,\n        CCardBody: CCardBody,\n        CForm: CForm,\n        CInput: CInput,\n        ValidationObserver: ValidationObserver,\n        ValidationProvider: ValidationProvider\n    },\n    data: function () {\n        return {\n            componentName: 'iqrf::IqrfDpa',\n            configuration: {\n                instance: null,\n                DpaHandlerTimeout: 500,\n            },\n            instance: null,\n        };\n    },\n    created: function () {\n        extend('integer', integer);\n        extend('min', min_value);\n        extend('required', required);\n        this.getConfig();\n    },\n    methods: {\n        getConfig: function () {\n            var _this = this;\n            this.$store.commit('spinner/SHOW');\n            DaemonConfigurationService.getComponent(this.componentName)\n                .then(function (response) {\n                _this.$store.commit('spinner/HIDE');\n                if (response.data.instances.length > 0) {\n                    _this.configuration = response.data.instances[0];\n                    _this.instance = _this.configuration.instance;\n                }\n            })\n                .catch(function (error) { return FormErrorHandler.configError(error); });\n        },\n        saveConfig: function () {\n            var _this = this;\n            this.$store.commit('spinner/SHOW');\n            if (this.instance !== null) {\n                DaemonConfigurationService.updateInstance(this.componentName, this.instance, this.configuration)\n                    .then(function () { return _this.successfulSave(); })\n                    .catch(function (error) { return FormErrorHandler.configError(error); });\n            }\n            else {\n                DaemonConfigurationService.createInstance(this.componentName, this.configuration)\n                    .then(function () { return _this.successfulSave(); })\n                    .catch(function (error) { return FormErrorHandler.configError(error); });\n            }\n        },\n        successfulSave: function () {\n            this.$store.commit('spinner/HIDE');\n            this.$toast.success(this.$t('config.success').toString());\n        }\n    },\n    metaInfo: {\n        title: 'config.iqrfDpa.title',\n    },\n});\n","import mod from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./IqrfDpa.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./IqrfDpa.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./IqrfDpa.vue?vue&type=template&id=423414c2&\"\nimport script from \"./IqrfDpa.vue?vue&type=script&lang=ts&\"\nexport * from \"./IqrfDpa.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('423414c2')) {\n      api.createRecord('423414c2', component.options)\n    } else {\n      api.reload('423414c2', component.options)\n    }\n    module.hot.accept(\"./IqrfDpa.vue?vue&type=template&id=423414c2&\", function () {\n      api.rerender('423414c2', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/pages/Config/IqrfDpa.vue\"\nexport default component.exports","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\n        \"CCard\",\n        [\n          _c(\n            \"CCardBody\",\n            [\n              _c(\"ValidationObserver\", {\n                scopedSlots: _vm._u([\n                  {\n                    key: \"default\",\n                    fn: function(ref) {\n                      var invalid = ref.invalid\n                      return [\n                        _c(\n                          \"CForm\",\n                          {\n                            on: {\n                              submit: function($event) {\n                                $event.preventDefault()\n                                return _vm.saveConfig($event)\n                              }\n                            }\n                          },\n                          [\n                            _c(\"ValidationProvider\", {\n                              attrs: {\n                                rules: \"required\",\n                                \"custom-messages\": {\n                                  required:\n                                    \"config.iqrfSpi.form.messages.instance\"\n                                }\n                              },\n                              scopedSlots: _vm._u(\n                                [\n                                  {\n                                    key: \"default\",\n                                    fn: function(ref) {\n                                      var errors = ref.errors\n                                      var touched = ref.touched\n                                      var valid = ref.valid\n                                      return [\n                                        _c(\"CInput\", {\n                                          attrs: {\n                                            label: _vm.$t(\n                                              \"config.iqrfSpi.form.instance\"\n                                            ),\n                                            \"is-valid\": touched ? valid : null,\n                                            \"invalid-feedback\": _vm.$t(\n                                              errors[0]\n                                            )\n                                          },\n                                          model: {\n                                            value: _vm.configuration.instance,\n                                            callback: function($$v) {\n                                              _vm.$set(\n                                                _vm.configuration,\n                                                \"instance\",\n                                                $$v\n                                              )\n                                            },\n                                            expression: \"configuration.instance\"\n                                          }\n                                        })\n                                      ]\n                                    }\n                                  }\n                                ],\n                                null,\n                                true\n                              )\n                            }),\n                            _vm._v(\" \"),\n                            _c(\"ValidationProvider\", {\n                              attrs: {\n                                rules: \"required\",\n                                \"custom-messages\": {\n                                  required:\n                                    \"config.iqrfSpi.form.messages.interface\"\n                                }\n                              },\n                              scopedSlots: _vm._u(\n                                [\n                                  {\n                                    key: \"default\",\n                                    fn: function(ref) {\n                                      var errors = ref.errors\n                                      var touched = ref.touched\n                                      var valid = ref.valid\n                                      return [\n                                        _c(\"CInput\", {\n                                          attrs: {\n                                            label: _vm.$t(\n                                              \"config.iqrfSpi.form.IqrfInterface\"\n                                            ),\n                                            \"is-valid\": touched ? valid : null,\n                                            \"invalid-feedback\": _vm.$t(\n                                              errors[0]\n                                            )\n                                          },\n                                          model: {\n                                            value:\n                                              _vm.configuration.IqrfInterface,\n                                            callback: function($$v) {\n                                              _vm.$set(\n                                                _vm.configuration,\n                                                \"IqrfInterface\",\n                                                $$v\n                                              )\n                                            },\n                                            expression:\n                                              \"configuration.IqrfInterface\"\n                                          }\n                                        })\n                                      ]\n                                    }\n                                  }\n                                ],\n                                null,\n                                true\n                              )\n                            }),\n                            _vm._v(\" \"),\n                            _c(\"ValidationProvider\", {\n                              attrs: {\n                                rules: \"required|integer\",\n                                \"custom-messages\": {\n                                  integer:\n                                    \"config.iqrfSpi.form.messages.powerEnableGpioPin\",\n                                  required:\n                                    \"config.iqrfSpi.form.messages.powerEnableGpioPin\"\n                                }\n                              },\n                              scopedSlots: _vm._u(\n                                [\n                                  {\n                                    key: \"default\",\n                                    fn: function(ref) {\n                                      var errors = ref.errors\n                                      var touched = ref.touched\n                                      var valid = ref.valid\n                                      return [\n                                        _c(\"CInput\", {\n                                          attrs: {\n                                            label: _vm.$t(\n                                              \"config.iqrfSpi.form.powerEnableGpioPin\"\n                                            ),\n                                            \"is-valid\": touched ? valid : null,\n                                            \"invalid-feedback\": _vm.$t(\n                                              errors[0]\n                                            )\n                                          },\n                                          model: {\n                                            value:\n                                              _vm.configuration\n                                                .powerEnableGpioPin,\n                                            callback: function($$v) {\n                                              _vm.$set(\n                                                _vm.configuration,\n                                                \"powerEnableGpioPin\",\n                                                $$v\n                                              )\n                                            },\n                                            expression:\n                                              \"configuration.powerEnableGpioPin\"\n                                          }\n                                        })\n                                      ]\n                                    }\n                                  }\n                                ],\n                                null,\n                                true\n                              )\n                            }),\n                            _vm._v(\" \"),\n                            _c(\"ValidationProvider\", {\n                              attrs: {\n                                rules: \"required|integer\",\n                                \"custom-messages\": {\n                                  integer:\n                                    \"config.iqrfSpi.form.messages.busEnableGpioPin\",\n                                  required:\n                                    \"config.iqrfSpi.form.messages.busEnableGpioPin\"\n                                }\n                              },\n                              scopedSlots: _vm._u(\n                                [\n                                  {\n                                    key: \"default\",\n                                    fn: function(ref) {\n                                      var errors = ref.errors\n                                      var touched = ref.touched\n                                      var valid = ref.valid\n                                      return [\n                                        _c(\"CInput\", {\n                                          attrs: {\n                                            label: _vm.$t(\n                                              \"config.iqrfSpi.form.busEnableGpioPin\"\n                                            ),\n                                            \"is-valid\": touched ? valid : null,\n                                            \"invalid-feedback\": _vm.$t(\n                                              errors[0]\n                                            )\n                                          },\n                                          model: {\n                                            value:\n                                              _vm.configuration\n                                                .busEnableGpioPin,\n                                            callback: function($$v) {\n                                              _vm.$set(\n                                                _vm.configuration,\n                                                \"busEnableGpioPin\",\n                                                $$v\n                                              )\n                                            },\n                                            expression:\n                                              \"configuration.busEnableGpioPin\"\n                                          }\n                                        })\n                                      ]\n                                    }\n                                  }\n                                ],\n                                null,\n                                true\n                              )\n                            }),\n                            _vm._v(\" \"),\n                            _c(\"ValidationProvider\", {\n                              attrs: {\n                                rules: \"required|integer\",\n                                \"custom-messages\": {\n                                  integer:\n                                    \"config.iqrfSpi.form.messages.pgmSwitchGpioPin\",\n                                  required:\n                                    \"config.iqrfSpi.form.messages.pgmSwitchGpioPin\"\n                                }\n                              },\n                              scopedSlots: _vm._u(\n                                [\n                                  {\n                                    key: \"default\",\n                                    fn: function(ref) {\n                                      var errors = ref.errors\n                                      var touched = ref.touched\n                                      var valid = ref.valid\n                                      return [\n                                        _c(\"CInput\", {\n                                          attrs: {\n                                            label: _vm.$t(\n                                              \"config.iqrfSpi.form.pgmSwitchGpioPin\"\n                                            ),\n                                            \"is-valid\": touched ? valid : null,\n                                            \"invalid-feedback\": _vm.$t(\n                                              errors[0]\n                                            )\n                                          },\n                                          model: {\n                                            value:\n                                              _vm.configuration\n                                                .pgmSwitchGpioPin,\n                                            callback: function($$v) {\n                                              _vm.$set(\n                                                _vm.configuration,\n                                                \"pgmSwitchGpioPin\",\n                                                $$v\n                                              )\n                                            },\n                                            expression:\n                                              \"configuration.pgmSwitchGpioPin\"\n                                          }\n                                        })\n                                      ]\n                                    }\n                                  }\n                                ],\n                                null,\n                                true\n                              )\n                            }),\n                            _vm._v(\" \"),\n                            _c(\"CInputCheckbox\", {\n                              attrs: {\n                                checked: _vm.configuration.spiReset,\n                                label: _vm.$t(\"config.iqrfSpi.form.spiReset\")\n                              },\n                              on: {\n                                \"update:checked\": function($event) {\n                                  return _vm.$set(\n                                    _vm.configuration,\n                                    \"spiReset\",\n                                    $event\n                                  )\n                                }\n                              }\n                            }),\n                            _vm._v(\" \"),\n                            _c(\n                              \"CButton\",\n                              {\n                                attrs: {\n                                  type: \"submit\",\n                                  color: \"primary\",\n                                  disabled: invalid\n                                }\n                              },\n                              [\n                                _vm._v(\n                                  \"\\n\\t\\t\\t\\t\\t\\t\" +\n                                    _vm._s(_vm.$t(\"forms.save\")) +\n                                    \"\\n\\t\\t\\t\\t\\t\"\n                                )\n                              ]\n                            )\n                          ],\n                          1\n                        )\n                      ]\n                    }\n                  }\n                ])\n              })\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"CCard\",\n        [\n          _c(\"CCardHeader\", [\n            _vm._v(_vm._s(_vm.$t(\"config.iqrfSpi.mappings\")))\n          ]),\n          _vm._v(\" \"),\n          _c(\n            \"CCardBody\",\n            [\n              _c(\n                \"CRow\",\n                [\n                  _c(\n                    \"CCol\",\n                    { attrs: { md: \"6\" } },\n                    [\n                      _c(\"InterfaceMappings\", {\n                        attrs: { \"interface-type\": \"spi\" },\n                        on: { updateMapping: _vm.updateMapping }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"CCol\",\n                    { attrs: { md: \"6\" } },\n                    [\n                      _c(\"InterfacePorts\", {\n                        attrs: { \"interface-type\": \"spi\" },\n                        on: { updatePort: _vm.updatePort }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\"h4\", [_vm._v(_vm._s(_vm.$t(\"config.interfaceMapping.boards\")))]),\n      _vm._v(\" \"),\n      _c(\n        \"CButtonGroup\",\n        _vm._l(Object.keys(_vm.mappings[_vm.interfaceType]), function(board) {\n          return _c(\n            \"CButton\",\n            {\n              key: board,\n              attrs: { color: \"primary\" },\n              on: {\n                click: function($event) {\n                  return _vm.setMapping(board)\n                }\n              }\n            },\n            [_vm._v(\"\\n\\t\\t\\t\" + _vm._s(board) + \"\\n\\t\\t\")]\n          )\n        }),\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import mod from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./InterfaceMappings.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./InterfaceMappings.vue?vue&type=script&lang=ts&\"","import Vue from 'vue';\nimport { CButton, CButtonGroup } from '@coreui/vue';\nexport default Vue.extend({\n    name: 'InterfaceMappings',\n    components: {\n        CButton: CButton,\n        CButtonGroup: CButtonGroup,\n    },\n    props: {\n        interfaceType: {\n            type: String,\n            required: true,\n        },\n    },\n    data: function () {\n        return {\n            mappings: {\n                'spi': require('../../../app/ConfigModule/json/SpiPins.json'),\n                'uart': require('../../../app/ConfigModule/json/UartPins.json'),\n            },\n        };\n    },\n    methods: {\n        setMapping: function (board) {\n            var mapping = this.mappings[this.interfaceType][board];\n            this.$emit('updateMapping', mapping);\n        },\n    },\n});\n","import { render, staticRenderFns } from \"./InterfaceMappings.vue?vue&type=template&id=548c6c52&\"\nimport script from \"./InterfaceMappings.vue?vue&type=script&lang=ts&\"\nexport * from \"./InterfaceMappings.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('548c6c52')) {\n      api.createRecord('548c6c52', component.options)\n    } else {\n      api.reload('548c6c52', component.options)\n    }\n    module.hot.accept(\"./InterfaceMappings.vue?vue&type=template&id=548c6c52&\", function () {\n      api.rerender('548c6c52', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/components/Config/InterfaceMappings.vue\"\nexport default component.exports","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./IqrfSpi.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./IqrfSpi.vue?vue&type=script&lang=js&\"","<template>\n\t<div>\n\t\t<CCard>\n\t\t\t<CCardBody>\n\t\t\t\t<ValidationObserver v-slot='{ invalid }'>\n\t\t\t\t\t<CForm @submit.prevent='saveConfig'>\n\t\t\t\t\t\t<ValidationProvider\n\t\t\t\t\t\t\tv-slot='{ errors, touched, valid }'\n\t\t\t\t\t\t\trules='required'\n\t\t\t\t\t\t\t:custom-messages='{required: \"config.iqrfSpi.form.messages.instance\"}'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<CInput\n\t\t\t\t\t\t\t\tv-model='configuration.instance'\n\t\t\t\t\t\t\t\t:label='$t(\"config.iqrfSpi.form.instance\")'\n\t\t\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</ValidationProvider>\n\t\t\t\t\t\t<ValidationProvider\n\t\t\t\t\t\t\tv-slot='{ errors, touched, valid }'\n\t\t\t\t\t\t\trules='required'\n\t\t\t\t\t\t\t:custom-messages='{required: \"config.iqrfSpi.form.messages.interface\"}'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<CInput\n\t\t\t\t\t\t\t\tv-model='configuration.IqrfInterface'\n\t\t\t\t\t\t\t\t:label='$t(\"config.iqrfSpi.form.IqrfInterface\")'\n\t\t\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</ValidationProvider>\n\t\t\t\t\t\t<ValidationProvider\n\t\t\t\t\t\t\tv-slot='{ errors, touched, valid }'\n\t\t\t\t\t\t\trules='required|integer'\n\t\t\t\t\t\t\t:custom-messages='{\n\t\t\t\t\t\t\t\tinteger: \"config.iqrfSpi.form.messages.powerEnableGpioPin\",\n\t\t\t\t\t\t\t\trequired: \"config.iqrfSpi.form.messages.powerEnableGpioPin\",\n\t\t\t\t\t\t\t}'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<CInput\n\t\t\t\t\t\t\t\tv-model='configuration.powerEnableGpioPin'\n\t\t\t\t\t\t\t\t:label='$t(\"config.iqrfSpi.form.powerEnableGpioPin\")'\n\t\t\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</ValidationProvider>\n\t\t\t\t\t\t<ValidationProvider\n\t\t\t\t\t\t\tv-slot='{ errors, touched, valid }'\n\t\t\t\t\t\t\trules='required|integer'\n\t\t\t\t\t\t\t:custom-messages='{\n\t\t\t\t\t\t\t\tinteger: \"config.iqrfSpi.form.messages.busEnableGpioPin\",\n\t\t\t\t\t\t\t\trequired: \"config.iqrfSpi.form.messages.busEnableGpioPin\",\n\t\t\t\t\t\t\t}'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<CInput\n\t\t\t\t\t\t\t\tv-model='configuration.busEnableGpioPin'\n\t\t\t\t\t\t\t\t:label='$t(\"config.iqrfSpi.form.busEnableGpioPin\")'\n\t\t\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</ValidationProvider>\n\t\t\t\t\t\t<ValidationProvider\n\t\t\t\t\t\t\tv-slot='{ errors, touched, valid }'\n\t\t\t\t\t\t\trules='required|integer'\n\t\t\t\t\t\t\t:custom-messages='{\n\t\t\t\t\t\t\t\tinteger: \"config.iqrfSpi.form.messages.pgmSwitchGpioPin\",\n\t\t\t\t\t\t\t\trequired: \"config.iqrfSpi.form.messages.pgmSwitchGpioPin\",\n\t\t\t\t\t\t\t}'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<CInput\n\t\t\t\t\t\t\t\tv-model='configuration.pgmSwitchGpioPin'\n\t\t\t\t\t\t\t\t:label='$t(\"config.iqrfSpi.form.pgmSwitchGpioPin\")'\n\t\t\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</ValidationProvider>\n\t\t\t\t\t\t<CInputCheckbox\n\t\t\t\t\t\t\t:checked.sync='configuration.spiReset'\n\t\t\t\t\t\t\t:label='$t(\"config.iqrfSpi.form.spiReset\")'\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<CButton type='submit' color='primary' :disabled='invalid'>\n\t\t\t\t\t\t\t{{ $t('forms.save') }}\n\t\t\t\t\t\t</CButton>\n\t\t\t\t\t</CForm>\n\t\t\t\t</ValidationObserver>\n\t\t\t</CCardBody>\n\t\t</CCard>\n\t\t<CCard>\n\t\t\t<CCardHeader>{{ $t('config.iqrfSpi.mappings' ) }}</CCardHeader>\n\t\t\t<CCardBody>\n\t\t\t\t<CRow>\n\t\t\t\t\t<CCol md='6'>\n\t\t\t\t\t\t<InterfaceMappings interface-type='spi' @updateMapping='updateMapping' />\n\t\t\t\t\t</CCol>\n\t\t\t\t\t<CCol md='6'>\n\t\t\t\t\t\t<InterfacePorts interface-type='spi' @updatePort='updatePort' />\n\t\t\t\t\t</CCol>\n\t\t\t\t</CRow>\n\t\t\t</CCardBody>\n\t\t</CCard>\n\t</div>\n</template>\n\n<script>\nimport Vue from 'vue';\nimport {AxiosError, AxiosResponse} from 'axios';\nimport {\n\tCButton,\n\tCCard,\n\tCCardBody,\n\tCCardHeader,\n\tCCol,\n\tCForm,\n\tCInput,\n\tCInputCheckbox,\n\tCRow\n} from '@coreui/vue/src';\nimport {extend, ValidationObserver, ValidationProvider} from 'vee-validate';\nimport {integer, required} from 'vee-validate/dist/rules';\nimport InterfaceMappings from '../../components/Config/InterfaceMappings';\nimport InterfacePorts from '../../components/Config/InterfacePorts';\nimport FormErrorHandler from '../../helpers/FormErrorHandler';\nimport DaemonConfigurationService from '../../services/DaemonConfigurationService';\n\nexport default {\n\tname: 'IqrfSpi',\n\tcomponents: {\n\t\tCButton,\n\t\tCCard,\n\t\tCCardBody,\n\t\tCCardHeader,\n\t\tCCol,\n\t\tCForm,\n\t\tCInput,\n\t\tCInputCheckbox,\n\t\tCRow,\n\t\tInterfaceMappings,\n\t\tInterfacePorts,\n\t\tValidationObserver,\n\t\tValidationProvider,\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tcomponentName: 'iqrf::IqrfSpi',\n\t\t\tconfiguration: {\n\t\t\t\tinstance: null,\n\t\t\t\tIqrfInterface: null,\n\t\t\t\tpowerEnableGpioPin: null,\n\t\t\t\tbusEnableGpioPin: null,\n\t\t\t\tpgmSwitchGpioPin: null,\n\t\t\t\tspiReset: null,\n\t\t\t},\n\t\t\tinstance: null,\n\t\t};\n\t},\n\tcreated() {\n\t\textend('integer', integer);\n\t\textend('required', required);\n\t\tthis.getConfig();\n\t},\n\tmethods: {\n\t\tgetConfig() {\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\tDaemonConfigurationService.getComponent(this.componentName)\n\t\t\t\t.then((response) => {\n\t\t\t\t\tthis.$store.commit('spinner/HIDE');\n\t\t\t\t\tif (response.data.instances.length > 0) {\n\t\t\t\t\t\tthis.configuration = response.data.instances[0];\n\t\t\t\t\t\tthis.instance = this.configuration.instance;\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch((error) => FormErrorHandler.configError(error));\n\t\t},\n\t\tsaveConfig() {\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\tif (this.instance !== null) {\n\t\t\t\tDaemonConfigurationService.updateInstance(this.componentName, this.instance, this.configuration)\n\t\t\t\t\t.then(() => this.successfulSave())\n\t\t\t\t\t.catch((error) => FormErrorHandler.configError(error));\n\t\t\t} else {\n\t\t\t\tDaemonConfigurationService.createInstance(this.componentName, this.configuration)\n\t\t\t\t\t.then(() => this.successfulSave())\n\t\t\t\t\t.catch((error) => FormErrorHandler.configError(error));\n\t\t\t}\n\t\t},\n\t\tsuccessfulSave() {\n\t\t\tthis.$store.commit('spinner/HIDE');\n\t\t\tthis.$toast.success(this.$t('config.success').toString());\n\t\t},\n\t\tupdateMapping(mapping) {\n\t\t\tObject.assign(this.configuration, mapping);\n\t\t},\n\t\tupdatePort(port) {\n\t\t\tthis.configuration.IqrfInterface = port;\n\t\t},\n\t},\n\tmetaInfo: {\n\t\ttitle: 'config.iqrfSpi.title',\n\t},\n};\n</script>\n","import { render, staticRenderFns } from \"./IqrfSpi.vue?vue&type=template&id=0e57ab14&\"\nimport script from \"./IqrfSpi.vue?vue&type=script&lang=js&\"\nexport * from \"./IqrfSpi.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('0e57ab14')) {\n      api.createRecord('0e57ab14', component.options)\n    } else {\n      api.reload('0e57ab14', component.options)\n    }\n    module.hot.accept(\"./IqrfSpi.vue?vue&type=template&id=0e57ab14&\", function () {\n      api.rerender('0e57ab14', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/pages/Config/IqrfSpi.vue\"\nexport default component.exports","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\n        \"CCard\",\n        [\n          _c(\n            \"CCardBody\",\n            [\n              _c(\"ValidationObserver\", {\n                scopedSlots: _vm._u([\n                  {\n                    key: \"default\",\n                    fn: function(ref) {\n                      var invalid = ref.invalid\n                      return [\n                        _c(\n                          \"CForm\",\n                          {\n                            on: {\n                              submit: function($event) {\n                                $event.preventDefault()\n                                return _vm.saveConfig($event)\n                              }\n                            }\n                          },\n                          [\n                            _c(\"ValidationProvider\", {\n                              attrs: {\n                                rules: \"required\",\n                                \"custom-messages\": {\n                                  required:\n                                    \"config.iqrfUart.form.messages.instance\"\n                                }\n                              },\n                              scopedSlots: _vm._u(\n                                [\n                                  {\n                                    key: \"default\",\n                                    fn: function(ref) {\n                                      var errors = ref.errors\n                                      var touched = ref.touched\n                                      var valid = ref.valid\n                                      return [\n                                        _c(\"CInput\", {\n                                          attrs: {\n                                            label: _vm.$t(\n                                              \"config.iqrfUart.form.instance\"\n                                            ),\n                                            \"is-valid\": touched ? valid : null,\n                                            \"invalid-feedback\": _vm.$t(\n                                              errors[0]\n                                            )\n                                          },\n                                          model: {\n                                            value: _vm.configuration.instance,\n                                            callback: function($$v) {\n                                              _vm.$set(\n                                                _vm.configuration,\n                                                \"instance\",\n                                                $$v\n                                              )\n                                            },\n                                            expression: \"configuration.instance\"\n                                          }\n                                        })\n                                      ]\n                                    }\n                                  }\n                                ],\n                                null,\n                                true\n                              )\n                            }),\n                            _vm._v(\" \"),\n                            _c(\"ValidationProvider\", {\n                              attrs: {\n                                rules: \"required\",\n                                \"custom-messages\": {\n                                  required:\n                                    \"config.iqrfUart.form.messages.interface\"\n                                }\n                              },\n                              scopedSlots: _vm._u(\n                                [\n                                  {\n                                    key: \"default\",\n                                    fn: function(ref) {\n                                      var errors = ref.errors\n                                      var touched = ref.touched\n                                      var valid = ref.valid\n                                      return [\n                                        _c(\"CInput\", {\n                                          attrs: {\n                                            label: _vm.$t(\n                                              \"config.iqrfUart.form.IqrfInterface\"\n                                            ),\n                                            \"is-valid\": touched ? valid : null,\n                                            \"invalid-feedback\": _vm.$t(\n                                              errors[0]\n                                            )\n                                          },\n                                          model: {\n                                            value:\n                                              _vm.configuration.IqrfInterface,\n                                            callback: function($$v) {\n                                              _vm.$set(\n                                                _vm.configuration,\n                                                \"IqrfInterface\",\n                                                $$v\n                                              )\n                                            },\n                                            expression:\n                                              \"configuration.IqrfInterface\"\n                                          }\n                                        })\n                                      ]\n                                    }\n                                  }\n                                ],\n                                null,\n                                true\n                              )\n                            }),\n                            _vm._v(\" \"),\n                            _c(\"ValidationProvider\", {\n                              attrs: {\n                                rules: \"required\",\n                                \"custom-messages\": {\n                                  required:\n                                    \"config.iqrfUart.form.messages.baudRate\"\n                                }\n                              },\n                              scopedSlots: _vm._u(\n                                [\n                                  {\n                                    key: \"default\",\n                                    fn: function(ref) {\n                                      var valid = ref.valid\n                                      var touched = ref.touched\n                                      var errors = ref.errors\n                                      return [\n                                        _c(\"CSelect\", {\n                                          attrs: {\n                                            value: _vm.configuration.baudRate,\n                                            label: _vm.$t(\n                                              \"config.iqrfUart.form.baudRate\"\n                                            ),\n                                            \"is-valid\": touched ? valid : null,\n                                            \"invalid-feedback\": _vm.$t(\n                                              errors[0]\n                                            ),\n                                            placeholder: _vm.$t(\n                                              \"config.iqrfUart.form.messages.baudRate\"\n                                            ),\n                                            options: _vm.baudRates\n                                          },\n                                          on: {\n                                            \"update:value\": function($event) {\n                                              return _vm.$set(\n                                                _vm.configuration,\n                                                \"baudRate\",\n                                                $event\n                                              )\n                                            }\n                                          }\n                                        })\n                                      ]\n                                    }\n                                  }\n                                ],\n                                null,\n                                true\n                              )\n                            }),\n                            _vm._v(\" \"),\n                            _c(\"ValidationProvider\", {\n                              attrs: {\n                                rules: \"required|integer\",\n                                \"custom-messages\": {\n                                  integer:\n                                    \"config.iqrfUart.form.messages.powerEnableGpioPin\",\n                                  required:\n                                    \"config.iqrfUart.form.messages.powerEnableGpioPin\"\n                                }\n                              },\n                              scopedSlots: _vm._u(\n                                [\n                                  {\n                                    key: \"default\",\n                                    fn: function(ref) {\n                                      var errors = ref.errors\n                                      var touched = ref.touched\n                                      var valid = ref.valid\n                                      return [\n                                        _c(\"CInput\", {\n                                          attrs: {\n                                            label: _vm.$t(\n                                              \"config.iqrfUart.form.powerEnableGpioPin\"\n                                            ),\n                                            \"is-valid\": touched ? valid : null,\n                                            \"invalid-feedback\": _vm.$t(\n                                              errors[0]\n                                            )\n                                          },\n                                          model: {\n                                            value:\n                                              _vm.configuration\n                                                .powerEnableGpioPin,\n                                            callback: function($$v) {\n                                              _vm.$set(\n                                                _vm.configuration,\n                                                \"powerEnableGpioPin\",\n                                                $$v\n                                              )\n                                            },\n                                            expression:\n                                              \"configuration.powerEnableGpioPin\"\n                                          }\n                                        })\n                                      ]\n                                    }\n                                  }\n                                ],\n                                null,\n                                true\n                              )\n                            }),\n                            _vm._v(\" \"),\n                            _c(\"ValidationProvider\", {\n                              attrs: {\n                                rules: \"required|integer\",\n                                \"custom-messages\": {\n                                  integer:\n                                    \"config.iqrfUart.form.messages.busEnableGpioPin\",\n                                  required:\n                                    \"config.iqrfUart.form.messages.busEnableGpioPin\"\n                                }\n                              },\n                              scopedSlots: _vm._u(\n                                [\n                                  {\n                                    key: \"default\",\n                                    fn: function(ref) {\n                                      var errors = ref.errors\n                                      var touched = ref.touched\n                                      var valid = ref.valid\n                                      return [\n                                        _c(\"CInput\", {\n                                          attrs: {\n                                            label: _vm.$t(\n                                              \"config.iqrfUart.form.busEnableGpioPin\"\n                                            ),\n                                            \"is-valid\": touched ? valid : null,\n                                            \"invalid-feedback\": _vm.$t(\n                                              errors[0]\n                                            )\n                                          },\n                                          model: {\n                                            value:\n                                              _vm.configuration\n                                                .busEnableGpioPin,\n                                            callback: function($$v) {\n                                              _vm.$set(\n                                                _vm.configuration,\n                                                \"busEnableGpioPin\",\n                                                $$v\n                                              )\n                                            },\n                                            expression:\n                                              \"configuration.busEnableGpioPin\"\n                                          }\n                                        })\n                                      ]\n                                    }\n                                  }\n                                ],\n                                null,\n                                true\n                              )\n                            }),\n                            _vm._v(\" \"),\n                            _c(\n                              \"CButton\",\n                              {\n                                attrs: {\n                                  type: \"submit\",\n                                  color: \"primary\",\n                                  disabled: invalid\n                                }\n                              },\n                              [\n                                _vm._v(\n                                  \"\\n\\t\\t\\t\\t\\t\\t\" +\n                                    _vm._s(_vm.$t(\"forms.save\")) +\n                                    \"\\n\\t\\t\\t\\t\\t\"\n                                )\n                              ]\n                            )\n                          ],\n                          1\n                        )\n                      ]\n                    }\n                  }\n                ])\n              })\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"CCard\",\n        [\n          _c(\"CCardHeader\", [\n            _vm._v(_vm._s(_vm.$t(\"config.iqrfUart.mappings\")))\n          ]),\n          _vm._v(\" \"),\n          _c(\n            \"CCardBody\",\n            [\n              _c(\n                \"CRow\",\n                [\n                  _c(\n                    \"CCol\",\n                    { attrs: { md: \"6\" } },\n                    [\n                      _c(\"InterfaceMappings\", {\n                        attrs: { \"interface-type\": \"uart\" },\n                        on: { updateMapping: _vm.updateMapping }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"CCol\",\n                    { attrs: { md: \"6\" } },\n                    [\n                      _c(\"InterfacePorts\", {\n                        attrs: { \"interface-type\": \"uart\" },\n                        on: { updatePort: _vm.updatePort }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import Vue from 'vue';\nimport { CButton, CCard, CCardBody, CCardHeader, CCol, CForm, CInput, CRow, CSelect, } from '@coreui/vue/src';\nimport { extend, ValidationObserver, ValidationProvider } from 'vee-validate';\nimport { integer, required } from 'vee-validate/dist/rules';\nimport InterfaceMappings from '../../components/Config/InterfaceMappings';\nimport InterfacePorts from '../../components/Config/InterfacePorts';\nimport FormErrorHandler from '../../helpers/FormErrorHandler';\nimport DaemonConfigurationService from '../../services/DaemonConfigurationService';\nexport default Vue.extend({\n    name: 'IqrfUart',\n    components: {\n        CButton: CButton,\n        CCard: CCard,\n        CCardBody: CCardBody,\n        CCardHeader: CCardHeader,\n        CCol: CCol,\n        CForm: CForm,\n        CInput: CInput,\n        CRow: CRow,\n        CSelect: CSelect,\n        InterfaceMappings: InterfaceMappings,\n        InterfacePorts: InterfacePorts,\n        ValidationObserver: ValidationObserver,\n        ValidationProvider: ValidationProvider,\n    },\n    data: function () {\n        return {\n            componentName: 'iqrf::IqrfUart',\n            configuration: {\n                instance: null,\n                IqrfInterface: null,\n                baudRate: null,\n                powerEnableGpioPin: null,\n                busEnableGpioPin: null,\n            },\n            instance: null,\n        };\n    },\n    computed: {\n        baudRates: function () {\n            var baudRates = [1200, 2400, 4800, 9600, 19200, 38400, 57600, 115200, 230400];\n            return baudRates.map(function (baudRate) { return ({ value: baudRate, label: baudRate + ' Bd' }); });\n        }\n    },\n    created: function () {\n        extend('integer', integer);\n        extend('required', required);\n        this.getConfig();\n    },\n    methods: {\n        getConfig: function () {\n            var _this = this;\n            this.$store.commit('spinner/SHOW');\n            DaemonConfigurationService.getComponent(this.componentName)\n                .then(function (response) {\n                _this.$store.commit('spinner/HIDE');\n                if (response.data.instances.length > 0) {\n                    _this.configuration = response.data.instances[0];\n                    _this.instance = _this.configuration.instance;\n                }\n            })\n                .catch(function (error) { return FormErrorHandler.configError(error); });\n        },\n        saveConfig: function () {\n            var _this = this;\n            this.$store.commit('spinner/SHOW');\n            if (this.instance !== null) {\n                DaemonConfigurationService.updateInstance(this.componentName, this.instance, this.configuration)\n                    .then(function () { return _this.successfulSave(); })\n                    .catch(function (error) { return FormErrorHandler.configError(error); });\n            }\n            else {\n                DaemonConfigurationService.createInstance(this.componentName, this.configuration)\n                    .then(function () { return _this.successfulSave(); })\n                    .catch(function (error) { return FormErrorHandler.configError(error); });\n            }\n        },\n        successfulSave: function () {\n            this.$store.commit('spinner/HIDE');\n            this.$toast.success(this.$t('config.success').toString());\n        },\n        updateMapping: function (mapping) {\n            Object.assign(this.configuration, mapping);\n        },\n        updatePort: function (port) {\n            this.configuration.IqrfInterface = port;\n        },\n    },\n    metaInfo: {\n        title: 'config.iqrfUart.title',\n    },\n});\n","import mod from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./IqrfUart.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./IqrfUart.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./IqrfUart.vue?vue&type=template&id=29e94918&\"\nimport script from \"./IqrfUart.vue?vue&type=script&lang=ts&\"\nexport * from \"./IqrfUart.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('29e94918')) {\n      api.createRecord('29e94918', component.options)\n    } else {\n      api.reload('29e94918', component.options)\n    }\n    module.hot.accept(\"./IqrfUart.vue?vue&type=template&id=29e94918&\", function () {\n      api.rerender('29e94918', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/pages/Config/IqrfUart.vue\"\nexport default component.exports","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"CCard\",\n    [\n      _c(\n        \"CCardBody\",\n        [\n          _c(\"ValidationObserver\", {\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(ref) {\n                  var invalid = ref.invalid\n                  return [\n                    _c(\n                      \"CForm\",\n                      {\n                        on: {\n                          submit: function($event) {\n                            $event.preventDefault()\n                            return _vm.saveConfig($event)\n                          }\n                        }\n                      },\n                      [\n                        _c(\"ValidationProvider\", {\n                          attrs: {\n                            rules: \"required\",\n                            \"custom-messages\": {\n                              required:\n                                \"config.jsonMngMetaDataApi.form.messages.instance\"\n                            }\n                          },\n                          scopedSlots: _vm._u(\n                            [\n                              {\n                                key: \"default\",\n                                fn: function(ref) {\n                                  var errors = ref.errors\n                                  var touched = ref.touched\n                                  var valid = ref.valid\n                                  return [\n                                    _c(\"CInput\", {\n                                      attrs: {\n                                        label: _vm.$t(\n                                          \"config.jsonMngMetaDataApi.form.instance\"\n                                        ),\n                                        \"is-valid\": touched ? valid : null,\n                                        \"invalid-feedback\": _vm.$t(errors[0])\n                                      },\n                                      model: {\n                                        value: _vm.configuration.instance,\n                                        callback: function($$v) {\n                                          _vm.$set(\n                                            _vm.configuration,\n                                            \"instance\",\n                                            $$v\n                                          )\n                                        },\n                                        expression: \"configuration.instance\"\n                                      }\n                                    })\n                                  ]\n                                }\n                              }\n                            ],\n                            null,\n                            true\n                          )\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"CInputCheckbox\", {\n                          attrs: {\n                            checked: _vm.configuration.metaDataToMessages,\n                            label: _vm.$t(\n                              \"config.jsonMngMetaDataApi.form.metaDataToMessages\"\n                            )\n                          },\n                          on: {\n                            \"update:checked\": function($event) {\n                              return _vm.$set(\n                                _vm.configuration,\n                                \"metaDataToMessages\",\n                                $event\n                              )\n                            }\n                          }\n                        }),\n                        _vm._v(\" \"),\n                        _c(\n                          \"CButton\",\n                          {\n                            attrs: {\n                              type: \"submit\",\n                              color: \"primary\",\n                              disabled: invalid\n                            }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n\\t\\t\\t\\t\\t\" +\n                                _vm._s(_vm.$t(\"forms.save\")) +\n                                \"\\n\\t\\t\\t\\t\"\n                            )\n                          ]\n                        )\n                      ],\n                      1\n                    )\n                  ]\n                }\n              }\n            ])\n          })\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import Vue from 'vue';\nimport { CButton, CCard, CCardBody, CForm, CInput, CInputCheckbox } from '@coreui/vue/src';\nimport { extend, ValidationObserver, ValidationProvider } from 'vee-validate';\nimport { required } from 'vee-validate/dist/rules';\nimport FormErrorHandler from '../../helpers/FormErrorHandler';\nimport DaemonConfigurationService from '../../services/DaemonConfigurationService';\nexport default Vue.extend({\n    name: 'JsonMngMetaDataApi',\n    components: {\n        CButton: CButton,\n        CCard: CCard,\n        CCardBody: CCardBody,\n        CForm: CForm,\n        CInput: CInput,\n        CInputCheckbox: CInputCheckbox,\n        ValidationObserver: ValidationObserver,\n        ValidationProvider: ValidationProvider\n    },\n    data: function () {\n        return {\n            componentName: 'iqrf::JsonMngMetaDataApi',\n            configuration: {\n                instance: null,\n                metaDataToMessages: false,\n            },\n            instance: null,\n        };\n    },\n    created: function () {\n        extend('required', required);\n        this.getConfig();\n    },\n    methods: {\n        getConfig: function () {\n            var _this = this;\n            this.$store.commit('spinner/SHOW');\n            DaemonConfigurationService.getComponent(this.componentName)\n                .then(function (response) {\n                _this.$store.commit('spinner/HIDE');\n                if (response.data.instances.length > 0) {\n                    _this.configuration = response.data.instances[0];\n                    _this.instance = _this.configuration.instance;\n                }\n            })\n                .catch(function (error) { return FormErrorHandler.configError(error); });\n        },\n        saveConfig: function () {\n            var _this = this;\n            this.$store.commit('spinner/SHOW');\n            if (this.instance !== null) {\n                DaemonConfigurationService.updateInstance(this.componentName, this.instance, this.configuration)\n                    .then(function () { return _this.successfulSave(); })\n                    .catch(function (error) { return FormErrorHandler.configError(error); });\n            }\n            else {\n                DaemonConfigurationService.createInstance(this.componentName, this.configuration)\n                    .then(function () { return _this.successfulSave(); })\n                    .catch(function (error) { return FormErrorHandler.configError(error); });\n            }\n        },\n        successfulSave: function () {\n            this.$store.commit('spinner/HIDE');\n            this.$toast.success(this.$t('config.success').toString());\n        }\n    },\n    metaInfo: {\n        title: 'config.jsonMngMetaDataApi.title',\n    },\n});\n","import mod from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./JsonMngMetaDataApi.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./JsonMngMetaDataApi.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./JsonMngMetaDataApi.vue?vue&type=template&id=9c4c3292&\"\nimport script from \"./JsonMngMetaDataApi.vue?vue&type=script&lang=ts&\"\nexport * from \"./JsonMngMetaDataApi.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('9c4c3292')) {\n      api.createRecord('9c4c3292', component.options)\n    } else {\n      api.reload('9c4c3292', component.options)\n    }\n    module.hot.accept(\"./JsonMngMetaDataApi.vue?vue&type=template&id=9c4c3292&\", function () {\n      api.rerender('9c4c3292', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/pages/Config/JsonMngMetaDataApi.vue\"\nexport default component.exports","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"CCard\",\n    [\n      _c(\n        \"CCardBody\",\n        [\n          _c(\"ValidationObserver\", {\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(ref) {\n                  var invalid = ref.invalid\n                  return [\n                    _c(\n                      \"CForm\",\n                      {\n                        on: {\n                          submit: function($event) {\n                            $event.preventDefault()\n                            return _vm.saveConfig($event)\n                          }\n                        }\n                      },\n                      [\n                        _c(\"ValidationProvider\", {\n                          attrs: {\n                            rules: \"required\",\n                            \"custom-messages\": {\n                              required:\n                                \"config.jsonRawApi.form.messages.instance\"\n                            }\n                          },\n                          scopedSlots: _vm._u(\n                            [\n                              {\n                                key: \"default\",\n                                fn: function(ref) {\n                                  var errors = ref.errors\n                                  var touched = ref.touched\n                                  var valid = ref.valid\n                                  return [\n                                    _c(\"CInput\", {\n                                      attrs: {\n                                        label: _vm.$t(\n                                          \"config.jsonRawApi.form.instance\"\n                                        ),\n                                        \"is-valid\": touched ? valid : null,\n                                        \"invalid-feedback\": _vm.$t(errors[0])\n                                      },\n                                      model: {\n                                        value: _vm.configuration.instance,\n                                        callback: function($$v) {\n                                          _vm.$set(\n                                            _vm.configuration,\n                                            \"instance\",\n                                            $$v\n                                          )\n                                        },\n                                        expression: \"configuration.instance\"\n                                      }\n                                    })\n                                  ]\n                                }\n                              }\n                            ],\n                            null,\n                            true\n                          )\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"CInputCheckbox\", {\n                          attrs: {\n                            checked: _vm.configuration.asyncDpaMessage,\n                            label: _vm.$t(\n                              \"config.jsonRawApi.form.asyncDpaMessage\"\n                            )\n                          },\n                          on: {\n                            \"update:checked\": function($event) {\n                              return _vm.$set(\n                                _vm.configuration,\n                                \"asyncDpaMessage\",\n                                $event\n                              )\n                            }\n                          }\n                        }),\n                        _vm._v(\" \"),\n                        _c(\n                          \"CButton\",\n                          {\n                            attrs: {\n                              type: \"submit\",\n                              color: \"primary\",\n                              disabled: invalid\n                            }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n\\t\\t\\t\\t\\t\" +\n                                _vm._s(_vm.$t(\"forms.save\")) +\n                                \"\\n\\t\\t\\t\\t\"\n                            )\n                          ]\n                        )\n                      ],\n                      1\n                    )\n                  ]\n                }\n              }\n            ])\n          })\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import Vue from 'vue';\nimport { CButton, CCard, CCardBody, CForm, CInput, CInputCheckbox } from '@coreui/vue/src';\nimport { extend, ValidationObserver, ValidationProvider } from 'vee-validate';\nimport { required } from 'vee-validate/dist/rules';\nimport DaemonConfigurationService from '../../services/DaemonConfigurationService';\nimport FormErrorHandler from '../../helpers/FormErrorHandler';\nexport default Vue.extend({\n    name: 'JsonRawApi',\n    components: {\n        CButton: CButton,\n        CCard: CCard,\n        CCardBody: CCardBody,\n        CForm: CForm,\n        CInput: CInput,\n        CInputCheckbox: CInputCheckbox,\n        ValidationObserver: ValidationObserver,\n        ValidationProvider: ValidationProvider\n    },\n    data: function () {\n        return {\n            componentName: 'iqrf::JsonDpaApiRaw',\n            configuration: {\n                instance: null,\n                asyncDpaMessage: false,\n            },\n            instance: null,\n        };\n    },\n    created: function () {\n        extend('required', required);\n        this.getConfig();\n    },\n    methods: {\n        getConfig: function () {\n            var _this = this;\n            this.$store.commit('spinner/SHOW');\n            DaemonConfigurationService.getComponent(this.componentName)\n                .then(function (response) {\n                _this.$store.commit('spinner/HIDE');\n                if (response.data.instances.length > 0) {\n                    _this.configuration = response.data.instances[0];\n                    _this.instance = _this.configuration.instance;\n                }\n            })\n                .catch(function (error) { return FormErrorHandler.configError(error); });\n        },\n        saveConfig: function () {\n            var _this = this;\n            this.$store.commit('spinner/SHOW');\n            if (this.instance !== null) {\n                DaemonConfigurationService.updateInstance(this.componentName, this.instance, this.configuration)\n                    .then(function () { return _this.successfulSave(); })\n                    .catch(function (error) { return FormErrorHandler.configError(error); });\n            }\n            else {\n                DaemonConfigurationService.createInstance(this.componentName, this.configuration)\n                    .then(function () { return _this.successfulSave(); })\n                    .catch(function (error) { return FormErrorHandler.configError(error); });\n            }\n        },\n        successfulSave: function () {\n            this.$store.commit('spinner/HIDE');\n            this.$toast.success(this.$t('config.success'));\n        }\n    },\n    metaInfo: {\n        title: 'config.jsonRawApi.title'\n    }\n});\n","import mod from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./JsonRawApi.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./JsonRawApi.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./JsonRawApi.vue?vue&type=template&id=95e98cf8&\"\nimport script from \"./JsonRawApi.vue?vue&type=script&lang=ts&\"\nexport * from \"./JsonRawApi.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('95e98cf8')) {\n      api.createRecord('95e98cf8', component.options)\n    } else {\n      api.reload('95e98cf8', component.options)\n    }\n    module.hot.accept(\"./JsonRawApi.vue?vue&type=template&id=95e98cf8&\", function () {\n      api.rerender('95e98cf8', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/pages/Config/JsonRawApi.vue\"\nexport default component.exports","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"CCard\",\n    [\n      _c(\n        \"CCardBody\",\n        [\n          _c(\"ValidationObserver\", {\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(ref) {\n                  var invalid = ref.invalid\n                  return [\n                    _c(\n                      \"CForm\",\n                      {\n                        on: {\n                          submit: function($event) {\n                            $event.preventDefault()\n                            return _vm.saveConfig($event)\n                          }\n                        }\n                      },\n                      [\n                        _c(\"ValidationProvider\", {\n                          attrs: {\n                            rules: \"required\",\n                            \"custom-messages\": {\n                              required:\n                                \"config.jsonSplitter.form.messages.instance\"\n                            }\n                          },\n                          scopedSlots: _vm._u(\n                            [\n                              {\n                                key: \"default\",\n                                fn: function(ref) {\n                                  var errors = ref.errors\n                                  var touched = ref.touched\n                                  var valid = ref.valid\n                                  return [\n                                    _c(\"CInput\", {\n                                      attrs: {\n                                        label: _vm.$t(\n                                          \"config.jsonSplitter.form.instance\"\n                                        ),\n                                        \"is-valid\": touched ? valid : null,\n                                        \"invalid-feedback\": _vm.$t(errors[0])\n                                      },\n                                      model: {\n                                        value: _vm.configuration.instance,\n                                        callback: function($$v) {\n                                          _vm.$set(\n                                            _vm.configuration,\n                                            \"instance\",\n                                            $$v\n                                          )\n                                        },\n                                        expression: \"configuration.instance\"\n                                      }\n                                    })\n                                  ]\n                                }\n                              }\n                            ],\n                            null,\n                            true\n                          )\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"CInputCheckbox\", {\n                          attrs: {\n                            checked: _vm.configuration.validateJsonResponse,\n                            label: _vm.$t(\n                              \"config.jsonSplitter.form.validateJsonResponse\"\n                            )\n                          },\n                          on: {\n                            \"update:checked\": function($event) {\n                              return _vm.$set(\n                                _vm.configuration,\n                                \"validateJsonResponse\",\n                                $event\n                              )\n                            }\n                          }\n                        }),\n                        _vm._v(\" \"),\n                        _c(\n                          \"CButton\",\n                          {\n                            attrs: {\n                              type: \"submit\",\n                              color: \"primary\",\n                              disabled: invalid\n                            }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n\\t\\t\\t\\t\\t\" +\n                                _vm._s(_vm.$t(\"forms.save\")) +\n                                \"\\n\\t\\t\\t\\t\"\n                            )\n                          ]\n                        )\n                      ],\n                      1\n                    )\n                  ]\n                }\n              }\n            ])\n          })\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import Vue from 'vue';\nimport { CButton, CCard, CCardBody, CForm, CInput, CInputCheckbox } from '@coreui/vue/src';\nimport { extend, ValidationObserver, ValidationProvider } from 'vee-validate';\nimport { required } from 'vee-validate/dist/rules';\nimport DaemonConfigurationService from '../../services/DaemonConfigurationService';\nimport FormErrorHandler from '../../helpers/FormErrorHandler';\nexport default Vue.extend({\n    name: 'JsonSplitter',\n    components: {\n        CButton: CButton,\n        CCard: CCard,\n        CCardBody: CCardBody,\n        CForm: CForm,\n        CInput: CInput,\n        CInputCheckbox: CInputCheckbox,\n        ValidationObserver: ValidationObserver,\n        ValidationProvider: ValidationProvider,\n    },\n    data: function () {\n        return {\n            componentName: 'iqrf::JsonSplitter',\n            configuration: {\n                instance: null,\n                validateJsonResponse: false,\n            },\n            instance: null,\n        };\n    },\n    created: function () {\n        extend('required', required);\n        this.getConfig();\n    },\n    methods: {\n        getConfig: function () {\n            var _this = this;\n            this.$store.commit('spinner/SHOW');\n            DaemonConfigurationService.getComponent(this.componentName)\n                .then(function (response) {\n                _this.$store.commit('spinner/HIDE');\n                if (response.data.instances.length > 0) {\n                    _this.configuration = response.data.instances[0];\n                    _this.instance = _this.configuration.instance;\n                }\n            })\n                .catch(function (error) { return FormErrorHandler.configError(error); });\n        },\n        saveConfig: function () {\n            var _this = this;\n            this.$store.commit('spinner/SHOW');\n            if (this.instance !== null) {\n                DaemonConfigurationService.updateInstance(this.componentName, this.instance, this.configuration)\n                    .then(function () { return _this.successfulSave(); })\n                    .catch(function (error) { return FormErrorHandler.configError(error); });\n            }\n            else {\n                DaemonConfigurationService.createInstance(this.componentName, this.configuration)\n                    .then(function () { return _this.successfulSave(); })\n                    .catch(function (error) { return FormErrorHandler.configError(error); });\n            }\n        },\n        successfulSave: function () {\n            this.$store.commit('spinner/HIDE');\n            this.$toast.success(this.$t('config.success').toString());\n        },\n    },\n    metaInfo: {\n        title: 'config.jsonSplitter.title',\n    },\n});\n","import mod from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./JsonSplitter.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./JsonSplitter.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./JsonSplitter.vue?vue&type=template&id=4eaff679&\"\nimport script from \"./JsonSplitter.vue?vue&type=script&lang=ts&\"\nexport * from \"./JsonSplitter.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('4eaff679')) {\n      api.createRecord('4eaff679', component.options)\n    } else {\n      api.reload('4eaff679', component.options)\n    }\n    module.hot.accept(\"./JsonSplitter.vue?vue&type=template&id=4eaff679&\", function () {\n      api.rerender('4eaff679', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/pages/Config/JsonSplitter.vue\"\nexport default component.exports","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"CCard\",\n    { attrs: { \"body-wrapper\": \"\" } },\n    [\n      _c(\"ValidationObserver\", {\n        scopedSlots: _vm._u([\n          {\n            key: \"default\",\n            fn: function(ref) {\n              var invalid = ref.invalid\n              return [\n                _c(\n                  \"CForm\",\n                  {\n                    on: {\n                      submit: function($event) {\n                        $event.preventDefault()\n                        return _vm.saveConfig($event)\n                      }\n                    }\n                  },\n                  [\n                    _c(\"ValidationProvider\", {\n                      attrs: {\n                        rules: \"required\",\n                        \"custom-messages\": {\n                          required: \"config.mq.form.messages.instance\"\n                        }\n                      },\n                      scopedSlots: _vm._u(\n                        [\n                          {\n                            key: \"default\",\n                            fn: function(ref) {\n                              var errors = ref.errors\n                              var touched = ref.touched\n                              var valid = ref.valid\n                              return [\n                                _c(\"CInput\", {\n                                  attrs: {\n                                    label: _vm.$t(\n                                      \"config.monitor.form.instance\"\n                                    ),\n                                    \"is-valid\": touched ? valid : null,\n                                    \"invalid-feedback\": _vm.$t(errors[0])\n                                  },\n                                  model: {\n                                    value: _vm.monitor.instance,\n                                    callback: function($$v) {\n                                      _vm.$set(_vm.monitor, \"instance\", $$v)\n                                    },\n                                    expression: \"monitor.instance\"\n                                  }\n                                })\n                              ]\n                            }\n                          }\n                        ],\n                        null,\n                        true\n                      )\n                    }),\n                    _vm._v(\" \"),\n                    _c(\"ValidationProvider\", {\n                      attrs: {\n                        rules: \"integer|required\",\n                        \"custom-messages\": {\n                          required: \"config.monitor.form.messages.reportPeriod\",\n                          integer: \"forms.messages.integer\"\n                        }\n                      },\n                      scopedSlots: _vm._u(\n                        [\n                          {\n                            key: \"default\",\n                            fn: function(ref) {\n                              var errors = ref.errors\n                              var touched = ref.touched\n                              var valid = ref.valid\n                              return [\n                                _c(\"CInput\", {\n                                  attrs: {\n                                    type: \"number\",\n                                    label: _vm.$t(\n                                      \"config.monitor.form.reportPeriod\"\n                                    ),\n                                    \"is-valid\": touched ? valid : null,\n                                    \"invalid-feedback\": _vm.$t(errors[0])\n                                  },\n                                  model: {\n                                    value: _vm.monitor.reportPeriod,\n                                    callback: function($$v) {\n                                      _vm.$set(\n                                        _vm.monitor,\n                                        \"reportPeriod\",\n                                        _vm._n($$v)\n                                      )\n                                    },\n                                    expression: \"monitor.reportPeriod\"\n                                  }\n                                })\n                              ]\n                            }\n                          }\n                        ],\n                        null,\n                        true\n                      )\n                    }),\n                    _vm._v(\" \"),\n                    _c(\"ValidationProvider\", {\n                      attrs: {\n                        rules: \"integer|required\",\n                        \"custom-messages\": {\n                          required:\n                            \"config.monitor.form.messages.WebsocketPort\",\n                          integer: \"forms.messages.integer\"\n                        }\n                      },\n                      scopedSlots: _vm._u(\n                        [\n                          {\n                            key: \"default\",\n                            fn: function(ref) {\n                              var errors = ref.errors\n                              var touched = ref.touched\n                              var valid = ref.valid\n                              return [\n                                _c(\"CInput\", {\n                                  attrs: {\n                                    type: \"number\",\n                                    label: _vm.$t(\n                                      \"config.monitor.form.WebsocketPort\"\n                                    ),\n                                    \"is-valid\": touched ? valid : null,\n                                    \"invalid-feedback\": _vm.$t(errors[0])\n                                  },\n                                  model: {\n                                    value: _vm.webSocket.WebsocketPort,\n                                    callback: function($$v) {\n                                      _vm.$set(\n                                        _vm.webSocket,\n                                        \"WebsocketPort\",\n                                        _vm._n($$v)\n                                      )\n                                    },\n                                    expression: \"webSocket.WebsocketPort\"\n                                  }\n                                })\n                              ]\n                            }\n                          }\n                        ],\n                        null,\n                        true\n                      )\n                    }),\n                    _vm._v(\" \"),\n                    _c(\"CInputCheckbox\", {\n                      attrs: {\n                        checked: _vm.webSocket.acceptOnlyLocalhost,\n                        label: _vm.$t(\"config.monitor.form.acceptOnlyLocalhost\")\n                      },\n                      on: {\n                        \"update:checked\": function($event) {\n                          return _vm.$set(\n                            _vm.webSocket,\n                            \"acceptOnlyLocalhost\",\n                            $event\n                          )\n                        }\n                      }\n                    }),\n                    _vm._v(\" \"),\n                    _c(\n                      \"CButton\",\n                      {\n                        attrs: {\n                          type: \"submit\",\n                          color: \"primary\",\n                          disabled: invalid\n                        }\n                      },\n                      [\n                        _vm._v(\n                          \"\\n\\t\\t\\t\\t\" + _vm._s(_vm.submitButton) + \"\\n\\t\\t\\t\"\n                        )\n                      ]\n                    )\n                  ],\n                  1\n                )\n              ]\n            }\n          }\n        ])\n      })\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","<template>\n\t<CCard body-wrapper>\n\t\t<ValidationObserver v-slot='{ invalid }'>\n\t\t\t<CForm @submit.prevent='saveConfig'>\n\t\t\t\t<ValidationProvider\n\t\t\t\t\tv-slot='{ errors, touched, valid }'\n\t\t\t\t\trules='required'\n\t\t\t\t\t:custom-messages='{required: \"config.mq.form.messages.instance\"}'\n\t\t\t\t>\n\t\t\t\t\t<CInput\n\t\t\t\t\t\tv-model='monitor.instance'\n\t\t\t\t\t\t:label='$t(\"config.monitor.form.instance\")'\n\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t/>\n\t\t\t\t</ValidationProvider>\n\t\t\t\t<ValidationProvider\n\t\t\t\t\tv-slot='{ errors, touched, valid }'\n\t\t\t\t\trules='integer|required'\n\t\t\t\t\t:custom-messages='{\n\t\t\t\t\t\trequired: \"config.monitor.form.messages.reportPeriod\",\n\t\t\t\t\t\tinteger: \"forms.messages.integer\"\n\t\t\t\t\t}'\n\t\t\t\t>\n\t\t\t\t\t<CInput\n\t\t\t\t\t\tv-model.number='monitor.reportPeriod'\n\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t:label='$t(\"config.monitor.form.reportPeriod\")'\n\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t/>\n\t\t\t\t</ValidationProvider>\n\t\t\t\t<ValidationProvider\n\t\t\t\t\tv-slot='{ errors, touched, valid }'\n\t\t\t\t\trules='integer|required'\n\t\t\t\t\t:custom-messages='{\n\t\t\t\t\t\trequired: \"config.monitor.form.messages.WebsocketPort\",\n\t\t\t\t\t\tinteger: \"forms.messages.integer\"\n\t\t\t\t\t}'\n\t\t\t\t>\n\t\t\t\t\t<CInput\n\t\t\t\t\t\tv-model.number='webSocket.WebsocketPort'\n\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t:label='$t(\"config.monitor.form.WebsocketPort\")'\n\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t/>\n\t\t\t\t</ValidationProvider>\n\t\t\t\t<CInputCheckbox\n\t\t\t\t\t:checked.sync='webSocket.acceptOnlyLocalhost'\n\t\t\t\t\t:label='$t(\"config.monitor.form.acceptOnlyLocalhost\")'\n\t\t\t\t/>\n\t\t\t\t<CButton type='submit' color='primary' :disabled='invalid'>\n\t\t\t\t\t{{ submitButton }}\n\t\t\t\t</CButton>\n\t\t\t</CForm>\n\t\t</ValidationObserver>\n\t</CCard>\n</template>\n\n<script>\nimport {CButton, CCard, CForm, CInput, CInputCheckbox} from '@coreui/vue';\nimport {extend, ValidationObserver, ValidationProvider} from 'vee-validate';\nimport DaemonConfigurationService from '../../services/DaemonConfigurationService';\nimport FormErrorHandler from '../../helpers/FormErrorHandler';\nimport {integer, required} from 'vee-validate/dist/rules';\n\nexport default {\n\tname: 'MonitorForm',\n\tcomponents: {\n\t\tCButton,\n\t\tCCard,\n\t\tCForm,\n\t\tCInput,\n\t\tCInputCheckbox,\n\t\tValidationObserver,\n\t\tValidationProvider,\n\t},\n\tprops: {\n\t\tinstance: {\n\t\t\ttype: String,\n\t\t\trequired: false,\n\t\t\tdefault: null,\n\t\t},\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tcomponentNames: {\n\t\t\t\tmonitor: 'iqrf::MonitorService',\n\t\t\t\twebSocket: 'shape::WebsocketCppService',\n\t\t\t},\n\t\t\tinstances: {\n\t\t\t\tmonitor: null,\n\t\t\t\twebSocket: null,\n\t\t\t},\n\t\t\tmonitor: {\n\t\t\t\tinstance: null,\n\t\t\t\treportPeriod: null,\n\t\t\t\tRequiredInterfaces: []\n\t\t\t},\n\t\t\twebSocket: {\n\t\t\t\tinstance: null,\n\t\t\t\tWebsocketPort: null,\n\t\t\t\tacceptOnlyLocalhost: false,\n\t\t\t},\n\t\t};\n\t},\n\tcomputed: {\n\t\tsubmitButton() {\n\t\t\treturn this.$route.path === '/config/mq/add' ?\n\t\t\t\tthis.$t('forms.add') :\n\t\t\t\tthis.$t('forms.save');\n\t\t},\n\t},\n\tcreated() {\n\t\textend('integer', integer);\n\t\textend('required', required);\n\t\tif (this.instance !== null) {\n\t\t\tthis.getConfig();\n\t\t}\n\t},\n\tmethods: {\n\t\tgetConfig() {\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\tDaemonConfigurationService.getInstance(this.componentNames.monitor, this.instance)\n\t\t\t\t.then((response) => {\n\t\t\t\t\tthis.monitor = response.data;\n\t\t\t\t\tthis.instances.monitor = this.instance;\n\t\t\t\t\tthis.instances.webSocket = this.monitor.RequiredInterfaces[0].target.instance;\n\t\t\t\t\tDaemonConfigurationService.getInstance(this.componentNames.webSocket, this.instances.webSocket)\n\t\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\t\tthis.webSocket = response.data;\n\t\t\t\t\t\t\tthis.$store.commit('spinner/HIDE');\n\t\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tthis.$router.push('/config/monitor/');\n\t\t\t\t\tFormErrorHandler.configError(error);\n\t\t\t\t});\n\t\t},\n\t\tsaveConfig() {\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\tthis.webSocket.instance = this.monitor.instance;\n\t\t\tif (this.monitor.RequiredInterfaces.length === 0) {\n\t\t\t\tthis.monitor.RequiredInterfaces[0] = {\n\t\t\t\t\tname: 'shape::IWebsocketService',\n\t\t\t\t\ttarget: {\n\t\t\t\t\t\tinstance: this.webSocket.instance,\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tthis.monitor.RequiredInterfaces[0].target.instance = this.monitor.instance;\n\t\t\t}\n\t\t\tif (this.instance === null) {\n\t\t\t\tPromise.all([\n\t\t\t\t\tDaemonConfigurationService.createInstance(this.componentNames.webSocket, this.webSocket),\n\t\t\t\t\tDaemonConfigurationService.createInstance(this.componentNames.monitor, this.monitor),\n\t\t\t\t])\n\t\t\t\t\t.then(() => this.successfulSave())\n\t\t\t\t\t.catch((error) => FormErrorHandler.configError(error));\n\t\t\t} else {\n\t\t\t\tPromise.all([\n\t\t\t\t\tDaemonConfigurationService.updateInstance(this.componentNames.webSocket, this.instances.webSocket, this.webSocket),\n\t\t\t\t\tDaemonConfigurationService.updateInstance(this.componentNames.monitor, this.instances.monitor, this.monitor),\n\t\t\t\t])\n\t\t\t\t\t.then(() => this.successfulSave())\n\t\t\t\t\t.catch((error) => FormErrorHandler.configError(error));\n\t\t\t}\n\t\t},\n\t\tsuccessfulSave() {\n\t\t\tthis.$router.push('/config/monitor/');\n\t\t\tthis.$store.commit('spinner/HIDE');\n\t\t\tif (this.$route.path === '/config/monitor/add') {\n\t\t\t\tthis.$toast.success(\n\t\t\t\t\tthis.$t('config.monitor.messages.add.success', {instance: this.monitor.instance})\n\t\t\t\t\t\t.toString()\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tthis.$toast.success(\n\t\t\t\t\tthis.$t('config.monitor.messages.edit.success', {instance: this.monitor.instance})\n\t\t\t\t\t\t.toString()\n\t\t\t\t);\n\t\t\t}\n\t\t},\n\t},\n\tmetaInfo() {\n\t\treturn {\n\t\t\ttitle: this.$route.path === '/config/monitor/add' ?\n\t\t\t\t'config.monitor.add' :\n\t\t\t\t'config.monitor.edit',\n\t\t};\n\t},\n};\n</script>\n","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MonitorForm.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MonitorForm.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./MonitorForm.vue?vue&type=template&id=7fbbe704&\"\nimport script from \"./MonitorForm.vue?vue&type=script&lang=js&\"\nexport * from \"./MonitorForm.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('7fbbe704')) {\n      api.createRecord('7fbbe704', component.options)\n    } else {\n      api.reload('7fbbe704', component.options)\n    }\n    module.hot.accept(\"./MonitorForm.vue?vue&type=template&id=7fbbe704&\", function () {\n      api.rerender('7fbbe704', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/pages/Config/MonitorForm.vue\"\nexport default component.exports","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\n        \"CCard\",\n        [\n          _c(\n            \"CCardHeader\",\n            [\n              _c(\n                \"CButton\",\n                {\n                  staticClass: \"float-right\",\n                  attrs: {\n                    color: \"success\",\n                    size: \"sm\",\n                    to: \"/config/monitor/add\"\n                  }\n                },\n                [\n                  _c(\"CIcon\", { attrs: { content: _vm.$options.icons.add } }),\n                  _vm._v(\n                    \"\\n\\t\\t\\t\\t\" +\n                      _vm._s(_vm.$t(\"table.actions.add\")) +\n                      \"\\n\\t\\t\\t\"\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"CCardBody\",\n            [\n              _c(\"CDataTable\", {\n                attrs: {\n                  fields: _vm.fields,\n                  items: _vm.instances,\n                  \"column-filter\": true,\n                  \"items-per-page\": 20,\n                  pagination: true,\n                  striped: true,\n                  sorter: { external: false, resetable: true }\n                },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"acceptOnlyLocalhost\",\n                    fn: function(ref) {\n                      var item = ref.item\n                      return [\n                        _c(\n                          \"td\",\n                          [\n                            _c(\n                              \"CDropdown\",\n                              {\n                                attrs: {\n                                  color: item.acceptOnlyLocalhost\n                                    ? \"success\"\n                                    : \"danger\",\n                                  \"toggler-text\": _vm.$t(\n                                    \"table.enabled.\" + item.acceptOnlyLocalhost\n                                  ),\n                                  size: \"sm\"\n                                }\n                              },\n                              [\n                                _c(\n                                  \"CDropdownItem\",\n                                  {\n                                    on: {\n                                      click: function($event) {\n                                        return _vm.changeAcceptOnlyLocalhost(\n                                          item.webSocket,\n                                          true\n                                        )\n                                      }\n                                    }\n                                  },\n                                  [\n                                    _vm._v(\n                                      \"\\n\\t\\t\\t\\t\\t\\t\\t\\t\" +\n                                        _vm._s(_vm.$t(\"table.enabled.true\")) +\n                                        \"\\n\\t\\t\\t\\t\\t\\t\\t\"\n                                    )\n                                  ]\n                                ),\n                                _vm._v(\" \"),\n                                _c(\n                                  \"CDropdownItem\",\n                                  {\n                                    on: {\n                                      click: function($event) {\n                                        return _vm.changeAcceptOnlyLocalhost(\n                                          item.webSocket,\n                                          false\n                                        )\n                                      }\n                                    }\n                                  },\n                                  [\n                                    _vm._v(\n                                      \"\\n\\t\\t\\t\\t\\t\\t\\t\\t\" +\n                                        _vm._s(_vm.$t(\"table.enabled.false\")) +\n                                        \"\\n\\t\\t\\t\\t\\t\\t\\t\"\n                                    )\n                                  ]\n                                )\n                              ],\n                              1\n                            )\n                          ],\n                          1\n                        )\n                      ]\n                    }\n                  },\n                  {\n                    key: \"actions\",\n                    fn: function(ref) {\n                      var item = ref.item\n                      return [\n                        _c(\n                          \"td\",\n                          { staticClass: \"col-actions\" },\n                          [\n                            _c(\n                              \"CButton\",\n                              {\n                                attrs: {\n                                  color: \"info\",\n                                  size: \"sm\",\n                                  to:\n                                    \"/config/monitor/edit/\" +\n                                    item.monitor.instance\n                                }\n                              },\n                              [\n                                _c(\"CIcon\", {\n                                  attrs: { content: _vm.$options.icons.edit }\n                                }),\n                                _vm._v(\n                                  \"\\n\\t\\t\\t\\t\\t\\t\\t\" +\n                                    _vm._s(_vm.$t(\"table.actions.edit\")) +\n                                    \"\\n\\t\\t\\t\\t\\t\\t\"\n                                )\n                              ],\n                              1\n                            ),\n                            _vm._v(\" \"),\n                            _c(\n                              \"CButton\",\n                              {\n                                attrs: { color: \"danger\", size: \"sm\" },\n                                on: {\n                                  click: function($event) {\n                                    _vm.modals.instances = {\n                                      monitor: item.monitor.instance,\n                                      webSocket: item.webSocket.instance\n                                    }\n                                  }\n                                }\n                              },\n                              [\n                                _c(\"CIcon\", {\n                                  attrs: { content: _vm.$options.icons.remove }\n                                }),\n                                _vm._v(\n                                  \"\\n\\t\\t\\t\\t\\t\\t\\t\" +\n                                    _vm._s(_vm.$t(\"table.actions.delete\")) +\n                                    \"\\n\\t\\t\\t\\t\\t\\t\"\n                                )\n                              ],\n                              1\n                            )\n                          ],\n                          1\n                        )\n                      ]\n                    }\n                  }\n                ])\n              })\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"CModal\",\n        {\n          attrs: { color: \"danger\", show: _vm.modals.instances !== null },\n          on: {\n            \"update:show\": function($event) {\n              return _vm.$set(_vm.modals, \"instances !== null\", $event)\n            }\n          },\n          scopedSlots: _vm._u([\n            {\n              key: \"header\",\n              fn: function() {\n                return [\n                  _c(\"h5\", { staticClass: \"modal-title\" }, [\n                    _vm._v(\n                      \"\\n\\t\\t\\t\\t\" +\n                        _vm._s(\n                          _vm.$t(\"config.monitor.messages.delete.confirmTitle\")\n                        ) +\n                        \"\\n\\t\\t\\t\"\n                    )\n                  ])\n                ]\n              },\n              proxy: true\n            },\n            {\n              key: \"footer\",\n              fn: function() {\n                return [\n                  _c(\n                    \"CButton\",\n                    {\n                      attrs: { color: \"danger\" },\n                      on: {\n                        click: function($event) {\n                          _vm.modals.instances = null\n                        }\n                      }\n                    },\n                    [\n                      _vm._v(\n                        \"\\n\\t\\t\\t\\t\" + _vm._s(_vm.$t(\"forms.no\")) + \"\\n\\t\\t\\t\"\n                      )\n                    ]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"CButton\",\n                    {\n                      attrs: { color: \"success\" },\n                      on: {\n                        click: function($event) {\n                          return _vm.removeInterface()\n                        }\n                      }\n                    },\n                    [\n                      _vm._v(\n                        \"\\n\\t\\t\\t\\t\" + _vm._s(_vm.$t(\"forms.yes\")) + \"\\n\\t\\t\\t\"\n                      )\n                    ]\n                  )\n                ]\n              },\n              proxy: true\n            }\n          ])\n        },\n        [\n          _vm._v(\" \"),\n          _vm.modals.instances !== null\n            ? _c(\"div\", [\n                _vm._v(\n                  \"\\n\\t\\t\\t\" +\n                    _vm._s(\n                      _vm.$t(\"config.monitor.messages.delete.confirm\", {\n                        instance: _vm.modals.instances.monitor\n                      })\n                    ) +\n                    \"\\n\\t\\t\"\n                )\n              ])\n            : _vm._e()\n        ]\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","<template>\n\t<div>\n\t\t<CCard>\n\t\t\t<CCardHeader>\n\t\t\t\t<CButton\n\t\t\t\t\tcolor='success'\n\t\t\t\t\tsize='sm'\n\t\t\t\t\tclass='float-right'\n\t\t\t\t\tto='/config/monitor/add'\n\t\t\t\t>\n\t\t\t\t\t<CIcon :content='$options.icons.add' />\n\t\t\t\t\t{{ $t('table.actions.add') }}\n\t\t\t\t</CButton>\n\t\t\t</CCardHeader>\n\t\t\t<CCardBody>\n\t\t\t\t<CDataTable\n\t\t\t\t\t:fields='fields'\n\t\t\t\t\t:items='instances'\n\t\t\t\t\t:column-filter='true'\n\t\t\t\t\t:items-per-page='20'\n\t\t\t\t\t:pagination='true'\n\t\t\t\t\t:striped='true'\n\t\t\t\t\t:sorter='{ external: false, resetable: true }'\n\t\t\t\t>\n\t\t\t\t\t<template #acceptOnlyLocalhost='{item}'>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<CDropdown\n\t\t\t\t\t\t\t\t:color='item.acceptOnlyLocalhost ? \"success\": \"danger\"'\n\t\t\t\t\t\t\t\t:toggler-text='$t(\"table.enabled.\" + item.acceptOnlyLocalhost)'\n\t\t\t\t\t\t\t\tsize='sm'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<CDropdownItem @click='changeAcceptOnlyLocalhost(item.webSocket, true)'>\n\t\t\t\t\t\t\t\t\t{{ $t('table.enabled.true') }}\n\t\t\t\t\t\t\t\t</CDropdownItem>\n\t\t\t\t\t\t\t\t<CDropdownItem @click='changeAcceptOnlyLocalhost(item.webSocket, false)'>\n\t\t\t\t\t\t\t\t\t{{ $t('table.enabled.false') }}\n\t\t\t\t\t\t\t\t</CDropdownItem>\n\t\t\t\t\t\t\t</CDropdown>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</template>\n\t\t\t\t\t<template #actions='{item}'>\n\t\t\t\t\t\t<td class='col-actions'>\n\t\t\t\t\t\t\t<CButton\n\t\t\t\t\t\t\t\tcolor='info'\n\t\t\t\t\t\t\t\tsize='sm'\n\t\t\t\t\t\t\t\t:to='\"/config/monitor/edit/\" + item.monitor.instance'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<CIcon :content='$options.icons.edit' />\n\t\t\t\t\t\t\t\t{{ $t('table.actions.edit') }}\n\t\t\t\t\t\t\t</CButton>\n\t\t\t\t\t\t\t<CButton\n\t\t\t\t\t\t\t\tcolor='danger'\n\t\t\t\t\t\t\t\tsize='sm'\n\t\t\t\t\t\t\t\t@click='modals.instances = {monitor: item.monitor.instance, webSocket: item.webSocket.instance}'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<CIcon :content='$options.icons.remove' />\n\t\t\t\t\t\t\t\t{{ $t('table.actions.delete') }}\n\t\t\t\t\t\t\t</CButton>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</template>\n\t\t\t\t</CDataTable>\n\t\t\t</CCardBody>\n\t\t</CCard>\n\t\t<CModal\n\t\t\tcolor='danger'\n\t\t\t:show.sync='modals.instances !== null'\n\t\t>\n\t\t\t<template #header>\n\t\t\t\t<h5 class='modal-title'>\n\t\t\t\t\t{{ $t('config.monitor.messages.delete.confirmTitle') }}\n\t\t\t\t</h5>\n\t\t\t</template>\n\t\t\t<div v-if='modals.instances !== null'>\n\t\t\t\t{{ $t('config.monitor.messages.delete.confirm', {instance: modals.instances.monitor}) }}\n\t\t\t</div>\n\t\t\t<template #footer>\n\t\t\t\t<CButton color='danger' @click='modals.instances = null'>\n\t\t\t\t\t{{ $t('forms.no') }}\n\t\t\t\t</CButton>\n\t\t\t\t<CButton color='success' @click='removeInterface()'>\n\t\t\t\t\t{{ $t('forms.yes') }}\n\t\t\t\t</CButton>\n\t\t\t</template>\n\t\t</CModal>\n\t</div>\n</template>\n\n<script>\nimport {CButton, CCard, CCardBody, CCardHeader, CDataTable, CDropdown, CDropdownItem, CIcon, CModal} from '@coreui/vue/src';\nimport {cilPencil, cilPlus, cilTrash} from '@coreui/icons';\nimport DaemonConfigurationService from '../../services/DaemonConfigurationService';\nimport FormErrorHandler from '../../helpers/FormErrorHandler';\n\nexport default {\n\tname: 'MonitorList',\n\tcomponents: {\n\t\tCButton,\n\t\tCCard,\n\t\tCCardBody,\n\t\tCCardHeader,\n\t\tCDataTable,\n\t\tCDropdown,\n\t\tCDropdownItem,\n\t\tCIcon,\n\t\tCModal,\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tcomponentNames: {\n\t\t\t\tmonitor: 'iqrf::MonitorService',\n\t\t\t\twebSocket: 'shape::WebsocketCppService',\n\t\t\t},\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\tkey: 'instance',\n\t\t\t\t\tlabel: this.$t('config.monitor.form.instance'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: 'reportPeriod',\n\t\t\t\t\tlabel: this.$t('config.monitor.form.reportPeriod'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: 'port',\n\t\t\t\t\tlabel: this.$t('config.monitor.form.WebsocketPort'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: 'acceptOnlyLocalhost',\n\t\t\t\t\tlabel: this.$t('config.monitor.form.acceptOnlyLocalhost'),\n\t\t\t\t\tfilter: false,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: 'actions',\n\t\t\t\t\tlabel: this.$t('table.actions.title'),\n\t\t\t\t\tfilter: false,\n\t\t\t\t\tsorter: false,\n\t\t\t\t},\n\t\t\t],\n\t\t\tinstances: [],\n\t\t\tmodals: {\n\t\t\t\tinstances: null,\n\t\t\t},\n\t\t};\n\t},\n\tcreated() {\n\t\tthis.$store.commit('spinner/SHOW');\n\t\tthis.getConfig();\n\t},\n\tmethods: {\n\t\tgetConfig() {\n\t\t\tthis.instances = [];\n\t\t\treturn Promise.all([\n\t\t\t\tDaemonConfigurationService.getComponent(this.componentNames.monitor),\n\t\t\t\tDaemonConfigurationService.getComponent(this.componentNames.webSocket),\n\t\t\t])\n\t\t\t\t.then((responses) => {\n\t\t\t\t\tconst monitors = responses[0].data.instances;\n\t\t\t\t\tconst webSockets = responses[1].data.instances;\n\t\t\t\t\tconsole.error(monitors);\n\t\t\t\t\tfor (const monitor of monitors) {\n\t\t\t\t\t\tif (monitor.RequiredInterfaces === undefined ||\n\t\t\t\t\t\t\t\tmonitor.RequiredInterfaces === [] ||\n\t\t\t\t\t\t\t\tmonitor.RequiredInterfaces[0].name !== 'shape::IWebsocketService' ||\n\t\t\t\t\t\t\t\tmonitor.RequiredInterfaces[0].target.instance === undefined) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst webSocketInstance = monitor.RequiredInterfaces[0].target.instance;\n\t\t\t\t\t\tfor (const webSocket of webSockets) {\n\t\t\t\t\t\t\tif (webSocket.instance !== webSocketInstance) {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.instances.push({\n\t\t\t\t\t\t\t\tmonitor: monitor,\n\t\t\t\t\t\t\t\twebSocket: webSocket,\n\t\t\t\t\t\t\t\tinstance: monitor.instance,\n\t\t\t\t\t\t\t\treportPeriod: monitor.reportPeriod,\n\t\t\t\t\t\t\t\tacceptAsyncMsg: monitor.acceptAsyncMsg,\n\t\t\t\t\t\t\t\tport: webSocket.WebsocketPort,\n\t\t\t\t\t\t\t\tacceptOnlyLocalhost: webSocket.acceptOnlyLocalhost,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.$store.commit('spinner/HIDE');\n\t\t\t\t});\n\t\t\t// TODO: add error message\n\t\t},\n\t\tchangeAcceptOnlyLocalhost(service, setting) {\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\tservice.acceptOnlyLocalhost = setting;\n\t\t\tDaemonConfigurationService.updateInstance(this.componentNames.webSocket, service.instance, service)\n\t\t\t\t.then(() => {\n\t\t\t\t\tthis.getConfig().then(() => {\n\t\t\t\t\t\tthis.$toast.success(\n\t\t\t\t\t\t\tthis.$t('config.monitor.service.messages.editSuccess', {service: service.instance})\n\t\t\t\t\t\t\t\t.toString()\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.catch((error) => FormErrorHandler.configError(error));\n\t\t},\n\t\tremoveInterface() {\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\tPromise.all([\n\t\t\t\tDaemonConfigurationService.deleteInstance(this.componentNames.monitor, this.modals.instances.monitor),\n\t\t\t\tDaemonConfigurationService.deleteInstance(this.componentNames.webSocket, this.modals.instances.webSocket),\n\t\t\t])\n\t\t\t\t.then(() => {\n\t\t\t\t\tthis.modals.instances = null;\n\t\t\t\t\tthis.getConfig()\n\t\t\t\t\t\t.then(() => this.$toast.success(\n\t\t\t\t\t\t\tthis.$t('config.monitor.messages.delete.success', {instance: this.modals.instances.monitor})\n\t\t\t\t\t\t\t\t.toString())\n\t\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t// TODO: add error message\n\t\t},\n\t},\n\ticons: {\n\t\tadd: cilPlus,\n\t\tedit: cilPencil,\n\t\tremove: cilTrash,\n\t},\n\tmetaInfo: {\n\t\ttitle: 'config.monitor.title'\n\t}\n};\n</script>\n","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MonitorList.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MonitorList.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./MonitorList.vue?vue&type=template&id=9895e444&\"\nimport script from \"./MonitorList.vue?vue&type=script&lang=js&\"\nexport * from \"./MonitorList.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('9895e444')) {\n      api.createRecord('9895e444', component.options)\n    } else {\n      api.reload('9895e444', component.options)\n    }\n    module.hot.accept(\"./MonitorList.vue?vue&type=template&id=9895e444&\", function () {\n      api.rerender('9895e444', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/pages/Config/MonitorList.vue\"\nexport default component.exports","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"CCard\",\n    { attrs: { \"body-wrapper\": \"\" } },\n    [\n      _c(\"ValidationObserver\", {\n        scopedSlots: _vm._u([\n          {\n            key: \"default\",\n            fn: function(ref) {\n              var invalid = ref.invalid\n              return [\n                _c(\n                  \"CForm\",\n                  {\n                    on: {\n                      submit: function($event) {\n                        $event.preventDefault()\n                        return _vm.saveConfig($event)\n                      }\n                    }\n                  },\n                  [\n                    _c(\"ValidationProvider\", {\n                      attrs: {\n                        rules: \"required\",\n                        \"custom-messages\": {\n                          required: \"config.mq.form.messages.instance\"\n                        }\n                      },\n                      scopedSlots: _vm._u(\n                        [\n                          {\n                            key: \"default\",\n                            fn: function(ref) {\n                              var errors = ref.errors\n                              var touched = ref.touched\n                              var valid = ref.valid\n                              return [\n                                _c(\"CInput\", {\n                                  attrs: {\n                                    label: _vm.$t(\"config.mq.form.instance\"),\n                                    \"is-valid\": touched ? valid : null,\n                                    \"invalid-feedback\": _vm.$t(errors[0])\n                                  },\n                                  model: {\n                                    value: _vm.configuration.instance,\n                                    callback: function($$v) {\n                                      _vm.$set(\n                                        _vm.configuration,\n                                        \"instance\",\n                                        $$v\n                                      )\n                                    },\n                                    expression: \"configuration.instance\"\n                                  }\n                                })\n                              ]\n                            }\n                          }\n                        ],\n                        null,\n                        true\n                      )\n                    }),\n                    _vm._v(\" \"),\n                    _c(\"ValidationProvider\", {\n                      attrs: {\n                        rules: \"required\",\n                        \"custom-messages\": {\n                          required: \"config.mq.form.messages.LocalMqName\"\n                        }\n                      },\n                      scopedSlots: _vm._u(\n                        [\n                          {\n                            key: \"default\",\n                            fn: function(ref) {\n                              var errors = ref.errors\n                              var touched = ref.touched\n                              var valid = ref.valid\n                              return [\n                                _c(\"CInput\", {\n                                  attrs: {\n                                    label: _vm.$t(\"config.mq.form.LocalMqName\"),\n                                    \"is-valid\": touched ? valid : null,\n                                    \"invalid-feedback\": _vm.$t(errors[0])\n                                  },\n                                  model: {\n                                    value: _vm.configuration.LocalMqName,\n                                    callback: function($$v) {\n                                      _vm.$set(\n                                        _vm.configuration,\n                                        \"LocalMqName\",\n                                        $$v\n                                      )\n                                    },\n                                    expression: \"configuration.LocalMqName\"\n                                  }\n                                })\n                              ]\n                            }\n                          }\n                        ],\n                        null,\n                        true\n                      )\n                    }),\n                    _vm._v(\" \"),\n                    _c(\"ValidationProvider\", {\n                      attrs: {\n                        rules: \"required\",\n                        \"custom-messages\": {\n                          required: \"config.mq.form.messages.RemoteMqName\"\n                        }\n                      },\n                      scopedSlots: _vm._u(\n                        [\n                          {\n                            key: \"default\",\n                            fn: function(ref) {\n                              var errors = ref.errors\n                              var touched = ref.touched\n                              var valid = ref.valid\n                              return [\n                                _c(\"CInput\", {\n                                  attrs: {\n                                    label: _vm.$t(\n                                      \"config.mq.form.RemoteMqName\"\n                                    ),\n                                    \"is-valid\": touched ? valid : null,\n                                    \"invalid-feedback\": _vm.$t(errors[0])\n                                  },\n                                  model: {\n                                    value: _vm.configuration.RemoteMqName,\n                                    callback: function($$v) {\n                                      _vm.$set(\n                                        _vm.configuration,\n                                        \"RemoteMqName\",\n                                        $$v\n                                      )\n                                    },\n                                    expression: \"configuration.RemoteMqName\"\n                                  }\n                                })\n                              ]\n                            }\n                          }\n                        ],\n                        null,\n                        true\n                      )\n                    }),\n                    _vm._v(\" \"),\n                    _c(\"CInputCheckbox\", {\n                      attrs: {\n                        checked: _vm.configuration.acceptAsyncMsg,\n                        label: _vm.$t(\"config.mq.form.acceptAsyncMsg\")\n                      },\n                      on: {\n                        \"update:checked\": function($event) {\n                          return _vm.$set(\n                            _vm.configuration,\n                            \"acceptAsyncMsg\",\n                            $event\n                          )\n                        }\n                      }\n                    }),\n                    _vm._v(\" \"),\n                    _c(\n                      \"CButton\",\n                      {\n                        attrs: {\n                          type: \"submit\",\n                          color: \"primary\",\n                          disabled: invalid\n                        }\n                      },\n                      [\n                        _vm._v(\n                          \"\\n\\t\\t\\t\\t\" + _vm._s(_vm.submitButton) + \"\\n\\t\\t\\t\"\n                        )\n                      ]\n                    )\n                  ],\n                  1\n                )\n              ]\n            }\n          }\n        ])\n      })\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","<template>\n\t<CCard body-wrapper>\n\t\t<ValidationObserver v-slot='{ invalid }'>\n\t\t\t<CForm @submit.prevent='saveConfig'>\n\t\t\t\t<ValidationProvider\n\t\t\t\t\tv-slot='{ errors, touched, valid }'\n\t\t\t\t\trules='required'\n\t\t\t\t\t:custom-messages='{required: \"config.mq.form.messages.instance\"}'\n\t\t\t\t>\n\t\t\t\t\t<CInput\n\t\t\t\t\t\tv-model='configuration.instance'\n\t\t\t\t\t\t:label='$t(\"config.mq.form.instance\")'\n\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t/>\n\t\t\t\t</ValidationProvider>\n\t\t\t\t<ValidationProvider\n\t\t\t\t\tv-slot='{ errors, touched, valid }'\n\t\t\t\t\trules='required'\n\t\t\t\t\t:custom-messages='{required: \"config.mq.form.messages.LocalMqName\"}'\n\t\t\t\t>\n\t\t\t\t\t<CInput\n\t\t\t\t\t\tv-model='configuration.LocalMqName'\n\t\t\t\t\t\t:label='$t(\"config.mq.form.LocalMqName\")'\n\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t/>\n\t\t\t\t</ValidationProvider>\n\t\t\t\t<ValidationProvider\n\t\t\t\t\tv-slot='{ errors, touched, valid }'\n\t\t\t\t\trules='required'\n\t\t\t\t\t:custom-messages='{required: \"config.mq.form.messages.RemoteMqName\"}'\n\t\t\t\t>\n\t\t\t\t\t<CInput\n\t\t\t\t\t\tv-model='configuration.RemoteMqName'\n\t\t\t\t\t\t:label='$t(\"config.mq.form.RemoteMqName\")'\n\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t/>\n\t\t\t\t</ValidationProvider>\n\t\t\t\t<CInputCheckbox\n\t\t\t\t\t:checked.sync='configuration.acceptAsyncMsg'\n\t\t\t\t\t:label='$t(\"config.mq.form.acceptAsyncMsg\")'\n\t\t\t\t/>\n\t\t\t\t<CButton type='submit' color='primary' :disabled='invalid'>\n\t\t\t\t\t{{ submitButton }}\n\t\t\t\t</CButton>\n\t\t\t</CForm>\n\t\t</ValidationObserver>\n\t</CCard>\n</template>\n\n<script>\nimport {CButton, CCard, CForm, CInput, CInputCheckbox} from '@coreui/vue';\nimport {extend, ValidationObserver, ValidationProvider} from 'vee-validate';\nimport DaemonConfigurationService from '../../services/DaemonConfigurationService';\nimport FormErrorHandler from '../../helpers/FormErrorHandler';\nimport {required} from 'vee-validate/dist/rules';\n\nexport default {\n\tname: 'MqMessagingForm',\n\tcomponents: {\n\t\tCButton,\n\t\tCCard,\n\t\tCForm,\n\t\tCInput,\n\t\tCInputCheckbox,\n\t\tValidationObserver,\n\t\tValidationProvider,\n\t},\n\tprops: {\n\t\tinstance: {\n\t\t\ttype: String,\n\t\t\trequired: false,\n\t\t\tdefault: null,\n\t\t},\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tcomponentName: 'iqrf::MqMessaging',\n\t\t\tconfiguration: {\n\t\t\t\tinstance: null,\n\t\t\t\tLocalMqName: null,\n\t\t\t\tRemoteMqName: null,\n\t\t\t\tacceptAsyncMsg: false,\n\t\t\t}\n\t\t};\n\t},\n\tcomputed: {\n\t\tsubmitButton() {\n\t\t\treturn this.$route.path === '/config/mq/add' ?\n\t\t\t\tthis.$t('forms.add') : this.$t('forms.save');\n\t\t},\n\t},\n\tcreated() {\n\t\textend('required', required);\n\t\tif (this.instance !== null) {\n\t\t\tthis.getConfig();\n\t\t}\n\t},\n\tmethods: {\n\t\tgetConfig() {\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\tDaemonConfigurationService.getInstance(this.componentName, this.instance)\n\t\t\t\t.then((response) => {\n\t\t\t\t\tthis.$store.commit('spinner/HIDE');\n\t\t\t\t\tthis.configuration = response.data;\n\t\t\t\t\tthis.instance = this.configuration.instance;\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tthis.$router.push('/config/mq/');\n\t\t\t\t\tFormErrorHandler.configError(error);\n\t\t\t\t});\n\t\t},\n\t\tsaveConfig() {\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\tif (this.instance !== null) {\n\t\t\t\tDaemonConfigurationService.updateInstance(this.componentName, this.instance, this.configuration)\n\t\t\t\t\t.then(() => this.successfulSave())\n\t\t\t\t\t.catch((error) => FormErrorHandler.configError(error));\n\t\t\t} else {\n\t\t\t\tDaemonConfigurationService.createInstance(this.componentName, this.configuration)\n\t\t\t\t\t.then(() => this.successfulSave())\n\t\t\t\t\t.catch((error) => FormErrorHandler.configError(error));\n\t\t\t}\n\t\t},\n\t\tsuccessfulSave() {\n\t\t\tthis.$router.push('/config/mq/');\n\t\t\tthis.$store.commit('spinner/HIDE');\n\t\t\tif (this.$route.path === '/config/mq/add') {\n\t\t\t\tthis.$toast.success(\n\t\t\t\t\tthis.$t('config.mq.messages.add.success', {instance: this.configuration.instance})\n\t\t\t\t\t\t.toString()\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tthis.$toast.success(\n\t\t\t\t\tthis.$t('config.mq.messages.edit.success', {instance: this.configuration.instance})\n\t\t\t\t\t\t.toString()\n\t\t\t\t);\n\t\t\t}\n\t\t},\n\t},\n\tmetaInfo() {\n\t\treturn {\n\t\t\ttitle: this.$route.path === '/config/mq/add' ?\n\t\t\t\t'config.mq.add' : 'config.mq.edit',\n\t\t};\n\t},\n};\n</script>\n","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MqMessagingForm.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MqMessagingForm.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./MqMessagingForm.vue?vue&type=template&id=518afe6a&\"\nimport script from \"./MqMessagingForm.vue?vue&type=script&lang=js&\"\nexport * from \"./MqMessagingForm.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('518afe6a')) {\n      api.createRecord('518afe6a', component.options)\n    } else {\n      api.reload('518afe6a', component.options)\n    }\n    module.hot.accept(\"./MqMessagingForm.vue?vue&type=template&id=518afe6a&\", function () {\n      api.rerender('518afe6a', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/pages/Config/MqMessagingForm.vue\"\nexport default component.exports","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\n        \"CCard\",\n        [\n          _c(\n            \"CCardHeader\",\n            [\n              _c(\n                \"CButton\",\n                {\n                  staticClass: \"float-right\",\n                  attrs: { color: \"success\", to: \"/config/mq/add\", size: \"sm\" }\n                },\n                [\n                  _c(\"CIcon\", { attrs: { content: _vm.$options.icons.add } }),\n                  _vm._v(\n                    \"\\n\\t\\t\\t\\t\" +\n                      _vm._s(_vm.$t(\"table.actions.add\")) +\n                      \"\\n\\t\\t\\t\"\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"CCardBody\",\n            [\n              _c(\"CDataTable\", {\n                attrs: {\n                  items: _vm.instances,\n                  fields: _vm.fields,\n                  \"column-filter\": true,\n                  \"items-per-page\": 20,\n                  pagination: true,\n                  striped: true,\n                  sorter: { external: false, resetable: true }\n                },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"acceptAsyncMsg\",\n                    fn: function(ref) {\n                      var item = ref.item\n                      return [\n                        _c(\n                          \"td\",\n                          [\n                            _c(\n                              \"CDropdown\",\n                              {\n                                attrs: {\n                                  color: item.acceptAsyncMsg\n                                    ? \"success\"\n                                    : \"danger\",\n                                  \"toggler-text\": _vm.$t(\n                                    \"table.enabled.\" + item.acceptAsyncMsg\n                                  ),\n                                  placement: \"top-start\",\n                                  size: \"sm\"\n                                }\n                              },\n                              [\n                                _c(\n                                  \"CDropdownItem\",\n                                  {\n                                    on: {\n                                      click: function($event) {\n                                        return _vm.changeAcceptAsyncMsg(\n                                          item,\n                                          true\n                                        )\n                                      }\n                                    }\n                                  },\n                                  [\n                                    _vm._v(\n                                      \"\\n\\t\\t\\t\\t\\t\\t\\t\\t\" +\n                                        _vm._s(_vm.$t(\"table.enabled.true\")) +\n                                        \"\\n\\t\\t\\t\\t\\t\\t\\t\"\n                                    )\n                                  ]\n                                ),\n                                _vm._v(\" \"),\n                                _c(\n                                  \"CDropdownItem\",\n                                  {\n                                    on: {\n                                      click: function($event) {\n                                        return _vm.changeAcceptAsyncMsg(\n                                          item,\n                                          false\n                                        )\n                                      }\n                                    }\n                                  },\n                                  [\n                                    _vm._v(\n                                      \"\\n\\t\\t\\t\\t\\t\\t\\t\\t\" +\n                                        _vm._s(_vm.$t(\"table.enabled.false\")) +\n                                        \"\\n\\t\\t\\t\\t\\t\\t\\t\"\n                                    )\n                                  ]\n                                )\n                              ],\n                              1\n                            )\n                          ],\n                          1\n                        )\n                      ]\n                    }\n                  },\n                  {\n                    key: \"actions\",\n                    fn: function(ref) {\n                      var item = ref.item\n                      return [\n                        _c(\n                          \"td\",\n                          { staticClass: \"col-actions\" },\n                          [\n                            _c(\n                              \"CButton\",\n                              {\n                                attrs: {\n                                  color: \"primary\",\n                                  to: \"/config/mq/edit/\" + item.instance,\n                                  size: \"sm\"\n                                }\n                              },\n                              [\n                                _c(\"CIcon\", {\n                                  attrs: { content: _vm.$options.icons.edit }\n                                }),\n                                _vm._v(\n                                  \"\\n\\t\\t\\t\\t\\t\\t\\t\" +\n                                    _vm._s(_vm.$t(\"table.actions.edit\")) +\n                                    \"\\n\\t\\t\\t\\t\\t\\t\"\n                                )\n                              ],\n                              1\n                            ),\n                            _vm._v(\" \"),\n                            _c(\n                              \"CButton\",\n                              {\n                                attrs: { color: \"danger\", size: \"sm\" },\n                                on: {\n                                  click: function($event) {\n                                    return _vm.confirmDelete(item)\n                                  }\n                                }\n                              },\n                              [\n                                _c(\"CIcon\", {\n                                  attrs: { content: _vm.$options.icons.delete }\n                                }),\n                                _vm._v(\n                                  \"\\n\\t\\t\\t\\t\\t\\t\\t\" +\n                                    _vm._s(_vm.$t(\"table.actions.delete\")) +\n                                    \"\\n\\t\\t\\t\\t\\t\\t\"\n                                )\n                              ],\n                              1\n                            )\n                          ],\n                          1\n                        )\n                      ]\n                    }\n                  }\n                ])\n              })\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"CModal\",\n        {\n          attrs: { color: \"danger\", show: _vm.modals.delete.instance !== null },\n          on: {\n            \"update:show\": function($event) {\n              return _vm.$set(_vm.modals.delete, \"instance !== null\", $event)\n            }\n          },\n          scopedSlots: _vm._u([\n            {\n              key: \"header\",\n              fn: function() {\n                return [\n                  _c(\"h5\", { staticClass: \"modal-title\" }, [\n                    _vm._v(\n                      \"\\n\\t\\t\\t\\t\" +\n                        _vm._s(\n                          _vm.$t(\"config.mq.messages.delete.confirmTitle\")\n                        ) +\n                        \"\\n\\t\\t\\t\"\n                    )\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"CButtonClose\", {\n                    staticClass: \"text-white\",\n                    on: {\n                      click: function($event) {\n                        _vm.modals.delete.instance = null\n                      }\n                    }\n                  })\n                ]\n              },\n              proxy: true\n            },\n            {\n              key: \"footer\",\n              fn: function() {\n                return [\n                  _c(\n                    \"CButton\",\n                    {\n                      attrs: { color: \"danger\" },\n                      on: {\n                        click: function($event) {\n                          _vm.modals.delete.instance = null\n                        }\n                      }\n                    },\n                    [\n                      _vm._v(\n                        \"\\n\\t\\t\\t\\t\" + _vm._s(_vm.$t(\"forms.no\")) + \"\\n\\t\\t\\t\"\n                      )\n                    ]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"CButton\",\n                    {\n                      attrs: { color: \"success\" },\n                      on: { click: _vm.performDelete }\n                    },\n                    [\n                      _vm._v(\n                        \"\\n\\t\\t\\t\\t\" + _vm._s(_vm.$t(\"forms.yes\")) + \"\\n\\t\\t\\t\"\n                      )\n                    ]\n                  )\n                ]\n              },\n              proxy: true\n            }\n          ])\n        },\n        [\n          _vm._v(\" \"),\n          _vm.modals.delete.instance !== null\n            ? _c(\"span\", [\n                _vm._v(\n                  \"\\n\\t\\t\\t\" +\n                    _vm._s(\n                      _vm.$t(\"config.mq.messages.delete.confirm\", {\n                        instance: _vm.modals.delete.instance\n                      })\n                    ) +\n                    \"\\n\\t\\t\"\n                )\n              ])\n            : _vm._e()\n        ]\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MqMessagingTable.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MqMessagingTable.vue?vue&type=script&lang=js&\"","<template>\n\t<div>\n\t\t<CCard>\n\t\t\t<CCardHeader>\n\t\t\t\t<CButton\n\t\t\t\t\tcolor='success'\n\t\t\t\t\tto='/config/mq/add'\n\t\t\t\t\tsize='sm'\n\t\t\t\t\tclass='float-right'\n\t\t\t\t>\n\t\t\t\t\t<CIcon :content='$options.icons.add' />\n\t\t\t\t\t{{ $t('table.actions.add') }}\n\t\t\t\t</CButton>\n\t\t\t</CCardHeader>\n\t\t\t<CCardBody>\n\t\t\t\t<CDataTable\n\t\t\t\t\t:items='instances'\n\t\t\t\t\t:fields='fields'\n\t\t\t\t\t:column-filter='true'\n\t\t\t\t\t:items-per-page='20'\n\t\t\t\t\t:pagination='true'\n\t\t\t\t\t:striped='true'\n\t\t\t\t\t:sorter='{ external: false, resetable: true }'\n\t\t\t\t>\n\t\t\t\t\t<template #acceptAsyncMsg='{item}'>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<CDropdown\n\t\t\t\t\t\t\t\t:color='item.acceptAsyncMsg ? \"success\" : \"danger\"'\n\t\t\t\t\t\t\t\t:toggler-text='$t(\"table.enabled.\" + item.acceptAsyncMsg)'\n\t\t\t\t\t\t\t\tplacement='top-start'\n\t\t\t\t\t\t\t\tsize='sm'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<CDropdownItem @click='changeAcceptAsyncMsg(item, true)'>\n\t\t\t\t\t\t\t\t\t{{ $t('table.enabled.true') }}\n\t\t\t\t\t\t\t\t</CDropdownItem>\n\t\t\t\t\t\t\t\t<CDropdownItem @click='changeAcceptAsyncMsg(item, false)'>\n\t\t\t\t\t\t\t\t\t{{ $t('table.enabled.false') }}\n\t\t\t\t\t\t\t\t</CDropdownItem>\n\t\t\t\t\t\t\t</CDropdown>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</template>\n\t\t\t\t\t<template #actions='{item}'>\n\t\t\t\t\t\t<td class='col-actions'>\n\t\t\t\t\t\t\t<CButton\n\t\t\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\t\t\t:to='\"/config/mq/edit/\" + item.instance'\n\t\t\t\t\t\t\t\tsize='sm'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<CIcon :content='$options.icons.edit' />\n\t\t\t\t\t\t\t\t{{ $t('table.actions.edit') }}\n\t\t\t\t\t\t\t</CButton>\n\t\t\t\t\t\t\t<CButton color='danger' size='sm' @click='confirmDelete(item)'>\n\t\t\t\t\t\t\t\t<CIcon :content='$options.icons.delete' />\n\t\t\t\t\t\t\t\t{{ $t('table.actions.delete') }}\n\t\t\t\t\t\t\t</CButton>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</template>\n\t\t\t\t</CDataTable>\n\t\t\t</CCardBody>\n\t\t</CCard>\n\t\t<CModal\n\t\t\tcolor='danger'\n\t\t\t:show.sync='modals.delete.instance !== null'\n\t\t>\n\t\t\t<template #header>\n\t\t\t\t<h5 class='modal-title'>\n\t\t\t\t\t{{ $t('config.mq.messages.delete.confirmTitle') }}\n\t\t\t\t</h5>\n\t\t\t\t<CButtonClose class='text-white' @click='modals.delete.instance = null' />\n\t\t\t</template>\n\t\t\t<span v-if='modals.delete.instance !== null'>\n\t\t\t\t{{ $t('config.mq.messages.delete.confirm', {instance: modals.delete.instance}) }}\n\t\t\t</span>\n\t\t\t<template #footer>\n\t\t\t\t<CButton color='danger' @click='modals.delete.instance = null'>\n\t\t\t\t\t{{ $t('forms.no') }}\n\t\t\t\t</CButton>\n\t\t\t\t<CButton color='success' @click='performDelete'>\n\t\t\t\t\t{{ $t('forms.yes') }}\n\t\t\t\t</CButton>\n\t\t\t</template>\n\t\t</CModal>\n\t</div>\n</template>\n\n<script>\nimport {\n\tCButton,\n\tCButtonClose,\n\tCCard,\n\tCCardBody,\n\tCCardHeader,\n\tCDataTable,\n\tCDropdown,\n\tCDropdownItem,\n\tCIcon,\n\tCModal\n} from '@coreui/vue/src';\nimport {cilPencil, cilPlus, cilTrash} from '@coreui/icons';\nimport DaemonConfigurationService\n\tfrom '../../services/DaemonConfigurationService';\n\nexport default {\n\tname: 'MqMessagingTable',\n\tcomponents: {\n\t\tCButton,\n\t\tCButtonClose,\n\t\tCCard,\n\t\tCCardBody,\n\t\tCCardHeader,\n\t\tCDataTable,\n\t\tCDropdown,\n\t\tCDropdownItem,\n\t\tCIcon,\n\t\tCModal,\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tcomponentName: 'iqrf::MqMessaging',\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\tkey: 'instance',\n\t\t\t\t\tlabel: this.$t('config.mq.form.instance'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: 'LocalMqName',\n\t\t\t\t\tlabel: this.$t('config.mq.form.LocalMqName'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: 'RemoteMqName',\n\t\t\t\t\tlabel: this.$t('config.mq.form.RemoteMqName'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: 'acceptAsyncMsg',\n\t\t\t\t\tlabel: this.$t('config.mq.form.acceptAsyncMsg'),\n\t\t\t\t\tfilter: false,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: 'actions',\n\t\t\t\t\tlabel: this.$t('table.actions.title'),\n\t\t\t\t\tsorter: false,\n\t\t\t\t\tfilter: false,\n\t\t\t\t},\n\t\t\t],\n\t\t\tinstances: [],\n\t\t\tmodals: {\n\t\t\t\tdelete: {\n\t\t\t\t\tinstance: null,\n\t\t\t\t}\n\t\t\t},\n\t\t};\n\t},\n\tcreated() {\n\t\tthis.$store.commit('spinner/SHOW');\n\t\tthis.getInstances();\n\t},\n\tmethods: {\n\t\tconfirmDelete(instance) {\n\t\t\tthis.modals.delete.instance = instance.instance;\n\t\t},\n\t\tchangeAcceptAsyncMsg(instance, acceptAsyncMsg) {\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\tinstance.acceptAsyncMsg = acceptAsyncMsg;\n\t\t\treturn DaemonConfigurationService.updateInstance(this.componentName, instance.instance, instance)\n\t\t\t\t.then(() => {\n\t\t\t\t\tthis.getInstances().then(() => {\n\t\t\t\t\t\tthis.$toast.success(\n\t\t\t\t\t\t\tthis.$t('config.mq.messages.edit.success', {instance: instance.instance})\n\t\t\t\t\t\t\t\t.toString()\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t},\n\t\tgetInstances() {\n\t\t\treturn DaemonConfigurationService.getComponent(this.componentName)\n\t\t\t\t.then((response) => {\n\t\t\t\t\tthis.$store.commit('spinner/HIDE');\n\t\t\t\t\tthis.instances = response.data.instances;\n\t\t\t\t})\n\t\t\t\t.catch(() => this.$store.commit('spinner/HIDE'));\n\t\t},\n\t\tperformDelete() {\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\tconst instance = this.modals.delete.instance;\n\t\t\tthis.modals.delete.instance = null;\n\t\t\tDaemonConfigurationService.deleteInstance(this.componentName, instance)\n\t\t\t\t.then(() => {\n\t\t\t\t\tthis.getInstances().then(() => {\n\t\t\t\t\t\tthis.$toast.success(\n\t\t\t\t\t\t\tthis.$t('config.mq.messages.delete.success', {instance: instance})\n\t\t\t\t\t\t\t\t.toString()\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.catch(() => this.$store.commit('spinner/HIDE'));\n\t\t},\n\t},\n\ticons: {\n\t\tadd: cilPlus,\n\t\tdelete: cilTrash,\n\t\tedit: cilPencil,\n\t},\n\tmetaInfo: {\n\t\ttitle: 'config.mq.title',\n\t},\n};\n</script>\n","import { render, staticRenderFns } from \"./MqMessagingTable.vue?vue&type=template&id=00103818&\"\nimport script from \"./MqMessagingTable.vue?vue&type=script&lang=js&\"\nexport * from \"./MqMessagingTable.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('00103818')) {\n      api.createRecord('00103818', component.options)\n    } else {\n      api.reload('00103818', component.options)\n    }\n    module.hot.accept(\"./MqMessagingTable.vue?vue&type=template&id=00103818&\", function () {\n      api.rerender('00103818', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/pages/Config/MqMessagingTable.vue\"\nexport default component.exports","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"CCard\",\n    { attrs: { \"body-wrapper\": \"\" } },\n    [\n      _c(\"ValidationObserver\", {\n        scopedSlots: _vm._u([\n          {\n            key: \"default\",\n            fn: function(ref) {\n              var invalid = ref.invalid\n              return [\n                _c(\n                  \"CForm\",\n                  {\n                    on: {\n                      submit: function($event) {\n                        $event.preventDefault()\n                        return _vm.saveConfig($event)\n                      }\n                    }\n                  },\n                  [\n                    _c(\"ValidationProvider\", {\n                      attrs: {\n                        rules: \"required\",\n                        \"custom-messages\": {\n                          required: \"config.mqtt.form.messages.instance\"\n                        }\n                      },\n                      scopedSlots: _vm._u(\n                        [\n                          {\n                            key: \"default\",\n                            fn: function(ref) {\n                              var errors = ref.errors\n                              var touched = ref.touched\n                              var valid = ref.valid\n                              return [\n                                _c(\"CInput\", {\n                                  attrs: {\n                                    label: _vm.$t(\"config.mqtt.form.instance\"),\n                                    \"is-valid\": touched ? valid : null,\n                                    \"invalid-feedback\": _vm.$t(errors[0])\n                                  },\n                                  model: {\n                                    value: _vm.configuration.instance,\n                                    callback: function($$v) {\n                                      _vm.$set(\n                                        _vm.configuration,\n                                        \"instance\",\n                                        $$v\n                                      )\n                                    },\n                                    expression: \"configuration.instance\"\n                                  }\n                                })\n                              ]\n                            }\n                          }\n                        ],\n                        null,\n                        true\n                      )\n                    }),\n                    _vm._v(\" \"),\n                    _c(\"ValidationProvider\", {\n                      attrs: {\n                        rules: \"required\",\n                        \"custom-messages\": {\n                          required: \"config.mqtt.form.messages.BrokerAddr\"\n                        }\n                      },\n                      scopedSlots: _vm._u(\n                        [\n                          {\n                            key: \"default\",\n                            fn: function(ref) {\n                              var errors = ref.errors\n                              var touched = ref.touched\n                              var valid = ref.valid\n                              return [\n                                _c(\"CInput\", {\n                                  attrs: {\n                                    label: _vm.$t(\n                                      \"config.mqtt.form.BrokerAddr\"\n                                    ),\n                                    \"is-valid\": touched ? valid : null,\n                                    \"invalid-feedback\": _vm.$t(errors[0])\n                                  },\n                                  model: {\n                                    value: _vm.configuration.BrokerAddr,\n                                    callback: function($$v) {\n                                      _vm.$set(\n                                        _vm.configuration,\n                                        \"BrokerAddr\",\n                                        $$v\n                                      )\n                                    },\n                                    expression: \"configuration.BrokerAddr\"\n                                  }\n                                })\n                              ]\n                            }\n                          }\n                        ],\n                        null,\n                        true\n                      )\n                    }),\n                    _vm._v(\" \"),\n                    _c(\"ValidationProvider\", {\n                      attrs: {\n                        rules: \"required\",\n                        \"custom-messages\": {\n                          required: \"config.mqtt.form.messages.ClientId\"\n                        }\n                      },\n                      scopedSlots: _vm._u(\n                        [\n                          {\n                            key: \"default\",\n                            fn: function(ref) {\n                              var errors = ref.errors\n                              var touched = ref.touched\n                              var valid = ref.valid\n                              return [\n                                _c(\"CInput\", {\n                                  attrs: {\n                                    label: _vm.$t(\"config.mqtt.form.ClientId\"),\n                                    \"is-valid\": touched ? valid : null,\n                                    \"invalid-feedback\": _vm.$t(errors[0])\n                                  },\n                                  model: {\n                                    value: _vm.configuration.ClientId,\n                                    callback: function($$v) {\n                                      _vm.$set(\n                                        _vm.configuration,\n                                        \"ClientId\",\n                                        $$v\n                                      )\n                                    },\n                                    expression: \"configuration.ClientId\"\n                                  }\n                                })\n                              ]\n                            }\n                          }\n                        ],\n                        null,\n                        true\n                      )\n                    }),\n                    _vm._v(\" \"),\n                    _c(\"ValidationProvider\", {\n                      attrs: {\n                        rules: \"integer|required\",\n                        \"custom-messages\": {\n                          integer: \"config.mqtt.form.messages.Persistence\",\n                          required: \"config.mqtt.form.messages.Persistence\"\n                        }\n                      },\n                      scopedSlots: _vm._u(\n                        [\n                          {\n                            key: \"default\",\n                            fn: function(ref) {\n                              var errors = ref.errors\n                              var touched = ref.touched\n                              var valid = ref.valid\n                              return [\n                                _c(\"CInput\", {\n                                  attrs: {\n                                    label: _vm.$t(\n                                      \"config.mqtt.form.Persistence\"\n                                    ),\n                                    \"is-valid\": touched ? valid : null,\n                                    \"invalid-feedback\": _vm.$t(errors[0]),\n                                    type: \"number\"\n                                  },\n                                  model: {\n                                    value: _vm.configuration.Persistence,\n                                    callback: function($$v) {\n                                      _vm.$set(\n                                        _vm.configuration,\n                                        \"Persistence\",\n                                        _vm._n($$v)\n                                      )\n                                    },\n                                    expression: \"configuration.Persistence\"\n                                  }\n                                })\n                              ]\n                            }\n                          }\n                        ],\n                        null,\n                        true\n                      )\n                    }),\n                    _vm._v(\" \"),\n                    _c(\"ValidationProvider\", {\n                      attrs: {\n                        rules: \"required\",\n                        \"custom-messages\": {\n                          required: \"config.mqtt.form.messages.QoS\"\n                        }\n                      },\n                      scopedSlots: _vm._u(\n                        [\n                          {\n                            key: \"default\",\n                            fn: function(ref) {\n                              var valid = ref.valid\n                              var touched = ref.touched\n                              var errors = ref.errors\n                              return [\n                                _c(\"CSelect\", {\n                                  attrs: {\n                                    value: _vm.configuration.Qos,\n                                    label: _vm.$t(\"config.mqtt.form.QoS\"),\n                                    \"is-valid\": touched ? valid : null,\n                                    \"invalid-feedback\": _vm.$t(errors[0]),\n                                    placeholder: _vm.$t(\n                                      \"config.mqtt.form.messages.QoS\"\n                                    ),\n                                    options: _vm.qosOptions\n                                  },\n                                  on: {\n                                    \"update:value\": function($event) {\n                                      return _vm.$set(\n                                        _vm.configuration,\n                                        \"Qos\",\n                                        $event\n                                      )\n                                    }\n                                  }\n                                })\n                              ]\n                            }\n                          }\n                        ],\n                        null,\n                        true\n                      )\n                    }),\n                    _vm._v(\" \"),\n                    _c(\"ValidationProvider\", {\n                      attrs: {\n                        rules: \"required\",\n                        \"custom-messages\": {\n                          required: \"config.mqtt.form.messages.TopicRequest\"\n                        }\n                      },\n                      scopedSlots: _vm._u(\n                        [\n                          {\n                            key: \"default\",\n                            fn: function(ref) {\n                              var errors = ref.errors\n                              var touched = ref.touched\n                              var valid = ref.valid\n                              return [\n                                _c(\"CInput\", {\n                                  attrs: {\n                                    label: _vm.$t(\n                                      \"config.mqtt.form.TopicRequest\"\n                                    ),\n                                    \"is-valid\": touched ? valid : null,\n                                    \"invalid-feedback\": _vm.$t(errors[0])\n                                  },\n                                  model: {\n                                    value: _vm.configuration.TopicRequest,\n                                    callback: function($$v) {\n                                      _vm.$set(\n                                        _vm.configuration,\n                                        \"TopicRequest\",\n                                        $$v\n                                      )\n                                    },\n                                    expression: \"configuration.TopicRequest\"\n                                  }\n                                })\n                              ]\n                            }\n                          }\n                        ],\n                        null,\n                        true\n                      )\n                    }),\n                    _vm._v(\" \"),\n                    _c(\"ValidationProvider\", {\n                      attrs: {\n                        rules: \"required\",\n                        \"custom-messages\": {\n                          required: \"config.mqtt.form.messages.TopicResponse\"\n                        }\n                      },\n                      scopedSlots: _vm._u(\n                        [\n                          {\n                            key: \"default\",\n                            fn: function(ref) {\n                              var errors = ref.errors\n                              var touched = ref.touched\n                              var valid = ref.valid\n                              return [\n                                _c(\"CInput\", {\n                                  attrs: {\n                                    label: _vm.$t(\n                                      \"config.mqtt.form.TopicResponse\"\n                                    ),\n                                    \"is-valid\": touched ? valid : null,\n                                    \"invalid-feedback\": _vm.$t(errors[0])\n                                  },\n                                  model: {\n                                    value: _vm.configuration.TopicResponse,\n                                    callback: function($$v) {\n                                      _vm.$set(\n                                        _vm.configuration,\n                                        \"TopicResponse\",\n                                        $$v\n                                      )\n                                    },\n                                    expression: \"configuration.TopicResponse\"\n                                  }\n                                })\n                              ]\n                            }\n                          }\n                        ],\n                        null,\n                        true\n                      )\n                    }),\n                    _vm._v(\" \"),\n                    _c(\"CInput\", {\n                      attrs: { label: _vm.$t(\"config.mqtt.form.User\") },\n                      model: {\n                        value: _vm.configuration.User,\n                        callback: function($$v) {\n                          _vm.$set(_vm.configuration, \"User\", $$v)\n                        },\n                        expression: \"configuration.User\"\n                      }\n                    }),\n                    _vm._v(\" \"),\n                    _c(\"CInput\", {\n                      attrs: { label: _vm.$t(\"config.mqtt.form.Password\") },\n                      model: {\n                        value: _vm.configuration.Password,\n                        callback: function($$v) {\n                          _vm.$set(_vm.configuration, \"Password\", $$v)\n                        },\n                        expression: \"configuration.Password\"\n                      }\n                    }),\n                    _vm._v(\" \"),\n                    _c(\"CInputCheckbox\", {\n                      attrs: {\n                        checked: _vm.configuration.EnabledSSL,\n                        label: _vm.$t(\"config.mqtt.form.EnabledSSL\")\n                      },\n                      on: {\n                        \"update:checked\": function($event) {\n                          return _vm.$set(\n                            _vm.configuration,\n                            \"EnabledSSL\",\n                            $event\n                          )\n                        }\n                      }\n                    }),\n                    _vm._v(\" \"),\n                    _c(\"ValidationProvider\", {\n                      attrs: {\n                        rules: \"integer|min:0\",\n                        \"custom-messages\": {\n                          integer:\n                            \"config.mqtt.form.messages.KeepAliveInterval\",\n                          min: \"config.mqtt.form.messages.KeepAliveInterval\"\n                        }\n                      },\n                      scopedSlots: _vm._u(\n                        [\n                          {\n                            key: \"default\",\n                            fn: function(ref) {\n                              var errors = ref.errors\n                              var touched = ref.touched\n                              var valid = ref.valid\n                              return [\n                                _c(\"CInput\", {\n                                  attrs: {\n                                    label: _vm.$t(\n                                      \"config.mqtt.form.KeepAliveInterval\"\n                                    ),\n                                    \"is-valid\": touched ? valid : null,\n                                    \"invalid-feedback\": _vm.$t(errors[0]),\n                                    type: \"number\",\n                                    min: \"0\"\n                                  },\n                                  model: {\n                                    value: _vm.configuration.KeepAliveInterval,\n                                    callback: function($$v) {\n                                      _vm.$set(\n                                        _vm.configuration,\n                                        \"KeepAliveInterval\",\n                                        _vm._n($$v)\n                                      )\n                                    },\n                                    expression:\n                                      \"configuration.KeepAliveInterval\"\n                                  }\n                                })\n                              ]\n                            }\n                          }\n                        ],\n                        null,\n                        true\n                      )\n                    }),\n                    _vm._v(\" \"),\n                    _c(\"ValidationProvider\", {\n                      attrs: {\n                        rules: \"integer|min:0\",\n                        \"custom-messages\": {\n                          integer: \"config.mqtt.form.messages.ConnectTimeout\",\n                          min: \"config.mqtt.form.messages.ConnectTimeout\"\n                        }\n                      },\n                      scopedSlots: _vm._u(\n                        [\n                          {\n                            key: \"default\",\n                            fn: function(ref) {\n                              var errors = ref.errors\n                              var touched = ref.touched\n                              var valid = ref.valid\n                              return [\n                                _c(\"CInput\", {\n                                  attrs: {\n                                    label: _vm.$t(\n                                      \"config.mqtt.form.ConnectTimeout\"\n                                    ),\n                                    \"is-valid\": touched ? valid : null,\n                                    \"invalid-feedback\": _vm.$t(errors[0]),\n                                    type: \"number\",\n                                    min: \"0\"\n                                  },\n                                  model: {\n                                    value: _vm.configuration.ConnectTimeout,\n                                    callback: function($$v) {\n                                      _vm.$set(\n                                        _vm.configuration,\n                                        \"ConnectTimeout\",\n                                        _vm._n($$v)\n                                      )\n                                    },\n                                    expression: \"configuration.ConnectTimeout\"\n                                  }\n                                })\n                              ]\n                            }\n                          }\n                        ],\n                        null,\n                        true\n                      )\n                    }),\n                    _vm._v(\" \"),\n                    _c(\"ValidationProvider\", {\n                      attrs: {\n                        rules:\n                          \"integer|between:0,\" + _vm.configuration.MaxReconnect,\n                        \"custom-messages\": {\n                          between: \"config.mqtt.form.messages.MinReconnect\",\n                          integer: \"config.mqtt.form.messages.MinReconnect\"\n                        }\n                      },\n                      scopedSlots: _vm._u(\n                        [\n                          {\n                            key: \"default\",\n                            fn: function(ref) {\n                              var errors = ref.errors\n                              var touched = ref.touched\n                              var valid = ref.valid\n                              return [\n                                _c(\"CInput\", {\n                                  attrs: {\n                                    label: _vm.$t(\n                                      \"config.mqtt.form.MinReconnect\"\n                                    ),\n                                    \"is-valid\": touched ? valid : null,\n                                    \"invalid-feedback\": _vm.$t(errors[0]),\n                                    type: \"number\",\n                                    max: _vm.configuration.MaxReconnect,\n                                    min: \"0\"\n                                  },\n                                  model: {\n                                    value: _vm.configuration.MinReconnect,\n                                    callback: function($$v) {\n                                      _vm.$set(\n                                        _vm.configuration,\n                                        \"MinReconnect\",\n                                        _vm._n($$v)\n                                      )\n                                    },\n                                    expression: \"configuration.MinReconnect\"\n                                  }\n                                })\n                              ]\n                            }\n                          }\n                        ],\n                        null,\n                        true\n                      )\n                    }),\n                    _vm._v(\" \"),\n                    _c(\"ValidationProvider\", {\n                      attrs: {\n                        rules: \"integer|min:\" + _vm.configuration.MinReconnect,\n                        \"custom-messages\": {\n                          integer: \"config.mqtt.form.messages.MaxReconnect\",\n                          min: \"config.mqtt.form.messages.MaxReconnect\"\n                        }\n                      },\n                      scopedSlots: _vm._u(\n                        [\n                          {\n                            key: \"default\",\n                            fn: function(ref) {\n                              var errors = ref.errors\n                              var touched = ref.touched\n                              var valid = ref.valid\n                              return [\n                                _c(\"CInput\", {\n                                  attrs: {\n                                    label: _vm.$t(\n                                      \"config.mqtt.form.MaxReconnect\"\n                                    ),\n                                    \"is-valid\": touched ? valid : null,\n                                    \"invalid-feedback\": _vm.$t(errors[0]),\n                                    type: \"number\",\n                                    min: _vm.configuration.MinReconnect\n                                  },\n                                  model: {\n                                    value: _vm.configuration.MaxReconnect,\n                                    callback: function($$v) {\n                                      _vm.$set(\n                                        _vm.configuration,\n                                        \"MaxReconnect\",\n                                        _vm._n($$v)\n                                      )\n                                    },\n                                    expression: \"configuration.MaxReconnect\"\n                                  }\n                                })\n                              ]\n                            }\n                          }\n                        ],\n                        null,\n                        true\n                      )\n                    }),\n                    _vm._v(\" \"),\n                    _c(\"CInput\", {\n                      attrs: { label: _vm.$t(\"config.mqtt.form.TrustStore\") },\n                      model: {\n                        value: _vm.configuration.TrustStore,\n                        callback: function($$v) {\n                          _vm.$set(_vm.configuration, \"TrustStore\", $$v)\n                        },\n                        expression: \"configuration.TrustStore\"\n                      }\n                    }),\n                    _vm._v(\" \"),\n                    _c(\"CInput\", {\n                      attrs: { label: _vm.$t(\"config.mqtt.form.KeyStore\") },\n                      model: {\n                        value: _vm.configuration.KeyStore,\n                        callback: function($$v) {\n                          _vm.$set(_vm.configuration, \"KeyStore\", $$v)\n                        },\n                        expression: \"configuration.KeyStore\"\n                      }\n                    }),\n                    _vm._v(\" \"),\n                    _c(\"CInput\", {\n                      attrs: { label: _vm.$t(\"config.mqtt.form.PrivateKey\") },\n                      model: {\n                        value: _vm.configuration.PrivateKey,\n                        callback: function($$v) {\n                          _vm.$set(_vm.configuration, \"PrivateKey\", $$v)\n                        },\n                        expression: \"configuration.PrivateKey\"\n                      }\n                    }),\n                    _vm._v(\" \"),\n                    _c(\"CInput\", {\n                      attrs: {\n                        label: _vm.$t(\"config.mqtt.form.PrivateKeyPassword\")\n                      },\n                      model: {\n                        value: _vm.configuration.PrivateKeyPassword,\n                        callback: function($$v) {\n                          _vm.$set(_vm.configuration, \"PrivateKeyPassword\", $$v)\n                        },\n                        expression: \"configuration.PrivateKeyPassword\"\n                      }\n                    }),\n                    _vm._v(\" \"),\n                    _c(\"CInput\", {\n                      attrs: {\n                        label: _vm.$t(\"config.mqtt.form.EnabledCipherSuites\")\n                      },\n                      model: {\n                        value: _vm.configuration.EnabledCipherSuites,\n                        callback: function($$v) {\n                          _vm.$set(\n                            _vm.configuration,\n                            \"EnabledCipherSuites\",\n                            $$v\n                          )\n                        },\n                        expression: \"configuration.EnabledCipherSuites\"\n                      }\n                    }),\n                    _vm._v(\" \"),\n                    _c(\"CInputCheckbox\", {\n                      attrs: {\n                        checked: _vm.configuration.EnableServerCertAuth,\n                        label: _vm.$t(\"config.mqtt.form.EnableServerCertAuth\")\n                      },\n                      on: {\n                        \"update:checked\": function($event) {\n                          return _vm.$set(\n                            _vm.configuration,\n                            \"EnableServerCertAuth\",\n                            $event\n                          )\n                        }\n                      }\n                    }),\n                    _vm._v(\" \"),\n                    _c(\"CInputCheckbox\", {\n                      attrs: {\n                        checked: _vm.configuration.acceptAsyncMsg,\n                        label: _vm.$t(\"config.mqtt.form.acceptAsyncMsg\")\n                      },\n                      on: {\n                        \"update:checked\": function($event) {\n                          return _vm.$set(\n                            _vm.configuration,\n                            \"acceptAsyncMsg\",\n                            $event\n                          )\n                        }\n                      }\n                    }),\n                    _vm._v(\" \"),\n                    _c(\n                      \"CButton\",\n                      {\n                        attrs: {\n                          type: \"submit\",\n                          color: \"primary\",\n                          disabled: invalid\n                        }\n                      },\n                      [\n                        _vm._v(\n                          \"\\n\\t\\t\\t\\t\" + _vm._s(_vm.submitButton) + \"\\n\\t\\t\\t\"\n                        )\n                      ]\n                    )\n                  ],\n                  1\n                )\n              ]\n            }\n          }\n        ])\n      })\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","<template>\n\t<CCard body-wrapper>\n\t\t<ValidationObserver v-slot='{ invalid }'>\n\t\t\t<CForm @submit.prevent='saveConfig'>\n\t\t\t\t<ValidationProvider\n\t\t\t\t\tv-slot='{ errors, touched, valid }'\n\t\t\t\t\trules='required'\n\t\t\t\t\t:custom-messages='{required: \"config.mqtt.form.messages.instance\"}'\n\t\t\t\t>\n\t\t\t\t\t<CInput\n\t\t\t\t\t\tv-model='configuration.instance'\n\t\t\t\t\t\t:label='$t(\"config.mqtt.form.instance\")'\n\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t/>\n\t\t\t\t</ValidationProvider>\n\t\t\t\t<ValidationProvider\n\t\t\t\t\tv-slot='{ errors, touched, valid }'\n\t\t\t\t\trules='required'\n\t\t\t\t\t:custom-messages='{required: \"config.mqtt.form.messages.BrokerAddr\"}'\n\t\t\t\t>\n\t\t\t\t\t<CInput\n\t\t\t\t\t\tv-model='configuration.BrokerAddr'\n\t\t\t\t\t\t:label='$t(\"config.mqtt.form.BrokerAddr\")'\n\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t/>\n\t\t\t\t</ValidationProvider>\n\t\t\t\t<ValidationProvider\n\t\t\t\t\tv-slot='{ errors, touched, valid }'\n\t\t\t\t\trules='required'\n\t\t\t\t\t:custom-messages='{required: \"config.mqtt.form.messages.ClientId\"}'\n\t\t\t\t>\n\t\t\t\t\t<CInput\n\t\t\t\t\t\tv-model='configuration.ClientId'\n\t\t\t\t\t\t:label='$t(\"config.mqtt.form.ClientId\")'\n\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t/>\n\t\t\t\t</ValidationProvider>\n\t\t\t\t<ValidationProvider\n\t\t\t\t\tv-slot='{ errors, touched, valid }'\n\t\t\t\t\trules='integer|required'\n\t\t\t\t\t:custom-messages='{\n\t\t\t\t\t\tinteger: \"config.mqtt.form.messages.Persistence\",\n\t\t\t\t\t\trequired: \"config.mqtt.form.messages.Persistence\",\n\t\t\t\t\t}'\n\t\t\t\t>\n\t\t\t\t\t<CInput\n\t\t\t\t\t\tv-model.number='configuration.Persistence'\n\t\t\t\t\t\t:label='$t(\"config.mqtt.form.Persistence\")'\n\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\ttype='number'\n\t\t\t\t\t/>\n\t\t\t\t</ValidationProvider>\n\t\t\t\t<ValidationProvider\n\t\t\t\t\tv-slot='{ valid, touched, errors }'\n\t\t\t\t\trules='required'\n\t\t\t\t\t:custom-messages='{\n\t\t\t\t\t\trequired: \"config.mqtt.form.messages.QoS\",\n\t\t\t\t\t}'\n\t\t\t\t>\n\t\t\t\t\t<CSelect\n\t\t\t\t\t\t:value.sync='configuration.Qos'\n\t\t\t\t\t\t:label='$t(\"config.mqtt.form.QoS\")'\n\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\t:placeholder='$t(\"config.mqtt.form.messages.QoS\")'\n\t\t\t\t\t\t:options='qosOptions'\n\t\t\t\t\t/>\n\t\t\t\t</ValidationProvider>\n\t\t\t\t<ValidationProvider\n\t\t\t\t\tv-slot='{ errors, touched, valid }'\n\t\t\t\t\trules='required'\n\t\t\t\t\t:custom-messages='{required: \"config.mqtt.form.messages.TopicRequest\"}'\n\t\t\t\t>\n\t\t\t\t\t<CInput\n\t\t\t\t\t\tv-model='configuration.TopicRequest'\n\t\t\t\t\t\t:label='$t(\"config.mqtt.form.TopicRequest\")'\n\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t/>\n\t\t\t\t</ValidationProvider>\n\t\t\t\t<ValidationProvider\n\t\t\t\t\tv-slot='{ errors, touched, valid }'\n\t\t\t\t\trules='required'\n\t\t\t\t\t:custom-messages='{required: \"config.mqtt.form.messages.TopicResponse\"}'\n\t\t\t\t>\n\t\t\t\t\t<CInput\n\t\t\t\t\t\tv-model='configuration.TopicResponse'\n\t\t\t\t\t\t:label='$t(\"config.mqtt.form.TopicResponse\")'\n\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t/>\n\t\t\t\t</ValidationProvider>\n\t\t\t\t<CInput\n\t\t\t\t\tv-model='configuration.User'\n\t\t\t\t\t:label='$t(\"config.mqtt.form.User\")'\n\t\t\t\t/>\n\t\t\t\t<CInput\n\t\t\t\t\tv-model='configuration.Password'\n\t\t\t\t\t:label='$t(\"config.mqtt.form.Password\")'\n\t\t\t\t/>\n\t\t\t\t<CInputCheckbox\n\t\t\t\t\t:checked.sync='configuration.EnabledSSL'\n\t\t\t\t\t:label='$t(\"config.mqtt.form.EnabledSSL\")'\n\t\t\t\t/>\n\t\t\t\t<ValidationProvider\n\t\t\t\t\tv-slot='{ errors, touched, valid }'\n\t\t\t\t\trules='integer|min:0'\n\t\t\t\t\t:custom-messages='{\n\t\t\t\t\t\tinteger: \"config.mqtt.form.messages.KeepAliveInterval\",\n\t\t\t\t\t\tmin: \"config.mqtt.form.messages.KeepAliveInterval\",\n\t\t\t\t\t}'\n\t\t\t\t>\n\t\t\t\t\t<CInput\n\t\t\t\t\t\tv-model.number='configuration.KeepAliveInterval'\n\t\t\t\t\t\t:label='$t(\"config.mqtt.form.KeepAliveInterval\")'\n\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\tmin='0'\n\t\t\t\t\t/>\n\t\t\t\t</ValidationProvider>\n\t\t\t\t<ValidationProvider\n\t\t\t\t\tv-slot='{ errors, touched, valid }'\n\t\t\t\t\trules='integer|min:0'\n\t\t\t\t\t:custom-messages='{\n\t\t\t\t\t\tinteger: \"config.mqtt.form.messages.ConnectTimeout\",\n\t\t\t\t\t\tmin: \"config.mqtt.form.messages.ConnectTimeout\",\n\t\t\t\t\t}'\n\t\t\t\t>\n\t\t\t\t\t<CInput\n\t\t\t\t\t\tv-model.number='configuration.ConnectTimeout'\n\t\t\t\t\t\t:label='$t(\"config.mqtt.form.ConnectTimeout\")'\n\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\tmin='0'\n\t\t\t\t\t/>\n\t\t\t\t</ValidationProvider>\n\t\t\t\t<ValidationProvider\n\t\t\t\t\tv-slot='{ errors, touched, valid }'\n\t\t\t\t\t:rules='\"integer|between:0,\" + configuration.MaxReconnect'\n\t\t\t\t\t:custom-messages='{\n\t\t\t\t\t\tbetween: \"config.mqtt.form.messages.MinReconnect\",\n\t\t\t\t\t\tinteger: \"config.mqtt.form.messages.MinReconnect\",\n\t\t\t\t\t}'\n\t\t\t\t>\n\t\t\t\t\t<CInput\n\t\t\t\t\t\tv-model.number='configuration.MinReconnect'\n\t\t\t\t\t\t:label='$t(\"config.mqtt.form.MinReconnect\")'\n\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t:max='configuration.MaxReconnect'\n\t\t\t\t\t\tmin='0'\n\t\t\t\t\t/>\n\t\t\t\t</ValidationProvider>\n\t\t\t\t<ValidationProvider\n\t\t\t\t\tv-slot='{ errors, touched, valid }'\n\t\t\t\t\t:rules='\"integer|min:\" + configuration.MinReconnect'\n\t\t\t\t\t:custom-messages='{\n\t\t\t\t\t\tinteger: \"config.mqtt.form.messages.MaxReconnect\",\n\t\t\t\t\t\tmin: \"config.mqtt.form.messages.MaxReconnect\",\n\t\t\t\t\t}'\n\t\t\t\t>\n\t\t\t\t\t<CInput\n\t\t\t\t\t\tv-model.number='configuration.MaxReconnect'\n\t\t\t\t\t\t:label='$t(\"config.mqtt.form.MaxReconnect\")'\n\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t:min='configuration.MinReconnect'\n\t\t\t\t\t/>\n\t\t\t\t</ValidationProvider>\n\t\t\t\t<CInput\n\t\t\t\t\tv-model='configuration.TrustStore'\n\t\t\t\t\t:label='$t(\"config.mqtt.form.TrustStore\")'\n\t\t\t\t/>\n\t\t\t\t<CInput\n\t\t\t\t\tv-model='configuration.KeyStore'\n\t\t\t\t\t:label='$t(\"config.mqtt.form.KeyStore\")'\n\t\t\t\t/>\n\t\t\t\t<CInput\n\t\t\t\t\tv-model='configuration.PrivateKey'\n\t\t\t\t\t:label='$t(\"config.mqtt.form.PrivateKey\")'\n\t\t\t\t/>\n\t\t\t\t<CInput\n\t\t\t\t\tv-model='configuration.PrivateKeyPassword'\n\t\t\t\t\t:label='$t(\"config.mqtt.form.PrivateKeyPassword\")'\n\t\t\t\t/>\n\t\t\t\t<CInput\n\t\t\t\t\tv-model='configuration.EnabledCipherSuites'\n\t\t\t\t\t:label='$t(\"config.mqtt.form.EnabledCipherSuites\")'\n\t\t\t\t/>\n\t\t\t\t<CInputCheckbox\n\t\t\t\t\t:checked.sync='configuration.EnableServerCertAuth'\n\t\t\t\t\t:label='$t(\"config.mqtt.form.EnableServerCertAuth\")'\n\t\t\t\t/>\n\t\t\t\t<CInputCheckbox\n\t\t\t\t\t:checked.sync='configuration.acceptAsyncMsg'\n\t\t\t\t\t:label='$t(\"config.mqtt.form.acceptAsyncMsg\")'\n\t\t\t\t/>\n\t\t\t\t<CButton type='submit' color='primary' :disabled='invalid'>\n\t\t\t\t\t{{ submitButton }}\n\t\t\t\t</CButton>\n\t\t\t</CForm>\n\t\t</ValidationObserver>\n\t</CCard>\n</template>\n\n<script>\nimport {CButton, CCard, CForm, CInput, CInputCheckbox} from '@coreui/vue';\nimport {extend, ValidationObserver, ValidationProvider} from 'vee-validate';\nimport DaemonConfigurationService from '../../services/DaemonConfigurationService';\nimport FormErrorHandler from '../../helpers/FormErrorHandler';\nimport {between, integer, min_value, required} from 'vee-validate/dist/rules';\n\nexport default {\n\tname: 'MqttMessagingForm',\n\tcomponents: {\n\t\tCButton,\n\t\tCCard,\n\t\tCForm,\n\t\tCInput,\n\t\tCInputCheckbox,\n\t\tValidationObserver,\n\t\tValidationProvider,\n\t},\n\tprops: {\n\t\tinstance: {\n\t\t\ttype: String,\n\t\t\trequired: false,\n\t\t\tdefault: null,\n\t\t},\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tcomponentName: 'iqrf::MqttMessaging',\n\t\t\tconfiguration: {\n\t\t\t\tinstance: null,\n\t\t\t\tBrokerAddr: null,\n\t\t\t\tClientId: null,\n\t\t\t\tPersistence: 1,\n\t\t\t\tQos: 1,\n\t\t\t\tTopicRequest: null,\n\t\t\t\tTopicResponse: null,\n\t\t\t\tUser: null,\n\t\t\t\tPassword: null,\n\t\t\t\tEnabledSSL: false,\n\t\t\t\tKeepAliveInterval: 20,\n\t\t\t\tConnectTimeout: 5,\n\t\t\t\tMinReconnect: 1,\n\t\t\t\tMaxReconnect: 64,\n\t\t\t\tTrustStore: null,\n\t\t\t\tKeyStore: null,\n\t\t\t\tPrivateKey: null,\n\t\t\t\tPrivateKeyPassword: null,\n\t\t\t\tEnabledCipherSuites: null,\n\t\t\t\tEnableServerCertAuth: false,\n\t\t\t\tacceptAsyncMsg: false,\n\t\t\t}\n\t\t};\n\t},\n\tcomputed: {\n\t\tqosOptions() {\n\t\t\tconst options = [0, 1, 2];\n\t\t\treturn options.map((option) => {\n\t\t\t\treturn {\n\t\t\t\t\tvalue: option,\n\t\t\t\t\tlabel: this.$t('config.mqtt.form.QoSes.' + option).toString(),\n\t\t\t\t};\n\t\t\t});\n\t\t},\n\t\tsubmitButton() {\n\t\t\treturn this.$route.path === '/config/mqtt/add' ?\n\t\t\t\tthis.$t('forms.add') : this.$t('forms.save');\n\t\t},\n\t},\n\tcreated() {\n\t\textend('between', between);\n\t\textend('integer', integer);\n\t\textend('min', min_value);\n\t\textend('required', required);\n\t\tif (this.instance !== null) {\n\t\t\tthis.getConfig();\n\t\t}\n\t},\n\tmethods: {\n\t\tgetConfig() {\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\tDaemonConfigurationService.getInstance(this.componentName, this.instance)\n\t\t\t\t.then((response) => {\n\t\t\t\t\tthis.$store.commit('spinner/HIDE');\n\t\t\t\t\tthis.configuration = response.data;\n\t\t\t\t\tthis.instance = this.configuration.instance;\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tthis.$store.commit('spinner/HIDE');\n\t\t\t\t\tthis.$router.push('/config/mqtt/');\n\t\t\t\t\tFormErrorHandler.configError(error);\n\t\t\t\t});\n\t\t},\n\t\tsaveConfig() {\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\tif (this.instance !== null) {\n\t\t\t\tDaemonConfigurationService.updateInstance(this.componentName, this.instance, this.configuration)\n\t\t\t\t\t.then(() => this.successfulSave())\n\t\t\t\t\t.catch((error) => FormErrorHandler.configError(error));\n\t\t\t} else {\n\t\t\t\tDaemonConfigurationService.createInstance(this.componentName, this.configuration)\n\t\t\t\t\t.then(() => this.successfulSave())\n\t\t\t\t\t.catch((error) => FormErrorHandler.configError(error));\n\t\t\t}\n\t\t},\n\t\tsuccessfulSave() {\n\t\t\tthis.$router.push('/config/mqtt/');\n\t\t\tthis.$store.commit('spinner/HIDE');\n\t\t\tif (this.$route.path === '/config/mqtt/add') {\n\t\t\t\tthis.$toast.success(\n\t\t\t\t\tthis.$t('config.mqtt.messages.add.success', {instance: this.configuration.instance})\n\t\t\t\t\t\t.toString()\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tthis.$toast.success(\n\t\t\t\t\tthis.$t('config.mqtt.messages.edit.success', {instance: this.configuration.instance})\n\t\t\t\t\t\t.toString()\n\t\t\t\t);\n\t\t\t}\n\t\t},\n\t},\n\tmetaInfo() {\n\t\treturn {\n\t\t\ttitle: this.$route.path === '/config/mqtt/add' ?\n\t\t\t\t'config.mqtt.add' : 'config.mqtt.edit',\n\t\t};\n\t},\n};\n</script>\n","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MqttMessagingForm.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MqttMessagingForm.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./MqttMessagingForm.vue?vue&type=template&id=ced1352c&\"\nimport script from \"./MqttMessagingForm.vue?vue&type=script&lang=js&\"\nexport * from \"./MqttMessagingForm.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('ced1352c')) {\n      api.createRecord('ced1352c', component.options)\n    } else {\n      api.reload('ced1352c', component.options)\n    }\n    module.hot.accept(\"./MqttMessagingForm.vue?vue&type=template&id=ced1352c&\", function () {\n      api.rerender('ced1352c', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/pages/Config/MqttMessagingForm.vue\"\nexport default component.exports","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\n        \"CCard\",\n        [\n          _c(\n            \"CCardHeader\",\n            [\n              _c(\n                \"CButton\",\n                {\n                  staticClass: \"float-right\",\n                  attrs: {\n                    color: \"success\",\n                    to: \"/config/mqtt/add\",\n                    size: \"sm\"\n                  }\n                },\n                [\n                  _c(\"CIcon\", { attrs: { content: _vm.$options.icons.add } }),\n                  _vm._v(\n                    \"\\n\\t\\t\\t\\t\" +\n                      _vm._s(_vm.$t(\"table.actions.add\")) +\n                      \"\\n\\t\\t\\t\"\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"CCardBody\",\n            [\n              _c(\"CDataTable\", {\n                attrs: {\n                  items: _vm.instances,\n                  fields: _vm.fields,\n                  \"column-filter\": true,\n                  \"items-per-page\": 20,\n                  pagination: true,\n                  striped: true,\n                  sorter: { external: false, resetable: true }\n                },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"EnabledSSL\",\n                    fn: function(ref) {\n                      var item = ref.item\n                      return [\n                        _c(\n                          \"td\",\n                          [\n                            _c(\n                              \"CDropdown\",\n                              {\n                                attrs: {\n                                  color: item.EnabledSSL ? \"success\" : \"danger\",\n                                  \"toggler-text\": _vm.$t(\n                                    \"table.enabled.\" + item.EnabledSSL\n                                  ),\n                                  placement: \"top-start\",\n                                  size: \"sm\"\n                                }\n                              },\n                              [\n                                _c(\n                                  \"CDropdownItem\",\n                                  {\n                                    on: {\n                                      click: function($event) {\n                                        return _vm.changeEnabledSSL(item, true)\n                                      }\n                                    }\n                                  },\n                                  [\n                                    _vm._v(\n                                      \"\\n\\t\\t\\t\\t\\t\\t\\t\\t\" +\n                                        _vm._s(_vm.$t(\"table.enabled.true\")) +\n                                        \"\\n\\t\\t\\t\\t\\t\\t\\t\"\n                                    )\n                                  ]\n                                ),\n                                _vm._v(\" \"),\n                                _c(\n                                  \"CDropdownItem\",\n                                  {\n                                    on: {\n                                      click: function($event) {\n                                        return _vm.changeEnabledSSL(item, false)\n                                      }\n                                    }\n                                  },\n                                  [\n                                    _vm._v(\n                                      \"\\n\\t\\t\\t\\t\\t\\t\\t\\t\" +\n                                        _vm._s(_vm.$t(\"table.enabled.false\")) +\n                                        \"\\n\\t\\t\\t\\t\\t\\t\\t\"\n                                    )\n                                  ]\n                                )\n                              ],\n                              1\n                            )\n                          ],\n                          1\n                        )\n                      ]\n                    }\n                  },\n                  {\n                    key: \"acceptAsyncMsg\",\n                    fn: function(ref) {\n                      var item = ref.item\n                      return [\n                        _c(\n                          \"td\",\n                          [\n                            _c(\n                              \"CDropdown\",\n                              {\n                                attrs: {\n                                  color: item.acceptAsyncMsg\n                                    ? \"success\"\n                                    : \"danger\",\n                                  \"toggler-text\": _vm.$t(\n                                    \"table.enabled.\" + item.acceptAsyncMsg\n                                  ),\n                                  placement: \"top-start\",\n                                  size: \"sm\"\n                                }\n                              },\n                              [\n                                _c(\n                                  \"CDropdownItem\",\n                                  {\n                                    on: {\n                                      click: function($event) {\n                                        return _vm.changeAcceptAsyncMsg(\n                                          item,\n                                          true\n                                        )\n                                      }\n                                    }\n                                  },\n                                  [\n                                    _vm._v(\n                                      \"\\n\\t\\t\\t\\t\\t\\t\\t\\t\" +\n                                        _vm._s(_vm.$t(\"table.enabled.true\")) +\n                                        \"\\n\\t\\t\\t\\t\\t\\t\\t\"\n                                    )\n                                  ]\n                                ),\n                                _vm._v(\" \"),\n                                _c(\n                                  \"CDropdownItem\",\n                                  {\n                                    on: {\n                                      click: function($event) {\n                                        return _vm.changeAcceptAsyncMsg(\n                                          item,\n                                          false\n                                        )\n                                      }\n                                    }\n                                  },\n                                  [\n                                    _vm._v(\n                                      \"\\n\\t\\t\\t\\t\\t\\t\\t\\t\" +\n                                        _vm._s(_vm.$t(\"table.enabled.false\")) +\n                                        \"\\n\\t\\t\\t\\t\\t\\t\\t\"\n                                    )\n                                  ]\n                                )\n                              ],\n                              1\n                            )\n                          ],\n                          1\n                        )\n                      ]\n                    }\n                  },\n                  {\n                    key: \"actions\",\n                    fn: function(ref) {\n                      var item = ref.item\n                      return [\n                        _c(\n                          \"td\",\n                          { staticClass: \"col-actions\" },\n                          [\n                            _c(\n                              \"CButton\",\n                              {\n                                attrs: {\n                                  color: \"primary\",\n                                  to: \"/config/mqtt/edit/\" + item.instance,\n                                  size: \"sm\"\n                                }\n                              },\n                              [\n                                _c(\"CIcon\", {\n                                  attrs: { content: _vm.$options.icons.edit }\n                                }),\n                                _vm._v(\n                                  \"\\n\\t\\t\\t\\t\\t\\t\\t\" +\n                                    _vm._s(_vm.$t(\"table.actions.edit\")) +\n                                    \"\\n\\t\\t\\t\\t\\t\\t\"\n                                )\n                              ],\n                              1\n                            ),\n                            _vm._v(\" \"),\n                            _c(\n                              \"CButton\",\n                              {\n                                attrs: { color: \"danger\", size: \"sm\" },\n                                on: {\n                                  click: function($event) {\n                                    return _vm.confirmDelete(item)\n                                  }\n                                }\n                              },\n                              [\n                                _c(\"CIcon\", {\n                                  attrs: { content: _vm.$options.icons.delete }\n                                }),\n                                _vm._v(\n                                  \"\\n\\t\\t\\t\\t\\t\\t\\t\" +\n                                    _vm._s(_vm.$t(\"table.actions.delete\")) +\n                                    \"\\n\\t\\t\\t\\t\\t\\t\"\n                                )\n                              ],\n                              1\n                            )\n                          ],\n                          1\n                        )\n                      ]\n                    }\n                  }\n                ])\n              })\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"CModal\",\n        {\n          attrs: { color: \"danger\", show: _vm.modals.delete.instance !== null },\n          on: {\n            \"update:show\": function($event) {\n              return _vm.$set(_vm.modals.delete, \"instance !== null\", $event)\n            }\n          },\n          scopedSlots: _vm._u([\n            {\n              key: \"header\",\n              fn: function() {\n                return [\n                  _c(\"h5\", { staticClass: \"modal-title\" }, [\n                    _vm._v(\n                      \"\\n\\t\\t\\t\\t\" +\n                        _vm._s(\n                          _vm.$t(\"config.mqtt.messages.delete.confirmTitle\")\n                        ) +\n                        \"\\n\\t\\t\\t\"\n                    )\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"CButtonClose\", {\n                    staticClass: \"text-white\",\n                    on: {\n                      click: function($event) {\n                        _vm.modals.delete.instance = null\n                      }\n                    }\n                  })\n                ]\n              },\n              proxy: true\n            },\n            {\n              key: \"footer\",\n              fn: function() {\n                return [\n                  _c(\n                    \"CButton\",\n                    {\n                      attrs: { color: \"danger\" },\n                      on: {\n                        click: function($event) {\n                          _vm.modals.delete.instance = null\n                        }\n                      }\n                    },\n                    [\n                      _vm._v(\n                        \"\\n\\t\\t\\t\\t\" + _vm._s(_vm.$t(\"forms.no\")) + \"\\n\\t\\t\\t\"\n                      )\n                    ]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"CButton\",\n                    {\n                      attrs: { color: \"success\" },\n                      on: { click: _vm.performDelete }\n                    },\n                    [\n                      _vm._v(\n                        \"\\n\\t\\t\\t\\t\" + _vm._s(_vm.$t(\"forms.yes\")) + \"\\n\\t\\t\\t\"\n                      )\n                    ]\n                  )\n                ]\n              },\n              proxy: true\n            }\n          ])\n        },\n        [\n          _vm._v(\" \"),\n          _vm.modals.delete.instance !== null\n            ? _c(\"span\", [\n                _vm._v(\n                  \"\\n\\t\\t\\t\" +\n                    _vm._s(\n                      _vm.$t(\"config.mqtt.messages.delete.confirm\", {\n                        instance: _vm.modals.delete.instance\n                      })\n                    ) +\n                    \"\\n\\t\\t\"\n                )\n              ])\n            : _vm._e()\n        ]\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","<template>\n\t<div>\n\t\t<CCard>\n\t\t\t<CCardHeader>\n\t\t\t\t<CButton\n\t\t\t\t\tcolor='success'\n\t\t\t\t\tto='/config/mqtt/add'\n\t\t\t\t\tsize='sm'\n\t\t\t\t\tclass='float-right'\n\t\t\t\t>\n\t\t\t\t\t<CIcon :content='$options.icons.add' />\n\t\t\t\t\t{{ $t('table.actions.add') }}\n\t\t\t\t</CButton>\n\t\t\t</CCardHeader>\n\t\t\t<CCardBody>\n\t\t\t\t<CDataTable\n\t\t\t\t\t:items='instances'\n\t\t\t\t\t:fields='fields'\n\t\t\t\t\t:column-filter='true'\n\t\t\t\t\t:items-per-page='20'\n\t\t\t\t\t:pagination='true'\n\t\t\t\t\t:striped='true'\n\t\t\t\t\t:sorter='{ external: false, resetable: true }'\n\t\t\t\t>\n\t\t\t\t\t<template #EnabledSSL='{item}'>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<CDropdown\n\t\t\t\t\t\t\t\t:color='item.EnabledSSL ? \"success\" : \"danger\"'\n\t\t\t\t\t\t\t\t:toggler-text='$t(\"table.enabled.\" + item.EnabledSSL)'\n\t\t\t\t\t\t\t\tplacement='top-start'\n\t\t\t\t\t\t\t\tsize='sm'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<CDropdownItem @click='changeEnabledSSL(item, true)'>\n\t\t\t\t\t\t\t\t\t{{ $t('table.enabled.true') }}\n\t\t\t\t\t\t\t\t</CDropdownItem>\n\t\t\t\t\t\t\t\t<CDropdownItem @click='changeEnabledSSL(item, false)'>\n\t\t\t\t\t\t\t\t\t{{ $t('table.enabled.false') }}\n\t\t\t\t\t\t\t\t</CDropdownItem>\n\t\t\t\t\t\t\t</CDropdown>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</template>\n\t\t\t\t\t<template #acceptAsyncMsg='{item}'>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<CDropdown\n\t\t\t\t\t\t\t\t:color='item.acceptAsyncMsg ? \"success\" : \"danger\"'\n\t\t\t\t\t\t\t\t:toggler-text='$t(\"table.enabled.\" + item.acceptAsyncMsg)'\n\t\t\t\t\t\t\t\tplacement='top-start'\n\t\t\t\t\t\t\t\tsize='sm'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<CDropdownItem @click='changeAcceptAsyncMsg(item, true)'>\n\t\t\t\t\t\t\t\t\t{{ $t('table.enabled.true') }}\n\t\t\t\t\t\t\t\t</CDropdownItem>\n\t\t\t\t\t\t\t\t<CDropdownItem @click='changeAcceptAsyncMsg(item, false)'>\n\t\t\t\t\t\t\t\t\t{{ $t('table.enabled.false') }}\n\t\t\t\t\t\t\t\t</CDropdownItem>\n\t\t\t\t\t\t\t</CDropdown>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</template>\n\t\t\t\t\t<template #actions='{item}'>\n\t\t\t\t\t\t<td class='col-actions'>\n\t\t\t\t\t\t\t<CButton\n\t\t\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\t\t\t:to='\"/config/mqtt/edit/\" + item.instance'\n\t\t\t\t\t\t\t\tsize='sm'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<CIcon :content='$options.icons.edit' />\n\t\t\t\t\t\t\t\t{{ $t('table.actions.edit') }}\n\t\t\t\t\t\t\t</CButton>\n\t\t\t\t\t\t\t<CButton color='danger' size='sm' @click='confirmDelete(item)'>\n\t\t\t\t\t\t\t\t<CIcon :content='$options.icons.delete' />\n\t\t\t\t\t\t\t\t{{ $t('table.actions.delete') }}\n\t\t\t\t\t\t\t</CButton>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</template>\n\t\t\t\t</CDataTable>\n\t\t\t</CCardBody>\n\t\t</CCard>\n\t\t<CModal\n\t\t\tcolor='danger'\n\t\t\t:show.sync='modals.delete.instance !== null'\n\t\t>\n\t\t\t<template #header>\n\t\t\t\t<h5 class='modal-title'>\n\t\t\t\t\t{{ $t('config.mqtt.messages.delete.confirmTitle') }}\n\t\t\t\t</h5>\n\t\t\t\t<CButtonClose class='text-white' @click='modals.delete.instance = null' />\n\t\t\t</template>\n\t\t\t<span v-if='modals.delete.instance !== null'>\n\t\t\t\t{{ $t('config.mqtt.messages.delete.confirm', {instance: modals.delete.instance}) }}\n\t\t\t</span>\n\t\t\t<template #footer>\n\t\t\t\t<CButton color='danger' @click='modals.delete.instance = null'>\n\t\t\t\t\t{{ $t('forms.no') }}\n\t\t\t\t</CButton>\n\t\t\t\t<CButton color='success' @click='performDelete'>\n\t\t\t\t\t{{ $t('forms.yes') }}\n\t\t\t\t</CButton>\n\t\t\t</template>\n\t\t</CModal>\n\t</div>\n</template>\n\n<script>\nimport {\n\tCButton,\n\tCButtonClose,\n\tCCard,\n\tCCardBody,\n\tCCardHeader,\n\tCDataTable,\n\tCDropdown,\n\tCDropdownItem,\n\tCIcon,\n\tCModal\n} from '@coreui/vue/src';\nimport {cilPencil, cilPlus, cilTrash} from '@coreui/icons';\nimport DaemonConfigurationService\n\tfrom '../../services/DaemonConfigurationService';\n\nexport default {\n\tname: 'MqttMessagingTable',\n\tcomponents: {\n\t\tCButton,\n\t\tCButtonClose,\n\t\tCCard,\n\t\tCCardBody,\n\t\tCCardHeader,\n\t\tCDataTable,\n\t\tCDropdown,\n\t\tCDropdownItem,\n\t\tCIcon,\n\t\tCModal,\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tcomponentName: 'iqrf::MqttMessaging',\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\tkey: 'instance',\n\t\t\t\t\tlabel: this.$t('config.mqtt.form.instance'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: 'BrokerAddr',\n\t\t\t\t\tlabel: this.$t('config.mqtt.form.BrokerAddr'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: 'ClientId',\n\t\t\t\t\tlabel: this.$t('config.mqtt.form.ClientId'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: 'TopicRequest',\n\t\t\t\t\tlabel: this.$t('config.mqtt.form.TopicRequest'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: 'TopicResponse',\n\t\t\t\t\tlabel: this.$t('config.mqtt.form.TopicResponse'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: 'EnabledSSL',\n\t\t\t\t\tlabel: this.$t('config.mqtt.form.EnabledSSL'),\n\t\t\t\t\tfilter: false,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: 'acceptAsyncMsg',\n\t\t\t\t\tlabel: this.$t('config.mqtt.form.acceptAsyncMsg'),\n\t\t\t\t\tfilter: false,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: 'actions',\n\t\t\t\t\tlabel: this.$t('table.actions.title'),\n\t\t\t\t\tsorter: false,\n\t\t\t\t\tfilter: false,\n\t\t\t\t},\n\t\t\t],\n\t\t\tinstances: [],\n\t\t\tmodals: {\n\t\t\t\tdelete: {\n\t\t\t\t\tinstance: null,\n\t\t\t\t}\n\t\t\t},\n\t\t};\n\t},\n\tcreated() {\n\t\tthis.$store.commit('spinner/SHOW');\n\t\tthis.getInstances();\n\t},\n\tmethods: {\n\t\tconfirmDelete(instance) {\n\t\t\tthis.modals.delete.instance = instance.instance;\n\t\t},\n\t\tchangeAcceptAsyncMsg(instance, acceptAsyncMsg) {\n\t\t\tthis.edit(instance, {acceptAsyncMsg: acceptAsyncMsg});\n\t\t},\n\t\tchangeEnabledSSL(instance, enabledSsl) {\n\t\t\tthis.edit(instance, {EnabledSSL: enabledSsl});\n\t\t},\n\t\tedit(instance, newSettings) {\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\tlet settings = {\n\t\t\t\t...instance,\n\t\t\t\t...newSettings,\n\t\t\t};\n\t\t\treturn DaemonConfigurationService.updateInstance(this.componentName, settings.instance, settings)\n\t\t\t\t.then(() => {\n\t\t\t\t\tthis.getInstances().then(() => {\n\t\t\t\t\t\tthis.$toast.success(\n\t\t\t\t\t\t\tthis.$t('config.mqtt.messages.edit.success', {instance: settings.instance})\n\t\t\t\t\t\t\t\t.toString()\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t},\n\t\tgetInstances() {\n\t\t\treturn DaemonConfigurationService.getComponent(this.componentName)\n\t\t\t\t.then((response) => {\n\t\t\t\t\tthis.$store.commit('spinner/HIDE');\n\t\t\t\t\tthis.instances = response.data.instances;\n\t\t\t\t})\n\t\t\t\t.catch(() => this.$store.commit('spinner/HIDE'));\n\t\t},\n\t\tperformDelete() {\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\tconst instance = this.modals.delete.instance;\n\t\t\tthis.modals.delete.instance = null;\n\t\t\tDaemonConfigurationService.deleteInstance(this.componentName, instance)\n\t\t\t\t.then(() => {\n\t\t\t\t\tthis.getInstances().then(() => {\n\t\t\t\t\t\tthis.$toast.success(\n\t\t\t\t\t\t\tthis.$t('config.mqtt.messages.delete.success', {instance: instance})\n\t\t\t\t\t\t\t\t.toString()\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.catch(() => this.$store.commit('spinner/HIDE'));\n\t\t},\n\t},\n\ticons: {\n\t\tadd: cilPlus,\n\t\tdelete: cilTrash,\n\t\tedit: cilPencil,\n\t},\n\tmetaInfo: {\n\t\ttitle: 'config.mqtt.title',\n\t},\n};\n</script>\n","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MqttMessagingTable.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MqttMessagingTable.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./MqttMessagingTable.vue?vue&type=template&id=cade9dd0&\"\nimport script from \"./MqttMessagingTable.vue?vue&type=script&lang=js&\"\nexport * from \"./MqttMessagingTable.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('cade9dd0')) {\n      api.createRecord('cade9dd0', component.options)\n    } else {\n      api.reload('cade9dd0', component.options)\n    }\n    module.hot.accept(\"./MqttMessagingTable.vue?vue&type=template&id=cade9dd0&\", function () {\n      api.rerender('cade9dd0', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/pages/Config/MqttMessagingTable.vue\"\nexport default component.exports","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"CCard\",\n    { attrs: { \"body-wrapper\": \"\" } },\n    [\n      _c(\"ValidationObserver\", {\n        scopedSlots: _vm._u([\n          {\n            key: \"default\",\n            fn: function(ref) {\n              var invalid = ref.invalid\n              return [\n                _c(\n                  \"CForm\",\n                  {\n                    on: {\n                      submit: function($event) {\n                        $event.preventDefault()\n                        return _vm.saveConfig($event)\n                      }\n                    }\n                  },\n                  [\n                    _c(\"ValidationProvider\", {\n                      attrs: {\n                        rules: \"required\",\n                        \"custom-messages\": {\n                          required: \"config.udp.form.messages.instance\"\n                        }\n                      },\n                      scopedSlots: _vm._u(\n                        [\n                          {\n                            key: \"default\",\n                            fn: function(ref) {\n                              var errors = ref.errors\n                              var touched = ref.touched\n                              var valid = ref.valid\n                              return [\n                                _c(\"CInput\", {\n                                  attrs: {\n                                    label: _vm.$t(\"config.udp.form.instance\"),\n                                    \"is-valid\": touched ? valid : null,\n                                    \"invalid-feedback\": _vm.$t(errors[0])\n                                  },\n                                  model: {\n                                    value: _vm.configuration.instance,\n                                    callback: function($$v) {\n                                      _vm.$set(\n                                        _vm.configuration,\n                                        \"instance\",\n                                        $$v\n                                      )\n                                    },\n                                    expression: \"configuration.instance\"\n                                  }\n                                })\n                              ]\n                            }\n                          }\n                        ],\n                        null,\n                        true\n                      )\n                    }),\n                    _vm._v(\" \"),\n                    _c(\"ValidationProvider\", {\n                      attrs: {\n                        rules: \"required|between:1,65535\",\n                        \"custom-messages\": {\n                          between: \"config.udp.form.messages.RemotePort\",\n                          required: \"config.udp.form.messages.RemotePort\"\n                        }\n                      },\n                      scopedSlots: _vm._u(\n                        [\n                          {\n                            key: \"default\",\n                            fn: function(ref) {\n                              var errors = ref.errors\n                              var touched = ref.touched\n                              var valid = ref.valid\n                              return [\n                                _c(\"CInput\", {\n                                  attrs: {\n                                    label: _vm.$t(\"config.udp.form.RemotePort\"),\n                                    \"is-valid\": touched ? valid : null,\n                                    \"invalid-feedback\": _vm.$t(errors[0]),\n                                    type: \"number\",\n                                    min: \"1\",\n                                    max: \"65535\"\n                                  },\n                                  model: {\n                                    value: _vm.configuration.RemotePort,\n                                    callback: function($$v) {\n                                      _vm.$set(\n                                        _vm.configuration,\n                                        \"RemotePort\",\n                                        _vm._n($$v)\n                                      )\n                                    },\n                                    expression: \"configuration.RemotePort\"\n                                  }\n                                })\n                              ]\n                            }\n                          }\n                        ],\n                        null,\n                        true\n                      )\n                    }),\n                    _vm._v(\" \"),\n                    _c(\"ValidationProvider\", {\n                      attrs: {\n                        rules: \"required|between:1,65535\",\n                        \"custom-messages\": {\n                          between: \"config.udp.form.messages.LocalPort\",\n                          required: \"config.udp.form.messages.LocalPort\"\n                        }\n                      },\n                      scopedSlots: _vm._u(\n                        [\n                          {\n                            key: \"default\",\n                            fn: function(ref) {\n                              var errors = ref.errors\n                              var touched = ref.touched\n                              var valid = ref.valid\n                              return [\n                                _c(\"CInput\", {\n                                  attrs: {\n                                    label: _vm.$t(\"config.udp.form.LocalPort\"),\n                                    \"is-valid\": touched ? valid : null,\n                                    \"invalid-feedback\": _vm.$t(errors[0]),\n                                    type: \"number\",\n                                    min: \"1\",\n                                    max: \"65535\"\n                                  },\n                                  model: {\n                                    value: _vm.configuration.LocalPort,\n                                    callback: function($$v) {\n                                      _vm.$set(\n                                        _vm.configuration,\n                                        \"LocalPort\",\n                                        _vm._n($$v)\n                                      )\n                                    },\n                                    expression: \"configuration.LocalPort\"\n                                  }\n                                })\n                              ]\n                            }\n                          }\n                        ],\n                        null,\n                        true\n                      )\n                    }),\n                    _vm._v(\" \"),\n                    _c(\n                      \"CButton\",\n                      {\n                        attrs: {\n                          type: \"submit\",\n                          color: \"primary\",\n                          disabled: invalid\n                        }\n                      },\n                      [\n                        _vm._v(\n                          \"\\n\\t\\t\\t\\t\" + _vm._s(_vm.submitButton) + \"\\n\\t\\t\\t\"\n                        )\n                      ]\n                    )\n                  ],\n                  1\n                )\n              ]\n            }\n          }\n        ])\n      })\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","<template>\n\t<CCard body-wrapper>\n\t\t<ValidationObserver v-slot='{ invalid }'>\n\t\t\t<CForm @submit.prevent='saveConfig'>\n\t\t\t\t<ValidationProvider\n\t\t\t\t\tv-slot='{ errors, touched, valid }'\n\t\t\t\t\trules='required'\n\t\t\t\t\t:custom-messages='{required: \"config.udp.form.messages.instance\"}'\n\t\t\t\t>\n\t\t\t\t\t<CInput\n\t\t\t\t\t\tv-model='configuration.instance'\n\t\t\t\t\t\t:label='$t(\"config.udp.form.instance\")'\n\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t/>\n\t\t\t\t</ValidationProvider>\n\t\t\t\t<ValidationProvider\n\t\t\t\t\tv-slot='{ errors, touched, valid }'\n\t\t\t\t\trules='required|between:1,65535'\n\t\t\t\t\t:custom-messages='{\n\t\t\t\t\t\tbetween: \"config.udp.form.messages.RemotePort\",\n\t\t\t\t\t\trequired: \"config.udp.form.messages.RemotePort\",\n\t\t\t\t\t}'\n\t\t\t\t>\n\t\t\t\t\t<CInput\n\t\t\t\t\t\tv-model.number='configuration.RemotePort'\n\t\t\t\t\t\t:label='$t(\"config.udp.form.RemotePort\")'\n\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\tmin='1'\n\t\t\t\t\t\tmax='65535'\n\t\t\t\t\t/>\n\t\t\t\t</ValidationProvider>\n\t\t\t\t<ValidationProvider\n\t\t\t\t\tv-slot='{ errors, touched, valid }'\n\t\t\t\t\trules='required|between:1,65535'\n\t\t\t\t\t:custom-messages='{\n\t\t\t\t\t\tbetween: \"config.udp.form.messages.LocalPort\",\n\t\t\t\t\t\trequired: \"config.udp.form.messages.LocalPort\",\n\t\t\t\t\t}'\n\t\t\t\t>\n\t\t\t\t\t<CInput\n\t\t\t\t\t\tv-model.number='configuration.LocalPort'\n\t\t\t\t\t\t:label='$t(\"config.udp.form.LocalPort\")'\n\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\tmin='1'\n\t\t\t\t\t\tmax='65535'\n\t\t\t\t\t/>\n\t\t\t\t</ValidationProvider>\n\t\t\t\t<CButton type='submit' color='primary' :disabled='invalid'>\n\t\t\t\t\t{{ submitButton }}\n\t\t\t\t</CButton>\n\t\t\t</CForm>\n\t\t</ValidationObserver>\n\t</CCard>\n</template>\n\n<script>\nimport {CButton, CCard, CForm, CInput} from '@coreui/vue';\nimport {extend, ValidationObserver, ValidationProvider} from 'vee-validate';\nimport DaemonConfigurationService from '../../services/DaemonConfigurationService';\nimport FormErrorHandler from '../../helpers/FormErrorHandler';\nimport {between, required} from 'vee-validate/dist/rules';\n\nexport default {\n\tname: 'UdpMessagingForm',\n\tcomponents: {\n\t\tCButton,\n\t\tCCard,\n\t\tCForm,\n\t\tCInput,\n\t\tValidationObserver,\n\t\tValidationProvider,\n\t},\n\tprops: {\n\t\tinstance: {\n\t\t\ttype: String,\n\t\t\trequired: false,\n\t\t\tdefault: null,\n\t\t},\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tcomponentName: 'iqrf::UdpMessaging',\n\t\t\tconfiguration: {\n\t\t\t\tinstance: null,\n\t\t\t\tRemotePort: null,\n\t\t\t\tLocalPort: null,\n\t\t\t}\n\t\t};\n\t},\n\tcomputed: {\n\t\tsubmitButton() {\n\t\t\treturn this.$route.path === '/config/udp/add' ?\n\t\t\t\tthis.$t('forms.add') : this.$t('forms.save');\n\t\t},\n\t},\n\tcreated() {\n\t\textend('between', between);\n\t\textend('required', required);\n\t\tif (this.instance !== null) {\n\t\t\tthis.getConfig();\n\t\t}\n\t},\n\tmethods: {\n\t\tgetConfig() {\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\tDaemonConfigurationService.getInstance(this.componentName, this.instance)\n\t\t\t\t.then((response) => {\n\t\t\t\t\tthis.$store.commit('spinner/HIDE');\n\t\t\t\t\tthis.configuration = response.data;\n\t\t\t\t\tthis.instance = this.configuration.instance;\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tthis.$router.push('/config/udp/');\n\t\t\t\t\tFormErrorHandler.configError(error);\n\t\t\t\t});\n\t\t},\n\t\tsaveConfig() {\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\tif (this.instance !== null) {\n\t\t\t\tDaemonConfigurationService.updateInstance(this.componentName, this.instance, this.configuration)\n\t\t\t\t\t.then(() => this.successfulSave())\n\t\t\t\t\t.catch((error) => FormErrorHandler.configError(error));\n\t\t\t} else {\n\t\t\t\tDaemonConfigurationService.createInstance(this.componentName, this.configuration)\n\t\t\t\t\t.then(() => this.successfulSave())\n\t\t\t\t\t.catch((error) => FormErrorHandler.configError(error));\n\t\t\t}\n\t\t},\n\t\tsuccessfulSave() {\n\t\t\tthis.$router.push('/config/udp/');\n\t\t\tthis.$store.commit('spinner/HIDE');\n\t\t\tif (this.$route.path === '/config/udp/add') {\n\t\t\t\tthis.$toast.success(\n\t\t\t\t\tthis.$t('config.udp.messages.add.success', {instance: this.configuration.instance})\n\t\t\t\t\t\t.toString());\n\t\t\t} else {\n\t\t\t\tthis.$toast.success(\n\t\t\t\t\tthis.$t('config.udp.messages.edit.success', {instance: this.configuration.instance})\n\t\t\t\t\t\t.toString()\n\t\t\t\t);\n\t\t\t}\n\t\t},\n\t},\n\tmetaInfo() {\n\t\treturn {\n\t\t\ttitle: this.$route.path === '/config/udp/add' ?\n\t\t\t\t'config.udp.add' : 'config.udp.edit',\n\t\t};\n\t},\n};\n</script>\n","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./UdpMessagingForm.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./UdpMessagingForm.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./UdpMessagingForm.vue?vue&type=template&id=e638d55e&\"\nimport script from \"./UdpMessagingForm.vue?vue&type=script&lang=js&\"\nexport * from \"./UdpMessagingForm.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('e638d55e')) {\n      api.createRecord('e638d55e', component.options)\n    } else {\n      api.reload('e638d55e', component.options)\n    }\n    module.hot.accept(\"./UdpMessagingForm.vue?vue&type=template&id=e638d55e&\", function () {\n      api.rerender('e638d55e', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/pages/Config/UdpMessagingForm.vue\"\nexport default component.exports","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\n        \"CCard\",\n        [\n          _vm.instances.length < 1\n            ? _c(\n                \"CCardHeader\",\n                [\n                  _c(\n                    \"CButton\",\n                    {\n                      staticClass: \"float-right\",\n                      attrs: {\n                        color: \"success\",\n                        to: \"/config/udp/add\",\n                        size: \"sm\"\n                      }\n                    },\n                    [\n                      _c(\"CIcon\", {\n                        attrs: { content: _vm.$options.icons.add }\n                      }),\n                      _vm._v(\n                        \"\\n\\t\\t\\t\\t\" +\n                          _vm._s(_vm.$t(\"table.actions.add\")) +\n                          \"\\n\\t\\t\\t\"\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            : _vm._e(),\n          _vm._v(\" \"),\n          _c(\n            \"CCardBody\",\n            [\n              _c(\"CDataTable\", {\n                attrs: {\n                  items: _vm.instances,\n                  fields: _vm.fields,\n                  \"column-filter\": true,\n                  \"items-per-page\": 20,\n                  pagination: true,\n                  striped: true,\n                  sorter: { external: false, resetable: true }\n                },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"actions\",\n                    fn: function(ref) {\n                      var item = ref.item\n                      return [\n                        _c(\n                          \"td\",\n                          { staticClass: \"col-actions\" },\n                          [\n                            _c(\n                              \"CButton\",\n                              {\n                                attrs: {\n                                  color: \"primary\",\n                                  to: \"/config/udp/edit/\" + item.instance,\n                                  size: \"sm\"\n                                }\n                              },\n                              [\n                                _c(\"CIcon\", {\n                                  attrs: { content: _vm.$options.icons.edit }\n                                }),\n                                _vm._v(\n                                  \"\\n\\t\\t\\t\\t\\t\\t\\t\" +\n                                    _vm._s(_vm.$t(\"table.actions.edit\")) +\n                                    \"\\n\\t\\t\\t\\t\\t\\t\"\n                                )\n                              ],\n                              1\n                            ),\n                            _vm._v(\" \"),\n                            _c(\n                              \"CButton\",\n                              {\n                                attrs: { color: \"danger\", size: \"sm\" },\n                                on: {\n                                  click: function($event) {\n                                    return _vm.confirmDelete(item)\n                                  }\n                                }\n                              },\n                              [\n                                _c(\"CIcon\", {\n                                  attrs: { content: _vm.$options.icons.delete }\n                                }),\n                                _vm._v(\n                                  \"\\n\\t\\t\\t\\t\\t\\t\\t\" +\n                                    _vm._s(_vm.$t(\"table.actions.delete\")) +\n                                    \"\\n\\t\\t\\t\\t\\t\\t\"\n                                )\n                              ],\n                              1\n                            )\n                          ],\n                          1\n                        )\n                      ]\n                    }\n                  }\n                ])\n              })\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"CModal\",\n        {\n          attrs: { color: \"danger\", show: _vm.modals.delete.instance !== null },\n          on: {\n            \"update:show\": function($event) {\n              return _vm.$set(_vm.modals.delete, \"instance !== null\", $event)\n            }\n          },\n          scopedSlots: _vm._u([\n            {\n              key: \"header\",\n              fn: function() {\n                return [\n                  _c(\"h5\", { staticClass: \"modal-title\" }, [\n                    _vm._v(\n                      \"\\n\\t\\t\\t\\t\" +\n                        _vm._s(\n                          _vm.$t(\"config.udp.messages.delete.confirmTitle\")\n                        ) +\n                        \"\\n\\t\\t\\t\"\n                    )\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"CButtonClose\", {\n                    staticClass: \"text-white\",\n                    on: {\n                      click: function($event) {\n                        _vm.modals.delete.instance = null\n                      }\n                    }\n                  })\n                ]\n              },\n              proxy: true\n            },\n            {\n              key: \"footer\",\n              fn: function() {\n                return [\n                  _c(\n                    \"CButton\",\n                    {\n                      attrs: { color: \"danger\" },\n                      on: {\n                        click: function($event) {\n                          _vm.modals.delete.instance = null\n                        }\n                      }\n                    },\n                    [\n                      _vm._v(\n                        \"\\n\\t\\t\\t\\t\" + _vm._s(_vm.$t(\"forms.no\")) + \"\\n\\t\\t\\t\"\n                      )\n                    ]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"CButton\",\n                    {\n                      attrs: { color: \"success\" },\n                      on: { click: _vm.performDelete }\n                    },\n                    [\n                      _vm._v(\n                        \"\\n\\t\\t\\t\\t\" + _vm._s(_vm.$t(\"forms.yes\")) + \"\\n\\t\\t\\t\"\n                      )\n                    ]\n                  )\n                ]\n              },\n              proxy: true\n            }\n          ])\n        },\n        [\n          _vm._v(\" \"),\n          _vm.modals.delete.instance !== null\n            ? _c(\"span\", [\n                _vm._v(\n                  \"\\n\\t\\t\\t\" +\n                    _vm._s(\n                      _vm.$t(\"config.udp.messages.delete.confirm\", {\n                        instance: _vm.modals.delete.instance\n                      })\n                    ) +\n                    \"\\n\\t\\t\"\n                )\n              ])\n            : _vm._e()\n        ]\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","<template>\n\t<div>\n\t\t<CCard>\n\t\t\t<CCardHeader v-if='instances.length < 1'>\n\t\t\t\t<CButton\n\t\t\t\t\tcolor='success'\n\t\t\t\t\tto='/config/udp/add'\n\t\t\t\t\tsize='sm'\n\t\t\t\t\tclass='float-right'\n\t\t\t\t>\n\t\t\t\t\t<CIcon :content='$options.icons.add' />\n\t\t\t\t\t{{ $t('table.actions.add') }}\n\t\t\t\t</CButton>\n\t\t\t</CCardHeader>\n\t\t\t<CCardBody>\n\t\t\t\t<CDataTable\n\t\t\t\t\t:items='instances'\n\t\t\t\t\t:fields='fields'\n\t\t\t\t\t:column-filter='true'\n\t\t\t\t\t:items-per-page='20'\n\t\t\t\t\t:pagination='true'\n\t\t\t\t\t:striped='true'\n\t\t\t\t\t:sorter='{ external: false, resetable: true }'\n\t\t\t\t>\n\t\t\t\t\t<template #actions='{item}'>\n\t\t\t\t\t\t<td class='col-actions'>\n\t\t\t\t\t\t\t<CButton\n\t\t\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\t\t\t:to='\"/config/udp/edit/\" + item.instance'\n\t\t\t\t\t\t\t\tsize='sm'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<CIcon :content='$options.icons.edit' />\n\t\t\t\t\t\t\t\t{{ $t('table.actions.edit') }}\n\t\t\t\t\t\t\t</CButton>\n\t\t\t\t\t\t\t<CButton color='danger' size='sm' @click='confirmDelete(item)'>\n\t\t\t\t\t\t\t\t<CIcon :content='$options.icons.delete' />\n\t\t\t\t\t\t\t\t{{ $t('table.actions.delete') }}\n\t\t\t\t\t\t\t</CButton>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</template>\n\t\t\t\t</CDataTable>\n\t\t\t</CCardBody>\n\t\t</CCard>\n\t\t<CModal\n\t\t\tcolor='danger'\n\t\t\t:show.sync='modals.delete.instance !== null'\n\t\t>\n\t\t\t<template #header>\n\t\t\t\t<h5 class='modal-title'>\n\t\t\t\t\t{{ $t('config.udp.messages.delete.confirmTitle') }}\n\t\t\t\t</h5>\n\t\t\t\t<CButtonClose\n\t\t\t\t\tclass='text-white'\n\t\t\t\t\t@click='modals.delete.instance = null'\n\t\t\t\t/>\n\t\t\t</template>\n\t\t\t<span v-if='modals.delete.instance !== null'>\n\t\t\t\t{{ $t('config.udp.messages.delete.confirm', {instance: modals.delete.instance}) }}\n\t\t\t</span>\n\t\t\t<template #footer>\n\t\t\t\t<CButton color='danger' @click='modals.delete.instance = null'>\n\t\t\t\t\t{{ $t('forms.no') }}\n\t\t\t\t</CButton>\n\t\t\t\t<CButton color='success' @click='performDelete'>\n\t\t\t\t\t{{ $t('forms.yes') }}\n\t\t\t\t</CButton>\n\t\t\t</template>\n\t\t</CModal>\n\t</div>\n</template>\n\n<script>\nimport {\n\tCButton,\n\tCButtonClose,\n\tCCard,\n\tCCardBody,\n\tCCardHeader,\n\tCDataTable,\n\tCIcon,\n\tCModal\n} from '@coreui/vue/src';\nimport {cilPencil, cilPlus, cilTrash} from '@coreui/icons';\nimport DaemonConfigurationService\n\tfrom '../../services/DaemonConfigurationService';\n\nexport default {\n\tname: 'UdpMessagingTable',\n\tcomponents: {\n\t\tCButton,\n\t\tCButtonClose,\n\t\tCCard,\n\t\tCCardBody,\n\t\tCCardHeader,\n\t\tCDataTable,\n\t\tCIcon,\n\t\tCModal,\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tcomponentName: 'iqrf::UdpMessaging',\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\tkey: 'instance',\n\t\t\t\t\tlabel: this.$t('config.udp.form.instance'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: 'RemotePort',\n\t\t\t\t\tlabel: this.$t('config.udp.form.RemotePort'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: 'LocalPort',\n\t\t\t\t\tlabel: this.$t('config.udp.form.LocalPort'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: 'actions',\n\t\t\t\t\tlabel: this.$t('table.actions.title'),\n\t\t\t\t\tsorter: false,\n\t\t\t\t\tfilter: false,\n\t\t\t\t},\n\t\t\t],\n\t\t\tinstances: [],\n\t\t\tmodals: {\n\t\t\t\tdelete: {\n\t\t\t\t\tinstance: null,\n\t\t\t\t}\n\t\t\t},\n\t\t};\n\t},\n\tcreated() {\n\t\tthis.$store.commit('spinner/SHOW');\n\t\tthis.getInstances();\n\t},\n\tmethods: {\n\t\tconfirmDelete(instance) {\n\t\t\tthis.modals.delete.instance = instance.instance;\n\t\t},\n\t\tchangeAcceptAsyncMsg(instance, acceptAsyncMsg) {\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\tinstance.acceptAsyncMsg = acceptAsyncMsg;\n\t\t\treturn DaemonConfigurationService.updateInstance(this.componentName, instance.instance, instance)\n\t\t\t\t.then(() => {\n\t\t\t\t\tthis.getInstances().then(() => {\n\t\t\t\t\t\tthis.$toast.success(\n\t\t\t\t\t\t\tthis.$t('config.udp.messages.edit.success', {instance: instance.instance})\n\t\t\t\t\t\t\t\t.toString()\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t},\n\t\tgetInstances() {\n\t\t\treturn DaemonConfigurationService.getComponent(this.componentName)\n\t\t\t\t.then((response) => {\n\t\t\t\t\tthis.$store.commit('spinner/HIDE');\n\t\t\t\t\tthis.instances = response.data.instances;\n\t\t\t\t})\n\t\t\t\t.catch(() => this.$store.commit('spinner/HIDE'));\n\t\t},\n\t\tperformDelete() {\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\tconst instance = this.modals.delete.instance;\n\t\t\tthis.modals.delete.instance = null;\n\t\t\tDaemonConfigurationService.deleteInstance(this.componentName, instance)\n\t\t\t\t.then(() => {\n\t\t\t\t\tthis.getInstances().then(() => {\n\t\t\t\t\t\tthis.$toast.success(\n\t\t\t\t\t\t\tthis.$t('config.udp.messages.delete.success', {instance: instance})\n\t\t\t\t\t\t\t\t.toString()\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.catch(() => this.$store.commit('spinner/HIDE'));\n\t\t},\n\t},\n\ticons: {\n\t\tadd: cilPlus,\n\t\tdelete: cilTrash,\n\t\tedit: cilPencil,\n\t},\n\tmetaInfo: {\n\t\ttitle: 'config.udp.title',\n\t},\n};\n</script>\n","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./UdpMessagingTable.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./UdpMessagingTable.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./UdpMessagingTable.vue?vue&type=template&id=2fca7e11&\"\nimport script from \"./UdpMessagingTable.vue?vue&type=script&lang=js&\"\nexport * from \"./UdpMessagingTable.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('2fca7e11')) {\n      api.createRecord('2fca7e11', component.options)\n    } else {\n      api.reload('2fca7e11', component.options)\n    }\n    module.hot.accept(\"./UdpMessagingTable.vue?vue&type=template&id=2fca7e11&\", function () {\n      api.rerender('2fca7e11', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/pages/Config/UdpMessagingTable.vue\"\nexport default component.exports","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\n        \"CCard\",\n        [\n          _c(\n            \"CCardHeader\",\n            [\n              _c(\n                \"CButton\",\n                {\n                  staticClass: \"float-right\",\n                  attrs: {\n                    color: \"success\",\n                    size: \"sm\",\n                    to: \"/config/tracer/add\"\n                  }\n                },\n                [\n                  _c(\"CIcon\", { attrs: { content: _vm.$options.icons.add } }),\n                  _vm._v(\n                    \"\\n\\t\\t\\t\\t\" +\n                      _vm._s(_vm.$t(\"table.actions.add\")) +\n                      \"\\n\\t\\t\\t\"\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"CCardBody\",\n            [\n              _c(\"CDataTable\", {\n                attrs: {\n                  fields: _vm.fields,\n                  items: _vm.instances,\n                  \"column-filter\": true,\n                  \"items-per-page\": 20,\n                  pagination: true,\n                  striped: true,\n                  sorter: { external: false, resetable: true }\n                },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"actions\",\n                    fn: function(ref) {\n                      var item = ref.item\n                      return [\n                        _c(\n                          \"td\",\n                          { staticClass: \"col-actions\" },\n                          [\n                            _c(\n                              \"CButton\",\n                              {\n                                attrs: {\n                                  color: \"info\",\n                                  size: \"sm\",\n                                  to: \"/config/tracer/edit/\" + item.instance\n                                }\n                              },\n                              [\n                                _c(\"CIcon\", {\n                                  attrs: { content: _vm.$options.icons.edit }\n                                }),\n                                _vm._v(\n                                  \"\\n\\t\\t\\t\\t\\t\\t\\t\" +\n                                    _vm._s(_vm.$t(\"table.actions.edit\")) +\n                                    \"\\n\\t\\t\\t\\t\\t\\t\"\n                                )\n                              ],\n                              1\n                            ),\n                            _vm._v(\" \"),\n                            _c(\n                              \"CButton\",\n                              {\n                                attrs: { color: \"danger\", size: \"sm\" },\n                                on: {\n                                  click: function($event) {\n                                    _vm.modals.currentInstance = item.instance\n                                  }\n                                }\n                              },\n                              [\n                                _c(\"CIcon\", {\n                                  attrs: { content: _vm.$options.icons.remove }\n                                }),\n                                _vm._v(\n                                  \"\\n\\t\\t\\t\\t\\t\\t\\t\" +\n                                    _vm._s(_vm.$t(\"table.actions.delete\")) +\n                                    \"\\n\\t\\t\\t\\t\\t\\t\"\n                                )\n                              ],\n                              1\n                            )\n                          ],\n                          1\n                        )\n                      ]\n                    }\n                  }\n                ])\n              })\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"CModal\",\n        {\n          attrs: { color: \"danger\", show: _vm.modals.currentInstance !== null },\n          on: {\n            \"update:show\": function($event) {\n              return _vm.$set(_vm.modals, \"currentInstance !== null\", $event)\n            }\n          },\n          scopedSlots: _vm._u([\n            {\n              key: \"header\",\n              fn: function() {\n                return [\n                  _c(\"h5\", { staticClass: \"modal-title\" }, [\n                    _vm._v(\n                      \"\\n\\t\\t\\t\\t\" +\n                        _vm._s(_vm.$t(\"config.tracer.messages.removeTitle\")) +\n                        \"\\n\\t\\t\\t\"\n                    )\n                  ])\n                ]\n              },\n              proxy: true\n            },\n            {\n              key: \"footer\",\n              fn: function() {\n                return [\n                  _c(\n                    \"CButton\",\n                    {\n                      attrs: { color: \"danger\" },\n                      on: {\n                        click: function($event) {\n                          _vm.modals.currentInstance = null\n                        }\n                      }\n                    },\n                    [\n                      _vm._v(\n                        \"\\n\\t\\t\\t\\t\" + _vm._s(_vm.$t(\"forms.no\")) + \"\\n\\t\\t\\t\"\n                      )\n                    ]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"CButton\",\n                    {\n                      attrs: { color: \"success\" },\n                      on: { click: _vm.removeInstance }\n                    },\n                    [\n                      _vm._v(\n                        \"\\n\\t\\t\\t\\t\" + _vm._s(_vm.$t(\"forms.yes\")) + \"\\n\\t\\t\\t\"\n                      )\n                    ]\n                  )\n                ]\n              },\n              proxy: true\n            }\n          ])\n        },\n        [\n          _vm._v(\n            \"\\n\\t\\t\" +\n              _vm._s(\n                _vm.$t(\"config.tracer.messages.removeItem\", {\n                  instance: _vm.modals.currentInstance\n                })\n              ) +\n              \"\\n\\t\\t\"\n          )\n        ]\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","<template>\n\t<div>\n\t\t<CCard>\n\t\t\t<CCardHeader>\n\t\t\t\t<CButton\n\t\t\t\t\tcolor='success'\n\t\t\t\t\tsize='sm'\n\t\t\t\t\tto='/config/tracer/add'\n\t\t\t\t\tclass='float-right'\n\t\t\t\t>\n\t\t\t\t\t<CIcon :content='$options.icons.add' />\n\t\t\t\t\t{{ $t('table.actions.add') }}\n\t\t\t\t</CButton>\n\t\t\t</CCardHeader>\n\t\t\t<CCardBody>\n\t\t\t\t<CDataTable\n\t\t\t\t\t:fields='fields'\n\t\t\t\t\t:items='instances'\n\t\t\t\t\t:column-filter='true'\n\t\t\t\t\t:items-per-page='20'\n\t\t\t\t\t:pagination='true'\n\t\t\t\t\t:striped='true'\n\t\t\t\t\t:sorter='{ external: false, resetable: true }'\n\t\t\t\t>\n\t\t\t\t\t<template #actions='{item}'>\n\t\t\t\t\t\t<td class='col-actions'>\n\t\t\t\t\t\t\t<CButton\n\t\t\t\t\t\t\t\tcolor='info'\n\t\t\t\t\t\t\t\tsize='sm'\n\t\t\t\t\t\t\t\t:to='\"/config/tracer/edit/\" + item.instance'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<CIcon :content='$options.icons.edit' />\n\t\t\t\t\t\t\t\t{{ $t('table.actions.edit') }}\n\t\t\t\t\t\t\t</CButton>\n\t\t\t\t\t\t\t<CButton\n\t\t\t\t\t\t\t\tcolor='danger'\n\t\t\t\t\t\t\t\tsize='sm'\n\t\t\t\t\t\t\t\t@click='modals.currentInstance = item.instance'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<CIcon :content='$options.icons.remove' />\n\t\t\t\t\t\t\t\t{{ $t('table.actions.delete') }}\n\t\t\t\t\t\t\t</CButton>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</template>\n\t\t\t\t</CDataTable>\n\t\t\t</CCardBody>\n\t\t</CCard>\n\t\t<CModal\n\t\t\tcolor='danger'\n\t\t\t:show.sync='modals.currentInstance !== null'\n\t\t>\n\t\t\t<template #header>\n\t\t\t\t<h5 class='modal-title'>\n\t\t\t\t\t{{ $t('config.tracer.messages.removeTitle') }}\n\t\t\t\t</h5>\n\t\t\t</template>\n\t\t\t{{ $t('config.tracer.messages.removeItem', {instance: modals.currentInstance}) }}\n\t\t\t<template #footer>\n\t\t\t\t<CButton color='danger' @click='modals.currentInstance = null'>\n\t\t\t\t\t{{ $t('forms.no') }}\n\t\t\t\t</CButton>\n\t\t\t\t<CButton color='success' @click='removeInstance'>\n\t\t\t\t\t{{ $t('forms.yes') }}\n\t\t\t\t</CButton>\n\t\t\t</template>\n\t\t</CModal>\n\t</div>\n</template>\n\n<script>\nimport {CButton, CCard, CCardBody, CCardHeader, CDataTable, CIcon, CModal} from '@coreui/vue/src';\nimport {cilPencil, cilPlus, cilTrash} from '@coreui/icons';\nimport DaemonConfigurationService from '../../services/DaemonConfigurationService';\nimport FormErrorHandler from '../../helpers/FormErrorHandler';\n\nexport default {\n\tname: 'TracerList',\n\tcomponents: {\n\t\tCButton,\n\t\tCCard,\n\t\tCCardBody,\n\t\tCCardHeader,\n\t\tCDataTable,\n\t\tCIcon,\n\t\tCModal,\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tcomponentName: 'shape::TraceFileService',\n\t\t\tfields: [\n\t\t\t\t{key: 'instance', label: this.$t('config.tracer.form.instance')},\n\t\t\t\t{key: 'path', label: this.$t('config.tracer.form.path')},\n\t\t\t\t{key: 'filename', label: this.$t('config.tracer.form.filename')},\n\t\t\t\t{\n\t\t\t\t\tkey: 'actions',\n\t\t\t\t\tlabel: this.$t('table.actions.title'),\n\t\t\t\t\tfilter: false,\n\t\t\t\t\tsorter: false,\n\t\t\t\t},\n\t\t\t],\n\t\t\tinstances: [],\n\t\t\tmodals: {\n\t\t\t\tcurrentInstance: null,\n\t\t\t},\n\t\t\taddModal: false,\n\t\t\teditModal: false,\n\t\t};\n\t},\n\tcreated() {\n\t\tthis.getConfig();\n\t},\n\tmethods: {\n\t\tgetConfig() {\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\treturn DaemonConfigurationService.getComponent(this.componentName)\n\t\t\t\t.then((response) => {\n\t\t\t\t\tthis.$store.commit('spinner/HIDE');\n\t\t\t\t\tthis.instances = response.data.instances;\n\t\t\t\t})\n\t\t\t\t.catch((error) => FormErrorHandler.configError(error));\n\t\t},\n\t\tremoveInstance() {\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\tconst instance = this.modals.currentInstance;\n\t\t\tthis.modals.currentInstance = null;\n\t\t\tDaemonConfigurationService.deleteInstance(this.componentName, instance)\n\t\t\t\t.then(() => {\n\t\t\t\t\tthis.getConfig().then(() => {\n\t\t\t\t\t\tthis.$toast.success(\n\t\t\t\t\t\t\tthis.$t('config.tracer.messages.removeSuccess', {instance: instance})\n\t\t\t\t\t\t\t\t.toString()\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tFormErrorHandler.configError(error);\n\t\t\t\t});\n\t\t},\n\t},\n\ticons: {\n\t\tadd: cilPlus,\n\t\tedit: cilPencil,\n\t\tremove: cilTrash,\n\t},\n\tmetaInfo: {\n\t\ttitle: 'config.tracer.title',\n\t},\n};\n</script>\n","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TracerList.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TracerList.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./TracerList.vue?vue&type=template&id=cef33996&\"\nimport script from \"./TracerList.vue?vue&type=script&lang=js&\"\nexport * from \"./TracerList.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('cef33996')) {\n      api.createRecord('cef33996', component.options)\n    } else {\n      api.reload('cef33996', component.options)\n    }\n    module.hot.accept(\"./TracerList.vue?vue&type=template&id=cef33996&\", function () {\n      api.rerender('cef33996', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/pages/Config/TracerList.vue\"\nexport default component.exports","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"CCard\",\n    [\n      _c(\n        \"CCardBody\",\n        [\n          _c(\"ValidationObserver\", {\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(ref) {\n                  var invalid = ref.invalid\n                  return [\n                    _c(\n                      \"CForm\",\n                      {\n                        on: {\n                          submit: function($event) {\n                            $event.preventDefault()\n                            return _vm.saveInstance($event)\n                          }\n                        }\n                      },\n                      [\n                        _c(\"ValidationProvider\", {\n                          attrs: {\n                            rules: \"required\",\n                            \"custom-messages\": {\n                              required: \"config.tracer.form.messages.instance\"\n                            }\n                          },\n                          scopedSlots: _vm._u(\n                            [\n                              {\n                                key: \"default\",\n                                fn: function(ref) {\n                                  var errors = ref.errors\n                                  var touched = ref.touched\n                                  var valid = ref.valid\n                                  return [\n                                    _c(\"CInput\", {\n                                      attrs: {\n                                        label: _vm.$t(\n                                          \"config.tracer.form.instance\"\n                                        ),\n                                        \"is-valid\": touched ? valid : null,\n                                        \"invalid-feedback\": _vm.$t(errors[0])\n                                      },\n                                      model: {\n                                        value: _vm.configuration.instance,\n                                        callback: function($$v) {\n                                          _vm.$set(\n                                            _vm.configuration,\n                                            \"instance\",\n                                            $$v\n                                          )\n                                        },\n                                        expression: \"configuration.instance\"\n                                      }\n                                    })\n                                  ]\n                                }\n                              }\n                            ],\n                            null,\n                            true\n                          )\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"CInput\", {\n                          attrs: { label: _vm.$t(\"config.tracer.form.path\") },\n                          model: {\n                            value: _vm.configuration.path,\n                            callback: function($$v) {\n                              _vm.$set(_vm.configuration, \"path\", $$v)\n                            },\n                            expression: \"configuration.path\"\n                          }\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"ValidationProvider\", {\n                          attrs: {\n                            rules: \"required\",\n                            \"custom-messages\": {\n                              required: \"config.tracer.form.messages.filename\"\n                            }\n                          },\n                          scopedSlots: _vm._u(\n                            [\n                              {\n                                key: \"default\",\n                                fn: function(ref) {\n                                  var errors = ref.errors\n                                  var touched = ref.touched\n                                  var valid = ref.valid\n                                  return [\n                                    _c(\"CInput\", {\n                                      attrs: {\n                                        label: _vm.$t(\n                                          \"config.tracer.form.filename\"\n                                        ),\n                                        \"is-valid\": touched ? valid : null,\n                                        \"invalid-feedback\": _vm.$t(errors[0])\n                                      },\n                                      model: {\n                                        value: _vm.configuration.filename,\n                                        callback: function($$v) {\n                                          _vm.$set(\n                                            _vm.configuration,\n                                            \"filename\",\n                                            $$v\n                                          )\n                                        },\n                                        expression: \"configuration.filename\"\n                                      }\n                                    })\n                                  ]\n                                }\n                              }\n                            ],\n                            null,\n                            true\n                          )\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"ValidationProvider\", {\n                          attrs: {\n                            rules: \"integer|required|min:1\",\n                            \"custom-messages\": {\n                              required: \"config.tracer.form.messages.maxSizeMb\",\n                              min: \"config.tracer.form.messages.maxSizeMb\",\n                              integer: \"forms.messages.integer\"\n                            }\n                          },\n                          scopedSlots: _vm._u(\n                            [\n                              {\n                                key: \"default\",\n                                fn: function(ref) {\n                                  var errors = ref.errors\n                                  var touched = ref.touched\n                                  var valid = ref.valid\n                                  return [\n                                    _c(\"CInput\", {\n                                      attrs: {\n                                        type: \"number\",\n                                        label: _vm.$t(\n                                          \"config.tracer.form.maxSizeMb\"\n                                        ),\n                                        \"is-valid\": touched ? valid : null,\n                                        \"invalid-feedback\": _vm.$t(errors[0])\n                                      },\n                                      model: {\n                                        value: _vm.configuration.maxSizeMB,\n                                        callback: function($$v) {\n                                          _vm.$set(\n                                            _vm.configuration,\n                                            \"maxSizeMB\",\n                                            _vm._n($$v)\n                                          )\n                                        },\n                                        expression: \"configuration.maxSizeMB\"\n                                      }\n                                    })\n                                  ]\n                                }\n                              }\n                            ],\n                            null,\n                            true\n                          )\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"CInputCheckbox\", {\n                          attrs: {\n                            checked: _vm.configuration.timestampFiles,\n                            label: _vm.$t(\"config.tracer.form.timestampFiles\")\n                          },\n                          on: {\n                            \"update:checked\": function($event) {\n                              return _vm.$set(\n                                _vm.configuration,\n                                \"timestampFiles\",\n                                $event\n                              )\n                            }\n                          }\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"h4\", [\n                          _vm._v(\n                            _vm._s(\n                              _vm.$t(\"config.tracer.form.verbosityLevels.title\")\n                            )\n                          )\n                        ]),\n                        _vm._v(\" \"),\n                        _vm._l(_vm.configuration.VerbosityLevels, function(\n                          level,\n                          i\n                        ) {\n                          return _c(\n                            \"div\",\n                            { key: i, staticClass: \"form-group\" },\n                            [\n                              _c(\"ValidationProvider\", {\n                                attrs: {\n                                  rules: \"integer|required\",\n                                  \"custom-messages\": {\n                                    integer: \"forms.messages.integer\",\n                                    required:\n                                      \"config.tracer.form.messages.verbosityLevels.channel\"\n                                  }\n                                },\n                                scopedSlots: _vm._u(\n                                  [\n                                    {\n                                      key: \"default\",\n                                      fn: function(ref) {\n                                        var errors = ref.errors\n                                        var touched = ref.touched\n                                        var valid = ref.valid\n                                        return [\n                                          _c(\"CInput\", {\n                                            attrs: {\n                                              type: \"number\",\n                                              label: _vm.$t(\n                                                \"config.tracer.form.channel\"\n                                              ),\n                                              \"is-valid\": touched\n                                                ? valid\n                                                : null,\n                                              \"invalid-feedback\": _vm.$t(\n                                                errors[0]\n                                              )\n                                            },\n                                            model: {\n                                              value: level.channel,\n                                              callback: function($$v) {\n                                                _vm.$set(\n                                                  level,\n                                                  \"channel\",\n                                                  _vm._n($$v)\n                                                )\n                                              },\n                                              expression: \"level.channel\"\n                                            }\n                                          })\n                                        ]\n                                      }\n                                    }\n                                  ],\n                                  null,\n                                  true\n                                )\n                              }),\n                              _vm._v(\" \"),\n                              _c(\"ValidationProvider\", {\n                                attrs: {\n                                  rules: \"required\",\n                                  \"custom-messages\": {\n                                    required:\n                                      \"config.tracer.form.messages.verbosityLevels.level\"\n                                  }\n                                },\n                                scopedSlots: _vm._u(\n                                  [\n                                    {\n                                      key: \"default\",\n                                      fn: function(ref) {\n                                        var errors = ref.errors\n                                        var touched = ref.touched\n                                        var valid = ref.valid\n                                        return [\n                                          _c(\"CSelect\", {\n                                            attrs: {\n                                              value: level.level,\n                                              label: _vm.$t(\n                                                \"config.tracer.form.level\"\n                                              ),\n                                              placeholder: _vm.$t(\n                                                \"config.tracer.form.messages.verbosityLevels.level\"\n                                              ),\n                                              options: [\n                                                {\n                                                  value: \"ERR\",\n                                                  label: _vm.$t(\n                                                    \"config.tracer.form.levels.error\"\n                                                  )\n                                                },\n                                                {\n                                                  value: \"WAR\",\n                                                  label: _vm.$t(\n                                                    \"config.tracer.form.levels.warning\"\n                                                  )\n                                                },\n                                                {\n                                                  value: \"INF\",\n                                                  label: _vm.$t(\n                                                    \"config.tracer.form.levels.info\"\n                                                  )\n                                                },\n                                                {\n                                                  value: \"DBG\",\n                                                  label: _vm.$t(\n                                                    \"config.tracer.form.levels.debug\"\n                                                  )\n                                                }\n                                              ],\n                                              \"is-valid\": touched\n                                                ? valid\n                                                : null,\n                                              \"invalid-feedback\": _vm.$t(\n                                                errors[0]\n                                              )\n                                            },\n                                            on: {\n                                              \"update:value\": function($event) {\n                                                return _vm.$set(\n                                                  level,\n                                                  \"level\",\n                                                  $event\n                                                )\n                                              }\n                                            }\n                                          })\n                                        ]\n                                      }\n                                    }\n                                  ],\n                                  null,\n                                  true\n                                )\n                              }),\n                              _vm._v(\" \"),\n                              _vm.configuration.VerbosityLevels.length > 1\n                                ? _c(\n                                    \"CButton\",\n                                    {\n                                      attrs: { color: \"danger\" },\n                                      on: {\n                                        click: function($event) {\n                                          return _vm.removeLevel(i)\n                                        }\n                                      }\n                                    },\n                                    [\n                                      _vm._v(\n                                        \"\\n\\t\\t\\t\\t\\t\\t\" +\n                                          _vm._s(\n                                            _vm.$t(\n                                              \"config.tracer.form.verbosityLevels.remove\"\n                                            )\n                                          ) +\n                                          \"\\n\\t\\t\\t\\t\\t\"\n                                      )\n                                    ]\n                                  )\n                                : _vm._e(),\n                              _vm._v(\" \"),\n                              i === _vm.configuration.VerbosityLevels.length - 1\n                                ? _c(\n                                    \"CButton\",\n                                    {\n                                      attrs: {\n                                        color: \"success\",\n                                        disabled:\n                                          level.channel === undefined ||\n                                          level.level === undefined\n                                      },\n                                      on: { click: _vm.addLevel }\n                                    },\n                                    [\n                                      _vm._v(\n                                        \"\\n\\t\\t\\t\\t\\t\\t\" +\n                                          _vm._s(\n                                            _vm.$t(\n                                              \"config.tracer.form.verbosityLevels.add\"\n                                            )\n                                          ) +\n                                          \"\\n\\t\\t\\t\\t\\t\"\n                                      )\n                                    ]\n                                  )\n                                : _vm._e()\n                            ],\n                            1\n                          )\n                        }),\n                        _vm._v(\" \"),\n                        _c(\n                          \"CButton\",\n                          {\n                            attrs: {\n                              type: \"submit\",\n                              color: \"primary\",\n                              disabled: invalid\n                            }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n\\t\\t\\t\\t\\t\" +\n                                _vm._s(_vm.$t(\"forms.save\")) +\n                                \"\\n\\t\\t\\t\\t\"\n                            )\n                          ]\n                        )\n                      ],\n                      2\n                    )\n                  ]\n                }\n              }\n            ])\n          })\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","<template>\n\t<CCard>\n\t\t<CCardBody>\n\t\t\t<ValidationObserver v-slot='{ invalid }'>\n\t\t\t\t<CForm @submit.prevent='saveInstance'>\n\t\t\t\t\t<ValidationProvider\n\t\t\t\t\t\tv-slot='{ errors, touched, valid }'\n\t\t\t\t\t\trules='required'\n\t\t\t\t\t\t:custom-messages='{required: \"config.tracer.form.messages.instance\"}'\n\t\t\t\t\t>\n\t\t\t\t\t\t<CInput\n\t\t\t\t\t\t\tv-model='configuration.instance'\n\t\t\t\t\t\t\t:label='$t(\"config.tracer.form.instance\")'\n\t\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ValidationProvider>\n\t\t\t\t\t<CInput\n\t\t\t\t\t\tv-model='configuration.path'\n\t\t\t\t\t\t:label='$t(\"config.tracer.form.path\")'\n\t\t\t\t\t/>\n\t\t\t\t\t<ValidationProvider\n\t\t\t\t\t\tv-slot='{ errors, touched, valid }'\n\t\t\t\t\t\trules='required'\n\t\t\t\t\t\t:custom-messages='{required: \"config.tracer.form.messages.filename\"}'\n\t\t\t\t\t>\n\t\t\t\t\t\t<CInput\n\t\t\t\t\t\t\tv-model='configuration.filename'\n\t\t\t\t\t\t\t:label='$t(\"config.tracer.form.filename\")'\n\t\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ValidationProvider>\n\t\t\t\t\t<ValidationProvider\n\t\t\t\t\t\tv-slot='{ errors, touched, valid }'\n\t\t\t\t\t\trules='integer|required|min:1'\n\t\t\t\t\t\t:custom-messages='{\n\t\t\t\t\t\t\trequired: \"config.tracer.form.messages.maxSizeMb\",\n\t\t\t\t\t\t\tmin: \"config.tracer.form.messages.maxSizeMb\",\n\t\t\t\t\t\t\tinteger: \"forms.messages.integer\"\n\t\t\t\t\t\t}'\n\t\t\t\t\t>\n\t\t\t\t\t\t<CInput\n\t\t\t\t\t\t\tv-model.number='configuration.maxSizeMB'\n\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t:label='$t(\"config.tracer.form.maxSizeMb\")'\n\t\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ValidationProvider>\n\t\t\t\t\t<CInputCheckbox\n\t\t\t\t\t\t:checked.sync='configuration.timestampFiles'\n\t\t\t\t\t\t:label='$t(\"config.tracer.form.timestampFiles\")'\n\t\t\t\t\t/>\n\t\t\t\t\t<h4>{{ $t(\"config.tracer.form.verbosityLevels.title\") }}</h4>\n\t\t\t\t\t<div\n\t\t\t\t\t\tv-for='(level, i) of configuration.VerbosityLevels'\n\t\t\t\t\t\t:key='i'\n\t\t\t\t\t\tclass='form-group'\n\t\t\t\t\t>\n\t\t\t\t\t\t<ValidationProvider\n\t\t\t\t\t\t\tv-slot='{ errors, touched, valid }'\n\t\t\t\t\t\t\trules='integer|required'\n\t\t\t\t\t\t\t:custom-messages='{\n\t\t\t\t\t\t\t\tinteger: \"forms.messages.integer\",\n\t\t\t\t\t\t\t\trequired: \"config.tracer.form.messages.verbosityLevels.channel\"\n\t\t\t\t\t\t\t}'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<CInput\n\t\t\t\t\t\t\t\tv-model.number='level.channel'\n\t\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t\t:label='$t(\"config.tracer.form.channel\")'\n\t\t\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</ValidationProvider>\n\t\t\t\t\t\t<ValidationProvider\n\t\t\t\t\t\t\tv-slot='{ errors, touched, valid }'\n\t\t\t\t\t\t\trules='required'\n\t\t\t\t\t\t\t:custom-messages='{required: \"config.tracer.form.messages.verbosityLevels.level\"}'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<CSelect\n\t\t\t\t\t\t\t\t:value.sync='level.level'\n\t\t\t\t\t\t\t\t:label='$t(\"config.tracer.form.level\")'\n\t\t\t\t\t\t\t\t:placeholder='$t(\"config.tracer.form.messages.verbosityLevels.level\")'\n\t\t\t\t\t\t\t\t:options='[\n\t\t\t\t\t\t\t\t\t{value: \"ERR\", label: $t(\"config.tracer.form.levels.error\")},\n\t\t\t\t\t\t\t\t\t{value: \"WAR\", label: $t(\"config.tracer.form.levels.warning\")},\n\t\t\t\t\t\t\t\t\t{value: \"INF\", label: $t(\"config.tracer.form.levels.info\")},\n\t\t\t\t\t\t\t\t\t{value: \"DBG\", label: $t(\"config.tracer.form.levels.debug\")}\n\t\t\t\t\t\t\t\t]'\n\t\t\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</ValidationProvider>\n\t\t\t\t\t\t<CButton\n\t\t\t\t\t\t\tv-if='configuration.VerbosityLevels.length > 1'\n\t\t\t\t\t\t\tcolor='danger'\n\t\t\t\t\t\t\t@click='removeLevel(i)'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{{ $t('config.tracer.form.verbosityLevels.remove') }}\n\t\t\t\t\t\t</CButton>\n\t\t\t\t\t\t<CButton\n\t\t\t\t\t\t\tv-if='i === (configuration.VerbosityLevels.length - 1)'\n\t\t\t\t\t\t\tcolor='success'\n\t\t\t\t\t\t\t:disabled='level.channel === undefined || level.level === undefined'\n\t\t\t\t\t\t\t@click='addLevel'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{{ $t('config.tracer.form.verbosityLevels.add') }}\n\t\t\t\t\t\t</CButton>\n\t\t\t\t\t</div>\n\t\t\t\t\t<CButton type='submit' color='primary' :disabled='invalid'>\n\t\t\t\t\t\t{{ $t('forms.save') }}\n\t\t\t\t\t</CButton>\n\t\t\t\t</CForm>\n\t\t\t</ValidationObserver>\n\t\t</CCardBody>\n\t</CCard>\n</template>\n\n<script>\nimport {CButton, CCard, CCardBody, CForm, CInput, CInputCheckbox, CSelect} from '@coreui/vue/src';\nimport {extend, ValidationObserver, ValidationProvider} from 'vee-validate';\nimport DaemonConfigurationService from '../../services/DaemonConfigurationService';\nimport FormErrorHandler from '../../helpers/FormErrorHandler';\nimport {integer, min_value, required} from 'vee-validate/dist/rules';\n\nexport default {\n\tname: 'TracerForm',\n\tcomponents: {\n\t\tCButton,\n\t\tCCard,\n\t\tCCardBody,\n\t\tCForm,\n\t\tCInput,\n\t\tCInputCheckbox,\n\t\tCSelect,\n\t\tValidationObserver,\n\t\tValidationProvider,\n\t},\n\tprops: {\n\t\tinstance: {\n\t\t\ttype: String,\n\t\t\trequired: false,\n\t\t\tdefault: null,\n\t\t},\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tcomponentName: 'shape::TraceFileService',\n\t\t\tconfiguration: {\n\t\t\t\tinstance: null,\n\t\t\t\tpath: null,\n\t\t\t\tfilename: null,\n\t\t\t\tmaxSizeMB: null,\n\t\t\t\ttimestampFiles: false,\n\t\t\t\tVerbosityLevels: [{}],\n\t\t\t},\n\t\t};\n\t},\n\tcomputed: {\n\t\tsubmitButton() {\n\t\t\treturn this.$route.path === '/config/tracer/add' ?\n\t\t\t\tthis.$t('forms.add') : this.$t('forms.edit');\n\t\t},\n\t},\n\tcreated() {\n\t\textend('integer', integer);\n\t\textend('min', min_value);\n\t\textend('required', required);\n\t\tif (this.instance) {\n\t\t\tthis.getInstance();\n\t\t}\n\t},\n\tmethods: {\n\t\taddLevel() {\n\t\t\tthis.configuration.VerbosityLevels.push({});\n\t\t},\n\t\tremoveLevel(index) {\n\t\t\tthis.configuration.VerbosityLevels.splice(index, 1);\n\t\t},\n\t\tgetInstance() {\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\tDaemonConfigurationService.getInstance(this.componentName, this.instance)\n\t\t\t\t.then((response) => {\n\t\t\t\t\tthis.$store.commit('spinner/HIDE');\n\t\t\t\t\tthis.configuration = response.data;\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tthis.$router.push('/config/tracer/');\n\t\t\t\t\tFormErrorHandler.configError(error);\n\t\t\t\t});\n\t\t},\n\t\tsaveInstance() {\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\tif (this.instance !== null) {\n\t\t\t\tDaemonConfigurationService.updateInstance(this.componentName, this.instance, this.configuration)\n\t\t\t\t\t.then(() => this.successfulSave())\n\t\t\t\t\t.catch((error) => FormErrorHandler.configError(error));\n\t\t\t} else {\n\t\t\t\tDaemonConfigurationService.createInstance(this.componentName, this.configuration)\n\t\t\t\t\t.then(() => this.successfulSave())\n\t\t\t\t\t.catch((error) => FormErrorHandler.configError(error));\n\t\t\t}\n\t\t},\n\t\tsuccessfulSave() {\n\t\t\tthis.$router.push('/config/tracer/');\n\t\t\tthis.$store.commit('spinner/HIDE');\n\t\t\tif (this.$route.path === '/config/tracer/add') {\n\t\t\t\tthis.$toast.success(\n\t\t\t\t\tthis.$t('config.tracer.messages.addSuccess', {instance: this.configuration.instance})\n\t\t\t\t\t\t.toString()\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tthis.$toast.success(\n\t\t\t\t\tthis.$t('config.tracer.messages.editSuccess', {instance: this.instance})\n\t\t\t\t\t\t.toString()\n\t\t\t\t);\n\t\t\t}\n\t\t},\n\t},\n\tmetaInfo() {\n\t\treturn {\n\t\t\ttitle: this.$route.path === '/config/tracer/add' ?\n\t\t\t\tthis.$t('config.tracer.add') : this.$t('config.tracer.edit')\n\t\t};\n\t},\n};\n</script>\n","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TracerForm.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TracerForm.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./TracerForm.vue?vue&type=template&id=648d3c5b&\"\nimport script from \"./TracerForm.vue?vue&type=script&lang=js&\"\nexport * from \"./TracerForm.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('648d3c5b')) {\n      api.createRecord('648d3c5b', component.options)\n    } else {\n      api.reload('648d3c5b', component.options)\n    }\n    module.hot.accept(\"./TracerForm.vue?vue&type=template&id=648d3c5b&\", function () {\n      api.rerender('648d3c5b', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/pages/Config/TracerForm.vue\"\nexport default component.exports","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"CCard\",\n    [\n      _c(\n        \"CCardBody\",\n        [\n          _c(\n            \"CForm\",\n            {\n              on: {\n                submit: function($event) {\n                  $event.preventDefault()\n                  return _vm.saveConfig($event)\n                }\n              }\n            },\n            [\n              _c(\"CInput\", {\n                attrs: { label: _vm.$t(\"config.main.form.applicationName\") },\n                model: {\n                  value: _vm.configuration.applicationName,\n                  callback: function($$v) {\n                    _vm.$set(_vm.configuration, \"applicationName\", $$v)\n                  },\n                  expression: \"configuration.applicationName\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"CInput\", {\n                attrs: { label: _vm.$t(\"config.main.form.resourceDir\") },\n                model: {\n                  value: _vm.configuration.resourceDir,\n                  callback: function($$v) {\n                    _vm.$set(_vm.configuration, \"resourceDir\", $$v)\n                  },\n                  expression: \"configuration.resourceDir\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"CInput\", {\n                attrs: { label: _vm.$t(\"config.main.form.dataDir\") },\n                model: {\n                  value: _vm.configuration.dataDir,\n                  callback: function($$v) {\n                    _vm.$set(_vm.configuration, \"dataDir\", $$v)\n                  },\n                  expression: \"configuration.dataDir\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"CInput\", {\n                attrs: { label: _vm.$t(\"config.main.form.cacheDir\") },\n                model: {\n                  value: _vm.configuration.cacheDir,\n                  callback: function($$v) {\n                    _vm.$set(_vm.configuration, \"cacheDir\", $$v)\n                  },\n                  expression: \"configuration.cacheDir\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"CInput\", {\n                attrs: { label: _vm.$t(\"config.main.form.userDir\") },\n                model: {\n                  value: _vm.configuration.userDir,\n                  callback: function($$v) {\n                    _vm.$set(_vm.configuration, \"userDir\", $$v)\n                  },\n                  expression: \"configuration.userDir\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"CInput\", {\n                attrs: { label: _vm.$t(\"config.main.form.configurationDir\") },\n                model: {\n                  value: _vm.configuration.configurationDir,\n                  callback: function($$v) {\n                    _vm.$set(_vm.configuration, \"configurationDir\", $$v)\n                  },\n                  expression: \"configuration.configurationDir\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"CInput\", {\n                attrs: { label: _vm.$t(\"config.main.form.deploymentDir\") },\n                model: {\n                  value: _vm.configuration.deploymentDir,\n                  callback: function($$v) {\n                    _vm.$set(_vm.configuration, \"deploymentDir\", $$v)\n                  },\n                  expression: \"configuration.deploymentDir\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"CButton\", { attrs: { type: \"submit\", color: \"primary\" } }, [\n                _vm._v(\"\\n\\t\\t\\t\\t\" + _vm._s(_vm.$t(\"forms.save\")) + \"\\n\\t\\t\\t\")\n              ])\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import Vue from 'vue';\nimport { CButton, CCard, CCardBody, CForm, CInput } from '@coreui/vue/src';\nimport DaemonConfigurationService from '../../services/DaemonConfigurationService';\nimport FormErrorHandler from '../../helpers/FormErrorHandler';\nexport default Vue.extend({\n    name: 'MainConfiguration',\n    components: {\n        CButton: CButton,\n        CCard: CCard,\n        CCardBody: CCardBody,\n        CForm: CForm,\n        CInput: CInput,\n    },\n    data: function () {\n        return {\n            configuration: {\n                applicationName: null,\n                resourceDir: null,\n                dataDir: null,\n                cacheDir: null,\n                userDir: null,\n                configurationDir: null,\n                deploymentDir: null,\n            },\n        };\n    },\n    created: function () {\n        this.getConfig();\n    },\n    methods: {\n        getConfig: function () {\n            var _this = this;\n            this.$store.commit('spinner/SHOW');\n            DaemonConfigurationService.getComponent('')\n                .then(function (response) {\n                _this.$store.commit('spinner/HIDE');\n                _this.configuration = response.data;\n            })\n                .catch(function (error) { return FormErrorHandler.configError(error); });\n        },\n        saveConfig: function () {\n            var _this = this;\n            this.$store.commit('spinner/SHOW');\n            DaemonConfigurationService.updateComponent('', this.configuration)\n                .then(function () { return _this.successfulSave(); })\n                .catch(function (error) { return FormErrorHandler.configError(error); });\n        },\n        successfulSave: function () {\n            this.$store.commit('spinner/HIDE');\n            this.$toast.success(this.$t('config.success').toString());\n        },\n    },\n    metaInfo: {\n        title: 'config.main.title',\n    },\n});\n","import mod from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MainConfiguration.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MainConfiguration.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./MainConfiguration.vue?vue&type=template&id=4a9c2783&\"\nimport script from \"./MainConfiguration.vue?vue&type=script&lang=ts&\"\nexport * from \"./MainConfiguration.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('4a9c2783')) {\n      api.createRecord('4a9c2783', component.options)\n    } else {\n      api.reload('4a9c2783', component.options)\n    }\n    module.hot.accept(\"./MainConfiguration.vue?vue&type=template&id=4a9c2783&\", function () {\n      api.rerender('4a9c2783', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/pages/Config/MainConfiguration.vue\"\nexport default component.exports","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\n        \"CCard\",\n        [\n          _c(\n            \"CCardHeader\",\n            [\n              _c(\n                \"CButton\",\n                {\n                  staticClass: \"float-right\",\n                  attrs: {\n                    color: \"success\",\n                    size: \"sm\",\n                    to: \"/config/component/add\"\n                  }\n                },\n                [\n                  _c(\"CIcon\", { attrs: { content: _vm.$options.icons.add } }),\n                  _vm._v(\n                    \"\\n\\t\\t\\t\\t\" +\n                      _vm._s(_vm.$t(\"table.actions.add\")) +\n                      \"\\n\\t\\t\\t\"\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"CCardBody\",\n            [\n              _c(\"CDataTable\", {\n                attrs: {\n                  fields: _vm.fields,\n                  items: _vm.components,\n                  \"column-filter\": true,\n                  \"items-per-page\": 20,\n                  pagination: true,\n                  striped: true,\n                  sorter: { external: false, resetable: true }\n                },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"enabled\",\n                    fn: function(ref) {\n                      var item = ref.item\n                      return [\n                        _c(\n                          \"td\",\n                          [\n                            _c(\n                              \"CDropdown\",\n                              {\n                                attrs: {\n                                  color: item.enabled ? \"success\" : \"danger\",\n                                  \"toggler-text\": item.enabled\n                                    ? _vm.$t(\"config.components.form.enabled\")\n                                    : _vm.$t(\"config.components.form.disabled\"),\n                                  size: \"sm\"\n                                }\n                              },\n                              [\n                                _c(\n                                  \"CDropdownItem\",\n                                  {\n                                    on: {\n                                      click: function($event) {\n                                        return _vm.changeEnabled(item, true)\n                                      }\n                                    }\n                                  },\n                                  [\n                                    _vm._v(\n                                      \"\\n\\t\\t\\t\\t\\t\\t\\t\\t\" +\n                                        _vm._s(\n                                          _vm.$t(\n                                            \"config.components.form.enabled\"\n                                          )\n                                        ) +\n                                        \"\\n\\t\\t\\t\\t\\t\\t\\t\"\n                                    )\n                                  ]\n                                ),\n                                _vm._v(\" \"),\n                                _c(\n                                  \"CDropdownItem\",\n                                  {\n                                    on: {\n                                      click: function($event) {\n                                        return _vm.changeEnabled(item, false)\n                                      }\n                                    }\n                                  },\n                                  [\n                                    _vm._v(\n                                      \"\\n\\t\\t\\t\\t\\t\\t\\t\\t\" +\n                                        _vm._s(\n                                          _vm.$t(\n                                            \"config.components.form.disabled\"\n                                          )\n                                        ) +\n                                        \"\\n\\t\\t\\t\\t\\t\\t\\t\"\n                                    )\n                                  ]\n                                )\n                              ],\n                              1\n                            )\n                          ],\n                          1\n                        )\n                      ]\n                    }\n                  },\n                  {\n                    key: \"actions\",\n                    fn: function(ref) {\n                      var item = ref.item\n                      return [\n                        _c(\n                          \"td\",\n                          { staticClass: \"col-actions\" },\n                          [\n                            _c(\n                              \"CButton\",\n                              {\n                                attrs: {\n                                  color: \"info\",\n                                  size: \"sm\",\n                                  to: \"/config/component/edit/\" + item.name\n                                }\n                              },\n                              [\n                                _c(\"CIcon\", {\n                                  attrs: { content: _vm.$options.icons.edit }\n                                }),\n                                _vm._v(\n                                  \"\\n\\t\\t\\t\\t\\t\\t\\t\" +\n                                    _vm._s(_vm.$t(\"table.actions.edit\")) +\n                                    \"\\n\\t\\t\\t\\t\\t\\t\"\n                                )\n                              ],\n                              1\n                            ),\n                            _vm._v(\" \"),\n                            _c(\n                              \"CButton\",\n                              {\n                                attrs: { color: \"danger\", size: \"sm\" },\n                                on: {\n                                  click: function($event) {\n                                    _vm.modals.component = item.name\n                                  }\n                                }\n                              },\n                              [\n                                _c(\"CIcon\", {\n                                  attrs: { content: _vm.$options.icons.remove }\n                                }),\n                                _vm._v(\n                                  \"\\n\\t\\t\\t\\t\\t\\t\\t\" +\n                                    _vm._s(_vm.$t(\"table.actions.delete\")) +\n                                    \"\\n\\t\\t\\t\\t\\t\\t\"\n                                )\n                              ],\n                              1\n                            )\n                          ],\n                          1\n                        )\n                      ]\n                    }\n                  }\n                ])\n              })\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"CModal\",\n        {\n          attrs: { color: \"danger\", show: _vm.modals.component !== null },\n          on: {\n            \"update:show\": function($event) {\n              return _vm.$set(_vm.modals, \"component !== null\", $event)\n            }\n          },\n          scopedSlots: _vm._u([\n            {\n              key: \"header\",\n              fn: function() {\n                return [\n                  _c(\"h5\", { staticClass: \"modal-title\" }, [\n                    _vm._v(\n                      \"\\n\\t\\t\\t\\t\" +\n                        _vm._s(\n                          _vm.$t(\"config.components.form.messages.deleteTitle\")\n                        ) +\n                        \"\\n\\t\\t\\t\"\n                    )\n                  ])\n                ]\n              },\n              proxy: true\n            },\n            {\n              key: \"footer\",\n              fn: function() {\n                return [\n                  _c(\n                    \"CButton\",\n                    {\n                      attrs: { color: \"danger\" },\n                      on: {\n                        click: function($event) {\n                          _vm.modals.component = null\n                        }\n                      }\n                    },\n                    [\n                      _vm._v(\n                        \"\\n\\t\\t\\t\\t\" + _vm._s(_vm.$t(\"forms.no\")) + \"\\n\\t\\t\\t\"\n                      )\n                    ]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"CButton\",\n                    {\n                      attrs: { color: \"success\" },\n                      on: { click: _vm.removeComponent }\n                    },\n                    [\n                      _vm._v(\n                        \"\\n\\t\\t\\t\\t\" + _vm._s(_vm.$t(\"forms.yes\")) + \"\\n\\t\\t\\t\"\n                      )\n                    ]\n                  )\n                ]\n              },\n              proxy: true\n            }\n          ])\n        },\n        [\n          _vm._v(\n            \"\\n\\t\\t\" +\n              _vm._s(\n                _vm.$t(\"config.components.form.messages.deletePrompt\", {\n                  component: _vm.modals.component\n                })\n              ) +\n              \"\\n\\t\\t\"\n          )\n        ]\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","<template>\n\t<div>\n\t\t<CCard>\n\t\t\t<CCardHeader>\n\t\t\t\t<CButton\n\t\t\t\t\tcolor='success'\n\t\t\t\t\tsize='sm'\n\t\t\t\t\tclass='float-right'\n\t\t\t\t\tto='/config/component/add'\n\t\t\t\t>\n\t\t\t\t\t<CIcon :content='$options.icons.add' />\n\t\t\t\t\t{{ $t('table.actions.add') }}\n\t\t\t\t</CButton>\n\t\t\t</CCardHeader>\n\t\t\t<CCardBody>\n\t\t\t\t<CDataTable\n\t\t\t\t\t:fields='fields'\n\t\t\t\t\t:items='components'\n\t\t\t\t\t:column-filter='true'\n\t\t\t\t\t:items-per-page='20'\n\t\t\t\t\t:pagination='true'\n\t\t\t\t\t:striped='true'\n\t\t\t\t\t:sorter='{ external: false, resetable: true }'\n\t\t\t\t>\n\t\t\t\t\t<template #enabled='{item}'>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<CDropdown\n\t\t\t\t\t\t\t\t:color='item.enabled ? \"success\" : \"danger\"'\n\t\t\t\t\t\t\t\t:toggler-text='item.enabled ? $t(\"config.components.form.enabled\") : $t(\"config.components.form.disabled\")'\n\t\t\t\t\t\t\t\tsize='sm'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<CDropdownItem @click='changeEnabled(item, true)'>\n\t\t\t\t\t\t\t\t\t{{ $t('config.components.form.enabled') }}\n\t\t\t\t\t\t\t\t</CDropdownItem>\n\t\t\t\t\t\t\t\t<CDropdownItem @click='changeEnabled(item, false)'>\n\t\t\t\t\t\t\t\t\t{{ $t('config.components.form.disabled') }}\n\t\t\t\t\t\t\t\t</CDropdownItem>\n\t\t\t\t\t\t\t</CDropdown>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</template>\n\t\t\t\t\t<template #actions='{item}'>\n\t\t\t\t\t\t<td class='col-actions'>\n\t\t\t\t\t\t\t<CButton\n\t\t\t\t\t\t\t\tcolor='info'\n\t\t\t\t\t\t\t\tsize='sm'\n\t\t\t\t\t\t\t\t:to='\"/config/component/edit/\" + item.name'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<CIcon :content='$options.icons.edit' />\n\t\t\t\t\t\t\t\t{{ $t('table.actions.edit') }}\n\t\t\t\t\t\t\t</CButton>\n\t\t\t\t\t\t\t<CButton\n\t\t\t\t\t\t\t\tcolor='danger'\n\t\t\t\t\t\t\t\tsize='sm'\n\t\t\t\t\t\t\t\t@click='modals.component = item.name'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<CIcon :content='$options.icons.remove' />\n\t\t\t\t\t\t\t\t{{ $t('table.actions.delete') }}\n\t\t\t\t\t\t\t</CButton>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</template>\n\t\t\t\t</CDataTable>\n\t\t\t</CCardBody>\n\t\t</CCard>\n\t\t<CModal\n\t\t\tcolor='danger'\n\t\t\t:show.sync='modals.component !== null'\n\t\t>\n\t\t\t<template #header>\n\t\t\t\t<h5 class='modal-title'>\n\t\t\t\t\t{{ $t('config.components.form.messages.deleteTitle') }}\n\t\t\t\t</h5>\n\t\t\t</template>\n\t\t\t{{ $t('config.components.form.messages.deletePrompt', {component: modals.component}) }}\n\t\t\t<template #footer>\n\t\t\t\t<CButton color='danger' @click='modals.component = null'>\n\t\t\t\t\t{{ $t('forms.no') }}\n\t\t\t\t</CButton>\n\t\t\t\t<CButton color='success' @click='removeComponent'>\n\t\t\t\t\t{{ $t('forms.yes') }}\n\t\t\t\t</CButton>\n\t\t\t</template>\n\t\t</CModal>\n\t</div>\n</template>\n\n<script>\nimport {CButton, CCard, CCardBody, CCardHeader, CDataTable, CDropdown, CDropdownItem, CIcon, CModal} from '@coreui/vue/src';\nimport {cilPencil, cilPlus, cilTrash} from '@coreui/icons';\nimport DaemonConfigurationService from '../../services/DaemonConfigurationService';\nimport FormErrorHandler from '../../helpers/FormErrorHandler';\n\nexport default {\n\tname: 'ComponentList',\n\tcomponents: {\n\t\tCButton,\n\t\tCCard,\n\t\tCCardBody,\n\t\tCCardHeader,\n\t\tCDataTable,\n\t\tCDropdown,\n\t\tCDropdownItem,\n\t\tCIcon,\n\t\tCModal,\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tcomponents: null,\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\tkey: 'name',\n\t\t\t\t\tlabel: this.$t('config.components.form.name'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: 'startlevel',\n\t\t\t\t\tlabel: this.$t('config.components.form.startLevel'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: 'libraryPath',\n\t\t\t\t\tlabel: this.$t('config.components.form.libraryPath'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: 'libraryName',\n\t\t\t\t\tlabel: this.$t('config.components.form.libraryName'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: 'enabled',\n\t\t\t\t\tlabel: this.$t('config.components.form.enabled'),\n\t\t\t\t\tfilter: false,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: 'actions',\n\t\t\t\t\tlabel: this.$t('table.actions.title'),\n\t\t\t\t\tfilter: false,\n\t\t\t\t\tsorter: false,\n\t\t\t\t},\n\t\t\t],\n\t\t\tmodals: {\n\t\t\t\tcomponent: null,\n\t\t\t},\n\t\t};\n\t},\n\tcreated() {\n\t\tthis.getConfig();\n\t},\n\tmounted() {\n\t\tconst titleEl = document.getElementById('title');\n\t\tif (titleEl !== null) {\n\t\t\ttitleEl.innerText = this.$t(this.$metaInfo.title).toString();\n\t\t}\n\t},\n\tmethods: {\n\t\tgetConfig() {\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\treturn DaemonConfigurationService.getComponent('')\n\t\t\t\t.then((response) => {\n\t\t\t\t\tthis.$store.commit('spinner/HIDE');\n\t\t\t\t\tif (this.$store.getters['user/getRole'] === 'power') {\n\t\t\t\t\t\tthis.components = response.data.components;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst whitelistedComponents = ['iqrf::IqrfCdc', 'iqrf::IqrfSpi', 'iqrf::IqrfUart'];\n\t\t\t\t\t\tthis.components = response.data.components.filter((component) => {\n\t\t\t\t\t\t\tif (whitelistedComponents.includes(component.name)) {\n\t\t\t\t\t\t\t\treturn component;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch((error) => FormErrorHandler.configError(error));\n\t\t},\n\t\tchangeEnabled(component, enabled) {\n\t\t\tif (component.enabled !== enabled) {\n\t\t\t\tcomponent.enabled = enabled;\n\t\t\t\tDaemonConfigurationService.updateComponent(component.name, component)\n\t\t\t\t\t.then(() => {\n\t\t\t\t\t\tthis.getConfig().then(() => {\n\t\t\t\t\t\t\tthis.$toast.success(this.$t('config.components.form.messages.editSuccess', {component: component.name}).toString());\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => FormErrorHandler.configError(error));\n\t\t\t}\n\t\t},\n\t\tremoveComponent() {\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\tconst component = this.modals.component;\n\t\t\tthis.modals.component = null;\n\t\t\tDaemonConfigurationService.deleteComponent(component)\n\t\t\t\t.then(() => {\n\t\t\t\t\tthis.getConfig().then(() => {\n\t\t\t\t\t\tthis.$toast.success(this.$t('config.components.form.messages.deleteSuccess', {component: component}).toString());\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.catch((error) => FormErrorHandler.configError(error));\n\t\t},\n\t},\n\ticons: {\n\t\tadd: cilPlus,\n\t\tedit: cilPencil,\n\t\tremove: cilTrash\n\t},\n\tmetaInfo() {\n\t\treturn {\n\t\t\ttitle: this.$store.getters['user/getRole'] === 'power' ?\n\t\t\t\t'config.components.title' :\n\t\t\t\t'config.selectedComponents.title',\n\t\t};\n\t},\n};\n</script>\n","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ComponentList.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ComponentList.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ComponentList.vue?vue&type=template&id=345f4701&\"\nimport script from \"./ComponentList.vue?vue&type=script&lang=js&\"\nexport * from \"./ComponentList.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('345f4701')) {\n      api.createRecord('345f4701', component.options)\n    } else {\n      api.reload('345f4701', component.options)\n    }\n    module.hot.accept(\"./ComponentList.vue?vue&type=template&id=345f4701&\", function () {\n      api.rerender('345f4701', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/pages/Config/ComponentList.vue\"\nexport default component.exports","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"CCard\",\n    [\n      _c(\n        \"CCardBody\",\n        [\n          _c(\"ValidationObserver\", {\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(ref) {\n                  var invalid = ref.invalid\n                  return [\n                    _c(\n                      \"CForm\",\n                      {\n                        on: {\n                          submit: function($event) {\n                            $event.preventDefault()\n                            return _vm.saveComponent($event)\n                          }\n                        }\n                      },\n                      [\n                        _c(\"ValidationProvider\", {\n                          attrs: {\n                            rules: \"required\",\n                            \"custom-messages\": {\n                              required: \"config.components.form.messages.name\"\n                            }\n                          },\n                          scopedSlots: _vm._u(\n                            [\n                              {\n                                key: \"default\",\n                                fn: function(ref) {\n                                  var errors = ref.errors\n                                  var touched = ref.touched\n                                  var valid = ref.valid\n                                  return [\n                                    _c(\"CInput\", {\n                                      attrs: {\n                                        label: _vm.$t(\n                                          \"config.components.form.name\"\n                                        ),\n                                        \"is-valid\": touched ? valid : null,\n                                        \"invalid-feedback\": _vm.$t(errors[0])\n                                      },\n                                      model: {\n                                        value: _vm.configuration.name,\n                                        callback: function($$v) {\n                                          _vm.$set(\n                                            _vm.configuration,\n                                            \"name\",\n                                            $$v\n                                          )\n                                        },\n                                        expression: \"configuration.name\"\n                                      }\n                                    })\n                                  ]\n                                }\n                              }\n                            ],\n                            null,\n                            true\n                          )\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"CInput\", {\n                          attrs: {\n                            label: _vm.$t(\"config.components.form.libraryPath\")\n                          },\n                          model: {\n                            value: _vm.configuration.libraryPath,\n                            callback: function($$v) {\n                              _vm.$set(_vm.configuration, \"libraryPath\", $$v)\n                            },\n                            expression: \"configuration.libraryPath\"\n                          }\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"ValidationProvider\", {\n                          attrs: {\n                            rules: \"required\",\n                            \"custom-messages\": {\n                              required:\n                                \"config.components.form.messages.libraryName\"\n                            }\n                          },\n                          scopedSlots: _vm._u(\n                            [\n                              {\n                                key: \"default\",\n                                fn: function(ref) {\n                                  var errors = ref.errors\n                                  var touched = ref.touched\n                                  var valid = ref.valid\n                                  return [\n                                    _c(\"CInput\", {\n                                      attrs: {\n                                        label: _vm.$t(\n                                          \"config.components.form.libraryName\"\n                                        ),\n                                        \"is-valid\": touched ? valid : null,\n                                        \"invalid-feedback\": _vm.$t(errors[0])\n                                      },\n                                      model: {\n                                        value: _vm.configuration.libraryName,\n                                        callback: function($$v) {\n                                          _vm.$set(\n                                            _vm.configuration,\n                                            \"libraryName\",\n                                            $$v\n                                          )\n                                        },\n                                        expression: \"configuration.libraryName\"\n                                      }\n                                    })\n                                  ]\n                                }\n                              }\n                            ],\n                            null,\n                            true\n                          )\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"CInputCheckbox\", {\n                          attrs: {\n                            checked: _vm.configuration.enabled,\n                            label: _vm.$t(\"config.components.form.enabled\")\n                          },\n                          on: {\n                            \"update:checked\": function($event) {\n                              return _vm.$set(\n                                _vm.configuration,\n                                \"enabled\",\n                                $event\n                              )\n                            }\n                          }\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"ValidationProvider\", {\n                          attrs: {\n                            rules: \"integer|required\",\n                            \"custom-messages\": {\n                              integer: \"forms.messages.integer\",\n                              required:\n                                \"config.components.form.messages.startLevel\"\n                            }\n                          },\n                          scopedSlots: _vm._u(\n                            [\n                              {\n                                key: \"default\",\n                                fn: function(ref) {\n                                  var errors = ref.errors\n                                  var touched = ref.touched\n                                  var valid = ref.valid\n                                  return [\n                                    _c(\"CInput\", {\n                                      attrs: {\n                                        type: \"number\",\n                                        label: _vm.$t(\n                                          \"config.components.form.startLevel\"\n                                        ),\n                                        \"is-valid\": touched ? valid : null,\n                                        \"invalid-feedback\": _vm.$t(errors[0])\n                                      },\n                                      model: {\n                                        value: _vm.configuration.startlevel,\n                                        callback: function($$v) {\n                                          _vm.$set(\n                                            _vm.configuration,\n                                            \"startlevel\",\n                                            _vm._n($$v)\n                                          )\n                                        },\n                                        expression: \"configuration.startlevel\"\n                                      }\n                                    })\n                                  ]\n                                }\n                              }\n                            ],\n                            null,\n                            true\n                          )\n                        }),\n                        _vm._v(\" \"),\n                        _c(\n                          \"CButton\",\n                          {\n                            attrs: {\n                              type: \"submit\",\n                              color: \"primary\",\n                              disabled: invalid\n                            }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n\\t\\t\\t\\t\\t\" +\n                                _vm._s(_vm.submitButton) +\n                                \"\\n\\t\\t\\t\\t\"\n                            )\n                          ]\n                        )\n                      ],\n                      1\n                    )\n                  ]\n                }\n              }\n            ])\n          })\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","<template>\n\t<CCard>\n\t\t<CCardBody>\n\t\t\t<ValidationObserver v-slot='{ invalid }'>\n\t\t\t\t<CForm @submit.prevent='saveComponent'>\n\t\t\t\t\t<ValidationProvider\n\t\t\t\t\t\tv-slot='{ errors, touched, valid }'\n\t\t\t\t\t\trules='required'\n\t\t\t\t\t\t:custom-messages='{required: \"config.components.form.messages.name\"}'\n\t\t\t\t\t>\n\t\t\t\t\t\t<CInput\n\t\t\t\t\t\t\tv-model='configuration.name'\n\t\t\t\t\t\t\t:label='$t(\"config.components.form.name\")'\n\t\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ValidationProvider>\n\t\t\t\t\t<CInput\n\t\t\t\t\t\tv-model='configuration.libraryPath'\n\t\t\t\t\t\t:label='$t(\"config.components.form.libraryPath\")'\n\t\t\t\t\t/>\n\t\t\t\t\t<ValidationProvider\n\t\t\t\t\t\tv-slot='{ errors, touched, valid }'\n\t\t\t\t\t\trules='required'\n\t\t\t\t\t\t:custom-messages='{required: \"config.components.form.messages.libraryName\"}'\n\t\t\t\t\t>\n\t\t\t\t\t\t<CInput\n\t\t\t\t\t\t\tv-model='configuration.libraryName'\n\t\t\t\t\t\t\t:label='$t(\"config.components.form.libraryName\")'\n\t\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ValidationProvider>\n\t\t\t\t\t<CInputCheckbox\n\t\t\t\t\t\t:checked.sync='configuration.enabled'\n\t\t\t\t\t\t:label='$t(\"config.components.form.enabled\")'\n\t\t\t\t\t/>\n\t\t\t\t\t<ValidationProvider\n\t\t\t\t\t\tv-slot='{ errors, touched, valid }'\n\t\t\t\t\t\trules='integer|required'\n\t\t\t\t\t\t:custom-messages='{\n\t\t\t\t\t\t\tinteger: \"forms.messages.integer\",\n\t\t\t\t\t\t\trequired: \"config.components.form.messages.startLevel\"\n\t\t\t\t\t\t}'\n\t\t\t\t\t>\n\t\t\t\t\t\t<CInput\n\t\t\t\t\t\t\tv-model.number='configuration.startlevel'\n\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t:label='$t(\"config.components.form.startLevel\")'\n\t\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ValidationProvider>\n\t\t\t\t\t<CButton type='submit' color='primary' :disabled='invalid'>\n\t\t\t\t\t\t{{ submitButton }}\n\t\t\t\t\t</CButton>\n\t\t\t\t</CForm>\n\t\t\t</ValidationObserver>\n\t\t</CCardBody>\n\t</CCard>\n</template>\n\n<script>\nimport {CButton, CCard, CCardBody, CForm, CInput, CInputCheckbox} from '@coreui/vue/src';\nimport {extend, ValidationObserver, ValidationProvider} from 'vee-validate';\nimport {integer, required} from 'vee-validate/dist/rules';\nimport DaemonConfigurationService from '../../services/DaemonConfigurationService';\nimport FormErrorHandler from '../../helpers/FormErrorHandler';\n\nexport default {\n\tname: 'ComponentForm',\n\tcomponents: {\n\t\tCButton,\n\t\tCCard,\n\t\tCCardBody,\n\t\tCForm,\n\t\tCInput,\n\t\tCInputCheckbox,\n\t\tValidationObserver,\n\t\tValidationProvider,\n\t},\n\tprops: {\n\t\tcomponent: {\n\t\t\ttype: String,\n\t\t\trequired: false,\n\t\t\tdefault: null,\n\t\t},\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tconfiguration: {\n\t\t\t\tname: null,\n\t\t\t\tlibraryPath: null,\n\t\t\t\tlibraryName: null,\n\t\t\t\tenabled: false,\n\t\t\t\tstartlevel: null,\n\t\t\t},\n\t\t};\n\t},\n\tcomputed: {\n\t\tsubmitButton() {\n\t\t\treturn this.$route.path === '/config/component/add' ?\n\t\t\t\tthis.$t('forms.add') : this.$t('forms.edit');\n\t\t},\n\t},\n\tcreated() {\n\t\textend('integer', integer);\n\t\textend('required', required);\n\t\tif (this.component !== null) {\n\t\t\tthis.getComponent();\n\t\t}\n\t},\n\tmethods: {\n\t\tgetComponent() {\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\tDaemonConfigurationService.getComponent(this.component)\n\t\t\t\t.then((response) => {\n\t\t\t\t\tthis.$store.commit('spinner/HIDE');\n\t\t\t\t\tthis.configuration = response.data.configuration;\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tthis.$router.push('/config/component/');\n\t\t\t\t\tFormErrorHandler.configError(error);\n\t\t\t\t});\n\t\t},\n\t\tsaveComponent() {\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\tif (this.component !== null) {\n\t\t\t\tDaemonConfigurationService.updateComponent(this.component, this.configuration)\n\t\t\t\t\t.then(() => this.successfulSave())\n\t\t\t\t\t.catch((error) => FormErrorHandler.configError(error));\n\t\t\t} else {\n\t\t\t\tDaemonConfigurationService.createComponent(this.configuration)\n\t\t\t\t\t.then(() => this.successfulSave())\n\t\t\t\t\t.catch((error) => FormErrorHandler.configError(error));\n\t\t\t}\n\t\t},\n\t\tsuccessfulSave() {\n\t\t\tthis.$router.push('/config/component');\n\t\t\tthis.$store.commit('spinner/HIDE');\n\t\t\tif (this.$route.path === '/config/component/add') {\n\t\t\t\tthis.$toast.success(\n\t\t\t\t\tthis.$t('config.components.form.messages.addSuccess', {component: this.configuration.name})\n\t\t\t\t\t\t.toString()\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tthis.$toast.success(\n\t\t\t\t\tthis.$t('config.components.form.messages.editSuccess', {component: this.component})\n\t\t\t\t\t\t.toString()\n\t\t\t\t);\n\t\t\t}\n\t\t},\n\t},\n\tmetaInfo() {\n\t\treturn {\n\t\t\ttitle: this.$route.path === '/config/component/add' ?\n\t\t\t\tthis.$t('config.components.add') :\n\t\t\t\tthis.$t('config.components.edit')\n\t\t};\n\t},\n};\n</script>\n","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ComponentForm.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ComponentForm.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ComponentForm.vue?vue&type=template&id=00662027&\"\nimport script from \"./ComponentForm.vue?vue&type=script&lang=js&\"\nexport * from \"./ComponentForm.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('00662027')) {\n      api.createRecord('00662027', component.options)\n    } else {\n      api.reload('00662027', component.options)\n    }\n    module.hot.accept(\"./ComponentForm.vue?vue&type=template&id=00662027&\", function () {\n      api.rerender('00662027', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/pages/Config/ComponentForm.vue\"\nexport default component.exports","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", [_c(\"OtaUpload\")], 1)\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"CCard\",\n    [\n      _c(\"CCardHeader\", [\n        _vm._v(_vm._s(_vm.$t(\"config.iqmesh.otaUpload.title\")))\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"CCardBody\",\n        [\n          _c(\"ValidationObserver\", {\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(ref) {\n                  var invalid = ref.invalid\n                  return [\n                    _c(\n                      \"CForm\",\n                      {\n                        on: {\n                          submit: function($event) {\n                            $event.preventDefault()\n                            return _vm.saveInstance($event)\n                          }\n                        }\n                      },\n                      [\n                        _c(\"ValidationProvider\", {\n                          attrs: {\n                            rules: \"required\",\n                            \"custom-messages\": {\n                              required:\n                                \"config.iqmesh.otaUpload.form.messages.instance\"\n                            }\n                          },\n                          scopedSlots: _vm._u(\n                            [\n                              {\n                                key: \"default\",\n                                fn: function(ref) {\n                                  var errors = ref.errors\n                                  var touched = ref.touched\n                                  var valid = ref.valid\n                                  return [\n                                    _c(\"CInput\", {\n                                      attrs: {\n                                        label: _vm.$t(\n                                          \"config.iqmesh.otaUpload.form.instance\"\n                                        ),\n                                        \"is-valid\": touched ? valid : null,\n                                        \"invalid-feedback\": _vm.$t(errors[0])\n                                      },\n                                      model: {\n                                        value: _vm.configuration.instance,\n                                        callback: function($$v) {\n                                          _vm.$set(\n                                            _vm.configuration,\n                                            \"instance\",\n                                            $$v\n                                          )\n                                        },\n                                        expression: \"configuration.instance\"\n                                      }\n                                    })\n                                  ]\n                                }\n                              }\n                            ],\n                            null,\n                            true\n                          )\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"ValidationProvider\", {\n                          attrs: {\n                            rules: \"required\",\n                            \"custom-messages\": {\n                              required:\n                                \"config.iqmesh.otaUpload.form.messages.uploadPath\"\n                            }\n                          },\n                          scopedSlots: _vm._u(\n                            [\n                              {\n                                key: \"default\",\n                                fn: function(ref) {\n                                  var errors = ref.errors\n                                  var touched = ref.touched\n                                  var valid = ref.valid\n                                  return [\n                                    _c(\"CInput\", {\n                                      attrs: {\n                                        label: _vm.$t(\n                                          \"config.iqmesh.otaUpload.form.uploadPath\"\n                                        ),\n                                        \"is-valid\": touched ? valid : null,\n                                        \"invalid-feedback\": _vm.$t(errors[0])\n                                      },\n                                      model: {\n                                        value: _vm.configuration.uploadPath,\n                                        callback: function($$v) {\n                                          _vm.$set(\n                                            _vm.configuration,\n                                            \"uploadPath\",\n                                            $$v\n                                          )\n                                        },\n                                        expression: \"configuration.uploadPath\"\n                                      }\n                                    })\n                                  ]\n                                }\n                              }\n                            ],\n                            null,\n                            true\n                          )\n                        }),\n                        _vm._v(\" \"),\n                        _c(\n                          \"CButton\",\n                          {\n                            attrs: {\n                              type: \"submit\",\n                              color: \"primary\",\n                              disabled: invalid\n                            }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n\\t\\t\\t\\t\\t\" +\n                                _vm._s(_vm.$t(\"forms.save\")) +\n                                \"\\n\\t\\t\\t\\t\"\n                            )\n                          ]\n                        )\n                      ],\n                      1\n                    )\n                  ]\n                }\n              }\n            ])\n          })\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import Vue from 'vue';\nimport { CButton, CCard, CCardBody, CCardHeader, CForm, CInput } from '@coreui/vue/src';\nimport { extend, ValidationObserver, ValidationProvider } from 'vee-validate';\nimport { required } from 'vee-validate/dist/rules';\nimport DaemonConfigurationService from '../../services/DaemonConfigurationService';\nimport FormErrorHandler from '../../helpers/FormErrorHandler';\nexport default Vue.extend({\n    name: 'OtaUpload',\n    components: {\n        CButton: CButton,\n        CCard: CCard,\n        CCardBody: CCardBody,\n        CCardHeader: CCardHeader,\n        CForm: CForm,\n        CInput: CInput,\n        ValidationObserver: ValidationObserver,\n        ValidationProvider: ValidationProvider,\n    },\n    data: function () {\n        return {\n            componentName: 'iqrf::OtaUploadService',\n            configuration: {\n                instance: null,\n                uploadPath: null,\n                uploadPathSuffix: null,\n            },\n            instance: null,\n        };\n    },\n    created: function () {\n        extend('required', required);\n        this.getInstance();\n    },\n    methods: {\n        getInstance: function () {\n            var _this = this;\n            this.$store.commit('spinner/SHOW');\n            DaemonConfigurationService.getComponent(this.componentName)\n                .then(function (response) {\n                _this.$store.commit('spinner/HIDE');\n                if (response.data.instances.length > 0) {\n                    _this.configuration = response.data.instances[0];\n                    _this.instance = _this.configuration.instance;\n                }\n            })\n                .catch(function (error) { return FormErrorHandler.configError(error); });\n        },\n        saveInstance: function () {\n            var _this = this;\n            this.$store.commit('spinner/SHOW');\n            if (this.instance !== null) {\n                DaemonConfigurationService.updateInstance(this.componentName, this.instance, this.configuration)\n                    .then(function () { return _this.successfulSave(); })\n                    .catch(function (error) { return FormErrorHandler.configError(error); });\n            }\n            else {\n                DaemonConfigurationService.createInstance(this.componentName, this.configuration)\n                    .then(function () { return _this.successfulSave(); })\n                    .catch(function (error) { return FormErrorHandler.configError(error); });\n            }\n        },\n        successfulSave: function () {\n            this.$store.commit('spinner/HIDE');\n            this.$toast.success(this.$t('config.success').toString());\n        },\n    },\n    metaInfo: {\n        title: 'config.iqmesh.otaUpload.title'\n    }\n});\n","import mod from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./OtaUpload.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./OtaUpload.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./OtaUpload.vue?vue&type=template&id=3005a95e&\"\nimport script from \"./OtaUpload.vue?vue&type=script&lang=ts&\"\nexport * from \"./OtaUpload.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('3005a95e')) {\n      api.createRecord('3005a95e', component.options)\n    } else {\n      api.reload('3005a95e', component.options)\n    }\n    module.hot.accept(\"./OtaUpload.vue?vue&type=template&id=3005a95e&\", function () {\n      api.rerender('3005a95e', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/components/Config/OtaUpload.vue\"\nexport default component.exports","import mod from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./IqmeshServices.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./IqmeshServices.vue?vue&type=script&lang=ts&\"","import Vue from 'vue';\nimport OtaUpload from '../../components/Config/OtaUpload';\nexport default Vue.extend({\n    name: 'IqmeshServices',\n    components: {\n        OtaUpload: OtaUpload,\n    }\n});\n","import { render, staticRenderFns } from \"./IqmeshServices.vue?vue&type=template&id=2fe29286&\"\nimport script from \"./IqmeshServices.vue?vue&type=script&lang=ts&\"\nexport * from \"./IqmeshServices.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('2fe29286')) {\n      api.createRecord('2fe29286', component.options)\n    } else {\n      api.reload('2fe29286', component.options)\n    }\n    module.hot.accept(\"./IqmeshServices.vue?vue&type=template&id=2fe29286&\", function () {\n      api.rerender('2fe29286', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/pages/Config/IqmeshServices.vue\"\nexport default component.exports","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"CCard\",\n    { attrs: { \"body-wrapper\": \"\" } },\n    [\n      _c(\"ValidationObserver\", {\n        scopedSlots: _vm._u([\n          {\n            key: \"default\",\n            fn: function(ref) {\n              var invalid = ref.invalid\n              return [\n                _c(\n                  \"CForm\",\n                  {\n                    on: {\n                      submit: function($event) {\n                        $event.preventDefault()\n                        return _vm.saveConfig($event)\n                      }\n                    }\n                  },\n                  [\n                    _c(\"ValidationProvider\", {\n                      attrs: {\n                        rules: \"required\",\n                        \"custom-messages\": {\n                          required: \"config.mq.form.messages.instance\"\n                        }\n                      },\n                      scopedSlots: _vm._u(\n                        [\n                          {\n                            key: \"default\",\n                            fn: function(ref) {\n                              var errors = ref.errors\n                              var touched = ref.touched\n                              var valid = ref.valid\n                              return [\n                                _c(\"CInput\", {\n                                  attrs: {\n                                    label: _vm.$t(\n                                      \"config.websocket.form.instance\"\n                                    ),\n                                    \"is-valid\": touched ? valid : null,\n                                    \"invalid-feedback\": _vm.$t(errors[0])\n                                  },\n                                  model: {\n                                    value: _vm.messaging.instance,\n                                    callback: function($$v) {\n                                      _vm.$set(_vm.messaging, \"instance\", $$v)\n                                    },\n                                    expression: \"messaging.instance\"\n                                  }\n                                })\n                              ]\n                            }\n                          }\n                        ],\n                        null,\n                        true\n                      )\n                    }),\n                    _vm._v(\" \"),\n                    _c(\"ValidationProvider\", {\n                      attrs: {\n                        rules: \"integer|required\",\n                        \"custom-messages\": {\n                          required:\n                            \"config.websocket.form.messages.WebsocketPort\",\n                          integer: \"forms.messages.integer\"\n                        }\n                      },\n                      scopedSlots: _vm._u(\n                        [\n                          {\n                            key: \"default\",\n                            fn: function(ref) {\n                              var errors = ref.errors\n                              var touched = ref.touched\n                              var valid = ref.valid\n                              return [\n                                _c(\"CInput\", {\n                                  attrs: {\n                                    type: \"number\",\n                                    label: _vm.$t(\n                                      \"config.websocket.form.WebsocketPort\"\n                                    ),\n                                    \"is-valid\": touched ? valid : null,\n                                    \"invalid-feedback\": _vm.$t(errors[0])\n                                  },\n                                  model: {\n                                    value: _vm.service.WebsocketPort,\n                                    callback: function($$v) {\n                                      _vm.$set(\n                                        _vm.service,\n                                        \"WebsocketPort\",\n                                        _vm._n($$v)\n                                      )\n                                    },\n                                    expression: \"service.WebsocketPort\"\n                                  }\n                                })\n                              ]\n                            }\n                          }\n                        ],\n                        null,\n                        true\n                      )\n                    }),\n                    _vm._v(\" \"),\n                    _c(\"CInputCheckbox\", {\n                      attrs: {\n                        checked: _vm.service.acceptOnlyLocalhost,\n                        label: _vm.$t(\n                          \"config.websocket.form.acceptOnlyLocalhost\"\n                        )\n                      },\n                      on: {\n                        \"update:checked\": function($event) {\n                          return _vm.$set(\n                            _vm.service,\n                            \"acceptOnlyLocalhost\",\n                            $event\n                          )\n                        }\n                      }\n                    }),\n                    _vm._v(\" \"),\n                    _c(\n                      \"CButton\",\n                      {\n                        attrs: {\n                          type: \"submit\",\n                          color: \"primary\",\n                          disabled: invalid\n                        }\n                      },\n                      [\n                        _vm._v(\n                          \"\\n\\t\\t\\t\\t\" + _vm._s(_vm.submitButton) + \"\\n\\t\\t\\t\"\n                        )\n                      ]\n                    )\n                  ],\n                  1\n                )\n              ]\n            }\n          }\n        ])\n      })\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","<template>\n\t<CCard body-wrapper>\n\t\t<ValidationObserver v-slot='{ invalid }'>\n\t\t\t<CForm @submit.prevent='saveConfig'>\n\t\t\t\t<ValidationProvider\n\t\t\t\t\tv-slot='{ errors, touched, valid }'\n\t\t\t\t\trules='required'\n\t\t\t\t\t:custom-messages='{required: \"config.mq.form.messages.instance\"}'\n\t\t\t\t>\n\t\t\t\t\t<CInput\n\t\t\t\t\t\tv-model='messaging.instance'\n\t\t\t\t\t\t:label='$t(\"config.websocket.form.instance\")'\n\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t/>\n\t\t\t\t</ValidationProvider>\n\t\t\t\t<ValidationProvider\n\t\t\t\t\tv-slot='{ errors, touched, valid }'\n\t\t\t\t\trules='integer|required'\n\t\t\t\t\t:custom-messages='{\n\t\t\t\t\t\trequired: \"config.websocket.form.messages.WebsocketPort\",\n\t\t\t\t\t\tinteger: \"forms.messages.integer\"\n\t\t\t\t\t}'\n\t\t\t\t>\n\t\t\t\t\t<CInput\n\t\t\t\t\t\tv-model.number='service.WebsocketPort'\n\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t:label='$t(\"config.websocket.form.WebsocketPort\")'\n\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t/>\n\t\t\t\t</ValidationProvider>\n\t\t\t\t<CInputCheckbox\n\t\t\t\t\t:checked.sync='service.acceptOnlyLocalhost'\n\t\t\t\t\t:label='$t(\"config.websocket.form.acceptOnlyLocalhost\")'\n\t\t\t\t/>\n\t\t\t\t<CButton type='submit' color='primary' :disabled='invalid'>\n\t\t\t\t\t{{ submitButton }}\n\t\t\t\t</CButton>\n\t\t\t</CForm>\n\t\t</ValidationObserver>\n\t</CCard>\n</template>\n\n<script>\nimport {CButton, CCard, CForm, CInput, CInputCheckbox} from '@coreui/vue';\nimport {extend, ValidationObserver, ValidationProvider} from 'vee-validate';\nimport DaemonConfigurationService from '../../services/DaemonConfigurationService';\nimport FormErrorHandler from '../../helpers/FormErrorHandler';\nimport {integer, required} from 'vee-validate/dist/rules';\n\nexport default {\n\tname: 'MonitorForm',\n\tcomponents: {\n\t\tCButton,\n\t\tCCard,\n\t\tCForm,\n\t\tCInput,\n\t\tCInputCheckbox,\n\t\tValidationObserver,\n\t\tValidationProvider,\n\t},\n\tprops: {\n\t\tinstance: {\n\t\t\ttype: String,\n\t\t\trequired: false,\n\t\t\tdefault: null,\n\t\t},\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tcomponentNames: {\n\t\t\t\tmessaging: 'iqrf::WebsocketMessaging',\n\t\t\t\tservice: 'shape::WebsocketCppService',\n\t\t\t},\n\t\t\tinstances: {\n\t\t\t\tmessaging: null,\n\t\t\t\tservice: null,\n\t\t\t},\n\t\t\tmessaging: {\n\t\t\t\tinstance: null,\n\t\t\t\tacceptAsyncMsg: false,\n\t\t\t\tRequiredInterfaces: [],\n\t\t\t},\n\t\t\tservice: {\n\t\t\t\tinstance: null,\n\t\t\t\tWebsocketPort: null,\n\t\t\t\tacceptOnlyLocalhost: false,\n\t\t\t},\n\t\t};\n\t},\n\tcomputed: {\n\t\tsubmitButton() {\n\t\t\treturn this.$route.path === '/config/mq/add' ?\n\t\t\t\tthis.$t('forms.add') :\n\t\t\t\tthis.$t('forms.save');\n\t\t},\n\t},\n\tcreated() {\n\t\textend('integer', integer);\n\t\textend('required', required);\n\t\tif (this.instance !== null) {\n\t\t\tthis.getConfig();\n\t\t}\n\t},\n\tmethods: {\n\t\tgetConfig() {\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\tDaemonConfigurationService.getInstance(this.componentNames.messaging, this.instance)\n\t\t\t\t.then((response) => {\n\t\t\t\t\tthis.messaging = response.data;\n\t\t\t\t\tthis.instances.messaging = this.instance;\n\t\t\t\t\tthis.instances.service = this.messaging.RequiredInterfaces[0].target.instance;\n\t\t\t\t\tDaemonConfigurationService.getInstance(this.componentNames.service, this.instances.service)\n\t\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\t\tthis.service = response.data;\n\t\t\t\t\t\t\tthis.$store.commit('spinner/HIDE');\n\t\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tthis.$router.push('/config/websocket/');\n\t\t\t\t\tFormErrorHandler.configError(error);\n\t\t\t\t});\n\t\t},\n\t\tsaveConfig() {\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\tthis.service.instance = this.messaging.instance;\n\t\t\tif (this.messaging.RequiredInterfaces.length === 0) {\n\t\t\t\tthis.messaging.RequiredInterfaces[0] = {\n\t\t\t\t\tname: 'shape::IWebsocketService',\n\t\t\t\t\ttarget: {\n\t\t\t\t\t\tinstance: this.service.instance,\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tthis.messaging.RequiredInterfaces[0].target.instance = this.messaging.instance;\n\t\t\t}\n\t\t\tif (this.instance === null) {\n\t\t\t\tPromise.all([\n\t\t\t\t\tDaemonConfigurationService.createInstance(this.componentNames.service, this.service),\n\t\t\t\t\tDaemonConfigurationService.createInstance(this.componentNames.messaging, this.messaging),\n\t\t\t\t])\n\t\t\t\t\t.then(() => this.successfulSave())\n\t\t\t\t\t.catch((error) => FormErrorHandler.configError(error));\n\t\t\t} else {\n\t\t\t\tPromise.all([\n\t\t\t\t\tDaemonConfigurationService.updateInstance(this.componentNames.service, this.instances.service, this.service),\n\t\t\t\t\tDaemonConfigurationService.updateInstance(this.componentNames.messaging, this.instances.messaging, this.messaging),\n\t\t\t\t])\n\t\t\t\t\t.then(() => this.successfulSave())\n\t\t\t\t\t.catch((error) => FormErrorHandler.configError(error));\n\t\t\t}\n\t\t},\n\t\tsuccessfulSave() {\n\t\t\tthis.$router.push('/config/websocket/');\n\t\t\tthis.$store.commit('spinner/HIDE');\n\t\t\tif (this.$route.path === '/config/websocket/add') {\n\t\t\t\tthis.$toast.success(\n\t\t\t\t\tthis.$t('config.websocket.messages.add.success', {instance: this.messaging.instance})\n\t\t\t\t\t\t.toString()\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tthis.$toast.success(\n\t\t\t\t\tthis.$t('config.websocket.messages.edit.success', {instance: this.messaging.instance})\n\t\t\t\t\t\t.toString()\n\t\t\t\t);\n\t\t\t}\n\t\t},\n\t},\n\tmetaInfo() {\n\t\treturn {\n\t\t\ttitle: this.$route.path === '/config/websocket/add' ?\n\t\t\t\t'config.websocket.interface.add' :\n\t\t\t\t'config.websocket.interface.edit',\n\t\t};\n\t},\n};\n</script>\n","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./WebsocketInterfaceForm.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./WebsocketInterfaceForm.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./WebsocketInterfaceForm.vue?vue&type=template&id=61fff480&\"\nimport script from \"./WebsocketInterfaceForm.vue?vue&type=script&lang=js&\"\nexport * from \"./WebsocketInterfaceForm.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('61fff480')) {\n      api.createRecord('61fff480', component.options)\n    } else {\n      api.reload('61fff480', component.options)\n    }\n    module.hot.accept(\"./WebsocketInterfaceForm.vue?vue&type=template&id=61fff480&\", function () {\n      api.rerender('61fff480', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/pages/Config/WebsocketInterfaceForm.vue\"\nexport default component.exports","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"CCard\",\n    [\n      _c(\n        \"CCardBody\",\n        [\n          _c(\"ValidationObserver\", {\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(ref) {\n                  var invalid = ref.invalid\n                  return [\n                    _c(\n                      \"CForm\",\n                      {\n                        on: {\n                          submit: function($event) {\n                            $event.preventDefault()\n                            return _vm.saveInstance($event)\n                          }\n                        }\n                      },\n                      [\n                        _c(\"ValidationProvider\", {\n                          attrs: {\n                            rules: \"required\",\n                            \"custom-messages\": {\n                              required:\n                                \"config.websocket.form.messages.messagingInstance\"\n                            }\n                          },\n                          scopedSlots: _vm._u(\n                            [\n                              {\n                                key: \"default\",\n                                fn: function(ref) {\n                                  var errors = ref.errors\n                                  var touched = ref.touched\n                                  var valid = ref.valid\n                                  return [\n                                    _c(\"CInput\", {\n                                      attrs: {\n                                        label: _vm.$t(\n                                          \"config.websocket.form.instance\"\n                                        ),\n                                        \"is-valid\": touched ? valid : null,\n                                        \"invalid-feedback\": _vm.$t(errors[0])\n                                      },\n                                      model: {\n                                        value: _vm.configuration.instance,\n                                        callback: function($$v) {\n                                          _vm.$set(\n                                            _vm.configuration,\n                                            \"instance\",\n                                            $$v\n                                          )\n                                        },\n                                        expression: \"configuration.instance\"\n                                      }\n                                    })\n                                  ]\n                                }\n                              }\n                            ],\n                            null,\n                            true\n                          )\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"CInputCheckbox\", {\n                          attrs: {\n                            checked: _vm.configuration.acceptAsyncMsg,\n                            label: _vm.$t(\n                              \"config.websocket.form.acceptAsyncMsg\"\n                            )\n                          },\n                          on: {\n                            \"update:checked\": function($event) {\n                              return _vm.$set(\n                                _vm.configuration,\n                                \"acceptAsyncMsg\",\n                                $event\n                              )\n                            }\n                          }\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"h4\", [\n                          _vm._v(\n                            _vm._s(\n                              _vm.$t(\"config.websocket.form.requiredInterfaces\")\n                            )\n                          )\n                        ]),\n                        _vm._v(\" \"),\n                        _vm._l(_vm.configuration.RequiredInterfaces, function(\n                          iface,\n                          i\n                        ) {\n                          return _c(\n                            \"div\",\n                            { key: i, staticClass: \"form-group\" },\n                            [\n                              _c(\"ValidationProvider\", {\n                                attrs: {\n                                  rules: \"required\",\n                                  \"custom-messages\": {\n                                    required:\n                                      \"config.websocket.form.messages.interfaceName\"\n                                  }\n                                },\n                                scopedSlots: _vm._u(\n                                  [\n                                    {\n                                      key: \"default\",\n                                      fn: function(ref) {\n                                        var errors = ref.errors\n                                        var touched = ref.touched\n                                        var valid = ref.valid\n                                        return [\n                                          _c(\"CSelect\", {\n                                            attrs: {\n                                              value: iface.name,\n                                              label: _vm.$t(\n                                                \"config.websocket.form.requiredInterface.name\"\n                                              ),\n                                              placeholder: _vm.$t(\n                                                \"config.websocket.form.messages.interfaceName\"\n                                              ),\n                                              options: [\n                                                {\n                                                  value:\n                                                    \"shape::IWebsocketService\",\n                                                  label:\n                                                    \"shape::IWebsocketService\"\n                                                }\n                                              ],\n                                              \"is-valid\": touched\n                                                ? valid\n                                                : null,\n                                              \"invalid-feedback\": _vm.$t(\n                                                errors[0]\n                                              )\n                                            },\n                                            on: {\n                                              \"update:value\": function($event) {\n                                                return _vm.$set(\n                                                  iface,\n                                                  \"name\",\n                                                  $event\n                                                )\n                                              }\n                                            }\n                                          })\n                                        ]\n                                      }\n                                    }\n                                  ],\n                                  null,\n                                  true\n                                )\n                              }),\n                              _vm._v(\" \"),\n                              _c(\"ValidationProvider\", {\n                                attrs: {\n                                  rules: \"required\",\n                                  \"custom-messages\": {\n                                    required:\n                                      \"config.websocket.form.messages.interfaceName\"\n                                  }\n                                },\n                                scopedSlots: _vm._u(\n                                  [\n                                    {\n                                      key: \"default\",\n                                      fn: function(ref) {\n                                        var errors = ref.errors\n                                        var touched = ref.touched\n                                        var valid = ref.valid\n                                        return [\n                                          _c(\"CSelect\", {\n                                            attrs: {\n                                              value: iface.instance,\n                                              label: _vm.$t(\n                                                \"config.websocket.form.requiredInterface.instance\"\n                                              ),\n                                              placeholder: _vm.$t(\n                                                \"config.websocket.form.messages.interfaceInstance\"\n                                              ),\n                                              options: _vm.instances.service,\n                                              \"is-valid\": touched\n                                                ? valid\n                                                : null,\n                                              \"invalid-feedback\": _vm.$t(\n                                                errors[0]\n                                              )\n                                            },\n                                            on: {\n                                              \"update:value\": function($event) {\n                                                return _vm.$set(\n                                                  iface,\n                                                  \"instance\",\n                                                  $event\n                                                )\n                                              }\n                                            }\n                                          })\n                                        ]\n                                      }\n                                    }\n                                  ],\n                                  null,\n                                  true\n                                )\n                              }),\n                              _vm._v(\" \"),\n                              _vm.configuration.RequiredInterfaces.length > 1\n                                ? _c(\n                                    \"CButton\",\n                                    {\n                                      attrs: { color: \"danger\" },\n                                      on: {\n                                        click: function($event) {\n                                          return _vm.removeInterface(i - 1)\n                                        }\n                                      }\n                                    },\n                                    [\n                                      _vm._v(\n                                        \"\\n\\t\\t\\t\\t\\t\\t\" +\n                                          _vm._s(\n                                            _vm.$t(\n                                              \"config.websocket.form.requiredInterface.remove\"\n                                            )\n                                          ) +\n                                          \"\\n\\t\\t\\t\\t\\t\"\n                                      )\n                                    ]\n                                  )\n                                : _vm._e(),\n                              _vm._v(\" \"),\n                              i ===\n                              _vm.configuration.RequiredInterfaces.length - 1\n                                ? _c(\n                                    \"CButton\",\n                                    {\n                                      attrs: {\n                                        color: \"success\",\n                                        disabled: !iface.name || !iface.instance\n                                      },\n                                      on: { click: _vm.addInterface }\n                                    },\n                                    [\n                                      _vm._v(\n                                        \"\\n\\t\\t\\t\\t\\t\\t\" +\n                                          _vm._s(\n                                            _vm.$t(\n                                              \"config.websocket.form.requiredInterface.add\"\n                                            )\n                                          ) +\n                                          \"\\n\\t\\t\\t\\t\\t\"\n                                      )\n                                    ]\n                                  )\n                                : _vm._e()\n                            ],\n                            1\n                          )\n                        }),\n                        _vm._v(\" \"),\n                        _c(\n                          \"CButton\",\n                          {\n                            attrs: {\n                              type: \"submit\",\n                              color: \"primary\",\n                              disabled: invalid\n                            }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n\\t\\t\\t\\t\\t\" +\n                                _vm._s(_vm.submitButton) +\n                                \"\\n\\t\\t\\t\\t\"\n                            )\n                          ]\n                        )\n                      ],\n                      2\n                    )\n                  ]\n                }\n              }\n            ])\n          })\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","<template>\n\t<CCard>\n\t\t<CCardBody>\n\t\t\t<ValidationObserver v-slot='{ invalid }'>\n\t\t\t\t<CForm @submit.prevent='saveInstance'>\n\t\t\t\t\t<ValidationProvider\n\t\t\t\t\t\tv-slot='{ errors, touched, valid }'\n\t\t\t\t\t\trules='required'\n\t\t\t\t\t\t:custom-messages='{required: \"config.websocket.form.messages.messagingInstance\"}'\n\t\t\t\t\t>\n\t\t\t\t\t\t<CInput\n\t\t\t\t\t\t\tv-model='configuration.instance'\n\t\t\t\t\t\t\t:label='$t(\"config.websocket.form.instance\")'\n\t\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ValidationProvider>\n\t\t\t\t\t<CInputCheckbox\n\t\t\t\t\t\t:checked.sync='configuration.acceptAsyncMsg'\n\t\t\t\t\t\t:label='$t(\"config.websocket.form.acceptAsyncMsg\")'\n\t\t\t\t\t/>\n\t\t\t\t\t<h4>{{ $t('config.websocket.form.requiredInterfaces') }}</h4>\n\t\t\t\t\t<div\n\t\t\t\t\t\tv-for='(iface, i) of configuration.RequiredInterfaces'\n\t\t\t\t\t\t:key='i'\n\t\t\t\t\t\tclass='form-group'\n\t\t\t\t\t>\n\t\t\t\t\t\t<ValidationProvider\n\t\t\t\t\t\t\tv-slot='{ errors, touched, valid }'\n\t\t\t\t\t\t\trules='required'\n\t\t\t\t\t\t\t:custom-messages='{required: \"config.websocket.form.messages.interfaceName\"}'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<CSelect\n\t\t\t\t\t\t\t\t:value.sync='iface.name'\n\t\t\t\t\t\t\t\t:label='$t(\"config.websocket.form.requiredInterface.name\")'\n\t\t\t\t\t\t\t\t:placeholder='$t(\"config.websocket.form.messages.interfaceName\")'\n\t\t\t\t\t\t\t\t:options='[\n\t\t\t\t\t\t\t\t\t{value: \"shape::IWebsocketService\", label: \"shape::IWebsocketService\"}\n\t\t\t\t\t\t\t\t]'\n\t\t\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</ValidationProvider>\n\t\t\t\t\t\t<ValidationProvider\n\t\t\t\t\t\t\tv-slot='{ errors, touched, valid }'\n\t\t\t\t\t\t\trules='required'\n\t\t\t\t\t\t\t:custom-messages='{required: \"config.websocket.form.messages.interfaceName\"}'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<CSelect\n\t\t\t\t\t\t\t\t:value.sync='iface.instance'\n\t\t\t\t\t\t\t\t:label='$t(\"config.websocket.form.requiredInterface.instance\")'\n\t\t\t\t\t\t\t\t:placeholder='$t(\"config.websocket.form.messages.interfaceInstance\")'\n\t\t\t\t\t\t\t\t:options='instances.service'\n\t\t\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</ValidationProvider>\n\t\t\t\t\t\t<CButton\n\t\t\t\t\t\t\tv-if='configuration.RequiredInterfaces.length > 1'\n\t\t\t\t\t\t\tcolor='danger'\n\t\t\t\t\t\t\t@click='removeInterface(i-1)'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{{ $t('config.websocket.form.requiredInterface.remove') }}\n\t\t\t\t\t\t</CButton>\n\t\t\t\t\t\t<CButton \n\t\t\t\t\t\t\tv-if='i === (configuration.RequiredInterfaces.length - 1)'\n\t\t\t\t\t\t\tcolor='success' \n\t\t\t\t\t\t\t:disabled='!iface.name || !iface.instance'\n\t\t\t\t\t\t\t@click='addInterface'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{{ $t('config.websocket.form.requiredInterface.add') }}\n\t\t\t\t\t\t</CButton>\n\t\t\t\t\t</div>\n\t\t\t\t\t<CButton type='submit' color='primary' :disabled='invalid'>\n\t\t\t\t\t\t{{ submitButton }}\n\t\t\t\t\t</CButton>\n\t\t\t\t</CForm>\n\t\t\t</ValidationObserver>\n\t\t</CCardBody>\n\t</CCard>\n</template>\n\n<script>\nimport {CButton, CCard, CCardBody, CForm, CInput, CInputCheckbox, CSelect} from '@coreui/vue/src';\nimport {extend, ValidationObserver, ValidationProvider} from 'vee-validate';\nimport DaemonConfigurationService from '../../services/DaemonConfigurationService';\nimport FormErrorHandler from '../../helpers/FormErrorHandler';\nimport {required} from 'vee-validate/dist/rules';\n\nexport default {\n\tname: 'WebsocketMessagingForm',\n\tcomponents: {\n\t\tCButton,\n\t\tCCard,\n\t\tCCardBody,\n\t\tCForm,\n\t\tCInput,\n\t\tCInputCheckbox,\n\t\tCSelect,\n\t\tValidationObserver,\n\t\tValidationProvider,\n\t},\n\tprops: {\n\t\tinstance: {\n\t\t\ttype: String,\n\t\t\trequired: false,\n\t\t\tdefault: null,\n\t\t},\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tcomponentNames: {\n\t\t\t\tmessaging: 'iqrf::WebsocketMessaging',\n\t\t\t\tservice: 'shape::WebsocketCppService',\n\t\t\t},\n\t\t\tinstances: {\n\t\t\t\tservice: [],\n\t\t\t},\n\t\t\tconfiguration: {\n\t\t\t\tinstance: null,\n\t\t\t\tacceptAsyncMsg: false,\n\t\t\t\tRequiredInterfaces: [{}],\n\t\t\t}\n\t\t};\n\t},\n\tcomputed: {\n\t\tsubmitButton() {\n\t\t\treturn this.$route.path === '/config/websocket/add-messaging' ?\n\t\t\t\tthis.$t('forms.add') : this.$t('forms.edit');\n\t\t},\n\t},\n\tcreated() {\n\t\textend('required', required);\n\t\tif (this.instance) {\n\t\t\tthis.getConfig();\n\t\t} else {\n\t\t\tthis.getServices();\n\t\t}\n\t},\n\tmethods: {\n\t\taddInterface() {\n\t\t\tthis.configuration.RequiredInterfaces.push({});\n\t\t},\n\t\tremoveInterface(index) {\n\t\t\tthis.configuration.RequiredInterfaces.splice(index, 1);\n\t\t},\n\t\tgetConfig() {\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\treturn Promise.all([\n\t\t\t\tDaemonConfigurationService.getInstance(this.componentNames.messaging, this.instance),\n\t\t\t\tDaemonConfigurationService.getComponent(this.componentNames.service),\n\t\t\t])\n\t\t\t\t.then((responses) => {\n\t\t\t\t\tthis.$store.commit('spinner/HIDE');\n\t\t\t\t\tlet interfaces = [];\n\t\t\t\t\tlet configuration = responses[0].data;\n\t\t\t\t\tconfiguration.RequiredInterfaces.forEach(item => {\n\t\t\t\t\t\tinterfaces.push({name: item.name, instance: item.target.instance});\n\t\t\t\t\t});\n\t\t\t\t\tconfiguration.RequiredInterfaces = interfaces;\n\t\t\t\t\tthis.configuration = configuration;\n\t\t\t\t\tresponses[1].data.instances.forEach(item => {\n\t\t\t\t\t\tthis.instances.service.push({value: item.instance, label: item.instance});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t},\n\t\tgetServices() {\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\tDaemonConfigurationService.getComponent(this.componentNames.service)\n\t\t\t\t.then((response) => {\n\t\t\t\t\tthis.$store.commit('spinner/HIDE');\n\t\t\t\t\tresponse.data.instances.forEach(item => {\n\t\t\t\t\t\tthis.instances.service.push({value: item.instance, label: item.instance});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t},\n\t\tsaveInstance() {\n\t\t\tlet instance = this.configuration;\n\t\t\tlet RequiredInterfaces = [];\n\t\t\tthis.configuration.RequiredInterfaces.forEach(item => {\n\t\t\t\tRequiredInterfaces.push({name: item.name, target: {instance: item.instance}});\n\t\t\t});\n\t\t\tinstance.RequiredInterfaces = RequiredInterfaces;\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\tif (this.instance !== null) {\n\t\t\t\tDaemonConfigurationService.updateInstance(this.componentNames.messaging, this.instance, instance)\n\t\t\t\t\t.then(() => this.successfulSave())\n\t\t\t\t\t.catch((error) => FormErrorHandler.configError(error));\n\t\t\t} else {\n\t\t\t\tDaemonConfigurationService.createInstance(this.componentNames.messaging, instance)\n\t\t\t\t\t.then(() => this.successfulSave())\n\t\t\t\t\t.catch((error) => FormErrorHandler.configError(error));\n\t\t\t}\n\t\t},\n\t\tsuccessfulSave() {\n\t\t\tthis.$router.push('/config/websocket/');\n\t\t\tthis.$store.commit('spinner/HIDE');\n\t\t\tif (this.$route.path === '/config/websocket/add-messaging') {\n\t\t\t\tthis.$toast.success(\n\t\t\t\t\tthis.$t('config.websocket.messaging.messages.addSuccess', {messaging: this.configuration.instance})\n\t\t\t\t\t\t.toString()\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tthis.$toast.success(\n\t\t\t\t\tthis.$t('config.websocket.messaging.messages.editSuccess', {messaging: this.instance})\n\t\t\t\t\t\t.toString()\n\t\t\t\t);\n\t\t\t}\n\t\t},\n\t},\n\tmetaInfo() {\n\t\treturn {\n\t\t\ttitle: this.$route.path === '/config/websocket/add-messaging' ?\n\t\t\t\tthis.$t('config.websocket.messaging.add') :\n\t\t\t\tthis.$t('config.websocket.messaging.edit')\n\t\t};\n\t}\n};\n</script>\n","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./WebsocketMessagingForm.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./WebsocketMessagingForm.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./WebsocketMessagingForm.vue?vue&type=template&id=b8be56ea&\"\nimport script from \"./WebsocketMessagingForm.vue?vue&type=script&lang=js&\"\nexport * from \"./WebsocketMessagingForm.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('b8be56ea')) {\n      api.createRecord('b8be56ea', component.options)\n    } else {\n      api.reload('b8be56ea', component.options)\n    }\n    module.hot.accept(\"./WebsocketMessagingForm.vue?vue&type=template&id=b8be56ea&\", function () {\n      api.rerender('b8be56ea', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/pages/Config/WebsocketMessagingForm.vue\"\nexport default component.exports","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"CCard\",\n    [\n      _c(\n        \"CCardBody\",\n        [\n          _c(\"ValidationObserver\", {\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(ref) {\n                  var invalid = ref.invalid\n                  return [\n                    _c(\n                      \"CForm\",\n                      {\n                        on: {\n                          submit: function($event) {\n                            $event.preventDefault()\n                            return _vm.saveInstance($event)\n                          }\n                        }\n                      },\n                      [\n                        _c(\"ValidationProvider\", {\n                          attrs: {\n                            rules: \"required\",\n                            \"custom-messages\": {\n                              required:\n                                \"config.websocket.form.messages.serviceInstance\"\n                            }\n                          },\n                          scopedSlots: _vm._u(\n                            [\n                              {\n                                key: \"default\",\n                                fn: function(ref) {\n                                  var errors = ref.errors\n                                  var touched = ref.touched\n                                  var valid = ref.valid\n                                  return [\n                                    _c(\"CInput\", {\n                                      attrs: {\n                                        label: _vm.$t(\n                                          \"config.websocket.form.instance\"\n                                        ),\n                                        \"is-valid\": touched ? valid : null,\n                                        \"invalid-feedback\": _vm.$t(errors[0])\n                                      },\n                                      model: {\n                                        value: _vm.configuration.instance,\n                                        callback: function($$v) {\n                                          _vm.$set(\n                                            _vm.configuration,\n                                            \"instance\",\n                                            $$v\n                                          )\n                                        },\n                                        expression: \"configuration.instance\"\n                                      }\n                                    })\n                                  ]\n                                }\n                              }\n                            ],\n                            null,\n                            true\n                          )\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"ValidationProvider\", {\n                          attrs: {\n                            rules: \"integer|required\",\n                            \"custom-messages\": {\n                              required:\n                                \"config.websocket.form.messages.WebsocketPort\",\n                              integer: \"forms.messages.integer\"\n                            }\n                          },\n                          scopedSlots: _vm._u(\n                            [\n                              {\n                                key: \"default\",\n                                fn: function(ref) {\n                                  var errors = ref.errors\n                                  var touched = ref.touched\n                                  var valid = ref.valid\n                                  return [\n                                    _c(\"CInput\", {\n                                      attrs: {\n                                        type: \"number\",\n                                        label: _vm.$t(\n                                          \"config.websocket.form.WebsocketPort\"\n                                        ),\n                                        \"is-valid\": touched ? valid : null,\n                                        \"invalid-feedback\": _vm.$t(errors[0])\n                                      },\n                                      model: {\n                                        value: _vm.configuration.WebsocketPort,\n                                        callback: function($$v) {\n                                          _vm.$set(\n                                            _vm.configuration,\n                                            \"WebsocketPort\",\n                                            _vm._n($$v)\n                                          )\n                                        },\n                                        expression:\n                                          \"configuration.WebsocketPort\"\n                                      }\n                                    })\n                                  ]\n                                }\n                              }\n                            ],\n                            null,\n                            true\n                          )\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"CInputCheckbox\", {\n                          attrs: {\n                            checked: _vm.configuration.acceptOnlyLocalhost,\n                            label: _vm.$t(\n                              \"config.websocket.form.acceptOnlyLocalhost\"\n                            )\n                          },\n                          on: {\n                            \"update:checked\": function($event) {\n                              return _vm.$set(\n                                _vm.configuration,\n                                \"acceptOnlyLocalhost\",\n                                $event\n                              )\n                            }\n                          }\n                        }),\n                        _vm._v(\" \"),\n                        _c(\n                          \"CButton\",\n                          {\n                            attrs: {\n                              type: \"submit\",\n                              color: \"primary\",\n                              disabled: invalid\n                            }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n\\t\\t\\t\\t\\t\" +\n                                _vm._s(_vm.submitButton) +\n                                \"\\n\\t\\t\\t\\t\"\n                            )\n                          ]\n                        )\n                      ],\n                      1\n                    )\n                  ]\n                }\n              }\n            ])\n          })\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","<template>\n\t<CCard>\n\t\t<CCardBody>\n\t\t\t<ValidationObserver v-slot='{ invalid }'>\n\t\t\t\t<CForm @submit.prevent='saveInstance'>\n\t\t\t\t\t<ValidationProvider\n\t\t\t\t\t\tv-slot='{ errors, touched, valid }'\n\t\t\t\t\t\trules='required'\n\t\t\t\t\t\t:custom-messages='{required: \"config.websocket.form.messages.serviceInstance\"}'\n\t\t\t\t\t>\n\t\t\t\t\t\t<CInput\n\t\t\t\t\t\t\tv-model='configuration.instance'\n\t\t\t\t\t\t\t:label='$t(\"config.websocket.form.instance\")'\n\t\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ValidationProvider>\n\t\t\t\t\t<ValidationProvider\n\t\t\t\t\t\tv-slot='{ errors, touched, valid }'\n\t\t\t\t\t\trules='integer|required'\n\t\t\t\t\t\t:custom-messages='{\n\t\t\t\t\t\t\trequired: \"config.websocket.form.messages.WebsocketPort\",\n\t\t\t\t\t\t\tinteger: \"forms.messages.integer\"\n\t\t\t\t\t\t}'\n\t\t\t\t\t>\n\t\t\t\t\t\t<CInput\n\t\t\t\t\t\t\tv-model.number='configuration.WebsocketPort'\n\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t:label='$t(\"config.websocket.form.WebsocketPort\")'\n\t\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ValidationProvider>\n\t\t\t\t\t<CInputCheckbox\n\t\t\t\t\t\t:checked.sync='configuration.acceptOnlyLocalhost'\n\t\t\t\t\t\t:label='$t(\"config.websocket.form.acceptOnlyLocalhost\")'\n\t\t\t\t\t/>\n\t\t\t\t\t<CButton type='submit' color='primary' :disabled='invalid'>\n\t\t\t\t\t\t{{ submitButton }}\n\t\t\t\t\t</CButton>\n\t\t\t\t</CForm>\n\t\t\t</ValidationObserver>\n\t\t</CCardBody>\n\t</CCard>\n</template>\n\n<script>\nimport {CButton, CCard, CCardBody, CForm, CInput, CInputCheckbox} from '@coreui/vue/src';\nimport {extend, ValidationObserver, ValidationProvider} from 'vee-validate';\nimport {integer, required} from 'vee-validate/dist/rules';\nimport DaemonConfigurationService from '../../services/DaemonConfigurationService';\nimport FormErrorHandler from '../../helpers/FormErrorHandler';\n\nexport default {\n\tname: 'WebsocketServiceForm',\n\tcomponents: {\n\t\tCButton,\n\t\tCCard,\n\t\tCCardBody,\n\t\tCForm,\n\t\tCInput,\n\t\tCInputCheckbox,\n\t\tValidationObserver,\n\t\tValidationProvider,\n\t},\n\tprops: {\n\t\tinstance: {\n\t\t\ttype: String,\n\t\t\trequired: false,\n\t\t\tdefault: null,\n\t\t},\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tcomponentName: 'shape::WebsocketCppService',\n\t\t\tconfiguration: {\n\t\t\t\tinstance: null,\n\t\t\t\tWebsocketPort: null,\n\t\t\t\tacceptOnlyLocalhost: false,\n\t\t\t},\n\t\t};\n\t},\n\tcomputed: {\n\t\tsubmitButton() {\n\t\t\treturn this.$route.path === '/config/websocket/add-service' ?\n\t\t\t\tthis.$t('forms.add') : this.$t('forms.edit');\n\t\t},\n\t},\n\tcreated() {\n\t\textend('integer', integer);\n\t\textend('required', required);\n\t\tif (this.instance) {\n\t\t\tthis.getInstance();\n\t\t}\n\t},\n\tmethods: {\n\t\tgetInstance() {\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\tDaemonConfigurationService.getInstance(this.componentName, this.instance)\n\t\t\t\t.then((response) => {\n\t\t\t\t\tthis.$store.commit('spinner/HIDE');\n\t\t\t\t\tthis.configuration = response.data;\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tthis.$router.push('/config/websocket/');\n\t\t\t\t\tFormErrorHandler.configError(error);\n\t\t\t\t});\n\t\t},\n\t\tsaveInstance() {\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\tif (this.instance !== null) {\n\t\t\t\tDaemonConfigurationService.updateInstance(this.componentName, this.instance, this.configuration)\n\t\t\t\t\t.then(() => this.successfulSave())\n\t\t\t\t\t.catch((error) => FormErrorHandler.configError(error));\n\t\t\t} else {\n\t\t\t\tDaemonConfigurationService.createInstance(this.componentName, this.configuration)\n\t\t\t\t\t.then(() => this.successfulSave())\n\t\t\t\t\t.catch((error) => FormErrorHandler.configError(error));\n\t\t\t}\n\t\t},\n\t\tsuccessfulSave() {\n\t\t\tthis.$router.push('/config/websocket/');\n\t\t\tthis.$store.commit('spinner/HIDE');\n\t\t\tif (this.$route.path === '/config/websocket/add-service') {\n\t\t\t\tthis.$toast.success(\n\t\t\t\t\tthis.$t('config.websocket.service.messages.addSuccess', {service: this.configuration.instance})\n\t\t\t\t\t\t.toString()\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tthis.$toast.success(\n\t\t\t\t\tthis.$t('config.websocket.service.messages.editSuccess', {service: this.instance})\n\t\t\t\t\t\t.toString()\n\t\t\t\t);\n\t\t\t}\n\t\t},\n\t},\n\tmetaInfo() {\n\t\treturn {\n\t\t\ttitle: this.$route.path === '/config/websocket/add-service' ?\n\t\t\t\tthis.$t('config.websocket.service.add') :\n\t\t\t\tthis.$t('config.websocket.service.edit')\n\t\t};\n\t},\n};\n</script>\n","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./WebsocketServiceForm.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./WebsocketServiceForm.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./WebsocketServiceForm.vue?vue&type=template&id=0301a9fc&\"\nimport script from \"./WebsocketServiceForm.vue?vue&type=script&lang=js&\"\nexport * from \"./WebsocketServiceForm.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('0301a9fc')) {\n      api.createRecord('0301a9fc', component.options)\n    } else {\n      api.reload('0301a9fc', component.options)\n    }\n    module.hot.accept(\"./WebsocketServiceForm.vue?vue&type=template&id=0301a9fc&\", function () {\n      api.rerender('0301a9fc', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/pages/Config/WebsocketServiceForm.vue\"\nexport default component.exports","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _vm.$store.getters[\"user/getRole\"] === \"power\"\n    ? _c(\n        \"div\",\n        [_c(\"WebsocketMessagingList\"), _vm._v(\" \"), _c(\"WebsocketServiceList\")],\n        1\n      )\n    : _c(\"div\", [_c(\"WebsocketInterfaceList\")], 1)\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\n        \"CCard\",\n        [\n          _c(\n            \"CCardHeader\",\n            [\n              _c(\n                \"CButton\",\n                {\n                  staticClass: \"float-right\",\n                  attrs: {\n                    color: \"success\",\n                    size: \"sm\",\n                    to: \"/config/websocket/add\"\n                  }\n                },\n                [\n                  _c(\"CIcon\", { attrs: { content: _vm.$options.icons.add } }),\n                  _vm._v(\n                    \"\\n\\t\\t\\t\\t\" +\n                      _vm._s(_vm.$t(\"table.actions.add\")) +\n                      \"\\n\\t\\t\\t\"\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"CCardBody\",\n            [\n              _c(\"CDataTable\", {\n                attrs: {\n                  fields: _vm.fields,\n                  items: _vm.instances,\n                  \"column-filter\": true,\n                  \"items-per-page\": 20,\n                  pagination: true,\n                  striped: true,\n                  sorter: { external: false, resetable: true }\n                },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"acceptAsyncMsg\",\n                    fn: function(ref) {\n                      var item = ref.item\n                      return [\n                        _c(\n                          \"td\",\n                          [\n                            _c(\n                              \"CDropdown\",\n                              {\n                                attrs: {\n                                  color: item.acceptAsyncMsg\n                                    ? \"success\"\n                                    : \"danger\",\n                                  \"toggler-text\": _vm.$t(\n                                    \"table.enabled.\" + item.acceptAsyncMsg\n                                  ),\n                                  size: \"sm\"\n                                }\n                              },\n                              [\n                                _c(\n                                  \"CDropdownItem\",\n                                  {\n                                    on: {\n                                      click: function($event) {\n                                        return _vm.changeAcceptAsyncMsg(\n                                          item.messaging,\n                                          true\n                                        )\n                                      }\n                                    }\n                                  },\n                                  [\n                                    _vm._v(\n                                      \"\\n\\t\\t\\t\\t\\t\\t\\t\\t\" +\n                                        _vm._s(_vm.$t(\"table.enabled.true\")) +\n                                        \"\\n\\t\\t\\t\\t\\t\\t\\t\"\n                                    )\n                                  ]\n                                ),\n                                _vm._v(\" \"),\n                                _c(\n                                  \"CDropdownItem\",\n                                  {\n                                    on: {\n                                      click: function($event) {\n                                        return _vm.changeAcceptAsyncMsg(\n                                          item.messaging,\n                                          false\n                                        )\n                                      }\n                                    }\n                                  },\n                                  [\n                                    _vm._v(\n                                      \"\\n\\t\\t\\t\\t\\t\\t\\t\\t\" +\n                                        _vm._s(_vm.$t(\"table.enabled.false\")) +\n                                        \"\\n\\t\\t\\t\\t\\t\\t\\t\"\n                                    )\n                                  ]\n                                )\n                              ],\n                              1\n                            )\n                          ],\n                          1\n                        )\n                      ]\n                    }\n                  },\n                  {\n                    key: \"acceptOnlyLocalhost\",\n                    fn: function(ref) {\n                      var item = ref.item\n                      return [\n                        _c(\n                          \"td\",\n                          [\n                            _c(\n                              \"CDropdown\",\n                              {\n                                attrs: {\n                                  color: item.acceptOnlyLocalhost\n                                    ? \"success\"\n                                    : \"danger\",\n                                  \"toggler-text\": _vm.$t(\n                                    \"table.enabled.\" + item.acceptOnlyLocalhost\n                                  ),\n                                  size: \"sm\"\n                                }\n                              },\n                              [\n                                _c(\n                                  \"CDropdownItem\",\n                                  {\n                                    on: {\n                                      click: function($event) {\n                                        return _vm.changeAcceptOnlyLocalhost(\n                                          item.service,\n                                          true\n                                        )\n                                      }\n                                    }\n                                  },\n                                  [\n                                    _vm._v(\n                                      \"\\n\\t\\t\\t\\t\\t\\t\\t\\t\" +\n                                        _vm._s(_vm.$t(\"table.enabled.true\")) +\n                                        \"\\n\\t\\t\\t\\t\\t\\t\\t\"\n                                    )\n                                  ]\n                                ),\n                                _vm._v(\" \"),\n                                _c(\n                                  \"CDropdownItem\",\n                                  {\n                                    on: {\n                                      click: function($event) {\n                                        return _vm.changeAcceptOnlyLocalhost(\n                                          item.service,\n                                          false\n                                        )\n                                      }\n                                    }\n                                  },\n                                  [\n                                    _vm._v(\n                                      \"\\n\\t\\t\\t\\t\\t\\t\\t\\t\" +\n                                        _vm._s(_vm.$t(\"table.enabled.false\")) +\n                                        \"\\n\\t\\t\\t\\t\\t\\t\\t\"\n                                    )\n                                  ]\n                                )\n                              ],\n                              1\n                            )\n                          ],\n                          1\n                        )\n                      ]\n                    }\n                  },\n                  {\n                    key: \"actions\",\n                    fn: function(ref) {\n                      var item = ref.item\n                      return [\n                        _c(\n                          \"td\",\n                          { staticClass: \"col-actions\" },\n                          [\n                            _c(\n                              \"CButton\",\n                              {\n                                attrs: {\n                                  color: \"info\",\n                                  size: \"sm\",\n                                  to:\n                                    \"/config/websocket/edit/\" +\n                                    item.instanceMessaging\n                                }\n                              },\n                              [\n                                _c(\"CIcon\", {\n                                  attrs: { content: _vm.$options.icons.edit }\n                                }),\n                                _vm._v(\n                                  \"\\n\\t\\t\\t\\t\\t\\t\\t\" +\n                                    _vm._s(_vm.$t(\"table.actions.edit\")) +\n                                    \"\\n\\t\\t\\t\\t\\t\\t\"\n                                )\n                              ],\n                              1\n                            ),\n                            _vm._v(\" \"),\n                            _c(\n                              \"CButton\",\n                              {\n                                attrs: { color: \"danger\", size: \"sm\" },\n                                on: {\n                                  click: function($event) {\n                                    _vm.modals.instances = {\n                                      messaging: item.messaging.instance,\n                                      service: item.service.instance\n                                    }\n                                  }\n                                }\n                              },\n                              [\n                                _c(\"CIcon\", {\n                                  attrs: { content: _vm.$options.icons.remove }\n                                }),\n                                _vm._v(\n                                  \"\\n\\t\\t\\t\\t\\t\\t\\t\" +\n                                    _vm._s(_vm.$t(\"table.actions.delete\")) +\n                                    \"\\n\\t\\t\\t\\t\\t\\t\"\n                                )\n                              ],\n                              1\n                            )\n                          ],\n                          1\n                        )\n                      ]\n                    }\n                  }\n                ])\n              })\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"CModal\",\n        {\n          attrs: { color: \"danger\", show: _vm.modals.instances !== null },\n          on: {\n            \"update:show\": function($event) {\n              return _vm.$set(_vm.modals, \"instances !== null\", $event)\n            }\n          },\n          scopedSlots: _vm._u([\n            {\n              key: \"header\",\n              fn: function() {\n                return [\n                  _c(\"h5\", { staticClass: \"modal-title\" }, [\n                    _vm._v(\n                      \"\\n\\t\\t\\t\\t\" +\n                        _vm._s(\n                          _vm.$t(\n                            \"config.websocket.messages.delete.confirmTitle\"\n                          )\n                        ) +\n                        \"\\n\\t\\t\\t\"\n                    )\n                  ])\n                ]\n              },\n              proxy: true\n            },\n            {\n              key: \"footer\",\n              fn: function() {\n                return [\n                  _c(\n                    \"CButton\",\n                    {\n                      attrs: { color: \"danger\" },\n                      on: {\n                        click: function($event) {\n                          _vm.modals.instances = null\n                        }\n                      }\n                    },\n                    [\n                      _vm._v(\n                        \"\\n\\t\\t\\t\\t\" + _vm._s(_vm.$t(\"forms.no\")) + \"\\n\\t\\t\\t\"\n                      )\n                    ]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"CButton\",\n                    {\n                      attrs: { color: \"success\" },\n                      on: {\n                        click: function($event) {\n                          return _vm.removeInterface()\n                        }\n                      }\n                    },\n                    [\n                      _vm._v(\n                        \"\\n\\t\\t\\t\\t\" + _vm._s(_vm.$t(\"forms.yes\")) + \"\\n\\t\\t\\t\"\n                      )\n                    ]\n                  )\n                ]\n              },\n              proxy: true\n            }\n          ])\n        },\n        [\n          _vm._v(\" \"),\n          _vm.modals.instances !== null\n            ? _c(\"div\", [\n                _vm._v(\n                  \"\\n\\t\\t\\t\" +\n                    _vm._s(\n                      _vm.$t(\"config.websocket.messages.delete.confirm\", {\n                        service: _vm.modals.instances.messaging\n                      })\n                    ) +\n                    \"\\n\\t\\t\"\n                )\n              ])\n            : _vm._e()\n        ]\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","<template>\n\t<div>\n\t\t<CCard>\n\t\t\t<CCardHeader>\n\t\t\t\t<CButton\n\t\t\t\t\tcolor='success'\n\t\t\t\t\tsize='sm'\n\t\t\t\t\tclass='float-right'\n\t\t\t\t\tto='/config/websocket/add'\n\t\t\t\t>\n\t\t\t\t\t<CIcon :content='$options.icons.add' />\n\t\t\t\t\t{{ $t('table.actions.add') }}\n\t\t\t\t</CButton>\n\t\t\t</CCardHeader>\n\t\t\t<CCardBody>\n\t\t\t\t<CDataTable\n\t\t\t\t\t:fields='fields'\n\t\t\t\t\t:items='instances'\n\t\t\t\t\t:column-filter='true'\n\t\t\t\t\t:items-per-page='20'\n\t\t\t\t\t:pagination='true'\n\t\t\t\t\t:striped='true'\n\t\t\t\t\t:sorter='{ external: false, resetable: true }'\n\t\t\t\t>\n\t\t\t\t\t<template #acceptAsyncMsg='{item}'>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<CDropdown\n\t\t\t\t\t\t\t\t:color='item.acceptAsyncMsg ? \"success\": \"danger\"'\n\t\t\t\t\t\t\t\t:toggler-text='$t(\"table.enabled.\" + item.acceptAsyncMsg)'\n\t\t\t\t\t\t\t\tsize='sm'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<CDropdownItem @click='changeAcceptAsyncMsg(item.messaging, true)'>\n\t\t\t\t\t\t\t\t\t{{ $t('table.enabled.true') }}\n\t\t\t\t\t\t\t\t</CDropdownItem>\n\t\t\t\t\t\t\t\t<CDropdownItem @click='changeAcceptAsyncMsg(item.messaging, false)'>\n\t\t\t\t\t\t\t\t\t{{ $t('table.enabled.false') }}\n\t\t\t\t\t\t\t\t</CDropdownItem>\n\t\t\t\t\t\t\t</CDropdown>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</template>\n\t\t\t\t\t<template #acceptOnlyLocalhost='{item}'>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<CDropdown\n\t\t\t\t\t\t\t\t:color='item.acceptOnlyLocalhost ? \"success\": \"danger\"'\n\t\t\t\t\t\t\t\t:toggler-text='$t(\"table.enabled.\" + item.acceptOnlyLocalhost)'\n\t\t\t\t\t\t\t\tsize='sm'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<CDropdownItem @click='changeAcceptOnlyLocalhost(item.service, true)'>\n\t\t\t\t\t\t\t\t\t{{ $t('table.enabled.true') }}\n\t\t\t\t\t\t\t\t</CDropdownItem>\n\t\t\t\t\t\t\t\t<CDropdownItem @click='changeAcceptOnlyLocalhost(item.service, false)'>\n\t\t\t\t\t\t\t\t\t{{ $t('table.enabled.false') }}\n\t\t\t\t\t\t\t\t</CDropdownItem>\n\t\t\t\t\t\t\t</CDropdown>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</template>\n\t\t\t\t\t<template #actions='{item}'>\n\t\t\t\t\t\t<td class='col-actions'>\n\t\t\t\t\t\t\t<CButton\n\t\t\t\t\t\t\t\tcolor='info'\n\t\t\t\t\t\t\t\tsize='sm'\n\t\t\t\t\t\t\t\t:to='\"/config/websocket/edit/\" + item.instanceMessaging'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<CIcon :content='$options.icons.edit' />\n\t\t\t\t\t\t\t\t{{ $t('table.actions.edit') }}\n\t\t\t\t\t\t\t</CButton>\n\t\t\t\t\t\t\t<CButton\n\t\t\t\t\t\t\t\tcolor='danger'\n\t\t\t\t\t\t\t\tsize='sm'\n\t\t\t\t\t\t\t\t@click='modals.instances = {messaging: item.messaging.instance, service: item.service.instance}'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<CIcon :content='$options.icons.remove' />\n\t\t\t\t\t\t\t\t{{ $t('table.actions.delete') }}\n\t\t\t\t\t\t\t</CButton>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</template>\n\t\t\t\t</CDataTable>\n\t\t\t</CCardBody>\n\t\t</CCard>\n\t\t<CModal\n\t\t\tcolor='danger'\n\t\t\t:show.sync='modals.instances !== null'\n\t\t>\n\t\t\t<template #header>\n\t\t\t\t<h5 class='modal-title'>\n\t\t\t\t\t{{ $t('config.websocket.messages.delete.confirmTitle') }}\n\t\t\t\t</h5>\n\t\t\t</template>\n\t\t\t<div v-if='modals.instances !== null'>\n\t\t\t\t{{ $t('config.websocket.messages.delete.confirm', {service: modals.instances.messaging}) }}\n\t\t\t</div>\n\t\t\t<template #footer>\n\t\t\t\t<CButton color='danger' @click='modals.instances = null'>\n\t\t\t\t\t{{ $t('forms.no') }}\n\t\t\t\t</CButton>\n\t\t\t\t<CButton color='success' @click='removeInterface()'>\n\t\t\t\t\t{{ $t('forms.yes') }}\n\t\t\t\t</CButton>\n\t\t\t</template>\n\t\t</CModal>\n\t</div>\n</template>\n\n<script>\nimport {CButton, CCard, CCardBody, CCardHeader, CDataTable, CDropdown, CDropdownItem, CIcon, CModal} from '@coreui/vue/src';\nimport {cilPencil, cilPlus, cilTrash} from '@coreui/icons';\nimport DaemonConfigurationService from '../../services/DaemonConfigurationService';\nimport FormErrorHandler from '../../helpers/FormErrorHandler';\n\nexport default {\n\tname: 'WebsocketInterfaceList',\n\tcomponents: {\n\t\tCButton,\n\t\tCCard,\n\t\tCCardBody,\n\t\tCCardHeader,\n\t\tCDataTable,\n\t\tCDropdown,\n\t\tCDropdownItem,\n\t\tCIcon,\n\t\tCModal,\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tcomponentNames: {\n\t\t\t\tmessaging: 'iqrf::WebsocketMessaging',\n\t\t\t\tservice: 'shape::WebsocketCppService',\n\t\t\t},\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\tkey: 'instanceMessaging',\n\t\t\t\t\tlabel: this.$t('config.websocket.form.instance'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: 'port',\n\t\t\t\t\tlabel: this.$t('config.websocket.form.WebsocketPort'),\n\t\t\t\t},\n\n\t\t\t\t{\n\t\t\t\t\tkey: 'acceptAsyncMsg',\n\t\t\t\t\tlabel: this.$t('config.websocket.form.acceptAsyncMsg'),\n\t\t\t\t\tfilter: false,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: 'acceptOnlyLocalhost',\n\t\t\t\t\tlabel: this.$t('config.websocket.form.acceptOnlyLocalhost'),\n\t\t\t\t\tfilter: false,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: 'actions',\n\t\t\t\t\tlabel: this.$t('table.actions.title'),\n\t\t\t\t\tfilter: false,\n\t\t\t\t\tsorter: false,\n\t\t\t\t},\n\t\t\t],\n\t\t\tinstances: [],\n\t\t\tmodals: {\n\t\t\t\tinstances: null,\n\t\t\t},\n\t\t};\n\t},\n\tcreated() {\n\t\tthis.$store.commit('spinner/SHOW');\n\t\tthis.getConfig();\n\t},\n\tmethods: {\n\t\tgetConfig() {\n\t\t\tthis.instances = [];\n\t\t\treturn Promise.all([\n\t\t\t\tDaemonConfigurationService.getComponent(this.componentNames.messaging),\n\t\t\t\tDaemonConfigurationService.getComponent(this.componentNames.service),\n\t\t\t])\n\t\t\t\t.then((responses) => {\n\t\t\t\t\tconst messagings = responses[0].data.instances;\n\t\t\t\t\tconst services = responses[1].data.instances;\n\t\t\t\t\tfor (const messaging of messagings) {\n\t\t\t\t\t\tif (messaging.RequiredInterfaces === undefined ||\n\t\t\t\t\t\t\t\tmessaging.RequiredInterfaces === [] ||\n\t\t\t\t\t\t\t\tmessaging.RequiredInterfaces[0].name !== 'shape::IWebsocketService' ||\n\t\t\t\t\t\t\t\tmessaging.RequiredInterfaces[0].target.instance === undefined) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst serviceInstance = messaging.RequiredInterfaces[0].target.instance;\n\t\t\t\t\t\tfor (const service of services) {\n\t\t\t\t\t\t\tif (service.instance !== serviceInstance) {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.instances.push({\n\t\t\t\t\t\t\t\tmessaging: messaging,\n\t\t\t\t\t\t\t\tservice: service,\n\t\t\t\t\t\t\t\tinstanceMessaging: messaging.instance,\n\t\t\t\t\t\t\t\tinstanceService: service.instance,\n\t\t\t\t\t\t\t\tacceptAsyncMsg: messaging.acceptAsyncMsg,\n\t\t\t\t\t\t\t\tport: service.WebsocketPort,\n\t\t\t\t\t\t\t\tacceptOnlyLocalhost: service.acceptOnlyLocalhost,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.$store.commit('spinner/HIDE');\n\t\t\t\t});\n\t\t\t// TODO: add error message\n\t\t},\n\t\tchangeAcceptOnlyLocalhost(service, setting) {\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\tservice.acceptOnlyLocalhost = setting;\n\t\t\tDaemonConfigurationService.updateInstance(this.componentNames.service, service.instance, service)\n\t\t\t\t.then(() => {\n\t\t\t\t\tthis.getConfig().then(() => {\n\t\t\t\t\t\tthis.$toast.success(\n\t\t\t\t\t\t\tthis.$t('config.websocket.service.messages.editSuccess', {service: service.instance})\n\t\t\t\t\t\t\t\t.toString()\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.catch((error) => FormErrorHandler.configError(error));\n\t\t},\n\t\tchangeAcceptAsyncMsg(instance, setting) {\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\tinstance.acceptAsyncMsg = setting;\n\t\t\tDaemonConfigurationService.updateInstance(this.componentNames.messaging, instance.instance, instance)\n\t\t\t\t.then(() => {\n\t\t\t\t\tthis.getConfig().then(() => {\n\t\t\t\t\t\tthis.$toast.success(\n\t\t\t\t\t\t\tthis.$t('config.websocket.messaging.messages.editSuccess', {messaging: instance.instance})\n\t\t\t\t\t\t\t\t.toString()\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.catch((error) => FormErrorHandler.configError(error));\n\t\t},\n\t\tremoveInterface() {\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\tPromise.all([\n\t\t\t\tDaemonConfigurationService.deleteInstance(this.componentNames.messaging, this.modals.instances.messaging),\n\t\t\t\tDaemonConfigurationService.deleteInstance(this.componentNames.service, this.modals.instances.service),\n\t\t\t])\n\t\t\t\t.then(() => {\n\t\t\t\t\tthis.$toast.success(\n\t\t\t\t\t\tthis.$t('config.websocket.messages.delete.success', {instance: this.modals.instances.messaging})\n\t\t\t\t\t\t\t.toString()\n\t\t\t\t\t);\n\t\t\t\t\tthis.instances = null;\n\t\t\t\t});\n\t\t\t// TODO: add error message\n\t\t},\n\t},\n\ticons: {\n\t\tadd: cilPlus,\n\t\tedit: cilPencil,\n\t\tremove: cilTrash,\n\t},\n};\n</script>\n","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./WebsocketInterfaceList.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./WebsocketInterfaceList.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./WebsocketInterfaceList.vue?vue&type=template&id=72fc760c&\"\nimport script from \"./WebsocketInterfaceList.vue?vue&type=script&lang=js&\"\nexport * from \"./WebsocketInterfaceList.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('72fc760c')) {\n      api.createRecord('72fc760c', component.options)\n    } else {\n      api.reload('72fc760c', component.options)\n    }\n    module.hot.accept(\"./WebsocketInterfaceList.vue?vue&type=template&id=72fc760c&\", function () {\n      api.rerender('72fc760c', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/components/Config/WebsocketInterfaceList.vue\"\nexport default component.exports","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\n        \"CCard\",\n        [\n          _c(\n            \"CCardHeader\",\n            [\n              _vm._v(\n                \"\\n\\t\\t\\t\" +\n                  _vm._s(_vm.$t(\"config.websocket.messaging.title\")) +\n                  \"\\n\\t\\t\\t\"\n              ),\n              _c(\n                \"CButton\",\n                {\n                  staticClass: \"float-right\",\n                  attrs: {\n                    color: \"success\",\n                    size: \"sm\",\n                    to: \"/config/websocket/add-messaging\"\n                  }\n                },\n                [\n                  _c(\"CIcon\", { attrs: { content: _vm.$options.icons.add } }),\n                  _vm._v(\n                    \"\\n\\t\\t\\t\\t\" +\n                      _vm._s(_vm.$t(\"table.actions.add\")) +\n                      \"\\n\\t\\t\\t\"\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"CCardBody\",\n            [\n              _c(\"CDataTable\", {\n                attrs: {\n                  fields: _vm.fields,\n                  items: _vm.instances,\n                  \"column-filter\": true,\n                  \"items-per-page\": 20,\n                  pagination: true,\n                  striped: true,\n                  sorter: { external: false, resetable: true }\n                },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"acceptAsyncMsg\",\n                    fn: function(ref) {\n                      var item = ref.item\n                      return [\n                        _c(\n                          \"td\",\n                          [\n                            _c(\n                              \"CDropdown\",\n                              {\n                                attrs: {\n                                  color: item.acceptAsyncMsg\n                                    ? \"success\"\n                                    : \"danger\",\n                                  \"toggler-text\": _vm.$t(\n                                    \"table.enabled.\" + item.acceptAsyncMsg\n                                  ),\n                                  size: \"sm\"\n                                }\n                              },\n                              [\n                                _c(\n                                  \"CDropdownItem\",\n                                  {\n                                    on: {\n                                      click: function($event) {\n                                        return _vm.changeAccept(item, true)\n                                      }\n                                    }\n                                  },\n                                  [\n                                    _vm._v(\n                                      \"\\n\\t\\t\\t\\t\\t\\t\\t\\t\" +\n                                        _vm._s(_vm.$t(\"table.enabled.true\")) +\n                                        \"\\n\\t\\t\\t\\t\\t\\t\\t\"\n                                    )\n                                  ]\n                                ),\n                                _vm._v(\" \"),\n                                _c(\n                                  \"CDropdownItem\",\n                                  {\n                                    on: {\n                                      click: function($event) {\n                                        return _vm.changeAccept(item, false)\n                                      }\n                                    }\n                                  },\n                                  [\n                                    _vm._v(\n                                      \"\\n\\t\\t\\t\\t\\t\\t\\t\\t\" +\n                                        _vm._s(_vm.$t(\"table.enabled.false\")) +\n                                        \"\\n\\t\\t\\t\\t\\t\\t\\t\"\n                                    )\n                                  ]\n                                )\n                              ],\n                              1\n                            )\n                          ],\n                          1\n                        )\n                      ]\n                    }\n                  },\n                  {\n                    key: \"RequiredInterfaces\",\n                    fn: function(ref) {\n                      var item = ref.item\n                      return [\n                        _c(\"td\", [\n                          _vm._v(\n                            \"\\n\\t\\t\\t\\t\\t\\t\" +\n                              _vm._s(\n                                item.RequiredInterfaces[0].target.instance\n                              ) +\n                              \"\\n\\t\\t\\t\\t\\t\"\n                          )\n                        ])\n                      ]\n                    }\n                  },\n                  {\n                    key: \"actions\",\n                    fn: function(ref) {\n                      var item = ref.item\n                      return [\n                        _c(\n                          \"td\",\n                          { staticClass: \"col-actions\" },\n                          [\n                            _c(\n                              \"CButton\",\n                              {\n                                attrs: {\n                                  color: \"info\",\n                                  size: \"sm\",\n                                  to:\n                                    \"/config/websocket/edit-messaging/\" +\n                                    item.instance\n                                }\n                              },\n                              [\n                                _c(\"CIcon\", {\n                                  attrs: { content: _vm.$options.icons.edit }\n                                }),\n                                _vm._v(\n                                  \"\\n\\t\\t\\t\\t\\t\\t\\t\" +\n                                    _vm._s(_vm.$t(\"table.actions.edit\")) +\n                                    \"\\n\\t\\t\\t\\t\\t\\t\"\n                                )\n                              ],\n                              1\n                            ),\n                            _vm._v(\" \"),\n                            _c(\n                              \"CButton\",\n                              {\n                                attrs: { color: \"danger\", size: \"sm\" },\n                                on: {\n                                  click: function($event) {\n                                    _vm.modals.instance = item.instance\n                                  }\n                                }\n                              },\n                              [\n                                _c(\"CIcon\", {\n                                  attrs: { content: _vm.$options.icons.remove }\n                                }),\n                                _vm._v(\n                                  \"\\n\\t\\t\\t\\t\\t\\t\\t\" +\n                                    _vm._s(_vm.$t(\"table.actions.delete\")) +\n                                    \"\\n\\t\\t\\t\\t\\t\\t\"\n                                )\n                              ],\n                              1\n                            )\n                          ],\n                          1\n                        )\n                      ]\n                    }\n                  }\n                ])\n              })\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"CModal\",\n        {\n          attrs: { color: \"danger\", show: _vm.modals.instance !== null },\n          on: {\n            \"update:show\": function($event) {\n              return _vm.$set(_vm.modals, \"instance !== null\", $event)\n            }\n          },\n          scopedSlots: _vm._u([\n            {\n              key: \"header\",\n              fn: function() {\n                return [\n                  _c(\"h5\", { staticClass: \"modal-title\" }, [\n                    _vm._v(\n                      \"\\n\\t\\t\\t\\t\" +\n                        _vm._s(\n                          _vm.$t(\n                            \"config.websocket.messaging.messages.deleteTitle\"\n                          )\n                        ) +\n                        \"\\n\\t\\t\\t\"\n                    )\n                  ])\n                ]\n              },\n              proxy: true\n            },\n            {\n              key: \"footer\",\n              fn: function() {\n                return [\n                  _c(\n                    \"CButton\",\n                    {\n                      attrs: { color: \"danger\" },\n                      on: {\n                        click: function($event) {\n                          _vm.modals.instance = null\n                        }\n                      }\n                    },\n                    [\n                      _vm._v(\n                        \"\\n\\t\\t\\t\\t\" + _vm._s(_vm.$t(\"forms.no\")) + \"\\n\\t\\t\\t\"\n                      )\n                    ]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"CButton\",\n                    {\n                      attrs: { color: \"success\" },\n                      on: { click: _vm.removeInstance }\n                    },\n                    [\n                      _vm._v(\n                        \"\\n\\t\\t\\t\\t\" + _vm._s(_vm.$t(\"forms.yes\")) + \"\\n\\t\\t\\t\"\n                      )\n                    ]\n                  )\n                ]\n              },\n              proxy: true\n            }\n          ])\n        },\n        [\n          _vm._v(\n            \"\\n\\t\\t\" +\n              _vm._s(\n                _vm.$t(\"config.websocket.messaging.messages.deletePrompt\", {\n                  messaging: _vm.modals.instance\n                })\n              ) +\n              \"\\n\\t\\t\"\n          )\n        ]\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","<template>\n\t<div>\n\t\t<CCard>\n\t\t\t<CCardHeader>\n\t\t\t\t{{ $t('config.websocket.messaging.title') }}\n\t\t\t\t<CButton\n\t\t\t\t\tcolor='success'\n\t\t\t\t\tsize='sm'\n\t\t\t\t\tclass='float-right'\n\t\t\t\t\tto='/config/websocket/add-messaging'\n\t\t\t\t>\n\t\t\t\t\t<CIcon :content='$options.icons.add' />\n\t\t\t\t\t{{ $t('table.actions.add') }}\n\t\t\t\t</CButton>\n\t\t\t</CCardHeader>\n\t\t\t<CCardBody>\n\t\t\t\t<CDataTable\n\t\t\t\t\t:fields='fields'\n\t\t\t\t\t:items='instances'\n\t\t\t\t\t:column-filter='true'\n\t\t\t\t\t:items-per-page='20'\n\t\t\t\t\t:pagination='true'\n\t\t\t\t\t:striped='true'\n\t\t\t\t\t:sorter='{ external: false, resetable: true }'\n\t\t\t\t>\n\t\t\t\t\t<template #acceptAsyncMsg='{item}'>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<CDropdown\n\t\t\t\t\t\t\t\t:color='item.acceptAsyncMsg ? \"success\": \"danger\"'\n\t\t\t\t\t\t\t\t:toggler-text='$t(\"table.enabled.\" + item.acceptAsyncMsg)'\n\t\t\t\t\t\t\t\tsize='sm'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<CDropdownItem @click='changeAccept(item, true)'>\n\t\t\t\t\t\t\t\t\t{{ $t('table.enabled.true') }}\n\t\t\t\t\t\t\t\t</CDropdownItem>\n\t\t\t\t\t\t\t\t<CDropdownItem @click='changeAccept(item, false)'>\n\t\t\t\t\t\t\t\t\t{{ $t('table.enabled.false') }}\n\t\t\t\t\t\t\t\t</CDropdownItem>\n\t\t\t\t\t\t\t</CDropdown>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</template>\n\t\t\t\t\t<template #RequiredInterfaces='{item}'>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t{{ item.RequiredInterfaces[0].target.instance }}\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</template>\n\t\t\t\t\t<template #actions='{item}'>\n\t\t\t\t\t\t<td class='col-actions'>\n\t\t\t\t\t\t\t<CButton\n\t\t\t\t\t\t\t\tcolor='info'\n\t\t\t\t\t\t\t\tsize='sm'\n\t\t\t\t\t\t\t\t:to='\"/config/websocket/edit-messaging/\" + item.instance'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<CIcon :content='$options.icons.edit' />\n\t\t\t\t\t\t\t\t{{ $t('table.actions.edit') }}\n\t\t\t\t\t\t\t</CButton>\n\t\t\t\t\t\t\t<CButton\n\t\t\t\t\t\t\t\tcolor='danger'\n\t\t\t\t\t\t\t\tsize='sm'\n\t\t\t\t\t\t\t\t@click='modals.instance = item.instance'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<CIcon :content='$options.icons.remove' />\n\t\t\t\t\t\t\t\t{{ $t('table.actions.delete') }}\n\t\t\t\t\t\t\t</CButton>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</template>\n\t\t\t\t</CDataTable>\n\t\t\t</CCardBody>\n\t\t</CCard>\n\t\t<CModal\n\t\t\tcolor='danger'\n\t\t\t:show.sync='modals.instance !== null'\n\t\t>\n\t\t\t<template #header>\n\t\t\t\t<h5 class='modal-title'>\n\t\t\t\t\t{{ $t('config.websocket.messaging.messages.deleteTitle') }}\n\t\t\t\t</h5>\n\t\t\t</template>\n\t\t\t{{ $t('config.websocket.messaging.messages.deletePrompt', {messaging: modals.instance}) }}\n\t\t\t<template #footer>\n\t\t\t\t<CButton color='danger' @click='modals.instance = null'>\n\t\t\t\t\t{{ $t('forms.no') }}\n\t\t\t\t</CButton>\n\t\t\t\t<CButton color='success' @click='removeInstance'>\n\t\t\t\t\t{{ $t('forms.yes') }}\n\t\t\t\t</CButton>\n\t\t\t</template>\n\t\t</CModal>\n\t</div>\n</template>\n\n<script>\nimport {CButton, CCard, CCardBody, CCardHeader, CDataTable, CDropdown, CDropdownItem, CIcon, CModal} from '@coreui/vue/src';\nimport {cilPencil, cilPlus, cilTrash} from '@coreui/icons';\nimport DaemonConfigurationService from '../../services/DaemonConfigurationService';\nimport FormErrorHandler from '../../helpers/FormErrorHandler';\n\nexport default {\n\tname: 'WebsocketMessagingList',\n\tcomponents: {\n\t\tCButton,\n\t\tCCard,\n\t\tCCardBody,\n\t\tCCardHeader,\n\t\tCDataTable,\n\t\tCDropdown,\n\t\tCDropdownItem,\n\t\tCIcon,\n\t\tCModal,\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tcomponentName: 'iqrf::WebsocketMessaging',\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\tkey: 'instance',\n\t\t\t\t\tlabel: this.$t('config.websocket.form.instance'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: 'acceptAsyncMsg',\n\t\t\t\t\tlabel: this.$t('config.websocket.form.acceptAsyncMsg'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: 'RequiredInterfaces',\n\t\t\t\t\tlabel: this.$t('config.websocket.form.requiredInterface.instance'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: 'actions',\n\t\t\t\t\tlabel: this.$t('table.actions.title'),\n\t\t\t\t\tfilter: false,\n\t\t\t\t\tsorter: false,\n\t\t\t\t}\n\t\t\t],\n\t\t\tinstances: [],\n\t\t\tmodals: {\n\t\t\t\tinstance: null,\n\t\t\t},\n\t\t};\n\t},\n\tcreated() {\n\t\tthis.getConfig();\n\t},\n\tmethods: {\n\t\tgetConfig() {\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\treturn DaemonConfigurationService.getComponent(this.componentName)\n\t\t\t\t.then((response) => {\n\t\t\t\t\tthis.$store.commit('spinner/HIDE');\n\t\t\t\t\tthis.instances = response.data.instances;\n\t\t\t\t})\n\t\t\t\t.catch((error) => FormErrorHandler.configError(error));\n\t\t},\n\t\tchangeAccept(instance, setting) {\n\t\t\tif (instance.acceptAsyncMsg !== setting) {\n\t\t\t\tinstance.acceptAsyncMsg = setting;\n\t\t\t\tDaemonConfigurationService.updateInstance(this.componentName, instance.instance, instance)\n\t\t\t\t\t.then(() => {\n\t\t\t\t\t\tthis.getConfig().then(() => {\n\t\t\t\t\t\t\tthis.$toast.success(\n\t\t\t\t\t\t\t\tthis.$t('config.websocket.messaging.messages.editSuccess', {messaging: instance.instance})\n\t\t\t\t\t\t\t\t\t.toString()\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => FormErrorHandler.getConfig(error));\n\t\t\t}\n\t\t},\n\t\tremoveInstance() {\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\tconst instance = this.modals.instance;\n\t\t\tthis.modals.instance = null;\n\t\t\tDaemonConfigurationService.deleteInstance(this.componentName, instance)\n\t\t\t\t.then(() => {\n\t\t\t\t\tthis.getConfig().then(() => {\n\t\t\t\t\t\tthis.$toast.success(\n\t\t\t\t\t\t\tthis.$t('config.websocket.messaging.messages.deleteSuccess', {messaging: instance})\n\t\t\t\t\t\t\t\t.toString()\n\t\t\t\t\t\t);\n\t\t\t\t\t});\t\n\t\t\t\t})\n\t\t\t\t.catch((error) => FormErrorHandler.configError(error));\n\t\t}\n\t},\n\ticons: {\n\t\tadd: cilPlus,\n\t\tedit: cilPencil,\n\t\tremove: cilTrash,\n\t},\n};\n</script>\n","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./WebsocketMessagingList.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./WebsocketMessagingList.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./WebsocketMessagingList.vue?vue&type=template&id=479d44d7&\"\nimport script from \"./WebsocketMessagingList.vue?vue&type=script&lang=js&\"\nexport * from \"./WebsocketMessagingList.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('479d44d7')) {\n      api.createRecord('479d44d7', component.options)\n    } else {\n      api.reload('479d44d7', component.options)\n    }\n    module.hot.accept(\"./WebsocketMessagingList.vue?vue&type=template&id=479d44d7&\", function () {\n      api.rerender('479d44d7', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/components/Config/WebsocketMessagingList.vue\"\nexport default component.exports","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\n        \"CCard\",\n        [\n          _c(\n            \"CCardHeader\",\n            [\n              _vm._v(\n                \"\\n\\t\\t\\t\" +\n                  _vm._s(_vm.$t(\"config.websocket.service.title\")) +\n                  \"\\n\\t\\t\\t\"\n              ),\n              _c(\n                \"CButton\",\n                {\n                  staticClass: \"float-right\",\n                  attrs: {\n                    color: \"success\",\n                    size: \"sm\",\n                    to: \"/config/websocket/add-service\"\n                  }\n                },\n                [\n                  _c(\"CIcon\", { attrs: { content: _vm.$options.icons.add } }),\n                  _vm._v(\n                    \"\\n\\t\\t\\t\\t\" +\n                      _vm._s(_vm.$t(\"table.actions.add\")) +\n                      \"\\n\\t\\t\\t\"\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"CCardBody\",\n            [\n              _c(\"CDataTable\", {\n                attrs: {\n                  fields: _vm.fields,\n                  items: _vm.instances,\n                  \"column-filter\": true,\n                  \"items-per-page\": 20,\n                  pagination: true,\n                  striped: true,\n                  sorter: { external: false, resetable: true }\n                },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"acceptOnlyLocalhost\",\n                    fn: function(ref) {\n                      var item = ref.item\n                      return [\n                        _c(\n                          \"td\",\n                          [\n                            _c(\n                              \"CDropdown\",\n                              {\n                                attrs: {\n                                  color: item.acceptOnlyLocalhost\n                                    ? \"success\"\n                                    : \"danger\",\n                                  \"toggler-text\": _vm.$t(\n                                    \"table.enabled.\" + item.acceptOnlyLocalhost\n                                  ),\n                                  size: \"sm\"\n                                }\n                              },\n                              [\n                                _c(\n                                  \"CDropdownItem\",\n                                  {\n                                    on: {\n                                      click: function($event) {\n                                        return _vm.changeAccept(item, true)\n                                      }\n                                    }\n                                  },\n                                  [\n                                    _vm._v(\n                                      \"\\n\\t\\t\\t\\t\\t\\t\\t\\t\" +\n                                        _vm._s(_vm.$t(\"table.enabled.true\")) +\n                                        \"\\n\\t\\t\\t\\t\\t\\t\\t\"\n                                    )\n                                  ]\n                                ),\n                                _vm._v(\" \"),\n                                _c(\n                                  \"CDropdownItem\",\n                                  {\n                                    on: {\n                                      click: function($event) {\n                                        return _vm.changeAccept(item, false)\n                                      }\n                                    }\n                                  },\n                                  [\n                                    _vm._v(\n                                      \"\\n\\t\\t\\t\\t\\t\\t\\t\\t\" +\n                                        _vm._s(_vm.$t(\"table.enabled.false\")) +\n                                        \"\\n\\t\\t\\t\\t\\t\\t\\t\"\n                                    )\n                                  ]\n                                )\n                              ],\n                              1\n                            )\n                          ],\n                          1\n                        )\n                      ]\n                    }\n                  },\n                  {\n                    key: \"actions\",\n                    fn: function(ref) {\n                      var item = ref.item\n                      return [\n                        _c(\n                          \"td\",\n                          { staticClass: \"col-actions\" },\n                          [\n                            _c(\n                              \"CButton\",\n                              {\n                                attrs: {\n                                  color: \"info\",\n                                  size: \"sm\",\n                                  to:\n                                    \"/config/websocket/edit-service/\" +\n                                    item.instance\n                                }\n                              },\n                              [\n                                _c(\"CIcon\", {\n                                  attrs: { content: _vm.$options.icons.edit }\n                                }),\n                                _vm._v(\n                                  \"\\n\\t\\t\\t\\t\\t\\t\\t\" +\n                                    _vm._s(_vm.$t(\"table.actions.edit\")) +\n                                    \"\\n\\t\\t\\t\\t\\t\\t\"\n                                )\n                              ],\n                              1\n                            ),\n                            _vm._v(\" \"),\n                            _c(\n                              \"CButton\",\n                              {\n                                attrs: { color: \"danger\", size: \"sm\" },\n                                on: {\n                                  click: function($event) {\n                                    _vm.modals.service = item.instance\n                                  }\n                                }\n                              },\n                              [\n                                _c(\"CIcon\", {\n                                  attrs: { content: _vm.$options.icons.remove }\n                                }),\n                                _vm._v(\n                                  \"\\n\\t\\t\\t\\t\\t\\t\\t\" +\n                                    _vm._s(_vm.$t(\"table.actions.delete\")) +\n                                    \"\\n\\t\\t\\t\\t\\t\\t\"\n                                )\n                              ],\n                              1\n                            )\n                          ],\n                          1\n                        )\n                      ]\n                    }\n                  }\n                ])\n              })\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"CModal\",\n        {\n          attrs: { color: \"danger\", show: _vm.modals.service !== null },\n          on: {\n            \"update:show\": function($event) {\n              return _vm.$set(_vm.modals, \"service !== null\", $event)\n            }\n          },\n          scopedSlots: _vm._u([\n            {\n              key: \"header\",\n              fn: function() {\n                return [\n                  _c(\"h5\", { staticClass: \"modal-title\" }, [\n                    _vm._v(\n                      \"\\n\\t\\t\\t\\t\" +\n                        _vm._s(\n                          _vm.$t(\n                            \"config.websocket.service.messages.deleteTitle\"\n                          )\n                        ) +\n                        \"\\n\\t\\t\\t\"\n                    )\n                  ])\n                ]\n              },\n              proxy: true\n            },\n            {\n              key: \"footer\",\n              fn: function() {\n                return [\n                  _c(\n                    \"CButton\",\n                    {\n                      attrs: { color: \"danger\" },\n                      on: {\n                        click: function($event) {\n                          _vm.modals.service = null\n                        }\n                      }\n                    },\n                    [\n                      _vm._v(\n                        \"\\n\\t\\t\\t\\t\" + _vm._s(_vm.$t(\"forms.no\")) + \"\\n\\t\\t\\t\"\n                      )\n                    ]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"CButton\",\n                    {\n                      attrs: { color: \"success\" },\n                      on: { click: _vm.removeService }\n                    },\n                    [\n                      _vm._v(\n                        \"\\n\\t\\t\\t\\t\" + _vm._s(_vm.$t(\"forms.yes\")) + \"\\n\\t\\t\\t\"\n                      )\n                    ]\n                  )\n                ]\n              },\n              proxy: true\n            }\n          ])\n        },\n        [\n          _vm._v(\n            \"\\n\\t\\t\" +\n              _vm._s(\n                _vm.$t(\"config.websocket.service.messages.deletePrompt\", {\n                  service: _vm.modals.service\n                })\n              ) +\n              \"\\n\\t\\t\"\n          )\n        ]\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","<template>\n\t<div>\n\t\t<CCard>\n\t\t\t<CCardHeader>\n\t\t\t\t{{ $t('config.websocket.service.title') }}\n\t\t\t\t<CButton\n\t\t\t\t\tcolor='success'\n\t\t\t\t\tsize='sm'\n\t\t\t\t\tclass='float-right'\n\t\t\t\t\tto='/config/websocket/add-service'\n\t\t\t\t>\n\t\t\t\t\t<CIcon :content='$options.icons.add' />\n\t\t\t\t\t{{ $t('table.actions.add') }}\n\t\t\t\t</CButton>\n\t\t\t</CCardHeader>\n\t\t\t<CCardBody>\n\t\t\t\t<CDataTable\n\t\t\t\t\t:fields='fields'\n\t\t\t\t\t:items='instances'\n\t\t\t\t\t:column-filter='true'\n\t\t\t\t\t:items-per-page='20'\n\t\t\t\t\t:pagination='true'\n\t\t\t\t\t:striped='true'\n\t\t\t\t\t:sorter='{ external: false, resetable: true }'\n\t\t\t\t>\n\t\t\t\t\t<template #acceptOnlyLocalhost='{item}'>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<CDropdown\n\t\t\t\t\t\t\t\t:color='item.acceptOnlyLocalhost ? \"success\": \"danger\"'\n\t\t\t\t\t\t\t\t:toggler-text='$t(\"table.enabled.\" + item.acceptOnlyLocalhost)'\n\t\t\t\t\t\t\t\tsize='sm'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<CDropdownItem @click='changeAccept(item, true)'>\n\t\t\t\t\t\t\t\t\t{{ $t('table.enabled.true') }}\n\t\t\t\t\t\t\t\t</CDropdownItem>\n\t\t\t\t\t\t\t\t<CDropdownItem @click='changeAccept(item, false)'>\n\t\t\t\t\t\t\t\t\t{{ $t('table.enabled.false') }}\n\t\t\t\t\t\t\t\t</CDropdownItem>\n\t\t\t\t\t\t\t</CDropdown>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</template>\n\t\t\t\t\t<template #actions='{item}'>\n\t\t\t\t\t\t<td class='col-actions'>\n\t\t\t\t\t\t\t<CButton\n\t\t\t\t\t\t\t\tcolor='info'\n\t\t\t\t\t\t\t\tsize='sm'\n\t\t\t\t\t\t\t\t:to='\"/config/websocket/edit-service/\" + item.instance'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<CIcon :content='$options.icons.edit' />\n\t\t\t\t\t\t\t\t{{ $t('table.actions.edit') }}\n\t\t\t\t\t\t\t</CButton>\n\t\t\t\t\t\t\t<CButton\n\t\t\t\t\t\t\t\tcolor='danger'\n\t\t\t\t\t\t\t\tsize='sm'\n\t\t\t\t\t\t\t\t@click='modals.service = item.instance'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<CIcon :content='$options.icons.remove' />\n\t\t\t\t\t\t\t\t{{ $t('table.actions.delete') }}\n\t\t\t\t\t\t\t</CButton>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</template>\n\t\t\t\t</CDataTable>\n\t\t\t</CCardBody>\n\t\t</CCard>\n\t\t<CModal\n\t\t\tcolor='danger'\n\t\t\t:show.sync='modals.service !== null'\n\t\t>\n\t\t\t<template #header>\n\t\t\t\t<h5 class='modal-title'>\n\t\t\t\t\t{{ $t('config.websocket.service.messages.deleteTitle') }}\n\t\t\t\t</h5>\n\t\t\t</template>\n\t\t\t{{ $t('config.websocket.service.messages.deletePrompt', {service: modals.service}) }}\n\t\t\t<template #footer>\n\t\t\t\t<CButton color='danger' @click='modals.service = null'>\n\t\t\t\t\t{{ $t('forms.no') }}\n\t\t\t\t</CButton>\n\t\t\t\t<CButton color='success' @click='removeService'>\n\t\t\t\t\t{{ $t('forms.yes') }}\n\t\t\t\t</CButton>\n\t\t\t</template>\n\t\t</CModal>\n\t</div>\n</template>\n\n<script>\nimport {CButton, CCard, CCardBody, CCardHeader, CDataTable, CDropdown, CDropdownItem, CIcon, CModal} from '@coreui/vue/src';\nimport {cilPencil, cilPlus, cilTrash} from '@coreui/icons';\nimport DaemonConfigurationService from '../../services/DaemonConfigurationService';\nimport FormErrorHandler from '../../helpers/FormErrorHandler';\n\nexport default {\n\tname: 'WebsocketServiceList',\n\tcomponents: {\n\t\tCButton,\n\t\tCCard,\n\t\tCCardBody,\n\t\tCCardHeader,\n\t\tCDataTable,\n\t\tCDropdown,\n\t\tCDropdownItem,\n\t\tCIcon,\n\t\tCModal,\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tcomponentName: 'shape::WebsocketCppService',\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\tkey: 'instance',\n\t\t\t\t\tlabel: this.$t('config.websocket.form.instance'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: 'WebsocketPort',\n\t\t\t\t\tlabel: this.$t('config.websocket.form.WebsocketPort'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: 'acceptOnlyLocalhost',\n\t\t\t\t\tlabel: this.$t('config.websocket.form.acceptOnlyLocalhost'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: 'actions',\n\t\t\t\t\tlabel: this.$t('table.actions.title'),\n\t\t\t\t\tfilter: false,\n\t\t\t\t\tsorter: false,\n\t\t\t\t},\n\t\t\t],\n\t\t\tinstances: null,\n\t\t\tmodals: {\n\t\t\t\tservice: null,\n\t\t\t},\n\t\t};\n\t},\n\tcreated() {\n\t\tthis.getConfig();\n\t},\n\tmethods: {\n\t\tgetConfig() {\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\treturn DaemonConfigurationService.getComponent(this.componentName)\n\t\t\t\t.then((response) => {\n\t\t\t\t\tthis.$store.commit('spinner/HIDE');\n\t\t\t\t\tthis.instances = response.data.instances;\n\t\t\t\t})\n\t\t\t\t.catch((error) => FormErrorHandler.configError(error));\n\t\t},\n\t\tchangeAccept(service, setting) {\n\t\t\tif (service.acceptOnlyLocalhost !== setting) {\n\t\t\t\tservice.acceptOnlyLocalhost = setting;\n\t\t\t\tDaemonConfigurationService.updateInstance(this.componentName, service.instance, service)\n\t\t\t\t\t.then(() => {\n\t\t\t\t\t\tthis.getConfig().then(() => {\n\t\t\t\t\t\t\tthis.$toast.success(\n\t\t\t\t\t\t\t\tthis.$t('config.websocket.service.messages.editSuccess', {service: service.instance})\n\t\t\t\t\t\t\t\t\t.toString()\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => FormErrorHandler.getConfig(error));\n\t\t\t}\n\t\t},\n\t\tremoveService() {\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\tconst service = this.modals.service;\n\t\t\tthis.modals.service = null;\n\t\t\tDaemonConfigurationService.deleteInstance(this.componentName, service)\n\t\t\t\t.then(() => {\n\t\t\t\t\tthis.getConfig().then(() => {\n\t\t\t\t\t\tthis.$toast.success(\n\t\t\t\t\t\t\tthis.$t('config.websocket.service.messages.deleteSuccess', {service: service})\n\t\t\t\t\t\t\t\t.toString()\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.catch((error) => FormErrorHandler.configError(error));\n\t\t}\n\t},\n\ticons: {\n\t\tadd: cilPlus,\n\t\tedit: cilPencil,\n\t\tremove: cilTrash,\n\t},\n};\n</script>\n","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./WebsocketServiceList.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./WebsocketServiceList.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./WebsocketServiceList.vue?vue&type=template&id=2dc5cec8&\"\nimport script from \"./WebsocketServiceList.vue?vue&type=script&lang=js&\"\nexport * from \"./WebsocketServiceList.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('2dc5cec8')) {\n      api.createRecord('2dc5cec8', component.options)\n    } else {\n      api.reload('2dc5cec8', component.options)\n    }\n    module.hot.accept(\"./WebsocketServiceList.vue?vue&type=template&id=2dc5cec8&\", function () {\n      api.rerender('2dc5cec8', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/components/Config/WebsocketServiceList.vue\"\nexport default component.exports","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./WebsocketList.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./WebsocketList.vue?vue&type=script&lang=js&\"","<template>\n\t<div v-if='$store.getters[\"user/getRole\"] === \"power\"'>\n\t\t<WebsocketMessagingList />\n\t\t<WebsocketServiceList />\n\t</div>\n\t<div v-else>\n\t\t<WebsocketInterfaceList />\n\t</div>\n</template>\n\n<script>\nimport WebsocketInterfaceList from '../../components/Config/WebsocketInterfaceList';\nimport WebsocketMessagingList from '../../components/Config/WebsocketMessagingList';\nimport WebsocketServiceList from '../../components/Config/WebsocketServiceList';\n\nexport default {\n\tname: 'WebsocketList',\n\tcomponents: {\n\t\tWebsocketInterfaceList,\n\t\tWebsocketMessagingList,\n\t\tWebsocketServiceList,\n\t},\n\tmetaInfo: {\n\t\ttitle: 'config.websocket.title'\n\t}\n};\n</script>\n","import { render, staticRenderFns } from \"./WebsocketList.vue?vue&type=template&id=0d42dbcb&\"\nimport script from \"./WebsocketList.vue?vue&type=script&lang=js&\"\nexport * from \"./WebsocketList.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('0d42dbcb')) {\n      api.createRecord('0d42dbcb', component.options)\n    } else {\n      api.reload('0d42dbcb', component.options)\n    }\n    module.hot.accept(\"./WebsocketList.vue?vue&type=template&id=0d42dbcb&\", function () {\n      api.rerender('0d42dbcb', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/pages/Config/WebsocketList.vue\"\nexport default component.exports","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\n        \"CCard\",\n        [\n          _c(\"CCardHeader\", [\n            _c(\n              \"div\",\n              { staticClass: \"float-right\" },\n              [\n                _c(\n                  \"CButton\",\n                  {\n                    attrs: {\n                      color: \"success\",\n                      size: \"sm\",\n                      to: \"/config/scheduler/add\"\n                    }\n                  },\n                  [\n                    _c(\"CIcon\", { attrs: { content: _vm.$options.icons.add } }),\n                    _vm._v(\n                      \"\\n\\t\\t\\t\\t\\t\" +\n                        _vm._s(_vm.$t(\"table.actions.add\")) +\n                        \"\\n\\t\\t\\t\\t\"\n                    )\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"CButton\",\n                  {\n                    attrs: { color: \"primary\", size: \"sm\" },\n                    on: {\n                      click: function($event) {\n                        _vm.importConfig.modal = true\n                      }\n                    }\n                  },\n                  [\n                    _c(\"CIcon\", {\n                      attrs: { content: _vm.$options.icons.import }\n                    }),\n                    _vm._v(\n                      \"\\n\\t\\t\\t\\t\\t\" +\n                        _vm._s(_vm.$t(\"config.scheduler.buttons.import\")) +\n                        \"\\n\\t\\t\\t\\t\"\n                    )\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"CButton\",\n                  {\n                    attrs: { color: \"secondary\", size: \"sm\" },\n                    on: { click: _vm.exportScheduler }\n                  },\n                  [\n                    _c(\"CIcon\", {\n                      attrs: { content: _vm.$options.icons.export }\n                    }),\n                    _vm._v(\n                      \"\\n\\t\\t\\t\\t\\t\" +\n                        _vm._s(_vm.$t(\"config.scheduler.buttons.export\")) +\n                        \"\\n\\t\\t\\t\\t\"\n                    )\n                  ],\n                  1\n                )\n              ],\n              1\n            )\n          ]),\n          _vm._v(\" \"),\n          _c(\n            \"CCardBody\",\n            [\n              _c(\"CDataTable\", {\n                attrs: {\n                  fields: _vm.fields,\n                  items: _vm.tasks,\n                  \"column-filter\": true,\n                  \"items-per-page\": 20,\n                  pagination: true,\n                  striped: true,\n                  sorter: { external: false, resetable: true }\n                },\n                scopedSlots: _vm._u(\n                  [\n                    _vm.retrieved === \"rest\"\n                      ? {\n                          key: \"taskId\",\n                          fn: function(ref) {\n                            var item = ref.item\n                            return [\n                              _c(\"td\", [\n                                _vm._v(\n                                  \"\\n\\t\\t\\t\\t\\t\\t\" +\n                                    _vm._s(item.id) +\n                                    \"\\n\\t\\t\\t\\t\\t\"\n                                )\n                              ])\n                            ]\n                          }\n                        }\n                      : null,\n                    _vm.retrieved === \"rest\"\n                      ? {\n                          key: \"clientId\",\n                          fn: function(ref) {\n                            var item = ref.item\n                            return [\n                              _c(\"td\", [\n                                _vm._v(\n                                  \"\\n\\t\\t\\t\\t\\t\\t\" +\n                                    _vm._s(item.service) +\n                                    \"\\n\\t\\t\\t\\t\\t\"\n                                )\n                              ])\n                            ]\n                          }\n                        }\n                      : null,\n                    {\n                      key: \"timeSpec\",\n                      fn: function(ref) {\n                        var item = ref.item\n                        return [\n                          _vm.retrieved === \"daemon\"\n                            ? _c(\"td\", [\n                                _vm._v(\n                                  \"\\n\\t\\t\\t\\t\\t\\t\" +\n                                    _vm._s(_vm.timeString(item.timeSpec)) +\n                                    \"\\n\\t\\t\\t\\t\\t\"\n                                )\n                              ])\n                            : _c(\"td\", [\n                                _vm._v(\n                                  \"\\n\\t\\t\\t\\t\\t\\t\" +\n                                    _vm._s(item.time) +\n                                    \"\\n\\t\\t\\t\\t\\t\"\n                                )\n                              ])\n                        ]\n                      }\n                    },\n                    {\n                      key: \"task\",\n                      fn: function(ref) {\n                        var item = ref.item\n                        return [\n                          _vm.retrieved === \"daemon\"\n                            ? _c(\"td\", [\n                                _vm._v(\n                                  \"\\n\\t\\t\\t\\t\\t\\t\" +\n                                    _vm._s(_vm.displayMTypes(item.task)) +\n                                    \"\\n\\t\\t\\t\\t\\t\"\n                                )\n                              ])\n                            : _c(\"td\", [\n                                _vm._v(\n                                  \"\\n\\t\\t\\t\\t\\t\\t\" +\n                                    _vm._s(_vm.displayMTypes(item.mTypes)) +\n                                    \"\\n\\t\\t\\t\\t\\t\"\n                                )\n                              ])\n                        ]\n                      }\n                    },\n                    {\n                      key: \"actions\",\n                      fn: function(ref) {\n                        var item = ref.item\n                        return [\n                          _c(\n                            \"td\",\n                            { staticClass: \"col-actions\" },\n                            [\n                              _vm.retrieved === \"daemon\"\n                                ? _c(\n                                    \"CButton\",\n                                    {\n                                      attrs: {\n                                        color: \"info\",\n                                        size: \"sm\",\n                                        to:\n                                          \"/config/scheduler/edit/\" +\n                                          item.taskId\n                                      }\n                                    },\n                                    [\n                                      _c(\"CIcon\", {\n                                        attrs: {\n                                          content: _vm.$options.icons.edit\n                                        }\n                                      }),\n                                      _vm._v(\n                                        \"\\n\\t\\t\\t\\t\\t\\t\\t\" +\n                                          _vm._s(_vm.$t(\"table.actions.edit\")) +\n                                          \"\\n\\t\\t\\t\\t\\t\\t\"\n                                      )\n                                    ],\n                                    1\n                                  )\n                                : _c(\n                                    \"CButton\",\n                                    {\n                                      attrs: {\n                                        color: \"info\",\n                                        size: \"sm\",\n                                        to: \"/config/scheduler/edit/\" + item.id\n                                      }\n                                    },\n                                    [\n                                      _c(\"CIcon\", {\n                                        attrs: {\n                                          content: _vm.$options.icons.edit\n                                        }\n                                      }),\n                                      _vm._v(\n                                        \"\\n\\t\\t\\t\\t\\t\\t\\t\" +\n                                          _vm._s(_vm.$t(\"table.actions.edit\")) +\n                                          \"\\n\\t\\t\\t\\t\\t\\t\"\n                                      )\n                                    ],\n                                    1\n                                  ),\n                              _vm._v(\" \"),\n                              _vm.retrieved === \"daemon\"\n                                ? _c(\n                                    \"CButton\",\n                                    {\n                                      attrs: { color: \"danger\", size: \"sm\" },\n                                      on: {\n                                        click: function($event) {\n                                          _vm.modal.task = item.taskId\n                                        }\n                                      }\n                                    },\n                                    [\n                                      _c(\"CIcon\", {\n                                        attrs: {\n                                          content: _vm.$options.icons.remove\n                                        }\n                                      }),\n                                      _vm._v(\n                                        \"\\n\\t\\t\\t\\t\\t\\t\\t\" +\n                                          _vm._s(\n                                            _vm.$t(\"table.actions.delete\")\n                                          ) +\n                                          \"\\n\\t\\t\\t\\t\\t\\t\"\n                                      )\n                                    ],\n                                    1\n                                  )\n                                : _c(\n                                    \"CButton\",\n                                    {\n                                      attrs: { color: \"danger\", size: \"sm\" },\n                                      on: {\n                                        click: function($event) {\n                                          _vm.modal.task = item.id\n                                        }\n                                      }\n                                    },\n                                    [\n                                      _c(\"CIcon\", {\n                                        attrs: {\n                                          content: _vm.$options.icons.remove\n                                        }\n                                      }),\n                                      _vm._v(\n                                        \"\\n\\t\\t\\t\\t\\t\\t\\t\" +\n                                          _vm._s(\n                                            _vm.$t(\"table.actions.delete\")\n                                          ) +\n                                          \"\\n\\t\\t\\t\\t\\t\\t\"\n                                      )\n                                    ],\n                                    1\n                                  )\n                            ],\n                            1\n                          )\n                        ]\n                      }\n                    }\n                  ],\n                  null,\n                  true\n                )\n              })\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"CModal\",\n        {\n          attrs: { show: _vm.importConfig.modal, color: \"primary\" },\n          on: {\n            \"update:show\": function($event) {\n              return _vm.$set(_vm.importConfig, \"modal\", $event)\n            }\n          },\n          scopedSlots: _vm._u([\n            {\n              key: \"header\",\n              fn: function() {\n                return [\n                  _c(\"h5\", { staticClass: \"modal-title\" }, [\n                    _vm._v(\n                      \"\\n\\t\\t\\t\\t\" +\n                        _vm._s(_vm.$t(\"config.scheduler.form.import.title\")) +\n                        \"\\n\\t\\t\\t\"\n                    )\n                  ])\n                ]\n              },\n              proxy: true\n            },\n            {\n              key: \"footer\",\n              fn: function() {\n                return [\n                  _c(\n                    \"CButton\",\n                    {\n                      attrs: { color: \"secondary\" },\n                      on: { click: _vm.closeImport }\n                    },\n                    [\n                      _vm._v(\n                        \"\\n\\t\\t\\t\\t\" +\n                          _vm._s(_vm.$t(\"forms.cancel\")) +\n                          \"\\n\\t\\t\\t\"\n                      )\n                    ]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"CButton\",\n                    {\n                      attrs: {\n                        color: \"primary\",\n                        disabled: _vm.importConfig.empty\n                      },\n                      on: { click: _vm.importScheduler }\n                    },\n                    [\n                      _vm._v(\n                        \"\\n\\t\\t\\t\\t\" +\n                          _vm._s(_vm.$t(\"config.scheduler.buttons.import\")) +\n                          \"\\n\\t\\t\\t\"\n                      )\n                    ]\n                  )\n                ]\n              },\n              proxy: true\n            }\n          ])\n        },\n        [\n          _vm._v(\" \"),\n          _c(\"CForm\", [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"CInputFile\", {\n                  ref: \"schedulerImport\",\n                  attrs: {\n                    accept: \"application/json,.zip\",\n                    label: _vm.$t(\"config.scheduler.form.import.file\")\n                  },\n                  on: { input: _vm.isEmpty, click: _vm.isEmpty }\n                }),\n                _vm._v(\" \"),\n                _vm.importConfig.empty && !_vm.importConfig.first\n                  ? _c(\"p\", { staticStyle: { color: \"red\" } }, [\n                      _vm._v(\n                        \"\\n\\t\\t\\t\\t\\t\" +\n                          _vm._s(\n                            _vm.$t(\"config.scheduler.form.import.fileEmpty\")\n                          ) +\n                          \"\\n\\t\\t\\t\\t\"\n                      )\n                    ])\n                  : _vm._e()\n              ],\n              1\n            )\n          ])\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"CModal\",\n        {\n          attrs: { color: \"danger\", show: _vm.modal.task !== null },\n          on: {\n            \"update:show\": function($event) {\n              return _vm.$set(_vm.modal, \"task !== null\", $event)\n            }\n          },\n          scopedSlots: _vm._u([\n            {\n              key: \"header\",\n              fn: function() {\n                return [\n                  _c(\"h5\", { staticClass: \"modal-title\" }, [\n                    _vm._v(\n                      \"\\n\\t\\t\\t\\t\" +\n                        _vm._s(\n                          _vm.$t(\"config.scheduler.messages.deleteTitle\")\n                        ) +\n                        \"\\n\\t\\t\\t\"\n                    )\n                  ])\n                ]\n              },\n              proxy: true\n            },\n            {\n              key: \"footer\",\n              fn: function() {\n                return [\n                  _c(\n                    \"CButton\",\n                    {\n                      attrs: { color: \"danger\" },\n                      on: {\n                        click: function($event) {\n                          _vm.modal.task = null\n                        }\n                      }\n                    },\n                    [\n                      _vm._v(\n                        \"\\n\\t\\t\\t\\t\" + _vm._s(_vm.$t(\"forms.no\")) + \"\\n\\t\\t\\t\"\n                      )\n                    ]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"CButton\",\n                    {\n                      attrs: { color: \"success\" },\n                      on: { click: _vm.removeTask }\n                    },\n                    [\n                      _vm._v(\n                        \"\\n\\t\\t\\t\\t\" + _vm._s(_vm.$t(\"forms.yes\")) + \"\\n\\t\\t\\t\"\n                      )\n                    ]\n                  )\n                ]\n              },\n              proxy: true\n            }\n          ])\n        },\n        [\n          _vm._v(\n            \"\\n\\t\\t\" +\n              _vm._s(\n                _vm.$t(\"config.scheduler.messages.deletePrompt\", {\n                  task: _vm.modal.task\n                })\n              ) +\n              \"\\n\\t\\t\"\n          )\n        ]\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import store from '../store';\nimport axios from 'axios';\nimport { authorizationHeader } from '../helpers/authorizationHeader';\n/**\n * Scheduler service\n */\nvar SchedulerService = /** @class */ (function () {\n    function SchedulerService() {\n    }\n    /**\n     * Adds a new task via the Daemon API\n     * @param taskId scheduler task ID\n     * @param clientId client ID\n     * @param task scheduler task\n     * @param timeSpec scheduler task time settings\n     */\n    SchedulerService.prototype.addTask = function (taskId, clientId, task, timeSpec) {\n        var tasks = JSON.parse(JSON.stringify(task));\n        tasks.forEach(function (item) {\n            item.message = JSON.parse(item.message);\n        });\n        return store.dispatch('sendRequest', {\n            'mType': 'mngScheduler_AddTask',\n            'data': {\n                'req': {\n                    'clientId': clientId,\n                    'taskId': taskId,\n                    'task': tasks,\n                    'timeSpec': timeSpec,\n                    'persist': true,\n                },\n                'returnVerbose': true,\n            },\n        });\n    };\n    /**\n     * Adds a new task via the REST API\n     * @param taskId scheduler task ID\n     * @param clientId client ID\n     * @param task scheduler task\n     * @param timeSpec scheduler task time settings\n     */\n    SchedulerService.prototype.addTaskREST = function (taskId, clientId, task, timeSpec) {\n        var tasks = JSON.parse(JSON.stringify(task));\n        tasks.forEach(function (item) {\n            item.message = JSON.parse(item.message);\n        });\n        var newTask = {\n            'taskId': taskId,\n            'clientId': clientId,\n            'task': tasks,\n            'timeSpec': timeSpec\n        };\n        return axios.post('scheduler', newTask, { headers: authorizationHeader() });\n    };\n    /**\n     * Edits an existing task via the REST API\n     * @param oldTaskId existing task ID\n     * @param taskId new task ID\n     * @param clientId client ID\n     * @param task scheduler task\n     * @param timeSpec scheduler task time settings\n     */\n    SchedulerService.prototype.editTaskREST = function (oldTaskId, taskId, clientId, task, timeSpec) {\n        var tasks = JSON.parse(JSON.stringify(task));\n        tasks.forEach(function (item) {\n            item.message = JSON.parse(item.message);\n        });\n        var editTask = {\n            'taskId': taskId,\n            'clientId': clientId,\n            'task': tasks,\n            'timeSpec': timeSpec\n        };\n        return axios.put('scheduler/' + oldTaskId, editTask, { headers: authorizationHeader() });\n    };\n    /**\n     * Retrieves scheduler tasks via the Daemon API\n     */\n    SchedulerService.prototype.listTasks = function () {\n        return store.dispatch('sendRequest', {\n            'mType': 'mngScheduler_List',\n            'data': {\n                'req': {\n                    'clientId': 'SchedulerMessaging',\n                },\n                'returnVerbose': true,\n            },\n        });\n    };\n    /**\n     * Retrieves scheduler tasks via the REST API\n     */\n    SchedulerService.prototype.listTasksREST = function () {\n        return axios.get('scheduler', { headers: authorizationHeader() });\n    };\n    /**\n     * Retrieves task specified by ID via the Daemon API\n     * @param taskId scheduler task ID\n     */\n    SchedulerService.prototype.getTask = function (taskId) {\n        return store.dispatch('sendRequest', {\n            'mType': 'mngScheduler_GetTask',\n            'data': {\n                'req': {\n                    'clientId': 'SchedulerMessaging',\n                    'taskId': taskId,\n                },\n                'returnVerbose': true,\n            },\n        });\n    };\n    /**\n     * Retrieves task specified by ID via the REST API\n     * @param taskId scheduler task ID\n     */\n    SchedulerService.prototype.getTaskREST = function (taskId) {\n        return axios.get('scheduler/' + taskId, { headers: authorizationHeader() });\n    };\n    /**\n     * Removes a task specified by ID via the Daemon API\n     * @param taskId scheduler task ID\n     */\n    SchedulerService.prototype.removeTask = function (taskId) {\n        return store.dispatch('sendRequest', {\n            'mType': 'mngScheduler_RemoveTask',\n            'data': {\n                'req': {\n                    'clientId': 'SchedulerMessaging',\n                    'taskId': taskId,\n                },\n                'returnVerbose': true,\n            },\n        });\n    };\n    /**\n     * Removes a task specified by ID via the REST API\n     * @param taskId scheduler ID\n     */\n    SchedulerService.prototype.removeTaskREST = function (taskId) {\n        return axios.delete('/scheduler/' + taskId, { headers: authorizationHeader() });\n    };\n    /**\n     * Exports scheduler configuration\n     */\n    SchedulerService.prototype.exportConfig = function () {\n        return axios.get('scheduler/export', { headers: authorizationHeader(), responseType: 'arraybuffer' });\n    };\n    /**\n     * Import scheduler configuration\n     * @param config scheduler configuration\n     */\n    SchedulerService.prototype.importConfig = function (config) {\n        return axios.post('scheduler/import', config, { headers: authorizationHeader() });\n    };\n    return SchedulerService;\n}());\nexport default new SchedulerService();\n","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SchedulerList.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SchedulerList.vue?vue&type=script&lang=js&\"","<template>\n\t<div>\n\t\t<CCard>\n\t\t\t<CCardHeader>\n\t\t\t\t<div class='float-right'>\n\t\t\t\t\t<CButton\n\t\t\t\t\t\tcolor='success'\n\t\t\t\t\t\tsize='sm'\n\t\t\t\t\t\tto='/config/scheduler/add'\n\t\t\t\t\t>\n\t\t\t\t\t\t<CIcon :content='$options.icons.add' />\n\t\t\t\t\t\t{{ $t('table.actions.add') }}\n\t\t\t\t\t</CButton>\n\t\t\t\t\t<CButton color='primary' size='sm' @click='importConfig.modal = true'>\n\t\t\t\t\t\t<CIcon :content='$options.icons.import' />\n\t\t\t\t\t\t{{ $t('config.scheduler.buttons.import') }}\n\t\t\t\t\t</CButton>\n\t\t\t\t\t<CButton color='secondary' size='sm' @click='exportScheduler'>\n\t\t\t\t\t\t<CIcon :content='$options.icons.export' />\n\t\t\t\t\t\t{{ $t('config.scheduler.buttons.export') }}\n\t\t\t\t\t</CButton>\n\t\t\t\t</div>\n\t\t\t</CCardHeader>\n\t\t\t<CCardBody>\n\t\t\t\t<CDataTable\n\t\t\t\t\t:fields='fields'\n\t\t\t\t\t:items='tasks'\n\t\t\t\t\t:column-filter='true'\n\t\t\t\t\t:items-per-page='20'\n\t\t\t\t\t:pagination='true'\n\t\t\t\t\t:striped='true'\n\t\t\t\t\t:sorter='{external: false, resetable: true}'\n\t\t\t\t>\n\t\t\t\t\t<template v-if='retrieved === \"rest\"' #taskId='{item}'>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t{{ item.id }}\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</template>\n\t\t\t\t\t<template v-if='retrieved === \"rest\"' #clientId='{item}'>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t{{ item.service }}\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</template>\n\t\t\t\t\t<template #timeSpec='{item}'>\n\t\t\t\t\t\t<td v-if='retrieved === \"daemon\"'>\n\t\t\t\t\t\t\t{{ timeString(item.timeSpec) }}\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td v-else>\n\t\t\t\t\t\t\t{{ item.time }}\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</template>\n\t\t\t\t\t<template #task='{item}'>\n\t\t\t\t\t\t<td v-if='retrieved === \"daemon\"'>\n\t\t\t\t\t\t\t{{ displayMTypes(item.task) }}\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td v-else>\n\t\t\t\t\t\t\t{{ displayMTypes(item.mTypes) }}\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</template>\n\t\t\t\t\t<template #actions='{item}'>\n\t\t\t\t\t\t<td class='col-actions'>\n\t\t\t\t\t\t\t<CButton\n\t\t\t\t\t\t\t\tv-if='retrieved === \"daemon\"'\n\t\t\t\t\t\t\t\tcolor='info'\n\t\t\t\t\t\t\t\tsize='sm'\n\t\t\t\t\t\t\t\t:to='\"/config/scheduler/edit/\" + item.taskId'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<CIcon :content='$options.icons.edit' />\n\t\t\t\t\t\t\t\t{{ $t('table.actions.edit') }}\n\t\t\t\t\t\t\t</CButton>\n\t\t\t\t\t\t\t<CButton\n\t\t\t\t\t\t\t\tv-else\n\t\t\t\t\t\t\t\tcolor='info'\n\t\t\t\t\t\t\t\tsize='sm'\n\t\t\t\t\t\t\t\t:to='\"/config/scheduler/edit/\" + item.id'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<CIcon :content='$options.icons.edit' />\n\t\t\t\t\t\t\t\t{{ $t('table.actions.edit') }}\n\t\t\t\t\t\t\t</CButton>\n\t\t\t\t\t\t\t<CButton\n\t\t\t\t\t\t\t\tv-if='retrieved === \"daemon\"'\n\t\t\t\t\t\t\t\tcolor='danger'\n\t\t\t\t\t\t\t\tsize='sm'\n\t\t\t\t\t\t\t\t@click='modal.task = item.taskId'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<CIcon :content='$options.icons.remove' />\n\t\t\t\t\t\t\t\t{{ $t('table.actions.delete') }}\n\t\t\t\t\t\t\t</CButton>\n\t\t\t\t\t\t\t<CButton\n\t\t\t\t\t\t\t\tv-else\n\t\t\t\t\t\t\t\tcolor='danger'\n\t\t\t\t\t\t\t\tsize='sm'\n\t\t\t\t\t\t\t\t@click='modal.task = item.id'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<CIcon :content='$options.icons.remove' />\n\t\t\t\t\t\t\t\t{{ $t('table.actions.delete') }}\n\t\t\t\t\t\t\t</CButton>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</template>\n\t\t\t\t</CDataTable>\n\t\t\t</CCardBody>\n\t\t</CCard>\n\t\t<CModal\n\t\t\t:show.sync='importConfig.modal'\n\t\t\tcolor='primary'\n\t\t>\n\t\t\t<template #header>\n\t\t\t\t<h5 class='modal-title'>\n\t\t\t\t\t{{ $t('config.scheduler.form.import.title') }}\n\t\t\t\t</h5>\n\t\t\t</template>\n\t\t\t<CForm>\n\t\t\t\t<div class='form-group'>\n\t\t\t\t\t<CInputFile\n\t\t\t\t\t\tref='schedulerImport'\n\t\t\t\t\t\taccept='application/json,.zip'\n\t\t\t\t\t\t:label='$t(\"config.scheduler.form.import.file\")'\n\t\t\t\t\t\t@input='isEmpty'\n\t\t\t\t\t\t@click='isEmpty'\n\t\t\t\t\t/>\n\t\t\t\t\t<p v-if='importConfig.empty && !importConfig.first' style='color: red'>\n\t\t\t\t\t\t{{ $t('config.scheduler.form.import.fileEmpty') }}\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t</CForm>\n\t\t\t<template #footer>\n\t\t\t\t<CButton color='secondary' @click='closeImport'>\n\t\t\t\t\t{{ $t('forms.cancel') }}\n\t\t\t\t</CButton>\n\t\t\t\t<CButton\n\t\t\t\t\tcolor='primary'\n\t\t\t\t\t:disabled='importConfig.empty'\n\t\t\t\t\t@click='importScheduler'\n\t\t\t\t>\n\t\t\t\t\t{{ $t('config.scheduler.buttons.import') }}\n\t\t\t\t</CButton>\n\t\t\t</template>\n\t\t</CModal>\n\t\t<CModal\n\t\t\tcolor='danger'\n\t\t\t:show.sync='modal.task !== null'\n\t\t>\n\t\t\t<template #header>\n\t\t\t\t<h5 class='modal-title'>\n\t\t\t\t\t{{ $t('config.scheduler.messages.deleteTitle') }}\n\t\t\t\t</h5>\n\t\t\t</template>\n\t\t\t{{ $t('config.scheduler.messages.deletePrompt', {task: modal.task}) }}\n\t\t\t<template #footer>\n\t\t\t\t<CButton color='danger' @click='modal.task = null'>\n\t\t\t\t\t{{ $t('forms.no') }}\n\t\t\t\t</CButton>\n\t\t\t\t<CButton color='success' @click='removeTask'>\n\t\t\t\t\t{{ $t('forms.yes') }}\n\t\t\t\t</CButton>\n\t\t\t</template>\n\t\t</CModal>\n\t</div>\n</template>\n\n<script>\nimport {CButton, CCard, CCardBody, CCardHeader, CForm, CIcon, CInputFile, CModal} from '@coreui/vue/src';\nimport {cilPencil, cilPlus, cilTrash, cilArrowTop, cilArrowBottom} from '@coreui/icons';\nimport {fileDownloader} from '../../helpers/fileDownloader';\nimport {TextareaAutogrowDirective} from 'vue-textarea-autogrow-directive/src/VueTextareaAutogrowDirective';\nimport SchedulerService from '../../services/SchedulerService';\nimport ServiceService from '../../services/ServiceService';\nimport FormErrorHandler from '../../helpers/FormErrorHandler';\nimport {DateTime} from 'luxon';\n\nexport default {\n\tname: 'SchedulerList',\n\tcomponents: {\n\t\tCButton,\n\t\tCCard,\n\t\tCCardBody,\n\t\tCCardHeader,\n\t\tCForm,\n\t\tCIcon,\n\t\tCInputFile,\n\t\tCModal,\n\t},\n\tdirectives: {\n\t\t'autogrow': TextareaAutogrowDirective\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\tkey: 'taskId',\n\t\t\t\t\tlabel: this.$t('config.scheduler.table.id'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: 'timeSpec',\n\t\t\t\t\tlabel: this.$t('config.scheduler.table.time'),\n\t\t\t\t\tfilter: false,\n\t\t\t\t\tsorter: false,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: 'clientId',\n\t\t\t\t\tlabel: this.$t('config.scheduler.table.service'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: 'task',\n\t\t\t\t\tlabel: this.$t('config.scheduler.table.mType'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: 'actions',\n\t\t\t\t\tlabel: this.$t('table.actions.title'),\n\t\t\t\t\tfilter: false,\n\t\t\t\t\tsorter: false,\n\t\t\t\t},\n\t\t\t],\n\t\t\timportConfig: {\n\t\t\t\tmodal: false,\n\t\t\t\tfirst: true,\n\t\t\t\tempty: false,\n\t\t\t},\n\t\t\tmodal: {\n\t\t\t\ttask: null,\n\t\t\t},\n\t\t\ttaskIds: null,\n\t\t\ttasks: [],\n\t\t\tdateFormat: {\n\t\t\t\tyear: 'numeric',\n\t\t\t\tmonth: 'short',\n\t\t\t\tday: 'numeric',\n\t\t\t\thour12: false,\n\t\t\t\thour: 'numeric',\n\t\t\t\tminute: 'numeric',\n\t\t\t\tsecond: 'numeric',\n\t\t\t},\n\t\t\tuseRest: true,\n\t\t\tretrieved: null,\n\t\t\tuntouched: true,\n\t\t};\n\t},\n\tcreated() {\n\t\tthis.$store.commit('spinner/SHOW');\n\t\tsetTimeout(() => {\n\t\t\tif (this.$store.state.webSocketClient.socket.isConnected) {\n\t\t\t\tthis.useRest = false;\n\t\t\t}\n\t\t\tif (this.untouched) {\n\t\t\t\tthis.getTasks();\n\t\t\t}\n\t\t}, 1000);\n\t\tthis.unsubscribe = this.$store.subscribe(mutation => {\n\t\t\tif (mutation.type === 'SOCKET_ONOPEN') {\n\t\t\t\tthis.useRest = false;\n\t\t\t\tif (this.untouched) {\n\t\t\t\t\tthis.getTasks();\n\t\t\t\t}\n\t\t\t} else if (mutation.type === 'SOCKET_ONCLOSE' || \n\t\t\t\tmutation.type === 'SOCKET_ONERROR') {\n\t\t\t\tthis.useRest = true;\n\t\t\t} else if (mutation.type === 'SOCKET_ONSEND') {\n\t\t\t\tif (mutation.payload.mType === 'mngScheduler_List') {\n\t\t\t\t\tif (this.taskIds !== null) {\n\t\t\t\t\t\tthis.taskIds = null;\n\t\t\t\t\t\tthis.tasks = [];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (mutation.type === 'SOCKET_ONMESSAGE') {\n\t\t\t\tif (mutation.payload.mType === 'mngScheduler_List') {\n\t\t\t\t\tthis.$store.commit('spinner/HIDE');\n\t\t\t\t\tif (mutation.payload.data.status === 0) {\n\t\t\t\t\t\tthis.taskIds = mutation.payload.data.rsp.tasks;\n\t\t\t\t\t\tthis.taskIds.forEach(item => {\n\t\t\t\t\t\t\tthis.getTask(item);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tthis.retrieved = 'daemon';\n\t\t\t\t\t}\n\t\t\t\t} else if (mutation.payload.mType === 'mngScheduler_GetTask') {\n\t\t\t\t\tif (mutation.payload.data.status === 0) {\n\t\t\t\t\t\tthis.tasks.push(mutation.payload.data.rsp);\n\t\t\t\t\t}\n\t\t\t\t} else if (mutation.payload.mType === 'mngScheduler_RemoveTask') {\n\t\t\t\t\tthis.$store.commit('spinner/HIDE');\n\t\t\t\t\tif (mutation.payload.data.status === 0) {\n\t\t\t\t\t\tthis.$toast.success(\n\t\t\t\t\t\t\tthis.$t('config.scheduler.messages.deleteSuccess').toString()\n\t\t\t\t\t\t);\n\t\t\t\t\t\tthis.getTasks();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.$toast.error(\n\t\t\t\t\t\t\tthis.$t('config.scheduler.messages.deleteFail').toString()\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t},\n\tbeforeDestroy() {\n\t\tthis.unsubscribe();\n\t},\n\tmethods: {\n\t\tcloseImport() {\n\t\t\tthis.importConfig.modal = false;\n\t\t\tthis.importConfig.first = true;\n\t\t},\n\t\tdisplayMTypes(item) {\n\t\t\ttry {\n\t\t\t\tif (this.retrieved === 'rest') {\n\t\t\t\t\tif (Array.isArray(item)) {\n\t\t\t\t\t\treturn item.join(',');\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn item;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (Array.isArray(item)) {\n\t\t\t\t\tlet mTypes = '';\n\t\t\t\t\titem.forEach(task => {\n\t\t\t\t\t\tmTypes += task.message.mType + ', ';\n\t\t\t\t\t});\n\t\t\t\t\treturn mTypes.slice(0, -2);\n\t\t\t\t} else {\n\t\t\t\t\treturn item.message.mType;\n\t\t\t\t}\n\t\t\t} catch(err) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t},\n\t\tgetTasks() {\n\t\t\tthis.untouched = false;\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\tif (this.useRest) {\n\t\t\t\tSchedulerService.listTasksREST()\n\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\tthis.$store.commit('spinner/HIDE');\n\t\t\t\t\t\tthis.tasks = response.data;\n\t\t\t\t\t\tthis.retrieved = 'rest';\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => FormErrorHandler.schedulerError(error));\n\t\t\t} else {\n\t\t\t\tSchedulerService.listTasks();\n\t\t\t}\n\t\t},\n\t\tgetTask(taskId) {\n\t\t\tSchedulerService.getTask(taskId);\n\t\t},\n\t\tremoveTask() {\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\tconst task = this.modal.task;\n\t\t\tthis.modal.task = null;\n\t\t\tif (this.useRest) {\n\t\t\t\tSchedulerService.removeTaskREST(task)\n\t\t\t\t\t.then(() => {\n\t\t\t\t\t\tthis.$store.commit('spinner/HIDE');\n\t\t\t\t\t\tthis.$toast.success(\n\t\t\t\t\t\t\tthis.$t('config.scheduler.messages.deleteSuccess').toString()\n\t\t\t\t\t\t);\n\t\t\t\t\t\tthis.getTasks();\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => FormErrorHandler.schedulerError(error));\n\t\t\t} else {\n\t\t\t\tSchedulerService.removeTask(task);\n\t\t\t}\n\t\t},\n\t\texportScheduler() {\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\tSchedulerService.exportConfig()\n\t\t\t\t.then((response) => {\n\t\t\t\t\tthis.$store.commit('spinner/HIDE');\n\t\t\t\t\tconst fileName = 'iqrf-gateway-scheduler_' + + new Date().toISOString();\n\t\t\t\t\tconst file = fileDownloader(response, 'application/zip', fileName);\n\t\t\t\t\tfile.click();\n\t\t\t\t});\n\t\t},\n\t\timportScheduler () {\n\t\t\tthis.importConfig.modal = false;\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\tSchedulerService.importConfig(this.$refs.schedulerImport.$el.children[1].files[0])\n\t\t\t\t.then(() => {\n\t\t\t\t\tServiceService.restart('iqrf-gateway-daemon')\n\t\t\t\t\t\t.then(() => {\n\t\t\t\t\t\t\tthis.$store.commit('spinner/HIDE');\n\t\t\t\t\t\t\tthis.$toast.success(\n\t\t\t\t\t\t\t\tthis.$t('config.scheduler.messages.importSuccess').toString()\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tthis.$toast.info(\n\t\t\t\t\t\t\t\tthis.$t('service.iqrf-gateway-daemon.messages.restart')\n\t\t\t\t\t\t\t\t\t.toString()\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch((error) => FormErrorHandler.serviceError(error));\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tthis.$store.commit('spinner/HIDE');\n\t\t\t\t\tif (error.response.status === 400) {\n\t\t\t\t\t\tthis.$toast.error(\n\t\t\t\t\t\t\tthis.$t('config.scheduler.messages.importInvalidFile').toString()\n\t\t\t\t\t\t);\n\t\t\t\t\t} else if (error.response.status === 415) {\n\t\t\t\t\t\tthis.$toast.error(\n\t\t\t\t\t\t\tthis.$t('config.scheduler.messages.importInvalidFormat')\n\t\t\t\t\t\t\t\t.toString()\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t},\n\t\tisEmpty() {\n\t\t\tif (this.importConfig.first) {\n\t\t\t\tthis.importConfig.first = false;\n\t\t\t}\n\t\t\tthis.importConfig.empty = this.$refs.schedulerImport.$el.children[1].files.length === 0;\n\t\t},\n\t\ttimeString(item) {\n\t\t\ttry {\n\t\t\t\tif (item.exactTime) {\n\t\t\t\t\treturn 'oneshot (' + DateTime.fromISO(item.startTime).toLocaleString(this.dateFormat) + ')';\n\t\t\t\t}\n\t\t\t\tif (item.periodic) {\n\t\t\t\t\tlet message = 'every ';\n\t\t\t\t\tlet date = new Date(0);\n\t\t\t\t\tdate.setSeconds(item.period);\n\t\t\t\t\tif (item.period >= 0 && item.period < 60) {\n\t\t\t\t\t\tmessage += date.getSeconds() + ' s';\n\t\t\t\t\t} else if (item.period < 3600) {\n\t\t\t\t\t\tmessage += date.getMinutes() + ':' + date.getSeconds() + ' min';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmessage += date.getHours() + ':' + date.getMinutes() + ':' + date.getSeconds() + ' h';\n\t\t\t\t\t}\n\t\t\t\t\treturn message;\n\t\t\t\t}\n\t\t\t\tif (item.cronTime.length > 0) {\n\t\t\t\t\tlet timeString = '';\n\t\t\t\t\titem.cronTime.forEach(item => {\n\t\t\t\t\t\ttimeString += item + ' ';\n\t\t\t\t\t});\n\t\t\t\t\treturn timeString.trim();\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\tconsole.error(err);\n\t\t\t\treturn '';\n\t\t\t}\n\t\t},\n\t},\n\ticons: {\n\t\tadd: cilPlus,\n\t\tedit: cilPencil,\n\t\tremove: cilTrash,\n\t\timport: cilArrowTop,\n\t\texport: cilArrowBottom,\n\t},\n\tmetaInfo: {\n\t\ttitle: 'config.scheduler.title',\n\t},\n};\n</script>\n","import { render, staticRenderFns } from \"./SchedulerList.vue?vue&type=template&id=7fb34cbf&\"\nimport script from \"./SchedulerList.vue?vue&type=script&lang=js&\"\nexport * from \"./SchedulerList.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('7fb34cbf')) {\n      api.createRecord('7fb34cbf', component.options)\n    } else {\n      api.reload('7fb34cbf', component.options)\n    }\n    module.hot.accept(\"./SchedulerList.vue?vue&type=template&id=7fb34cbf&\", function () {\n      api.rerender('7fb34cbf', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/pages/Config/SchedulerList.vue\"\nexport default component.exports","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"CCard\",\n    [\n      _c(\n        \"CCardBody\",\n        [\n          _c(\"ValidationObserver\", {\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(ref) {\n                  var invalid = ref.invalid\n                  return [\n                    _c(\n                      \"CForm\",\n                      {\n                        on: {\n                          submit: function($event) {\n                            $event.preventDefault()\n                            return _vm.saveTask($event)\n                          }\n                        }\n                      },\n                      [\n                        _c(\"ValidationProvider\", {\n                          attrs: {\n                            rules: \"integer|required\",\n                            \"custom-messages\": {\n                              required: \"config.scheduler.form.messages.nums\",\n                              integer: \"config.scheduler.form.messages.nums\"\n                            }\n                          },\n                          scopedSlots: _vm._u(\n                            [\n                              {\n                                key: \"default\",\n                                fn: function(ref) {\n                                  var errors = ref.errors\n                                  var touched = ref.touched\n                                  var valid = ref.valid\n                                  return [\n                                    _c(\"CInput\", {\n                                      attrs: {\n                                        type: \"number\",\n                                        label: _vm.$t(\n                                          \"config.scheduler.form.task.taskId\"\n                                        ),\n                                        \"is-valid\": touched ? valid : null,\n                                        \"invalid-feedback\": _vm.$t(errors[0])\n                                      },\n                                      model: {\n                                        value: _vm.taskId,\n                                        callback: function($$v) {\n                                          _vm.taskId = _vm._n($$v)\n                                        },\n                                        expression: \"taskId\"\n                                      }\n                                    })\n                                  ]\n                                }\n                              }\n                            ],\n                            null,\n                            true\n                          )\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"ValidationProvider\", {\n                          attrs: {\n                            rules: \"required\",\n                            \"custom-messages\": {\n                              required: \"config.scheduler.form.messages.service\"\n                            }\n                          },\n                          scopedSlots: _vm._u(\n                            [\n                              {\n                                key: \"default\",\n                                fn: function(ref) {\n                                  var errors = ref.errors\n                                  var touched = ref.touched\n                                  var valid = ref.valid\n                                  return [\n                                    _c(\"CSelect\", {\n                                      attrs: {\n                                        value: _vm.clientId,\n                                        label: _vm.$t(\n                                          \"config.scheduler.table.service\"\n                                        ),\n                                        options: [\n                                          {\n                                            value: \"SchedulerMessaging\",\n                                            label: \"SchedulerMessaging\"\n                                          }\n                                        ],\n                                        placeholder: \"Select service\",\n                                        \"is-valid\": touched ? valid : null,\n                                        \"invalid-feedback\": _vm.$t(errors[0])\n                                      },\n                                      on: {\n                                        \"update:value\": function($event) {\n                                          _vm.clientId = $event\n                                        }\n                                      }\n                                    })\n                                  ]\n                                }\n                              }\n                            ],\n                            null,\n                            true\n                          )\n                        }),\n                        _vm._v(\" \"),\n                        _c(\n                          \"div\",\n                          { staticClass: \"form-group\" },\n                          [\n                            _c(\"label\", { attrs: { for: \"cronTime\" } }, [\n                              _vm._v(\n                                \"\\n\\t\\t\\t\\t\\t\\t\" +\n                                  _vm._s(\n                                    _vm.$t(\n                                      \"config.scheduler.form.task.cronTime\"\n                                    )\n                                  ) +\n                                  \"\\n\\t\\t\\t\\t\\t\"\n                              )\n                            ]),\n                            _vm._v(\" \"),\n                            _vm.cronMessage !== null\n                              ? _c(\"CBadge\", { attrs: { color: \"info\" } }, [\n                                  _vm._v(\n                                    \"\\n\\t\\t\\t\\t\\t\\t\" +\n                                      _vm._s(_vm.cronMessage) +\n                                      \"\\n\\t\\t\\t\\t\\t\"\n                                  )\n                                ])\n                              : _vm._e(),\n                            _vm._v(\" \"),\n                            _c(\"CInput\", {\n                              attrs: {\n                                id: \"cronTime\",\n                                disabled:\n                                  _vm.timeSpec.exactTime ||\n                                  _vm.timeSpec.periodic\n                              },\n                              on: { input: _vm.calculateCron },\n                              model: {\n                                value: _vm.timeSpec.cronTime,\n                                callback: function($$v) {\n                                  _vm.$set(_vm.timeSpec, \"cronTime\", $$v)\n                                },\n                                expression: \"timeSpec.cronTime\"\n                              }\n                            })\n                          ],\n                          1\n                        ),\n                        _vm._v(\" \"),\n                        _c(\"CInputCheckbox\", {\n                          attrs: {\n                            checked: _vm.timeSpec.exactTime,\n                            label: _vm.$t(\n                              \"config.scheduler.form.task.exactTime\"\n                            ),\n                            disabled: _vm.timeSpec.periodic\n                          },\n                          on: {\n                            \"update:checked\": function($event) {\n                              return _vm.$set(_vm.timeSpec, \"exactTime\", $event)\n                            }\n                          }\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"CInputCheckbox\", {\n                          attrs: {\n                            checked: _vm.timeSpec.periodic,\n                            label: _vm.$t(\n                              \"config.scheduler.form.task.periodic\"\n                            ),\n                            disabled: _vm.timeSpec.exactTime\n                          },\n                          on: {\n                            \"update:checked\": function($event) {\n                              return _vm.$set(_vm.timeSpec, \"periodic\", $event)\n                            }\n                          }\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"ValidationProvider\", {\n                          attrs: {\n                            rules: \"integer|required\",\n                            \"custom-messages\": {\n                              required: \"config.scheduler.form.messages.nums\",\n                              integer: \"config.scheduler.form.messages.nums\"\n                            }\n                          },\n                          scopedSlots: _vm._u(\n                            [\n                              {\n                                key: \"default\",\n                                fn: function(ref) {\n                                  var errors = ref.errors\n                                  var touched = ref.touched\n                                  var valid = ref.valid\n                                  return [\n                                    _c(\"CInput\", {\n                                      attrs: {\n                                        type: \"number\",\n                                        min: \"0\",\n                                        label: _vm.$t(\n                                          \"config.scheduler.form.task.period\"\n                                        ),\n                                        \"is-valid\": touched ? valid : null,\n                                        \"invalid-feedback\": _vm.$t(errors[0]),\n                                        disabled:\n                                          !_vm.timeSpec.periodic ||\n                                          _vm.timeSpec.exactTime\n                                      },\n                                      model: {\n                                        value: _vm.timeSpec.period,\n                                        callback: function($$v) {\n                                          _vm.$set(\n                                            _vm.timeSpec,\n                                            \"period\",\n                                            _vm._n($$v)\n                                          )\n                                        },\n                                        expression: \"timeSpec.period\"\n                                      }\n                                    })\n                                  ]\n                                }\n                              }\n                            ],\n                            null,\n                            true\n                          )\n                        }),\n                        _vm._v(\" \"),\n                        _c(\n                          \"div\",\n                          { staticClass: \"form-group\" },\n                          [\n                            _c(\"label\", { attrs: { for: \"exactTime\" } }, [\n                              _vm._v(\n                                \"\\n\\t\\t\\t\\t\\t\\t\" +\n                                  _vm._s(\n                                    _vm.$t(\n                                      \"config.scheduler.form.task.startTime\"\n                                    )\n                                  ) +\n                                  \"\\n\\t\\t\\t\\t\\t\"\n                              )\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"Datetime\", {\n                              attrs: {\n                                id: \"exactTime\",\n                                type: \"datetime\",\n                                format: _vm.$options.pickerSettings.dateFormat,\n                                \"min-datetime\": new Date().toISOString(),\n                                \"input-class\": \"form-control\",\n                                disabled:\n                                  !_vm.timeSpec.exactTime ||\n                                  _vm.timeSpec.periodic\n                              },\n                              model: {\n                                value: _vm.timeSpec.startTime,\n                                callback: function($$v) {\n                                  _vm.$set(_vm.timeSpec, \"startTime\", $$v)\n                                },\n                                expression: \"timeSpec.startTime\"\n                              }\n                            })\n                          ],\n                          1\n                        ),\n                        _vm._v(\" \"),\n                        _c(\"h3\", [\n                          _vm._v(\n                            _vm._s(\n                              _vm.$t(\"config.scheduler.form.message.title\")\n                            )\n                          )\n                        ]),\n                        _c(\"hr\"),\n                        _vm._v(\" \"),\n                        _vm._l(_vm.task.length, function(i) {\n                          return _c(\n                            \"div\",\n                            { key: i, staticClass: \"form-group\" },\n                            [\n                              _c(\"ValidationProvider\", {\n                                attrs: {\n                                  rules: \"required\",\n                                  \"custom-messages\": {\n                                    required:\n                                      \"config.scheduler.form.messages.service\"\n                                  }\n                                },\n                                scopedSlots: _vm._u(\n                                  [\n                                    {\n                                      key: \"default\",\n                                      fn: function(ref) {\n                                        var errors = ref.errors\n                                        var touched = ref.touched\n                                        var valid = ref.valid\n                                        return [\n                                          _c(\"CSelect\", {\n                                            attrs: {\n                                              value: _vm.task[i - 1].messaging,\n                                              placeholder: _vm.$t(\n                                                \"config.scheduler.form.message.messagePlaceholder\"\n                                              ),\n                                              options: _vm.messagings,\n                                              \"is-valid\": touched\n                                                ? valid\n                                                : null,\n                                              \"invalid-feedback\": _vm.$t(\n                                                errors[0]\n                                              )\n                                            },\n                                            on: {\n                                              \"update:value\": function($event) {\n                                                return _vm.$set(\n                                                  _vm.task[i - 1],\n                                                  \"messaging\",\n                                                  $event\n                                                )\n                                              }\n                                            }\n                                          })\n                                        ]\n                                      }\n                                    }\n                                  ],\n                                  null,\n                                  true\n                                )\n                              }),\n                              _vm._v(\" \"),\n                              _c(\"ValidationProvider\", {\n                                attrs: {\n                                  rules: \"required|json|mType\",\n                                  \"custom-messages\": {\n                                    required:\n                                      \"config.scheduler.form.messages.message\",\n                                    json:\n                                      \"iqrfnet.sendJson.form.messages.invalid\",\n                                    mType:\n                                      \"iqrfnet.sendJson.form.messages.mType\"\n                                  }\n                                },\n                                scopedSlots: _vm._u(\n                                  [\n                                    {\n                                      key: \"default\",\n                                      fn: function(ref) {\n                                        var errors = ref.errors\n                                        var touched = ref.touched\n                                        var valid = ref.valid\n                                        return [\n                                          _c(\"CTextarea\", {\n                                            directives: [\n                                              {\n                                                name: \"autogrow\",\n                                                rawName: \"v-autogrow\"\n                                              }\n                                            ],\n                                            attrs: {\n                                              label: _vm.$t(\n                                                \"config.scheduler.form.message.label\"\n                                              ),\n                                              \"is-valid\": touched\n                                                ? valid\n                                                : null,\n                                              \"invalid-feedback\": _vm.$t(\n                                                errors[0]\n                                              )\n                                            },\n                                            model: {\n                                              value: _vm.task[i - 1].message,\n                                              callback: function($$v) {\n                                                _vm.$set(\n                                                  _vm.task[i - 1],\n                                                  \"message\",\n                                                  $$v\n                                                )\n                                              },\n                                              expression: \"task[i-1].message\"\n                                            }\n                                          })\n                                        ]\n                                      }\n                                    }\n                                  ],\n                                  null,\n                                  true\n                                )\n                              }),\n                              _vm._v(\" \"),\n                              _vm.task.length > 1\n                                ? _c(\n                                    \"CButton\",\n                                    {\n                                      attrs: { color: \"danger\" },\n                                      on: {\n                                        click: function($event) {\n                                          return _vm.removeMessage(i - 1)\n                                        }\n                                      }\n                                    },\n                                    [\n                                      _vm._v(\n                                        \"\\n\\t\\t\\t\\t\\t\\t\" +\n                                          _vm._s(\n                                            _vm.$t(\n                                              \"config.scheduler.buttons.remove\"\n                                            )\n                                          ) +\n                                          \"\\n\\t\\t\\t\\t\\t\"\n                                      )\n                                    ]\n                                  )\n                                : _vm._e(),\n                              _vm._v(\" \"),\n                              i === _vm.task.length\n                                ? _c(\n                                    \"CButton\",\n                                    {\n                                      attrs: { color: \"success\" },\n                                      on: { click: _vm.addMessage }\n                                    },\n                                    [\n                                      _vm._v(\n                                        \"\\n\\t\\t\\t\\t\\t\\t\" +\n                                          _vm._s(\n                                            _vm.$t(\n                                              \"config.scheduler.buttons.add\"\n                                            )\n                                          ) +\n                                          \"\\n\\t\\t\\t\\t\\t\"\n                                      )\n                                    ]\n                                  )\n                                : _vm._e()\n                            ],\n                            1\n                          )\n                        }),\n                        _vm._v(\" \"),\n                        _c(\n                          \"CButton\",\n                          {\n                            attrs: {\n                              type: \"submit\",\n                              color: \"primary\",\n                              disabled: invalid\n                            }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n\\t\\t\\t\\t\\t\" +\n                                _vm._s(_vm.$t(\"forms.save\")) +\n                                \"\\n\\t\\t\\t\\t\"\n                            )\n                          ]\n                        )\n                      ],\n                      2\n                    )\n                  ]\n                }\n              }\n            ])\n          })\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SchedulerForm.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SchedulerForm.vue?vue&type=script&lang=js&\"","<template>\n\t<CCard>\n\t\t<CCardBody>\n\t\t\t<ValidationObserver v-slot='{ invalid }'>\n\t\t\t\t<CForm @submit.prevent='saveTask'>\n\t\t\t\t\t<ValidationProvider\n\t\t\t\t\t\tv-slot='{ errors, touched, valid }'\n\t\t\t\t\t\trules='integer|required'\n\t\t\t\t\t\t:custom-messages='{\n\t\t\t\t\t\t\trequired: \"config.scheduler.form.messages.nums\",\n\t\t\t\t\t\t\tinteger: \"config.scheduler.form.messages.nums\"\n\t\t\t\t\t\t}'\n\t\t\t\t\t>\n\t\t\t\t\t\t<CInput\n\t\t\t\t\t\t\tv-model.number='taskId'\n\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t:label='$t(\"config.scheduler.form.task.taskId\")'\n\t\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ValidationProvider>\n\t\t\t\t\t<ValidationProvider\n\t\t\t\t\t\tv-slot='{ errors, touched, valid}'\n\t\t\t\t\t\trules='required'\n\t\t\t\t\t\t:custom-messages='{required: \"config.scheduler.form.messages.service\"}'\n\t\t\t\t\t>\n\t\t\t\t\t\t<CSelect\n\t\t\t\t\t\t\t:value.sync='clientId'\n\t\t\t\t\t\t\t:label='$t(\"config.scheduler.table.service\")'\n\t\t\t\t\t\t\t:options='[\n\t\t\t\t\t\t\t\t{value: \"SchedulerMessaging\", label: \"SchedulerMessaging\"}\n\t\t\t\t\t\t\t]'\n\t\t\t\t\t\t\tplaceholder='Select service'\n\t\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ValidationProvider>\n\t\t\t\t\t<div class='form-group'>\n\t\t\t\t\t\t<label for='cronTime'>\n\t\t\t\t\t\t\t{{ $t(\"config.scheduler.form.task.cronTime\") }}\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<CBadge v-if='cronMessage !== null' color='info'>\n\t\t\t\t\t\t\t{{ cronMessage }}\n\t\t\t\t\t\t</CBadge>\n\t\t\t\t\t\t<CInput\n\t\t\t\t\t\t\tid='cronTime'\n\t\t\t\t\t\t\tv-model='timeSpec.cronTime'\n\t\t\t\t\t\t\t:disabled='timeSpec.exactTime || timeSpec.periodic'\n\t\t\t\t\t\t\t@input='calculateCron'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<CInputCheckbox\n\t\t\t\t\t\t:checked.sync='timeSpec.exactTime'\n\t\t\t\t\t\t:label='$t(\"config.scheduler.form.task.exactTime\")'\n\t\t\t\t\t\t:disabled='timeSpec.periodic'\n\t\t\t\t\t/>\n\t\t\t\t\t<CInputCheckbox\n\t\t\t\t\t\t:checked.sync='timeSpec.periodic'\n\t\t\t\t\t\t:label='$t(\"config.scheduler.form.task.periodic\")'\n\t\t\t\t\t\t:disabled='timeSpec.exactTime'\n\t\t\t\t\t/>\n\t\t\t\t\t<ValidationProvider\n\t\t\t\t\t\tv-slot='{ errors, touched, valid }'\n\t\t\t\t\t\trules='integer|required'\n\t\t\t\t\t\t:custom-messages='{\n\t\t\t\t\t\t\trequired: \"config.scheduler.form.messages.nums\",\n\t\t\t\t\t\t\tinteger: \"config.scheduler.form.messages.nums\"\n\t\t\t\t\t\t}'\n\t\t\t\t\t>\n\t\t\t\t\t\t<CInput\n\t\t\t\t\t\t\tv-model.number='timeSpec.period'\n\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\tmin='0'\n\t\t\t\t\t\t\t:label='$t(\"config.scheduler.form.task.period\")'\n\t\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\t\t:disabled='!timeSpec.periodic || timeSpec.exactTime'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ValidationProvider>\n\t\t\t\t\t<div class='form-group'>\n\t\t\t\t\t\t<label for='exactTime'>\n\t\t\t\t\t\t\t{{ $t(\"config.scheduler.form.task.startTime\") }}\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Datetime\n\t\t\t\t\t\t\tid='exactTime'\n\t\t\t\t\t\t\tv-model='timeSpec.startTime' \n\t\t\t\t\t\t\ttype='datetime'\n\t\t\t\t\t\t\t:format='$options.pickerSettings.dateFormat'\n\t\t\t\t\t\t\t:min-datetime='new Date().toISOString()'\n\t\t\t\t\t\t\tinput-class='form-control'\n\t\t\t\t\t\t\t:disabled='!timeSpec.exactTime || timeSpec.periodic'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<h3>{{ $t('config.scheduler.form.message.title') }}</h3><hr>\n\t\t\t\t\t<div v-for='i of task.length' :key='i' class='form-group'>\n\t\t\t\t\t\t<ValidationProvider\n\t\t\t\t\t\t\tv-slot='{ errors, touched, valid}'\n\t\t\t\t\t\t\trules='required'\n\t\t\t\t\t\t\t:custom-messages='{required: \"config.scheduler.form.messages.service\"}'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<CSelect\n\t\t\t\t\t\t\t\t:value.sync='task[i-1].messaging'\n\t\t\t\t\t\t\t\t:placeholder='$t(\"config.scheduler.form.message.messagePlaceholder\")'\n\t\t\t\t\t\t\t\t:options='messagings'\n\t\t\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</ValidationProvider>\n\t\t\t\t\t\t<ValidationProvider\n\t\t\t\t\t\t\tv-slot='{ errors, touched, valid }'\n\t\t\t\t\t\t\trules='required|json|mType'\n\t\t\t\t\t\t\t:custom-messages='{\n\t\t\t\t\t\t\t\trequired: \"config.scheduler.form.messages.message\",\n\t\t\t\t\t\t\t\tjson: \"iqrfnet.sendJson.form.messages.invalid\",\n\t\t\t\t\t\t\t\tmType: \"iqrfnet.sendJson.form.messages.mType\"\n\t\t\t\t\t\t\t}'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<CTextarea\n\t\t\t\t\t\t\t\tv-model='task[i-1].message'\n\t\t\t\t\t\t\t\tv-autogrow\n\t\t\t\t\t\t\t\t:label='$t(\"config.scheduler.form.message.label\")'\n\t\t\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</ValidationProvider>\n\t\t\t\t\t\t<CButton\n\t\t\t\t\t\t\tv-if='task.length > 1'\n\t\t\t\t\t\t\tcolor='danger'\n\t\t\t\t\t\t\t@click='removeMessage(i-1)'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{{ $t('config.scheduler.buttons.remove') }}\n\t\t\t\t\t\t</CButton>\n\t\t\t\t\t\t<CButton\n\t\t\t\t\t\t\tv-if='i === task.length'\n\t\t\t\t\t\t\tcolor='success'\n\t\t\t\t\t\t\t@click='addMessage'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{{ $t('config.scheduler.buttons.add') }}\n\t\t\t\t\t\t</CButton>\n\t\t\t\t\t</div>\n\t\t\t\t\t<CButton type='submit' color='primary' :disabled='invalid'>\n\t\t\t\t\t\t{{ $t('forms.save') }}\n\t\t\t\t\t</CButton>\n\t\t\t\t</CForm>\n\t\t\t</ValidationObserver>\n\t\t</CCardBody>\n\t</CCard>\n</template>\n\n<script>\nimport {CBadge, CButton, CCard, CCardBody, CForm, CInput, CInputCheckbox, CSelect, CTextarea} from '@coreui/vue/src';\nimport {extend, ValidationObserver, ValidationProvider} from 'vee-validate';\nimport {integer, required} from 'vee-validate/dist/rules';\nimport DaemonConfigurationService from '../../services/DaemonConfigurationService';\nimport SchedulerService from '../../services/SchedulerService';\nimport {TextareaAutogrowDirective} from 'vue-textarea-autogrow-directive/src/VueTextareaAutogrowDirective';\nimport cronstrue from 'cronstrue';\nimport {Datetime} from 'vue-datetime';\nimport FormErrorHandler from '../../helpers/FormErrorHandler';\n\nexport default {\n\tname: 'SchedulerForm',\n\tcomponents: {\n\t\tCBadge,\n\t\tCButton,\n\t\tCCard,\n\t\tCCardBody,\n\t\tCForm,\n\t\tCInput,\n\t\tCInputCheckbox,\n\t\tCSelect,\n\t\tCTextarea,\n\t\tDatetime,\n\t\tValidationObserver,\n\t\tValidationProvider\n\t},\n\tdirectives: {\n\t\t'autogrow': TextareaAutogrowDirective\n\t},\n\tprops: {\n\t\tid: {\n\t\t\ttype: Number,\n\t\t\trequired: false,\n\t\t\tdefault: null,\n\t\t},\n\t},\n\tdata() {\n\t\treturn {\n\t\t\ttaskId: Math.floor(Date.now() / 1000),\n\t\t\tclientId: null,\n\t\t\ttask: [{}],\n\t\t\ttimeSpec: {\n\t\t\t\tcronTime: '',\n\t\t\t\tperiodic: false,\n\t\t\t\tperiod: 0,\n\t\t\t\texactTime: false,\n\t\t\t\tstartTime: '',\n\t\t\t},\n\t\t\tcomponents: {\n\t\t\t\tmq: 'iqrf::MqMessaging',\n\t\t\t\tmqtt: 'iqrf::MqttMessaging',\n\t\t\t\twebsocket: 'iqrf::WebsocketMessaging',\n\t\t\t},\n\t\t\tmessagings: [],\n\t\t\tcronMessage: null,\n\t\t\tuseRest: true,\n\t\t\tuntouched: true,\n\t\t};\n\t},\n\tcreated() {\n\t\tthis.$store.commit('spinner/SHOW');\n\t\tsetTimeout(() => {\n\t\t\tif (this.$store.state.webSocketClient.socket.isConnected) {\n\t\t\t\tthis.useRest = false;\n\t\t\t}\n\t\t\tif (this.id && this.untouched) {\n\t\t\t\tthis.getTask(this.id);\n\t\t\t}\n\t\t}, 1000);\n\t\textend('integer', integer);\n\t\textend('required', required);\n\t\textend('json', (json) => {\n\t\t\ttry {\n\t\t\t\tJSON.parse(json);\n\t\t\t\treturn true;\n\t\t\t} catch (error) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t\textend('mType', (json) => {\n\t\t\tlet object = JSON.parse(json);\n\t\t\treturn {}.hasOwnProperty.call(object, 'mType');\n\t\t});\n\t\tthis.unsubscribe = this.$store.subscribe(mutation => {\n\t\t\tif (mutation.type === 'SOCKET_ONOPEN') {\n\t\t\t\tthis.useRest = false;\n\t\t\t\tif (this.id && this.untouched) {\n\t\t\t\t\tthis.getTask(this.id);\n\t\t\t\t}\n\t\t\t} else if (mutation.type === 'SOCKET_ONCLOSE' ||\n\t\t\t\tmutation.type === 'SOCKET_ONERROR') {\n\t\t\t\tthis.useRest = true;\n\t\t\t} else if (mutation.type === 'SOCKET_ONMESSAGE') {\n\t\t\t\tif (mutation.payload.mType === 'mngScheduler_GetTask') {\n\t\t\t\t\tthis.$store.commit('spinner/HIDE');\n\t\t\t\t\tif (mutation.payload.data.status === 0) {\n\t\t\t\t\t\tlet rsp = mutation.payload.data.rsp;\n\t\t\t\t\t\tthis.taskId = rsp.taskId;\n\t\t\t\t\t\tthis.clientId = rsp.clientId;\n\t\t\t\t\t\tthis.timeSpec = rsp.timeSpec;\n\t\t\t\t\t\tthis.timeSpec.cronTime = this.timeSpec.cronTime.join(' ');\n\t\t\t\t\t\tif (Array.isArray(rsp.task)) {\n\t\t\t\t\t\t\tlet tasks = [];\n\t\t\t\t\t\t\trsp.task.forEach(item => {\n\t\t\t\t\t\t\t\ttasks.push({\n\t\t\t\t\t\t\t\t\tmessaging: item.messaging,\n\t\t\t\t\t\t\t\t\tmessage: JSON.stringify(item.message, null, 2),\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tthis.task = tasks;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.task = [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tmessaging: rsp.task.messaging,\n\t\t\t\t\t\t\t\t\tmessage: JSON.stringify(rsp.task.message, null, 2),\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t];\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.$router.push('/config/scheduler/');\n\t\t\t\t\t\tthis.$toast.error(\n\t\t\t\t\t\t\tthis.$t('config.scheduler.messages.getFail', {task: this.id})\n\t\t\t\t\t\t\t\t.toString()\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} else if (mutation.payload.mType === 'mngScheduler_AddTask') {\n\t\t\t\t\tthis.$store.commit('spinner/HIDE');\n\t\t\t\t\tif (mutation.payload.data.status === 0) {\n\t\t\t\t\t\tthis.successfulSave();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.$toast.error(\n\t\t\t\t\t\t\tthis.$t('config.scheduler.messagess.processError').toString()\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} else if (mutation.payload.mType === 'messageError') {\n\t\t\t\t\tthis.$store.commit('spinner/HIDE');\n\t\t\t\t\tthis.$toast.error(\n\t\t\t\t\t\tthis.$t('config.scheduler.messagess.processError').toString()\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t});\n\t\tthis.getMessagings();\n\t},\n\tbeforeDestroy() {\n\t\tthis.unsubscribe();\n\t},\n\tmethods: {\n\t\tcalculateCron() {\n\t\t\tconst cronTime = this.timeSpec.cronTime.split(' ');\n\t\t\tconst len = cronTime.length;\n\t\t\tif (len === 1) {\n\t\t\t\tconst alias = this.getCronAlias(this.timeSpec.cronTime);\n\t\t\t\tif (alias !== undefined) {\n\t\t\t\t\tthis.cronMessage = cronstrue.toString(alias);\n\t\t\t\t} else {\n\t\t\t\t\tthis.cronMessage = null;\n\t\t\t\t}\n\t\t\t} else if (len > 4 && len < 8) {\n\t\t\t\tthis.cronMessage = cronstrue.toString(this.timeSpec.cronTime);\n\t\t\t} else {\n\t\t\t\tthis.cronMessage = null;\n\t\t\t}\n\t\t},\n\t\taddMessage() {\n\t\t\tthis.task.push({});\n\t\t},\n\t\tremoveMessage(index) {\n\t\t\tthis.task.splice(index, 1);\n\t\t},\n\t\tgetTask(taskId) {\n\t\t\tthis.untouched = false;\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\tif (this.useRest) {\n\t\t\t\tSchedulerService.getTaskREST(taskId)\n\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\tthis.$store.commit('spinner/HIDE');\n\t\t\t\t\t\tthis.taskId = response.data.taskId;\n\t\t\t\t\t\tthis.clientId = response.data.clientId;\n\t\t\t\t\t\tthis.timeSpec = response.data.timeSpec;\n\t\t\t\t\t\tlet tasks = [];\n\t\t\t\t\t\tresponse.data.task.forEach(item => {\n\t\t\t\t\t\t\ttasks.push({messaging: item.messaging, message: JSON.stringify(item.message, null, 2)});\n\t\t\t\t\t\t});\n\t\t\t\t\t\tthis.task = tasks;\n\t\t\t\t\t})\n\t\t\t\t\t.catch(() => {\n\t\t\t\t\t\tthis.$router.push('/config/scheduler/');\n\t\t\t\t\t\tthis.$toast.error(\n\t\t\t\t\t\t\tthis.$t('config.scheduler.messages.getFail', {task: this.id})\n\t\t\t\t\t\t\t\t.toString()\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tSchedulerService.getTask(taskId);\n\t\t\t}\n\t\t},\n\t\tgetMessagings() {\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\tPromise.all([\n\t\t\t\tDaemonConfigurationService.getComponent(this.components.mq),\n\t\t\t\tDaemonConfigurationService.getComponent(this.components.mqtt),\n\t\t\t\tDaemonConfigurationService.getComponent(this.components.websocket),\n\t\t\t])\n\t\t\t\t.then((responses) => {\n\t\t\t\t\tthis.$store.commit('spinner/HIDE');\n\t\t\t\t\tresponses.forEach(item => {\n\t\t\t\t\t\tif (item.data.instances) {\n\t\t\t\t\t\t\titem.data.instances.forEach(messaging => {\n\t\t\t\t\t\t\t\tthis.messagings.push({\n\t\t\t\t\t\t\t\t\tvalue: messaging.instance, label: messaging.instance,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tthis.$store.commit('spinner/HIDE');\n\t\t\t\t\tthis.$router.push('/config/scheduler/');\n\t\t\t\t\tthis.$toast.error(\n\t\t\t\t\t\tthis.$t('config.scheduler.messages.rest.messagingFail').toString()\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t},\n\t\tsaveTask() {\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\tlet timeSpec = JSON.parse(JSON.stringify(this.timeSpec));\n\t\t\ttimeSpec.cronTime = timeSpec.cronTime.replace('?', '*');\n\t\t\ttimeSpec.cronTime = timeSpec.cronTime.split(' ');\n\t\t\tif (timeSpec.cronTime.length === 1) {\n\t\t\t\tconst alias = this.getCronAlias(timeSpec.cronTime[0]);\n\t\t\t\tif (alias !== undefined) {\n\t\t\t\t\ttimeSpec.cronTime = [alias, '', '', '', '', '', ''];\n\t\t\t\t}\n\t\t\t}\n\t\t\tswitch(timeSpec.cronTime.length) {\n\t\t\t\tcase 5:\n\t\t\t\t\ttimeSpec.cronTime.unshift('0');\n\t\t\t\t\ttimeSpec.cronTime.push('*');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 6:\n\t\t\t\t\tif (timeSpec.cronTime[5].length === 4) {\n\t\t\t\t\t\ttimeSpec.cronTime.unshift('0');\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttimeSpec.cronTime.push('*');\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 7:\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\ttimeSpec.cronTime = new Array(7).fill('');\n\t\t\t}\n\t\t\tif (timeSpec.exactTime) {\n\t\t\t\tlet date = new Date(timeSpec.startTime);\n\t\t\t\tdate.setMinutes(date.getMinutes() - date.getTimezoneOffset());\n\t\t\t\ttimeSpec.startTime = date.toISOString().split('.')[0];\n\t\t\t}\n\t\t\tif (this.$route.path === '/config/scheduler/add') {\n\t\t\t\tif (this.useRest) {\n\t\t\t\t\tSchedulerService.addTaskREST(this.taskId, this.clientId, this.task, timeSpec)\n\t\t\t\t\t\t.then(() => this.successfulSave())\n\t\t\t\t\t\t.catch((error) => FormErrorHandler.schedulerError(error));\n\t\t\t\t} else {\n\t\t\t\t\tSchedulerService.addTask(this.taskId, this.clientId, this.task, timeSpec);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (this.useRest) {\n\t\t\t\t\tSchedulerService.editTaskREST(this.id, this.taskId, this.clientId, this.task, timeSpec)\n\t\t\t\t\t\t.then(() => this.successfulSave())\n\t\t\t\t\t\t.catch((error) => FormErrorHandler.schedulerError(error));\n\t\t\t\t} else {\n\t\t\t\t\tSchedulerService.removeTask(this.id);\n\t\t\t\t\tSchedulerService.addTask(this.taskId, this.clientId, this.task, timeSpec);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tgetCronAlias(input) {\n\t\t\tlet aliases = new Map();\n\t\t\taliases.set('@reboot', '');\n\t\t\taliases.set('@yearly', '0 0 0 1 1 * *');\n\t\t\taliases.set('@annually', '0 0 0 1 1 * *');\n\t\t\taliases.set('@monthly', '0 0 0 1 * * *');\n\t\t\taliases.set('@weekly', '0 0 0 * * 0 *');\n\t\t\taliases.set('@daily', '0 0 0 * * * *');\n\t\t\taliases.set('@hourly', '0 0 * * * * *');\n\t\t\taliases.set('@minutely', '0 * * * * * *');\n\t\t\treturn aliases.get(input);\n\t\t},\n\t\tsuccessfulSave() {\n\t\t\tthis.$router.push('/config/scheduler/');\n\t\t\tthis.$toast.success(\n\t\t\t\tthis.$t('config.scheduler.messages.addSuccess').toString()\n\t\t\t);\n\t\t},\n\t},\n\tpickerSettings: {\n\t\tdateFormat: {\n\t\t\tyear: 'numeric',\n\t\t\tmonth: 'short',\n\t\t\tday: 'numeric',\n\t\t\thour12: false,\n\t\t\thour: 'numeric',\n\t\t\tminute: 'numeric',\n\t\t\tsecond: 'numeric',\n\t\t},\n\t},\n\tmetaInfo() {\n\t\treturn {\n\t\t\ttitle: this.$route.path === '/config/scheduler/add' ?\n\t\t\t\tthis.$t('config.scheduler.add') : this.$t('config.scheduler.edit')\n\t\t};\n\t},\n};\n</script>\n","import { render, staticRenderFns } from \"./SchedulerForm.vue?vue&type=template&id=4bba25e5&\"\nimport script from \"./SchedulerForm.vue?vue&type=script&lang=js&\"\nexport * from \"./SchedulerForm.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('4bba25e5')) {\n      api.createRecord('4bba25e5', component.options)\n    } else {\n      api.reload('4bba25e5', component.options)\n    }\n    module.hot.accept(\"./SchedulerForm.vue?vue&type=template&id=4bba25e5&\", function () {\n      api.rerender('4bba25e5', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/pages/Config/SchedulerForm.vue\"\nexport default component.exports","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"CCard\",\n    { attrs: { \"body-wrapper\": \"\" } },\n    [\n      _c(\"ValidationObserver\", {\n        scopedSlots: _vm._u([\n          {\n            key: \"default\",\n            fn: function(ref) {\n              var invalid = ref.invalid\n              return [\n                _c(\n                  \"CForm\",\n                  {\n                    on: {\n                      submit: function($event) {\n                        $event.preventDefault()\n                        return _vm.handleSubmit($event)\n                      }\n                    }\n                  },\n                  [\n                    _c(\"ValidationProvider\", {\n                      attrs: {\n                        rules: \"required\",\n                        \"custom-messages\": {\n                          required: \"core.user.messages.missing.username\"\n                        }\n                      },\n                      scopedSlots: _vm._u(\n                        [\n                          {\n                            key: \"default\",\n                            fn: function(ref) {\n                              var valid = ref.valid\n                              var touched = ref.touched\n                              var errors = ref.errors\n                              return [\n                                _c(\"CInput\", {\n                                  attrs: {\n                                    label: _vm.$t(\"core.user.username\"),\n                                    \"is-valid\": touched ? valid : null,\n                                    \"invalid-feedback\": _vm.$t(errors[0])\n                                  },\n                                  model: {\n                                    value: _vm.username,\n                                    callback: function($$v) {\n                                      _vm.username = $$v\n                                    },\n                                    expression: \"username\"\n                                  }\n                                })\n                              ]\n                            }\n                          }\n                        ],\n                        null,\n                        true\n                      )\n                    }),\n                    _vm._v(\" \"),\n                    _c(\"ValidationProvider\", {\n                      attrs: {\n                        rules: \"required\",\n                        \"custom-messages\": {\n                          required: \"core.user.messages.missing.password\"\n                        }\n                      },\n                      scopedSlots: _vm._u(\n                        [\n                          {\n                            key: \"default\",\n                            fn: function(ref) {\n                              var valid = ref.valid\n                              var touched = ref.touched\n                              var errors = ref.errors\n                              return [\n                                _c(\"CInput\", {\n                                  attrs: {\n                                    label: _vm.$t(\"core.user.password\"),\n                                    \"is-valid\": touched ? valid : null,\n                                    \"invalid-feedback\": _vm.$t(errors[0]),\n                                    type: \"password\"\n                                  },\n                                  model: {\n                                    value: _vm.password,\n                                    callback: function($$v) {\n                                      _vm.password = $$v\n                                    },\n                                    expression: \"password\"\n                                  }\n                                })\n                              ]\n                            }\n                          }\n                        ],\n                        null,\n                        true\n                      )\n                    }),\n                    _vm._v(\" \"),\n                    _c(\"ValidationProvider\", {\n                      attrs: {\n                        rules: \"required\",\n                        \"custom-messages\": {\n                          required: \"core.user.messages.missing.role\"\n                        }\n                      },\n                      scopedSlots: _vm._u(\n                        [\n                          {\n                            key: \"default\",\n                            fn: function(ref) {\n                              var valid = ref.valid\n                              var touched = ref.touched\n                              var errors = ref.errors\n                              return [\n                                _vm.$store.getters[\"user/getRole\"] === \"power\"\n                                  ? _c(\"CSelect\", {\n                                      attrs: {\n                                        value: _vm.role,\n                                        label: _vm.$t(\"core.user.role\"),\n                                        \"is-valid\": touched ? valid : null,\n                                        \"invalid-feedback\": _vm.$t(errors[0]),\n                                        placeholder: _vm.$t(\n                                          \"core.user.messages.missing.role\"\n                                        ),\n                                        options: [\n                                          {\n                                            value: \"normal\",\n                                            label: _vm.$t(\n                                              \"core.user.roles.normal\"\n                                            )\n                                          },\n                                          {\n                                            value: \"power\",\n                                            label: _vm.$t(\n                                              \"core.user.roles.power\"\n                                            )\n                                          }\n                                        ]\n                                      },\n                                      on: {\n                                        \"update:value\": function($event) {\n                                          _vm.role = $event\n                                        }\n                                      }\n                                    })\n                                  : _vm._e()\n                              ]\n                            }\n                          }\n                        ],\n                        null,\n                        true\n                      )\n                    }),\n                    _vm._v(\" \"),\n                    _c(\"ValidationProvider\", {\n                      attrs: {\n                        rules: \"required\",\n                        \"custom-messages\": {\n                          required: \"core.user.messages.missing.language\"\n                        }\n                      },\n                      scopedSlots: _vm._u(\n                        [\n                          {\n                            key: \"default\",\n                            fn: function(ref) {\n                              var valid = ref.valid\n                              var touched = ref.touched\n                              var errors = ref.errors\n                              return [\n                                _vm.$store.getters[\"user/getRole\"] === \"power\"\n                                  ? _c(\"CSelect\", {\n                                      attrs: {\n                                        value: _vm.language,\n                                        label: _vm.$t(\"core.user.language\"),\n                                        \"is-valid\": touched ? valid : null,\n                                        \"invalid-feedback\": _vm.$t(errors[0]),\n                                        placeholder: _vm.$t(\n                                          \"core.user.messages.missing.language\"\n                                        ),\n                                        options: [\n                                          {\n                                            value: \"en\",\n                                            label: _vm.$t(\n                                              \"core.user.languages.en\"\n                                            )\n                                          }\n                                        ]\n                                      },\n                                      on: {\n                                        \"update:value\": function($event) {\n                                          _vm.language = $event\n                                        }\n                                      }\n                                    })\n                                  : _vm._e()\n                              ]\n                            }\n                          }\n                        ],\n                        null,\n                        true\n                      )\n                    }),\n                    _vm._v(\" \"),\n                    _c(\n                      \"CButton\",\n                      {\n                        attrs: {\n                          color: \"primary\",\n                          type: \"submit\",\n                          disabled: invalid\n                        }\n                      },\n                      [\n                        _vm._v(\n                          \"\\n\\t\\t\\t\\t\" +\n                            _vm._s(_vm.$t(\"forms.add\")) +\n                            \"\\n\\t\\t\\t\"\n                        )\n                      ]\n                    )\n                  ],\n                  1\n                )\n              ]\n            }\n          }\n        ])\n      })\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import axios from 'axios';\nimport { authorizationHeader } from '../helpers/authorizationHeader';\n/**\n * User service\n */\nvar UserService = /** @class */ (function () {\n    function UserService() {\n    }\n    /**\n     * Changes password\n     * @param oldPassword Old password\n     * @param newPassword New password\n     */\n    UserService.prototype.changePassword = function (oldPassword, newPassword) {\n        var body = {\n            old: oldPassword,\n            new: newPassword\n        };\n        return axios.put('user/password', body, { headers: authorizationHeader() });\n    };\n    /**\n     * Adds the new user\n     * @param username Username\n     * @param password Password\n     * @param language Language\n     * @param role Role\n     */\n    UserService.prototype.add = function (username, password, language, role) {\n        var body = {\n            username: username,\n            password: password,\n            language: language,\n            role: role,\n        };\n        return axios.post('users/', body, { headers: authorizationHeader() });\n    };\n    /**\n     * Deletes the user\n     * @param id User ID\n     */\n    UserService.prototype.delete = function (id) {\n        return axios.delete('users/' + id, { headers: authorizationHeader() });\n    };\n    /**\n     * Edits the user\n     * @param id User ID\n     * @param user User settings\n     */\n    UserService.prototype.edit = function (id, user) {\n        return axios.put('users/' + id, user, { headers: authorizationHeader() });\n    };\n    /**\n     * Returns the user\n     * @param id User ID\n     */\n    UserService.prototype.get = function (id) {\n        return axios.get('users/' + id, { headers: authorizationHeader() });\n    };\n    /**\n     * Returns information about the logged in user\n     */\n    UserService.prototype.getLoggedIn = function () {\n        return axios.get('user', { headers: authorizationHeader() });\n    };\n    /**\n     * Lists all users\n     */\n    UserService.prototype.list = function () {\n        return axios.get('users', { headers: authorizationHeader() });\n    };\n    return UserService;\n}());\nexport default new UserService();\n","import mod from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./UserAdd.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./UserAdd.vue?vue&type=script&lang=ts&\"","import Vue from 'vue';\nimport { CButton, CCard, CForm, CInput, CSelect } from '@coreui/vue/src';\nimport { required } from 'vee-validate/dist/rules';\nimport { extend, ValidationObserver, ValidationProvider } from 'vee-validate';\nimport UserService from '../../services/UserService';\nexport default Vue.extend({\n    name: 'UserAdd',\n    components: {\n        CButton: CButton,\n        CCard: CCard,\n        CForm: CForm,\n        CInput: CInput,\n        CSelect: CSelect,\n        ValidationObserver: ValidationObserver,\n        ValidationProvider: ValidationProvider,\n    },\n    data: function () {\n        return {\n            username: null,\n            password: null,\n            language: null,\n            role: null,\n        };\n    },\n    created: function () {\n        extend('required', required);\n    },\n    methods: {\n        handleSubmit: function () {\n            var _this = this;\n            var _a, _b;\n            var language = (_a = this.language) !== null && _a !== void 0 ? _a : 'en';\n            var role = (_b = this.role) !== null && _b !== void 0 ? _b : 'normal';\n            UserService.add(this.username, this.password, language, role)\n                .then(function () {\n                _this.$router.push('/user/');\n                _this.$toast.success(_this.$t('core.user.messages.add.success', { username: _this.username })\n                    .toString());\n            }).catch(function (error) {\n                if (error.response === undefined) {\n                    return;\n                }\n                if (error.response.status === 409) {\n                    _this.$toast.error(_this.$t('core.user.messages.conflict.username').toString());\n                }\n            });\n        },\n    },\n    metaInfo: {\n        title: 'core.user.add.title',\n    },\n});\n","import { render, staticRenderFns } from \"./UserAdd.vue?vue&type=template&id=19ac1139&\"\nimport script from \"./UserAdd.vue?vue&type=script&lang=ts&\"\nexport * from \"./UserAdd.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('19ac1139')) {\n      api.createRecord('19ac1139', component.options)\n    } else {\n      api.reload('19ac1139', component.options)\n    }\n    module.hot.accept(\"./UserAdd.vue?vue&type=template&id=19ac1139&\", function () {\n      api.rerender('19ac1139', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/pages/Core/UserAdd.vue\"\nexport default component.exports","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"CCard\",\n    { attrs: { \"body-wrapper\": \"\" } },\n    [\n      _vm.loaded\n        ? _c(\"ValidationObserver\", {\n            scopedSlots: _vm._u(\n              [\n                {\n                  key: \"default\",\n                  fn: function(ref) {\n                    var invalid = ref.invalid\n                    return [\n                      _c(\n                        \"CForm\",\n                        {\n                          on: {\n                            submit: function($event) {\n                              $event.preventDefault()\n                              return _vm.handleSubmit($event)\n                            }\n                          }\n                        },\n                        [\n                          _c(\"ValidationProvider\", {\n                            attrs: {\n                              rules: \"required\",\n                              \"custom-messages\": {\n                                required: \"core.user.messages.missing.username\"\n                              }\n                            },\n                            scopedSlots: _vm._u(\n                              [\n                                {\n                                  key: \"default\",\n                                  fn: function(ref) {\n                                    var valid = ref.valid\n                                    var touched = ref.touched\n                                    var errors = ref.errors\n                                    return [\n                                      _c(\"CInput\", {\n                                        attrs: {\n                                          label: _vm.$t(\"core.user.username\"),\n                                          \"is-valid\": touched ? valid : null,\n                                          \"invalid-feedback\": _vm.$t(errors[0])\n                                        },\n                                        model: {\n                                          value: _vm.username,\n                                          callback: function($$v) {\n                                            _vm.username = $$v\n                                          },\n                                          expression: \"username\"\n                                        }\n                                      })\n                                    ]\n                                  }\n                                }\n                              ],\n                              null,\n                              true\n                            )\n                          }),\n                          _vm._v(\" \"),\n                          _c(\"ValidationProvider\", {\n                            attrs: {\n                              rules: \"required\",\n                              \"custom-messages\": {\n                                required: \"core.user.messages.missing.role\"\n                              }\n                            },\n                            scopedSlots: _vm._u(\n                              [\n                                {\n                                  key: \"default\",\n                                  fn: function(ref) {\n                                    var valid = ref.valid\n                                    var touched = ref.touched\n                                    var errors = ref.errors\n                                    return [\n                                      _vm.$store.getters[\"user/getRole\"] ===\n                                      \"power\"\n                                        ? _c(\"CSelect\", {\n                                            attrs: {\n                                              value: _vm.role,\n                                              label: _vm.$t(\"core.user.role\"),\n                                              \"is-valid\": touched\n                                                ? valid\n                                                : null,\n                                              \"invalid-feedback\": _vm.$t(\n                                                errors[0]\n                                              ),\n                                              placeholder: _vm.$t(\n                                                \"core.user.messages.missing.role\"\n                                              ),\n                                              options: [\n                                                {\n                                                  value: \"normal\",\n                                                  label: _vm.$t(\n                                                    \"core.user.roles.normal\"\n                                                  )\n                                                },\n                                                {\n                                                  value: \"power\",\n                                                  label: _vm.$t(\n                                                    \"core.user.roles.power\"\n                                                  )\n                                                }\n                                              ]\n                                            },\n                                            on: {\n                                              \"update:value\": function($event) {\n                                                _vm.role = $event\n                                              }\n                                            }\n                                          })\n                                        : _vm._e()\n                                    ]\n                                  }\n                                }\n                              ],\n                              null,\n                              true\n                            )\n                          }),\n                          _vm._v(\" \"),\n                          _c(\"ValidationProvider\", {\n                            attrs: {\n                              rules: \"required\",\n                              \"custom-messages\": {\n                                required: \"core.user.messages.missing.language\"\n                              }\n                            },\n                            scopedSlots: _vm._u(\n                              [\n                                {\n                                  key: \"default\",\n                                  fn: function(ref) {\n                                    var valid = ref.valid\n                                    var touched = ref.touched\n                                    var errors = ref.errors\n                                    return [\n                                      _vm.$store.getters[\"user/getRole\"] ===\n                                      \"power\"\n                                        ? _c(\"CSelect\", {\n                                            attrs: {\n                                              value: _vm.language,\n                                              label: _vm.$t(\n                                                \"core.user.language\"\n                                              ),\n                                              \"is-valid\": touched\n                                                ? valid\n                                                : null,\n                                              \"invalid-feedback\": _vm.$t(\n                                                errors[0]\n                                              ),\n                                              placeholder: _vm.$t(\n                                                \"core.user.messages.missing.language\"\n                                              ),\n                                              options: [\n                                                {\n                                                  value: \"en\",\n                                                  label: _vm.$t(\n                                                    \"core.user.languages.en\"\n                                                  )\n                                                }\n                                              ]\n                                            },\n                                            on: {\n                                              \"update:value\": function($event) {\n                                                _vm.language = $event\n                                              }\n                                            }\n                                          })\n                                        : _vm._e()\n                                    ]\n                                  }\n                                }\n                              ],\n                              null,\n                              true\n                            )\n                          }),\n                          _vm._v(\" \"),\n                          _vm.$store.getters[\"user/getId\"] === _vm.userId\n                            ? _c(\n                                \"div\",\n                                [\n                                  _c(\"ValidationProvider\", {\n                                    attrs: {\n                                      rules:\n                                        _vm.newPassword !== null\n                                          ? \"required\"\n                                          : \"\",\n                                      \"custom-messages\": {\n                                        required:\n                                          \"core.user.messages.missing.oldPassword\"\n                                      }\n                                    },\n                                    scopedSlots: _vm._u(\n                                      [\n                                        {\n                                          key: \"default\",\n                                          fn: function(ref) {\n                                            var valid = ref.valid\n                                            var touched = ref.touched\n                                            var errors = ref.errors\n                                            return [\n                                              _c(\"CInput\", {\n                                                attrs: {\n                                                  label: _vm.$t(\n                                                    \"core.user.oldPassword\"\n                                                  ),\n                                                  \"is-valid\": touched\n                                                    ? valid\n                                                    : null,\n                                                  \"invalid-feedback\": _vm.$t(\n                                                    errors[0]\n                                                  ),\n                                                  type: \"password\",\n                                                  autocomplete:\n                                                    \"current-password\"\n                                                },\n                                                model: {\n                                                  value: _vm.oldPassword,\n                                                  callback: function($$v) {\n                                                    _vm.oldPassword = $$v\n                                                  },\n                                                  expression: \"oldPassword\"\n                                                }\n                                              })\n                                            ]\n                                          }\n                                        }\n                                      ],\n                                      null,\n                                      true\n                                    )\n                                  }),\n                                  _vm._v(\" \"),\n                                  _c(\"ValidationProvider\", {\n                                    attrs: {\n                                      rules:\n                                        _vm.oldPassword !== null\n                                          ? \"required\"\n                                          : \"\",\n                                      \"custom-messages\": {\n                                        required:\n                                          \"core.user.messages.missing.newPassword\"\n                                      }\n                                    },\n                                    scopedSlots: _vm._u(\n                                      [\n                                        {\n                                          key: \"default\",\n                                          fn: function(ref) {\n                                            var valid = ref.valid\n                                            var touched = ref.touched\n                                            var errors = ref.errors\n                                            return [\n                                              _c(\"CInput\", {\n                                                attrs: {\n                                                  label: _vm.$t(\n                                                    \"core.user.newPassword\"\n                                                  ),\n                                                  \"is-valid\": touched\n                                                    ? valid\n                                                    : null,\n                                                  \"invalid-feedback\": _vm.$t(\n                                                    errors[0]\n                                                  ),\n                                                  type: \"password\",\n                                                  autocomplete: \"new-password\"\n                                                },\n                                                model: {\n                                                  value: _vm.newPassword,\n                                                  callback: function($$v) {\n                                                    _vm.newPassword = $$v\n                                                  },\n                                                  expression: \"newPassword\"\n                                                }\n                                              })\n                                            ]\n                                          }\n                                        }\n                                      ],\n                                      null,\n                                      true\n                                    )\n                                  })\n                                ],\n                                1\n                              )\n                            : _vm._e(),\n                          _vm._v(\" \"),\n                          _c(\n                            \"CButton\",\n                            {\n                              attrs: {\n                                color: \"primary\",\n                                type: \"submit\",\n                                disabled: invalid\n                              }\n                            },\n                            [\n                              _vm._v(\n                                \"\\n\\t\\t\\t\\t\" +\n                                  _vm._s(_vm.$t(\"forms.save\")) +\n                                  \"\\n\\t\\t\\t\"\n                              )\n                            ]\n                          )\n                        ],\n                        1\n                      )\n                    ]\n                  }\n                }\n              ],\n              null,\n              false,\n              2633783158\n            )\n          })\n        : _vm._e()\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import Vue from 'vue';\nimport { CButton, CCard, CForm, CInput, CSelect } from '@coreui/vue/src';\nimport { required, } from 'vee-validate/dist/rules';\nimport { extend, ValidationObserver, ValidationProvider } from 'vee-validate';\nimport UserService from '../../services/UserService';\nexport default Vue.extend({\n    name: 'UserEdit',\n    components: {\n        CButton: CButton,\n        CCard: CCard,\n        CForm: CForm,\n        CInput: CInput,\n        CSelect: CSelect,\n        ValidationObserver: ValidationObserver,\n        ValidationProvider: ValidationProvider,\n    },\n    props: {\n        userId: {\n            type: Number,\n            required: true,\n        }\n    },\n    data: function () {\n        return {\n            loaded: false,\n            username: null,\n            language: null,\n            role: null,\n            oldPassword: null,\n            newPassword: null,\n        };\n    },\n    created: function () {\n        var _this = this;\n        extend('required', required);\n        this.$store.commit('spinner/SHOW');\n        UserService.get(this.userId)\n            .then(function (response) {\n            _this.loaded = true;\n            _this.username = response.data.username;\n            _this.language = response.data.language;\n            _this.role = response.data.role;\n            _this.$store.commit('spinner/HIDE');\n        })\n            .catch(function (error) {\n            _this.loaded = false;\n            _this.$store.commit('spinner/HIDE');\n            if (error.response === undefined) {\n                return;\n            }\n            if (error.response.status === 404) {\n                _this.$router.push('/user/');\n                _this.$toast.error(_this.$t('core.user.messages.notFound').toString());\n            }\n        });\n    },\n    methods: {\n        handleSubmit: function () {\n            var _this = this;\n            if (this.$store.getters['user/getId'] === this.userId &&\n                this.oldPassword !== null && this.newPassword !== null) {\n                UserService.changePassword(this.oldPassword, this.newPassword)\n                    .then(function () {\n                    _this.performEdit();\n                    _this.signOut();\n                })\n                    .catch(function () {\n                    _this.$toast.error(_this.$t('core.user.messages.invalid.oldPassword').toString());\n                });\n            }\n            else {\n                this.performEdit();\n                if (this.$store.getters['user/getId'] === this.userId) {\n                    this.signOut();\n                }\n            }\n        },\n        performEdit: function () {\n            var _this = this;\n            return UserService.edit(this.userId, {\n                username: this.username,\n                language: this.language,\n                role: this.role,\n            })\n                .then(function () {\n                _this.$router.push('/user/');\n                _this.$toast.success(_this.$t('core.user.messages.edit.success', { username: _this.username })\n                    .toString());\n            })\n                .catch(function (error) {\n                if (error.response === undefined) {\n                    return;\n                }\n                if (error.response.status === 409) {\n                    _this.$toast.error(_this.$t('core.user.messages.conflict.username').toString());\n                }\n            });\n        },\n        signOut: function () {\n            this.$store.dispatch('user/signOut')\n                .then(function () {\n                location.replace('/sign/in');\n            });\n        }\n    },\n    metaInfo: {\n        title: 'core.user.edit.title',\n    },\n});\n","import mod from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./UserEdit.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./UserEdit.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./UserEdit.vue?vue&type=template&id=70c685bc&\"\nimport script from \"./UserEdit.vue?vue&type=script&lang=ts&\"\nexport * from \"./UserEdit.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('70c685bc')) {\n      api.createRecord('70c685bc', component.options)\n    } else {\n      api.reload('70c685bc', component.options)\n    }\n    module.hot.accept(\"./UserEdit.vue?vue&type=template&id=70c685bc&\", function () {\n      api.rerender('70c685bc', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/pages/Core/UserEdit.vue\"\nexport default component.exports","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\n        \"CCard\",\n        [\n          _c(\n            \"CCardHeader\",\n            [\n              _c(\n                \"CButton\",\n                {\n                  staticClass: \"float-right\",\n                  attrs: { color: \"success\", to: \"/user/add/\", size: \"sm\" }\n                },\n                [\n                  _c(\"CIcon\", { attrs: { content: _vm.$options.icons.add } }),\n                  _vm._v(\n                    \"\\n\\t\\t\\t\\t\" +\n                      _vm._s(_vm.$t(\"table.actions.add\")) +\n                      \"\\n\\t\\t\\t\"\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"CCardBody\",\n            [\n              _c(\"CDataTable\", {\n                attrs: {\n                  items: _vm.users,\n                  fields: _vm.fields,\n                  \"column-filter\": true,\n                  \"items-per-page\": 20,\n                  pagination: true,\n                  striped: true,\n                  sorter: { external: false, resetable: true }\n                },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"role\",\n                    fn: function(ref) {\n                      var item = ref.item\n                      return [\n                        _c(\n                          \"td\",\n                          [\n                            _c(\n                              \"CDropdown\",\n                              {\n                                attrs: {\n                                  color: \"success\",\n                                  \"toggler-text\": _vm.$t(\n                                    \"core.user.roles.\" + item.role\n                                  ),\n                                  size: \"sm\"\n                                }\n                              },\n                              [\n                                _c(\n                                  \"CDropdownItem\",\n                                  {\n                                    on: {\n                                      click: function($event) {\n                                        return _vm.changeRole(item, \"normal\")\n                                      }\n                                    }\n                                  },\n                                  [\n                                    _vm._v(\n                                      \"\\n\\t\\t\\t\\t\\t\\t\\t\\t\" +\n                                        _vm._s(\n                                          _vm.$t(\"core.user.roles.normal\")\n                                        ) +\n                                        \"\\n\\t\\t\\t\\t\\t\\t\\t\"\n                                    )\n                                  ]\n                                ),\n                                _vm._v(\" \"),\n                                _c(\n                                  \"CDropdownItem\",\n                                  {\n                                    on: {\n                                      click: function($event) {\n                                        return _vm.changeRole(item, \"power\")\n                                      }\n                                    }\n                                  },\n                                  [\n                                    _vm._v(\n                                      \"\\n\\t\\t\\t\\t\\t\\t\\t\\t\" +\n                                        _vm._s(\n                                          _vm.$t(\"core.user.roles.power\")\n                                        ) +\n                                        \"\\n\\t\\t\\t\\t\\t\\t\\t\"\n                                    )\n                                  ]\n                                )\n                              ],\n                              1\n                            )\n                          ],\n                          1\n                        )\n                      ]\n                    }\n                  },\n                  {\n                    key: \"language\",\n                    fn: function(ref) {\n                      var item = ref.item\n                      return [\n                        _c(\n                          \"td\",\n                          [\n                            _c(\n                              \"CDropdown\",\n                              {\n                                attrs: {\n                                  color: \"success\",\n                                  \"toggler-text\": _vm.$t(\n                                    \"core.user.languages.\" + item.language\n                                  ),\n                                  size: \"sm\"\n                                }\n                              },\n                              [\n                                _c(\n                                  \"CDropdownItem\",\n                                  {\n                                    on: {\n                                      click: function($event) {\n                                        return _vm.changeLanguage(item, \"en\")\n                                      }\n                                    }\n                                  },\n                                  [\n                                    _vm._v(\n                                      \"\\n\\t\\t\\t\\t\\t\\t\\t\\t\" +\n                                        _vm._s(\n                                          _vm.$t(\"core.user.languages.en\")\n                                        ) +\n                                        \"\\n\\t\\t\\t\\t\\t\\t\\t\"\n                                    )\n                                  ]\n                                )\n                              ],\n                              1\n                            )\n                          ],\n                          1\n                        )\n                      ]\n                    }\n                  },\n                  {\n                    key: \"actions\",\n                    fn: function(ref) {\n                      var item = ref.item\n                      return [\n                        _c(\n                          \"td\",\n                          { staticClass: \"col-actions\" },\n                          [\n                            _vm.$store.getters[\"user/getRole\"] === \"power\" ||\n                            _vm.$store.getters[\"user/getName\"] === item.username\n                              ? _c(\n                                  \"CButton\",\n                                  {\n                                    attrs: {\n                                      color: \"primary\",\n                                      to: \"/user/edit/\" + item.id,\n                                      size: \"sm\"\n                                    }\n                                  },\n                                  [\n                                    _c(\"CIcon\", {\n                                      attrs: {\n                                        content: _vm.$options.icons.edit\n                                      }\n                                    }),\n                                    _vm._v(\n                                      \"\\n\\t\\t\\t\\t\\t\\t\\t\" +\n                                        _vm._s(_vm.$t(\"table.actions.edit\")) +\n                                        \"\\n\\t\\t\\t\\t\\t\\t\"\n                                    )\n                                  ],\n                                  1\n                                )\n                              : _vm._e(),\n                            _vm._v(\" \"),\n                            _c(\n                              \"CButton\",\n                              {\n                                attrs: { color: \"danger\", size: \"sm\" },\n                                on: {\n                                  click: function($event) {\n                                    return _vm.confirmDelete(item)\n                                  }\n                                }\n                              },\n                              [\n                                _c(\"CIcon\", {\n                                  attrs: { content: _vm.$options.icons.delete }\n                                }),\n                                _vm._v(\n                                  \"\\n\\t\\t\\t\\t\\t\\t\\t\" +\n                                    _vm._s(_vm.$t(\"table.actions.delete\")) +\n                                    \"\\n\\t\\t\\t\\t\\t\\t\"\n                                )\n                              ],\n                              1\n                            )\n                          ],\n                          1\n                        )\n                      ]\n                    }\n                  }\n                ])\n              })\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"CModal\",\n        {\n          attrs: { color: \"danger\", show: _vm.modals.delete.user !== null },\n          on: {\n            \"update:show\": function($event) {\n              return _vm.$set(_vm.modals.delete, \"user !== null\", $event)\n            }\n          },\n          scopedSlots: _vm._u([\n            {\n              key: \"header\",\n              fn: function() {\n                return [\n                  _c(\"h5\", { staticClass: \"modal-title\" }, [\n                    _vm._v(\n                      \"\\n\\t\\t\\t\\t\" +\n                        _vm._s(\n                          _vm.$t(\"core.user.messages.delete.confirmTitle\")\n                        ) +\n                        \"\\n\\t\\t\\t\"\n                    )\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"CButtonClose\", {\n                    staticClass: \"text-white\",\n                    on: {\n                      click: function($event) {\n                        _vm.modals.delete.user = null\n                      }\n                    }\n                  })\n                ]\n              },\n              proxy: true\n            },\n            {\n              key: \"footer\",\n              fn: function() {\n                return [\n                  _c(\n                    \"CButton\",\n                    {\n                      attrs: { color: \"danger\" },\n                      on: {\n                        click: function($event) {\n                          _vm.modals.delete.user = null\n                        }\n                      }\n                    },\n                    [\n                      _vm._v(\n                        \"\\n\\t\\t\\t\\t\" + _vm._s(_vm.$t(\"forms.no\")) + \"\\n\\t\\t\\t\"\n                      )\n                    ]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"CButton\",\n                    {\n                      attrs: { color: \"success\" },\n                      on: { click: _vm.performDelete }\n                    },\n                    [\n                      _vm._v(\n                        \"\\n\\t\\t\\t\\t\" + _vm._s(_vm.$t(\"forms.yes\")) + \"\\n\\t\\t\\t\"\n                      )\n                    ]\n                  )\n                ]\n              },\n              proxy: true\n            }\n          ])\n        },\n        [\n          _vm._v(\" \"),\n          _vm.modals.delete.user !== null\n            ? _c(\"span\", [\n                _vm._v(\n                  \"\\n\\t\\t\\t\" +\n                    _vm._s(\n                      _vm.$t(\"core.user.messages.delete.confirm\", {\n                        username: _vm.modals.delete.user.username\n                      })\n                    ) +\n                    \"\\n\\t\\t\"\n                )\n              ])\n            : _vm._e()\n        ]\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","<template>\n\t<div>\n\t\t<CCard>\n\t\t\t<CCardHeader>\n\t\t\t\t<CButton\n\t\t\t\t\tcolor='success'\n\t\t\t\t\tto='/user/add/'\n\t\t\t\t\tsize='sm'\n\t\t\t\t\tclass='float-right'\n\t\t\t\t>\n\t\t\t\t\t<CIcon :content='$options.icons.add' />\n\t\t\t\t\t{{ $t('table.actions.add') }}\n\t\t\t\t</CButton>\n\t\t\t</CCardHeader>\n\t\t\t<CCardBody>\n\t\t\t\t<CDataTable\n\t\t\t\t\t:items='users'\n\t\t\t\t\t:fields='fields'\n\t\t\t\t\t:column-filter='true'\n\t\t\t\t\t:items-per-page='20'\n\t\t\t\t\t:pagination='true'\n\t\t\t\t\t:striped='true'\n\t\t\t\t\t:sorter='{ external: false, resetable: true }'\n\t\t\t\t>\n\t\t\t\t\t<template #role='{item}'>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<CDropdown\n\t\t\t\t\t\t\t\tcolor='success'\n\t\t\t\t\t\t\t\t:toggler-text='$t(\"core.user.roles.\" + item.role)'\n\t\t\t\t\t\t\t\tsize='sm'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<CDropdownItem @click='changeRole(item, \"normal\")'>\n\t\t\t\t\t\t\t\t\t{{ $t('core.user.roles.normal') }}\n\t\t\t\t\t\t\t\t</CDropdownItem>\n\t\t\t\t\t\t\t\t<CDropdownItem @click='changeRole(item, \"power\")'>\n\t\t\t\t\t\t\t\t\t{{ $t('core.user.roles.power') }}\n\t\t\t\t\t\t\t\t</CDropdownItem>\n\t\t\t\t\t\t\t</CDropdown>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</template>\n\t\t\t\t\t<template #language='{item}'>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<CDropdown\n\t\t\t\t\t\t\t\tcolor='success'\n\t\t\t\t\t\t\t\t:toggler-text='$t(\"core.user.languages.\" + item.language)'\n\t\t\t\t\t\t\t\tsize='sm'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<CDropdownItem @click='changeLanguage(item, \"en\")'>\n\t\t\t\t\t\t\t\t\t{{ $t('core.user.languages.en') }}\n\t\t\t\t\t\t\t\t</CDropdownItem>\n\t\t\t\t\t\t\t</CDropdown>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</template>\n\t\t\t\t\t<template #actions='{item}'>\n\t\t\t\t\t\t<td class='col-actions'>\n\t\t\t\t\t\t\t<CButton\n\t\t\t\t\t\t\t\tv-if='$store.getters[\"user/getRole\"] === \"power\" || $store.getters[\"user/getName\"] === item.username'\n\t\t\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\t\t\t:to='\"/user/edit/\" + item.id'\n\t\t\t\t\t\t\t\tsize='sm'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<CIcon :content='$options.icons.edit' />\n\t\t\t\t\t\t\t\t{{ $t('table.actions.edit') }}\n\t\t\t\t\t\t\t</CButton>\n\t\t\t\t\t\t\t<CButton color='danger' size='sm' @click='confirmDelete(item)'>\n\t\t\t\t\t\t\t\t<CIcon :content='$options.icons.delete' />\n\t\t\t\t\t\t\t\t{{ $t('table.actions.delete') }}\n\t\t\t\t\t\t\t</CButton>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</template>\n\t\t\t\t</CDataTable>\n\t\t\t</CCardBody>\n\t\t</CCard>\n\t\t<CModal\n\t\t\tcolor='danger'\n\t\t\t:show.sync='modals.delete.user !== null'\n\t\t>\n\t\t\t<template #header>\n\t\t\t\t<h5 class='modal-title'>\n\t\t\t\t\t{{ $t('core.user.messages.delete.confirmTitle') }}\n\t\t\t\t</h5>\n\t\t\t\t<CButtonClose class='text-white' @click='modals.delete.user = null' />\n\t\t\t</template>\n\t\t\t<span v-if='modals.delete.user !== null'>\n\t\t\t\t{{ $t('core.user.messages.delete.confirm', {username: modals.delete.user.username}) }}\n\t\t\t</span>\n\t\t\t<template #footer>\n\t\t\t\t<CButton color='danger' @click='modals.delete.user = null'>\n\t\t\t\t\t{{ $t('forms.no') }}\n\t\t\t\t</CButton>\n\t\t\t\t<CButton color='success' @click='performDelete'>\n\t\t\t\t\t{{ $t('forms.yes') }}\n\t\t\t\t</CButton>\n\t\t\t</template>\n\t\t</CModal>\n\t</div>\n</template>\n\n<script>\nimport {\n\tCButton,\n\tCButtonClose,\n\tCCard,\n\tCCardBody,\n\tCCardHeader,\n\tCDataTable,\n\tCDropdown,\n\tCDropdownItem,\n\tCIcon,\n\tCModal\n} from '@coreui/vue/src';\nimport {cilPencil, cilPlus, cilTrash} from '@coreui/icons';\nimport UserService from '../../services/UserService';\n\nexport default {\n\tname: 'UserList',\n\tcomponents: {\n\t\tCButton,\n\t\tCButtonClose,\n\t\tCCard,\n\t\tCCardBody,\n\t\tCCardHeader,\n\t\tCDataTable,\n\t\tCDropdown,\n\t\tCDropdownItem,\n\t\tCIcon,\n\t\tCModal,\n\t},\n\tdata() {\n\t\tlet fields = [];\n\t\tif (this.$store.getters['user/getRole'] === 'normal') {\n\t\t\tfields = [\n\t\t\t\t{\n\t\t\t\t\tkey: 'username',\n\t\t\t\t\tlabel: this.$t('core.user.username'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: 'actions',\n\t\t\t\t\tlabel: this.$t('table.actions.title'),\n\t\t\t\t\tsorter: false,\n\t\t\t\t\tfilter: false,\n\t\t\t\t},\n\t\t\t];\n\t\t} else {\n\t\t\tfields = [\n\t\t\t\t{\n\t\t\t\t\tkey: 'id',\n\t\t\t\t\tlabel: this.$t('core.user.id'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: 'username',\n\t\t\t\t\tlabel: this.$t('core.user.username'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: 'role',\n\t\t\t\t\tlabel: this.$t('core.user.role'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: 'language',\n\t\t\t\t\tlabel: this.$t('core.user.language'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: 'actions',\n\t\t\t\t\tlabel: this.$t('table.actions.title'),\n\t\t\t\t\tsorter: false,\n\t\t\t\t\tfilter: false,\n\t\t\t\t},\n\t\t\t];\n\t\t}\n\t\treturn {\n\t\t\tfields,\n\t\t\tmodals: {\n\t\t\t\tdelete: {\n\t\t\t\t\tuser: null,\n\t\t\t\t}\n\t\t\t},\n\t\t\tusers: [],\n\t\t};\n\t},\n\tcreated() {\n\t\tthis.$store.commit('spinner/SHOW');\n\t\tthis.getUsers();\n\t},\n\tmethods: {\n\t\tgetUsers() {\n\t\t\treturn UserService.list()\n\t\t\t\t.then((response) => {\n\t\t\t\t\tthis.$store.commit('spinner/HIDE');\n\t\t\t\t\tthis.users = response.data;\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tthis.$store.commit('spinner/HIDE');\n\t\t\t\t});\n\t\t},\n\t\tchangeRole(user, newRole) {\n\t\t\tthis.edit(user, {role: newRole});\n\t\t},\n\t\tchangeLanguage(user, newLanguage) {\n\t\t\tthis.edit(user, {language: newLanguage});\n\t\t},\n\t\tedit(user, newSettings) {\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\tlet settings = {\n\t\t\t\t...user,\n\t\t\t\t...newSettings,\n\t\t\t};\n\t\t\tdelete settings.id;\n\t\t\treturn UserService.edit(user.id, settings)\n\t\t\t\t.then(() => {\n\t\t\t\t\tthis.getUsers().then(() => {\n\t\t\t\t\t\tthis.$toast.success(\n\t\t\t\t\t\t\tthis.$t('core.user.messages.edit.success', {username: user.username})\n\t\t\t\t\t\t\t\t.toString()\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tthis.$store.commit('spinner/HIDE');\n\t\t\t\t});\n\t\t},\n\t\tconfirmDelete(user) {\n\t\t\tthis.modals.delete.user = user;\n\t\t},\n\t\tperformDelete() {\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\tconst user = this.modals.delete.user;\n\t\t\tthis.modals.delete.user = null;\n\t\t\tUserService.delete(user.id)\n\t\t\t\t.then(() => {\n\t\t\t\t\tthis.getUsers().then(() => {\n\t\t\t\t\t\tthis.$toast.success(\n\t\t\t\t\t\t\tthis.$t('core.user.messages.delete.success', {username: user.username})\n\t\t\t\t\t\t\t\t.toString()\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tthis.$store.commit('spinner/HIDE');\n\t\t\t\t});\n\t\t},\n\t},\n\ticons: {\n\t\tadd: cilPlus,\n\t\tdelete: cilTrash,\n\t\tedit: cilPencil,\n\t},\n\tmetaInfo: {\n\t\ttitle: 'core.user.title',\n\t},\n};\n</script>\n","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./UserList.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./UserList.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./UserList.vue?vue&type=template&id=8f56d494&\"\nimport script from \"./UserList.vue?vue&type=script&lang=js&\"\nexport * from \"./UserList.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('8f56d494')) {\n      api.createRecord('8f56d494', component.options)\n    } else {\n      api.reload('8f56d494', component.options)\n    }\n    module.hot.accept(\"./UserList.vue?vue&type=template&id=8f56d494&\", function () {\n      api.rerender('8f56d494', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/pages/Core/UserList.vue\"\nexport default component.exports","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\n        \"CCard\",\n        [\n          _c(\n            \"CCardHeader\",\n            [\n              _c(\n                \"CButton\",\n                {\n                  staticClass: \"float-right\",\n                  attrs: { color: \"success\", size: \"sm\", to: \"/api-key/add\" }\n                },\n                [\n                  _c(\"CIcon\", { attrs: { content: _vm.$options.icons.add } }),\n                  _vm._v(\n                    \"\\n\\t\\t\\t\\t\" +\n                      _vm._s(_vm.$t(\"table.actions.add\")) +\n                      \"\\n\\t\\t\\t\"\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"CCardBody\",\n            [\n              _c(\"CDataTable\", {\n                attrs: {\n                  fields: _vm.fields,\n                  items: _vm.keys,\n                  striped: true,\n                  pagination: true,\n                  \"items-per-page\": 20,\n                  \"column-filter\": true,\n                  sorter: { external: false, resetable: true }\n                },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"expiration\",\n                    fn: function(ref) {\n                      var item = ref.item\n                      return [\n                        item.expiration !== null\n                          ? _c(\"td\", [\n                              _vm._v(\n                                \"\\n\\t\\t\\t\\t\\t\\t\" +\n                                  _vm._s(_vm.timeString(item)) +\n                                  \"\\n\\t\\t\\t\\t\\t\"\n                              )\n                            ])\n                          : _c(\"td\", [\n                              _vm._v(\"\\n\\t\\t\\t\\t\\t\\tnever\\n\\t\\t\\t\\t\\t\")\n                            ])\n                      ]\n                    }\n                  },\n                  {\n                    key: \"actions\",\n                    fn: function(ref) {\n                      var item = ref.item\n                      return [\n                        _c(\n                          \"td\",\n                          { staticClass: \"col-actions\" },\n                          [\n                            _c(\n                              \"CButton\",\n                              {\n                                attrs: {\n                                  color: \"info\",\n                                  size: \"sm\",\n                                  to: \"/api-key/edit/\" + item.id\n                                }\n                              },\n                              [\n                                _c(\"CIcon\", {\n                                  attrs: { content: _vm.$options.icons.edit }\n                                }),\n                                _vm._v(\n                                  \"\\n\\t\\t\\t\\t\\t\\t\\t\" +\n                                    _vm._s(_vm.$t(\"table.actions.edit\")) +\n                                    \"\\n\\t\\t\\t\\t\\t\\t\"\n                                )\n                              ],\n                              1\n                            ),\n                            _vm._v(\" \"),\n                            _c(\n                              \"CButton\",\n                              {\n                                attrs: { color: \"danger\", size: \"sm\" },\n                                on: {\n                                  click: function($event) {\n                                    _vm.modals.key = item.id\n                                  }\n                                }\n                              },\n                              [\n                                _c(\"CIcon\", {\n                                  attrs: { content: _vm.$options.icons.remove }\n                                }),\n                                _vm._v(\n                                  \"\\n\\t\\t\\t\\t\\t\\t\\t\" +\n                                    _vm._s(_vm.$t(\"table.actions.delete\")) +\n                                    \"\\n\\t\\t\\t\\t\\t\\t\"\n                                )\n                              ],\n                              1\n                            )\n                          ],\n                          1\n                        )\n                      ]\n                    }\n                  }\n                ])\n              })\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"CModal\",\n        {\n          attrs: { color: \"danger\", show: _vm.modals.key !== null },\n          on: {\n            \"update:show\": function($event) {\n              return _vm.$set(_vm.modals, \"key !== null\", $event)\n            }\n          },\n          scopedSlots: _vm._u([\n            {\n              key: \"header\",\n              fn: function() {\n                return [\n                  _c(\"h5\", { staticClass: \"modal-title\" }, [\n                    _vm._v(\n                      \"\\n\\t\\t\\t\\t\" +\n                        _vm._s(_vm.$t(\"core.apiKey.messages.deleteTitle\")) +\n                        \"\\n\\t\\t\\t\"\n                    )\n                  ])\n                ]\n              },\n              proxy: true\n            },\n            {\n              key: \"footer\",\n              fn: function() {\n                return [\n                  _c(\n                    \"CButton\",\n                    {\n                      attrs: { color: \"danger\" },\n                      on: {\n                        click: function($event) {\n                          _vm.modals.key = null\n                        }\n                      }\n                    },\n                    [\n                      _vm._v(\n                        \"\\n\\t\\t\\t\\t\" + _vm._s(_vm.$t(\"forms.no\")) + \"\\n\\t\\t\\t\"\n                      )\n                    ]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"CButton\",\n                    {\n                      attrs: { color: \"success\" },\n                      on: { click: _vm.removeKey }\n                    },\n                    [\n                      _vm._v(\n                        \"\\n\\t\\t\\t\\t\" + _vm._s(_vm.$t(\"forms.yes\")) + \"\\n\\t\\t\\t\"\n                      )\n                    ]\n                  )\n                ]\n              },\n              proxy: true\n            }\n          ])\n        },\n        [\n          _vm._v(\n            \"\\n\\t\\t\" +\n              _vm._s(\n                _vm.$t(\"core.apiKey.messages.deletePrompt\", {\n                  key: _vm.modals.key\n                })\n              ) +\n              \"\\n\\t\\t\"\n          )\n        ]\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import axios from 'axios';\nimport { authorizationHeader } from '../helpers/authorizationHeader';\n/**\n * API key service\n */\nvar ApiKeyService = /** @class */ (function () {\n    function ApiKeyService() {\n    }\n    /**\n     * Retrieves list of API keys\n     */\n    ApiKeyService.prototype.getApiKeys = function () {\n        return axios.get('apiKeys', { headers: authorizationHeader() });\n    };\n    /**\n     * Adds a new API key\n     * @param keyData new API key metadata\n     */\n    ApiKeyService.prototype.addApiKey = function (keyData) {\n        return axios.post('apiKeys', keyData, { headers: authorizationHeader() });\n    };\n    /**\n     * Retrieves API key specified by ID\n     * @param keyId API key ID\n     */\n    ApiKeyService.prototype.getApiKey = function (keyId) {\n        return axios.get('apiKeys/' + keyId, { headers: authorizationHeader() });\n    };\n    /**\n     * Updates metadata of API key specified by ID\n     * @param keyId API key ID\n     * @param keyData API key metadata\n     */\n    ApiKeyService.prototype.editApiKey = function (keyId, keyData) {\n        return axios.put('apiKeys/' + keyId, keyData, { headers: authorizationHeader() });\n    };\n    /**\n     * Removes API key specified by ID\n     * @param keyId API key ID\n     */\n    ApiKeyService.prototype.deleteApiKey = function (keyId) {\n        return axios.delete('apiKeys/' + keyId, { headers: authorizationHeader() });\n    };\n    return ApiKeyService;\n}());\nexport default new ApiKeyService();\n","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ApiKeyList.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ApiKeyList.vue?vue&type=script&lang=js&\"","<template>\n\t<div>\n\t\t<CCard>\n\t\t\t<CCardHeader>\n\t\t\t\t<CButton\n\t\t\t\t\tcolor='success'\n\t\t\t\t\tsize='sm'\n\t\t\t\t\tclass='float-right'\n\t\t\t\t\tto='/api-key/add'\n\t\t\t\t>\n\t\t\t\t\t<CIcon :content='$options.icons.add' />\n\t\t\t\t\t{{ $t('table.actions.add') }}\n\t\t\t\t</CButton>\n\t\t\t</CCardHeader>\n\t\t\t<CCardBody>\n\t\t\t\t<CDataTable\n\t\t\t\t\t:fields='fields'\n\t\t\t\t\t:items='keys'\n\t\t\t\t\t:striped='true'\n\t\t\t\t\t:pagination='true'\n\t\t\t\t\t:items-per-page='20'\n\t\t\t\t\t:column-filter='true'\n\t\t\t\t\t:sorter='{external: false, resetable: true}'\n\t\t\t\t>\n\t\t\t\t\t<template #expiration='{item}'>\n\t\t\t\t\t\t<td v-if='item.expiration !== null'>\n\t\t\t\t\t\t\t{{ timeString(item) }}\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td v-else>\n\t\t\t\t\t\t\tnever\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</template>\n\t\t\t\t\t<template #actions='{item}'>\n\t\t\t\t\t\t<td class='col-actions'>\n\t\t\t\t\t\t\t<CButton\n\t\t\t\t\t\t\t\tcolor='info'\n\t\t\t\t\t\t\t\tsize='sm'\n\t\t\t\t\t\t\t\t:to='\"/api-key/edit/\" + item.id'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<CIcon :content='$options.icons.edit' />\n\t\t\t\t\t\t\t\t{{ $t('table.actions.edit') }}\n\t\t\t\t\t\t\t</CButton>\n\t\t\t\t\t\t\t<CButton\n\t\t\t\t\t\t\t\tcolor='danger'\n\t\t\t\t\t\t\t\tsize='sm'\n\t\t\t\t\t\t\t\t@click='modals.key = item.id'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<CIcon :content='$options.icons.remove' />\n\t\t\t\t\t\t\t\t{{ $t('table.actions.delete') }}\n\t\t\t\t\t\t\t</CButton>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</template>\n\t\t\t\t</CDataTable>\n\t\t\t</CCardBody>\n\t\t</CCard>\n\t\t<CModal\n\t\t\tcolor='danger'\n\t\t\t:show.sync='modals.key !== null'\n\t\t>\n\t\t\t<template #header>\n\t\t\t\t<h5 class='modal-title'>\n\t\t\t\t\t{{ $t('core.apiKey.messages.deleteTitle') }}\n\t\t\t\t</h5>\n\t\t\t</template>\n\t\t\t{{ $t('core.apiKey.messages.deletePrompt', {key: modals.key}) }}\n\t\t\t<template #footer>\n\t\t\t\t<CButton color='danger' @click='modals.key = null'>\n\t\t\t\t\t{{ $t('forms.no') }}\n\t\t\t\t</CButton>\n\t\t\t\t<CButton color='success' @click='removeKey'>\n\t\t\t\t\t{{ $t('forms.yes') }}\n\t\t\t\t</CButton>\n\t\t\t</template>\n\t\t</CModal>\n\t</div>\n</template>\n\n<script>\nimport {CButton, CCard, CCardBody, CCardHeader, CDataTable, CIcon} from '@coreui/vue/src';\nimport {cilPencil, cilPlus, cilTrash} from '@coreui/icons';\nimport ApiKeyService from '../../services/ApiKeyService';\nimport FormErrorHandler from '../../helpers/FormErrorHandler';\nimport {DateTime} from 'luxon';\n\nexport default {\n\tname: 'ApiKeyList',\n\tcomponents: {\n\t\tCButton,\n\t\tCCard,\n\t\tCCardBody,\n\t\tCCardHeader,\n\t\tCDataTable,\n\t\tCIcon\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tkeys: null,\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\tkey: 'id',\n\t\t\t\t\tlabel: this.$t('core.apiKey.form.id'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: 'description',\n\t\t\t\t\tlabel: this.$t('core.apiKey.form.description'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: 'expiration',\n\t\t\t\t\tlabel: this.$t('core.apiKey.form.expiration'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: 'actions',\n\t\t\t\t\tlabel: this.$t('table.actions.title'),\n\t\t\t\t\tfilter: false,\n\t\t\t\t\tsorter: false,\n\t\t\t\t},\n\t\t\t],\n\t\t\tmodals: {\n\t\t\t\tkey: null,\n\t\t\t},\n\t\t\tdateFormat: {\n\t\t\t\tyear: 'numeric',\n\t\t\t\tmonth: 'short',\n\t\t\t\tday: 'numeric',\n\t\t\t\thour12: false,\n\t\t\t\thour: 'numeric',\n\t\t\t\tminute: 'numeric',\n\t\t\t\tsecond: 'numeric',\n\t\t\t}\n\t\t};\n\t},\n\tcreated() {\n\t\tthis.getKeys();\n\t},\n\tmethods: {\n\t\tgetKeys() {\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\treturn ApiKeyService.getApiKeys()\n\t\t\t\t.then((response) => {\n\t\t\t\t\tthis.$store.commit('spinner/HIDE');\n\t\t\t\t\tthis.keys = response.data;\n\t\t\t\t})\n\t\t\t\t.catch((error) => FormErrorHandler.apiKeyError(error));\n\t\t},\n\t\tremoveKey() {\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\tconst key = this.modals.key;\n\t\t\tthis.modals.key = null;\n\t\t\tApiKeyService.deleteApiKey(key)\n\t\t\t\t.then(() => {\n\t\t\t\t\tthis.getKeys().then(() => {\n\t\t\t\t\t\tthis.$toast.success(this.$t('core.apiKey.messages.deleteSuccess', {key: key}).toString());\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.catch((error) => FormErrorHandler.apiKeyError(error));\n\t\t},\n\t\ttimeString(item) {\n\t\t\treturn DateTime.fromISO(item.expiration).toLocaleString(this.dateFormat);\n\t\t}\n\t},\n\ticons: {\n\t\tadd: cilPlus,\n\t\tedit: cilPencil,\n\t\tremove: cilTrash\n\t},\n\tmetaInfo: {\n\t\ttitle: 'core.apiKey.title'\n\t}\n};\n</script>\n","import { render, staticRenderFns } from \"./ApiKeyList.vue?vue&type=template&id=705b5c90&\"\nimport script from \"./ApiKeyList.vue?vue&type=script&lang=js&\"\nexport * from \"./ApiKeyList.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('705b5c90')) {\n      api.createRecord('705b5c90', component.options)\n    } else {\n      api.reload('705b5c90', component.options)\n    }\n    module.hot.accept(\"./ApiKeyList.vue?vue&type=template&id=705b5c90&\", function () {\n      api.rerender('705b5c90', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/pages/Core/ApiKeyList.vue\"\nexport default component.exports","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"CCard\",\n    [\n      _c(\n        \"CCardBody\",\n        [\n          _c(\"ValidationObserver\", {\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(ref) {\n                  var invalid = ref.invalid\n                  return [\n                    _c(\n                      \"CForm\",\n                      {\n                        on: {\n                          submit: function($event) {\n                            $event.preventDefault()\n                            return _vm.saveKey($event)\n                          }\n                        }\n                      },\n                      [\n                        _c(\"ValidationProvider\", {\n                          attrs: {\n                            rules: \"required\",\n                            \"custom-messages\": {\n                              required: \"core.apiKey.form.messages.description\"\n                            }\n                          },\n                          scopedSlots: _vm._u(\n                            [\n                              {\n                                key: \"default\",\n                                fn: function(ref) {\n                                  var errors = ref.errors\n                                  var touched = ref.touched\n                                  var valid = ref.valid\n                                  return [\n                                    _c(\"CInput\", {\n                                      attrs: {\n                                        label: _vm.$t(\n                                          \"core.apiKey.form.description\"\n                                        ),\n                                        \"is-valid\": touched ? valid : null,\n                                        \"invalid-feedback\": _vm.$t(errors[0])\n                                      },\n                                      model: {\n                                        value: _vm.metadata.description,\n                                        callback: function($$v) {\n                                          _vm.$set(\n                                            _vm.metadata,\n                                            \"description\",\n                                            $$v\n                                          )\n                                        },\n                                        expression: \"metadata.description\"\n                                      }\n                                    })\n                                  ]\n                                }\n                              }\n                            ],\n                            null,\n                            true\n                          )\n                        }),\n                        _vm._v(\" \"),\n                        _c(\n                          \"div\",\n                          { staticClass: \"form-group\" },\n                          [\n                            _c(\"CInputCheckbox\", {\n                              attrs: {\n                                checked: _vm.useExpiration,\n                                label: _vm.$t(\"core.apiKey.form.expiration\")\n                              },\n                              on: {\n                                \"update:checked\": function($event) {\n                                  _vm.useExpiration = $event\n                                },\n                                change: _vm.clear\n                              }\n                            }),\n                            _vm._v(\" \"),\n                            _c(\"Datetime\", {\n                              attrs: {\n                                type: \"datetime\",\n                                format: _vm.dateFormat,\n                                \"min-datetime\": new Date().toISOString(),\n                                \"input-class\": \"form-control\",\n                                disabled: !_vm.useExpiration\n                              },\n                              model: {\n                                value: _vm.metadata.expiration,\n                                callback: function($$v) {\n                                  _vm.$set(_vm.metadata, \"expiration\", $$v)\n                                },\n                                expression: \"metadata.expiration\"\n                              }\n                            })\n                          ],\n                          1\n                        ),\n                        _vm._v(\" \"),\n                        _c(\n                          \"CButton\",\n                          {\n                            attrs: {\n                              type: \"submit\",\n                              color: \"primary\",\n                              disabled: invalid\n                            }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n\\t\\t\\t\\t\\t\" +\n                                _vm._s(_vm.submitButton) +\n                                \"\\n\\t\\t\\t\\t\"\n                            )\n                          ]\n                        )\n                      ],\n                      1\n                    )\n                  ]\n                }\n              }\n            ])\n          })\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","<template>\n\t<CCard>\n\t\t<CCardBody>\n\t\t\t<ValidationObserver v-slot='{ invalid }'>\n\t\t\t\t<CForm @submit.prevent='saveKey'>\n\t\t\t\t\t<ValidationProvider\n\t\t\t\t\t\tv-slot='{ errors, touched, valid }'\n\t\t\t\t\t\trules='required'\n\t\t\t\t\t\t:custom-messages='{required: \"core.apiKey.form.messages.description\"}'\n\t\t\t\t\t>\n\t\t\t\t\t\t<CInput\n\t\t\t\t\t\t\tv-model='metadata.description'\n\t\t\t\t\t\t\t:label='$t(\"core.apiKey.form.description\")'\n\t\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ValidationProvider>\n\t\t\t\t\t<div class='form-group'>\n\t\t\t\t\t\t<CInputCheckbox\n\t\t\t\t\t\t\t:checked.sync='useExpiration'\n\t\t\t\t\t\t\t:label='$t(\"core.apiKey.form.expiration\")'\n\t\t\t\t\t\t\t@change='clear'\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Datetime\n\t\t\t\t\t\t\tv-model='metadata.expiration'\n\t\t\t\t\t\t\ttype='datetime'\n\t\t\t\t\t\t\t:format='dateFormat'\n\t\t\t\t\t\t\t:min-datetime='new Date().toISOString()'\n\t\t\t\t\t\t\tinput-class='form-control'\n\t\t\t\t\t\t\t:disabled='!useExpiration'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<CButton\n\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\t:disabled='invalid'\n\t\t\t\t\t>\n\t\t\t\t\t\t{{ submitButton }}\n\t\t\t\t\t</CButton>\n\t\t\t\t</CForm>\n\t\t\t</ValidationObserver>\n\t\t</CCardBody>\n\t</CCard>\n</template>\n\n<script>\nimport {CButton, CCard, CCardBody, CForm, CInput, CInputCheckbox} from '@coreui/vue/src';\nimport {extend, ValidationObserver, ValidationProvider} from 'vee-validate';\nimport {required} from 'vee-validate/dist/rules';\nimport ApiKeyService from '../../services/ApiKeyService';\nimport {Datetime} from 'vue-datetime';\nimport FormErrorHandler from '../../helpers/FormErrorHandler';\n\nexport default {\n\tname: 'ApiKeyForm',\n\tcomponents: {\n\t\tCButton,\n\t\tCCard,\n\t\tCCardBody,\n\t\tCForm,\n\t\tCInput,\n\t\tCInputCheckbox,\n\t\tDatetime,\n\t\tValidationObserver,\n\t\tValidationProvider,\n\t},\n\tprops: {\n\t\tkeyId: {\n\t\t\ttype: Number,\n\t\t\trequired: false,\n\t\t\tdefault: null,\n\t\t}\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tmetadata: {\n\t\t\t\tdescription: null,\n\t\t\t\texpiration: null,\n\t\t\t},\n\t\t\tuseExpiration: false,\n\t\t\tdateFormat: {\n\t\t\t\tyear: 'numeric',\n\t\t\t\tmonth: 'short',\n\t\t\t\tday: 'numeric',\n\t\t\t\thour12: false,\n\t\t\t\thour: 'numeric',\n\t\t\t\tminute: 'numeric',\n\t\t\t\tsecond: 'numeric',\n\t\t\t},\n\t\t};\n\t},\n\tcomputed: {\n\t\tsubmitButton() {\n\t\t\treturn this.$route.path === '/api-key/add' ?\n\t\t\t\tthis.$t('forms.add') : this.$t('forms.edit');\n\t\t},\n\t},\n\tcreated() {\n\t\textend('required', required);\n\t\tif (this.keyId) {\n\t\t\tthis.getKey();\n\t\t}\n\t},\n\tmethods: {\n\t\tclear() {\n\t\t\tif (!this.useExpiration) {\n\t\t\t\tthis.metadata.expiration = null;\n\t\t\t}\n\t\t},\n\t\tgetKey() {\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\tApiKeyService.getApiKey(this.keyId)\n\t\t\t\t.then((response) => {\n\t\t\t\t\tthis.$store.commit('spinner/HIDE');\n\t\t\t\t\tthis.metadata = response.data;\n\t\t\t\t\tif (this.metadata.expiration !== null) {\n\t\t\t\t\t\tthis.useExpiration = true;\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tthis.$router.push('/api-key/');\n\t\t\t\t\tFormErrorHandler.apiKeyError(error);\n\t\t\t\t});\n\t\t},\n\t\tsaveKey() {\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\tif (this.keyId !== null) {\n\t\t\t\tApiKeyService.editApiKey(this.keyId, this.metadata)\n\t\t\t\t\t.then(() => this.successfulSave())\n\t\t\t\t\t.catch((error) => FormErrorHandler.apiKeyError(error));\n\t\t\t} else {\n\t\t\t\tApiKeyService.addApiKey(this.metadata)\n\t\t\t\t\t.then(() => this.successfulSave())\n\t\t\t\t\t.catch((error) => FormErrorHandler.apiKeyError(error));\n\t\t\t}\n\t\t},\n\t\tsuccessfulSave() {\n\t\t\tthis.$router.push('/api-key');\n\t\t\tthis.$store.commit('spinner/HIDE');\n\t\t\tif (this.$route.path === '/api-key/add') {\n\t\t\t\tthis.$toast.success(\n\t\t\t\t\tthis.$t('core.apiKey.messages.addSuccess')\n\t\t\t\t\t\t.toString()\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tthis.$toast.success(\n\t\t\t\t\tthis.$t('core.apiKey.messages.editSuccess', {key: this.keyId})\n\t\t\t\t\t\t.toString()\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t},\n\tmetaInfo() {\n\t\treturn {\n\t\t\ttitle: this.$route.path === '/api-key/add' ?\n\t\t\t\tthis.$t('core.apiKey.add').toString() :\n\t\t\t\tthis.$t('core.apiKey.edit').toString()\n\t\t};\n\t}\n};\n</script>\n","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ApiKeyForm.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ApiKeyForm.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ApiKeyForm.vue?vue&type=template&id=3c6235b6&\"\nimport script from \"./ApiKeyForm.vue?vue&type=script&lang=js&\"\nexport * from \"./ApiKeyForm.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('3c6235b6')) {\n      api.createRecord('3c6235b6', component.options)\n    } else {\n      api.reload('3c6235b6', component.options)\n    }\n    module.hot.accept(\"./ApiKeyForm.vue?vue&type=template&id=3c6235b6&\", function () {\n      api.rerender('3c6235b6', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/pages/Core/ApiKeyForm.vue\"\nexport default component.exports","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"CCard\",\n    { attrs: { \"body-wrapper\": \"\" } },\n    [\n      _c(\n        \"CListGroup\",\n        [\n          _c(\"CListGroupItem\", { attrs: { to: \"/network/ethernet\" } }, [\n            _c(\"header\", { staticClass: \"list-group-item-heading\" }, [\n              _vm._v(\n                \"\\n\\t\\t\\t\\t\" +\n                  _vm._s(_vm.$t(\"network.ethernet.title\")) +\n                  \"\\n\\t\\t\\t\"\n              )\n            ]),\n            _vm._v(\" \"),\n            _c(\"p\", { staticClass: \"list-group-item-text\" }, [\n              _vm._v(\n                \"\\n\\t\\t\\t\\t\" +\n                  _vm._s(_vm.$t(\"network.ethernet.description\")) +\n                  \"\\n\\t\\t\\t\"\n              )\n            ])\n          ])\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import Vue from 'vue';\nimport { CCard, CListGroup, CListGroupItem } from '@coreui/vue/src';\nexport default Vue.extend({\n    name: 'NetworkDisambiguation',\n    components: {\n        CCard: CCard,\n        CListGroup: CListGroup,\n        CListGroupItem: CListGroupItem\n    },\n    metaInfo: {\n        title: 'network.title',\n    },\n});\n","import mod from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NetworkDisambiguation.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/ts-loader/index.js??ref--1!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NetworkDisambiguation.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./NetworkDisambiguation.vue?vue&type=template&id=2a916c50&\"\nimport script from \"./NetworkDisambiguation.vue?vue&type=script&lang=ts&\"\nexport * from \"./NetworkDisambiguation.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('2a916c50')) {\n      api.createRecord('2a916c50', component.options)\n    } else {\n      api.reload('2a916c50', component.options)\n    }\n    module.hot.accept(\"./NetworkDisambiguation.vue?vue&type=template&id=2a916c50&\", function () {\n      api.rerender('2a916c50', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/pages/Network/NetworkDisambiguation.vue\"\nexport default component.exports","import axios from 'axios';\nimport { authorizationHeader } from '../helpers/authorizationHeader';\nexport var ConnectionType;\n(function (ConnectionType) {\n    ConnectionType[\"BLUETOOTH\"] = \"bluetooth\";\n    ConnectionType[\"BRIDGE\"] = \"bridge\";\n    ConnectionType[\"DUMMY\"] = \"dummy\";\n    ConnectionType[\"ETHERNET\"] = \"802-3-ethernet\";\n    ConnectionType[\"GSM\"] = \"gsm\";\n    ConnectionType[\"INFINIBAND\"] = \"infiniband\";\n    ConnectionType[\"TUN\"] = \"tun\";\n    ConnectionType[\"VLAN\"] = \"vlan\";\n    ConnectionType[\"VPN\"] = \"vpn\";\n    ConnectionType[\"WIFI\"] = \"802-11-wireless\";\n    ConnectionType[\"WIMAX\"] = \"wimax\";\n    ConnectionType[\"WIREGUARD\"] = \"wireguard\";\n    ConnectionType[\"WPAN\"] = \"wpan\";\n})(ConnectionType || (ConnectionType = {}));\n/**\n * Network connection service\n */\nvar NetworkConnectionService = /** @class */ (function () {\n    function NetworkConnectionService() {\n    }\n    /**\n     * Connects the network connection\n     * @param uuid Network connection UUID\n     * @param interfaceName Network interface name\n     */\n    NetworkConnectionService.prototype.connect = function (uuid, interfaceName) {\n        if (interfaceName === void 0) { interfaceName = null; }\n        var config = { headers: authorizationHeader() };\n        if (interfaceName !== null) {\n            Object.assign(config, { params: { 'interface': interfaceName } });\n        }\n        return axios.post('network/connections/' + uuid + '/connect', null, config);\n    };\n    /**\n     * Disconnects the network connection\n     * @param uuid Network connection UUID\n     */\n    NetworkConnectionService.prototype.disconnect = function (uuid) {\n        var config = { headers: authorizationHeader() };\n        return axios.post('network/connections/' + uuid + '/disconnect', null, config);\n    };\n    /**\n     * Edits the network configuration\n     * @param uuid Network configuration UUID\n     * @param configuration Network connection cionfiguration\n     */\n    NetworkConnectionService.prototype.edit = function (uuid, configuration) {\n        var config = { headers: authorizationHeader() };\n        return axios.put('network/connections/' + uuid, configuration, config);\n    };\n    /**\n     * Retrieves the network connection configuration\n     * @param uuid Network connection UUID\n     */\n    NetworkConnectionService.prototype.get = function (uuid) {\n        return axios.get('network/connections/' + uuid, { headers: authorizationHeader() });\n    };\n    /**\n     * Lists available network connections\n     * @param type Network connection type\n     */\n    NetworkConnectionService.prototype.list = function (type) {\n        if (type === void 0) { type = null; }\n        var config = { headers: authorizationHeader() };\n        if (type !== null) {\n            Object.assign(config, { params: { type: type } });\n        }\n        return axios.get('network/connections', config);\n    };\n    return NetworkConnectionService;\n}());\nexport default new NetworkConnectionService();\n","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"CCard\",\n    { attrs: { \"body-wrapper\": \"\" } },\n    [\n      _c(\"ValidationObserver\", {\n        scopedSlots: _vm._u([\n          {\n            key: \"default\",\n            fn: function(ref) {\n              var invalid = ref.invalid\n              return [\n                _c(\n                  \"CForm\",\n                  {\n                    on: {\n                      submit: function($event) {\n                        $event.preventDefault()\n                        return _vm.handleSubmit($event)\n                      }\n                    }\n                  },\n                  [\n                    _c(\"ValidationProvider\", {\n                      attrs: {\n                        rules: \"required\",\n                        \"custom-messages\": {\n                          required: \"network.connection.form.messages.instance\"\n                        }\n                      },\n                      scopedSlots: _vm._u(\n                        [\n                          {\n                            key: \"default\",\n                            fn: function(ref) {\n                              var errors = ref.errors\n                              var touched = ref.touched\n                              var valid = ref.valid\n                              return [\n                                _c(\"CInput\", {\n                                  attrs: {\n                                    label: _vm.$t(\"network.connection.name\"),\n                                    \"is-valid\": touched ? valid : null,\n                                    \"invalid-feedback\": _vm.$t(errors[0])\n                                  },\n                                  model: {\n                                    value: _vm.configuration.name,\n                                    callback: function($$v) {\n                                      _vm.$set(_vm.configuration, \"name\", $$v)\n                                    },\n                                    expression: \"configuration.name\"\n                                  }\n                                })\n                              ]\n                            }\n                          }\n                        ],\n                        null,\n                        true\n                      )\n                    }),\n                    _vm._v(\" \"),\n                    _c(\n                      \"fieldset\",\n                      [\n                        _c(\"legend\", [\n                          _vm._v(\n                            _vm._s(_vm.$t(\"network.connection.ipv4.title\"))\n                          )\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"ValidationProvider\", {\n                          attrs: {\n                            rules: \"required\",\n                            \"custom-messages\": {\n                              required:\n                                \"network.connection.ipv4.messages.method\"\n                            }\n                          },\n                          scopedSlots: _vm._u(\n                            [\n                              {\n                                key: \"default\",\n                                fn: function(ref) {\n                                  var errors = ref.errors\n                                  var touched = ref.touched\n                                  var valid = ref.valid\n                                  return [\n                                    _c(\"CSelect\", {\n                                      attrs: {\n                                        value: _vm.configuration.ipv4.method,\n                                        label: _vm.$t(\n                                          \"network.connection.ipv4.method\"\n                                        ),\n                                        options: _vm.ipv4Methods,\n                                        placeholder: _vm.$t(\n                                          \"network.connection.ipv4.methods.null\"\n                                        ),\n                                        \"is-valid\": touched ? valid : null,\n                                        \"invalid-feedback\": _vm.$t(errors[0])\n                                      },\n                                      on: {\n                                        \"update:value\": function($event) {\n                                          return _vm.$set(\n                                            _vm.configuration.ipv4,\n                                            \"method\",\n                                            $event\n                                          )\n                                        }\n                                      }\n                                    })\n                                  ]\n                                }\n                              }\n                            ],\n                            null,\n                            true\n                          )\n                        }),\n                        _vm._v(\" \"),\n                        _vm._l(_vm.configuration.ipv4.addresses, function(\n                          address,\n                          index\n                        ) {\n                          return _c(\n                            \"div\",\n                            { key: index },\n                            [\n                              _c(\"ValidationProvider\", {\n                                attrs: {\n                                  rules: \"required\",\n                                  \"custom-messages\": {\n                                    required:\n                                      \"network.connection.ipv4.messages.address\"\n                                  }\n                                },\n                                scopedSlots: _vm._u(\n                                  [\n                                    {\n                                      key: \"default\",\n                                      fn: function(ref) {\n                                        var errors = ref.errors\n                                        var touched = ref.touched\n                                        var valid = ref.valid\n                                        return [\n                                          _c(\"CInput\", {\n                                            attrs: {\n                                              label: _vm.$t(\n                                                \"network.connection.ipv4.address\"\n                                              ),\n                                              \"is-valid\": touched\n                                                ? valid\n                                                : null,\n                                              \"invalid-feedback\": _vm.$t(\n                                                errors[0]\n                                              )\n                                            },\n                                            model: {\n                                              value: address.address,\n                                              callback: function($$v) {\n                                                _vm.$set(\n                                                  address,\n                                                  \"address\",\n                                                  $$v\n                                                )\n                                              },\n                                              expression: \"address.address\"\n                                            }\n                                          })\n                                        ]\n                                      }\n                                    }\n                                  ],\n                                  null,\n                                  true\n                                )\n                              }),\n                              _vm._v(\" \"),\n                              _c(\"ValidationProvider\", {\n                                attrs: {\n                                  rules: \"required\",\n                                  \"custom-messages\": {\n                                    required:\n                                      \"network.connection.ipv4.messages.mask\"\n                                  }\n                                },\n                                scopedSlots: _vm._u(\n                                  [\n                                    {\n                                      key: \"default\",\n                                      fn: function(ref) {\n                                        var errors = ref.errors\n                                        var touched = ref.touched\n                                        var valid = ref.valid\n                                        return [\n                                          _c(\"CInput\", {\n                                            attrs: {\n                                              label: _vm.$t(\n                                                \"network.connection.ipv4.mask\"\n                                              ),\n                                              \"is-valid\": touched\n                                                ? valid\n                                                : null,\n                                              \"invalid-feedback\": _vm.$t(\n                                                errors[0]\n                                              )\n                                            },\n                                            model: {\n                                              value: address.mask,\n                                              callback: function($$v) {\n                                                _vm.$set(address, \"mask\", $$v)\n                                              },\n                                              expression: \"address.mask\"\n                                            }\n                                          })\n                                        ]\n                                      }\n                                    }\n                                  ],\n                                  null,\n                                  true\n                                )\n                              }),\n                              _vm._v(\" \"),\n                              _c(\n                                \"div\",\n                                { staticClass: \"form-group\" },\n                                [\n                                  _c(\n                                    \"CButton\",\n                                    {\n                                      attrs: { color: \"danger\" },\n                                      on: {\n                                        click: function($event) {\n                                          return _vm.deleteIpv4Address(index)\n                                        }\n                                      }\n                                    },\n                                    [\n                                      _vm._v(\n                                        \"\\n\\t\\t\\t\\t\\t\\t\\t\" +\n                                          _vm._s(\n                                            _vm.$t(\n                                              \"network.connection.ipv4.addresses.remove\"\n                                            )\n                                          ) +\n                                          \"\\n\\t\\t\\t\\t\\t\\t\"\n                                      )\n                                    ]\n                                  ),\n                                  _vm._v(\" \"),\n                                  index ===\n                                  _vm.configuration.ipv4.addresses.length - 1\n                                    ? _c(\n                                        \"CButton\",\n                                        {\n                                          attrs: { color: \"success\" },\n                                          on: { click: _vm.addIpv4Address }\n                                        },\n                                        [\n                                          _vm._v(\n                                            \"\\n\\t\\t\\t\\t\\t\\t\\t\" +\n                                              _vm._s(\n                                                _vm.$t(\n                                                  \"network.connection.ipv4.addresses.add\"\n                                                )\n                                              ) +\n                                              \"\\n\\t\\t\\t\\t\\t\\t\"\n                                          )\n                                        ]\n                                      )\n                                    : _vm._e()\n                                ],\n                                1\n                              )\n                            ],\n                            1\n                          )\n                        }),\n                        _vm._v(\" \"),\n                        _c(\n                          \"div\",\n                          { staticClass: \"form-group\" },\n                          [\n                            _vm.configuration.ipv4.addresses.length === 0\n                              ? _c(\n                                  \"CButton\",\n                                  {\n                                    attrs: { color: \"success\" },\n                                    on: { click: _vm.addIpv4Address }\n                                  },\n                                  [\n                                    _vm._v(\n                                      \"\\n\\t\\t\\t\\t\\t\\t\" +\n                                        _vm._s(\n                                          _vm.$t(\n                                            \"network.connection.ipv4.addresses.add\"\n                                          )\n                                        ) +\n                                        \"\\n\\t\\t\\t\\t\\t\"\n                                    )\n                                  ]\n                                )\n                              : _vm._e()\n                          ],\n                          1\n                        ),\n                        _vm._v(\" \"),\n                        _c(\"ValidationProvider\", {\n                          attrs: {\n                            rules:\n                              _vm.configuration.ipv4.method === \"manual\"\n                                ? \"required\"\n                                : \"\",\n                            \"custom-messages\": {\n                              required:\n                                \"network.connection.ipv4.messages.gateway\"\n                            }\n                          },\n                          scopedSlots: _vm._u(\n                            [\n                              {\n                                key: \"default\",\n                                fn: function(ref) {\n                                  var errors = ref.errors\n                                  var touched = ref.touched\n                                  var valid = ref.valid\n                                  return [\n                                    _c(\"CInput\", {\n                                      attrs: {\n                                        label: _vm.$t(\n                                          \"network.connection.ipv4.gateway\"\n                                        ),\n                                        \"is-valid\": touched ? valid : null,\n                                        \"invalid-feedback\": _vm.$t(errors[0])\n                                      },\n                                      model: {\n                                        value: _vm.configuration.ipv4.gateway,\n                                        callback: function($$v) {\n                                          _vm.$set(\n                                            _vm.configuration.ipv4,\n                                            \"gateway\",\n                                            $$v\n                                          )\n                                        },\n                                        expression: \"configuration.ipv4.gateway\"\n                                      }\n                                    })\n                                  ]\n                                }\n                              }\n                            ],\n                            null,\n                            true\n                          )\n                        }),\n                        _vm._v(\" \"),\n                        _vm._l(_vm.configuration.ipv4.dns, function(\n                          address,\n                          index\n                        ) {\n                          return _c(\n                            \"div\",\n                            { key: index },\n                            [\n                              _c(\"ValidationProvider\", {\n                                attrs: {\n                                  rules: \"required\",\n                                  \"custom-messages\": {\n                                    required:\n                                      \"network.connection.ipv4.messages.dns\"\n                                  }\n                                },\n                                scopedSlots: _vm._u(\n                                  [\n                                    {\n                                      key: \"default\",\n                                      fn: function(ref) {\n                                        var errors = ref.errors\n                                        var touched = ref.touched\n                                        var valid = ref.valid\n                                        return [\n                                          _c(\"CInput\", {\n                                            attrs: {\n                                              label: _vm.$t(\n                                                \"network.connection.ipv4.dns.address\"\n                                              ),\n                                              \"is-valid\": touched\n                                                ? valid\n                                                : null,\n                                              \"invalid-feedback\": _vm.$t(\n                                                errors[0]\n                                              )\n                                            },\n                                            model: {\n                                              value: address.address,\n                                              callback: function($$v) {\n                                                _vm.$set(\n                                                  address,\n                                                  \"address\",\n                                                  $$v\n                                                )\n                                              },\n                                              expression: \"address.address\"\n                                            }\n                                          })\n                                        ]\n                                      }\n                                    }\n                                  ],\n                                  null,\n                                  true\n                                )\n                              }),\n                              _vm._v(\" \"),\n                              _c(\n                                \"div\",\n                                { staticClass: \"form-group\" },\n                                [\n                                  _c(\n                                    \"CButton\",\n                                    {\n                                      attrs: { color: \"danger\" },\n                                      on: {\n                                        click: function($event) {\n                                          return _vm.deleteIpv4Dns(index)\n                                        }\n                                      }\n                                    },\n                                    [\n                                      _vm._v(\n                                        \"\\n\\t\\t\\t\\t\\t\\t\\t\" +\n                                          _vm._s(\n                                            _vm.$t(\n                                              \"network.connection.ipv4.dns.remove\"\n                                            )\n                                          ) +\n                                          \"\\n\\t\\t\\t\\t\\t\\t\"\n                                      )\n                                    ]\n                                  ),\n                                  _vm._v(\" \"),\n                                  index ===\n                                  _vm.configuration.ipv4.dns.length - 1\n                                    ? _c(\n                                        \"CButton\",\n                                        {\n                                          attrs: { color: \"success\" },\n                                          on: { click: _vm.addIpv4Dns }\n                                        },\n                                        [\n                                          _vm._v(\n                                            \"\\n\\t\\t\\t\\t\\t\\t\\t\" +\n                                              _vm._s(\n                                                _vm.$t(\n                                                  \"network.connection.ipv4.dns.add\"\n                                                )\n                                              ) +\n                                              \"\\n\\t\\t\\t\\t\\t\\t\"\n                                          )\n                                        ]\n                                      )\n                                    : _vm._e()\n                                ],\n                                1\n                              )\n                            ],\n                            1\n                          )\n                        }),\n                        _vm._v(\" \"),\n                        _vm.configuration.ipv4.dns.length === 0\n                          ? _c(\n                              \"div\",\n                              { staticClass: \"form-group\" },\n                              [\n                                _c(\n                                  \"CButton\",\n                                  {\n                                    attrs: { color: \"success\" },\n                                    on: { click: _vm.addIpv4Dns }\n                                  },\n                                  [\n                                    _vm._v(\n                                      \"\\n\\t\\t\\t\\t\\t\\t\" +\n                                        _vm._s(\n                                          _vm.$t(\n                                            \"network.connection.ipv4.dns.add\"\n                                          )\n                                        ) +\n                                        \"\\n\\t\\t\\t\\t\\t\"\n                                    )\n                                  ]\n                                )\n                              ],\n                              1\n                            )\n                          : _vm._e()\n                      ],\n                      2\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"fieldset\",\n                      [\n                        _c(\"legend\", [\n                          _vm._v(\n                            _vm._s(_vm.$t(\"network.connection.ipv6.title\"))\n                          )\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"ValidationProvider\", {\n                          attrs: {\n                            rules: \"required\",\n                            \"custom-messages\": {\n                              required:\n                                \"network.connection.ipv6.messages.method\"\n                            }\n                          },\n                          scopedSlots: _vm._u(\n                            [\n                              {\n                                key: \"default\",\n                                fn: function(ref) {\n                                  var errors = ref.errors\n                                  var touched = ref.touched\n                                  var valid = ref.valid\n                                  return [\n                                    _c(\"CSelect\", {\n                                      attrs: {\n                                        value: _vm.configuration.ipv6.method,\n                                        label: _vm.$t(\n                                          \"network.connection.ipv6.method\"\n                                        ),\n                                        options: _vm.ipv6Methods,\n                                        placeholder: _vm.$t(\n                                          \"network.connection.ipv6.methods.null\"\n                                        ),\n                                        \"is-valid\": touched ? valid : null,\n                                        \"invalid-feedback\": _vm.$t(errors[0])\n                                      },\n                                      on: {\n                                        \"update:value\": function($event) {\n                                          return _vm.$set(\n                                            _vm.configuration.ipv6,\n                                            \"method\",\n                                            $event\n                                          )\n                                        }\n                                      }\n                                    })\n                                  ]\n                                }\n                              }\n                            ],\n                            null,\n                            true\n                          )\n                        }),\n                        _vm._v(\" \"),\n                        _vm._l(_vm.configuration.ipv6.addresses, function(\n                          address,\n                          index\n                        ) {\n                          return _c(\n                            \"div\",\n                            { key: index },\n                            [\n                              _c(\"ValidationProvider\", {\n                                attrs: {\n                                  rules: \"required\",\n                                  \"custom-messages\": {\n                                    required:\n                                      \"network.connection.ipv6.messages.address\"\n                                  }\n                                },\n                                scopedSlots: _vm._u(\n                                  [\n                                    {\n                                      key: \"default\",\n                                      fn: function(ref) {\n                                        var errors = ref.errors\n                                        var touched = ref.touched\n                                        var valid = ref.valid\n                                        return [\n                                          _c(\"CInput\", {\n                                            attrs: {\n                                              label: _vm.$t(\n                                                \"network.connection.ipv6.address\"\n                                              ),\n                                              \"is-valid\": touched\n                                                ? valid\n                                                : null,\n                                              \"invalid-feedback\": _vm.$t(\n                                                errors[0]\n                                              )\n                                            },\n                                            model: {\n                                              value: address.address,\n                                              callback: function($$v) {\n                                                _vm.$set(\n                                                  address,\n                                                  \"address\",\n                                                  $$v\n                                                )\n                                              },\n                                              expression: \"address.address\"\n                                            }\n                                          })\n                                        ]\n                                      }\n                                    }\n                                  ],\n                                  null,\n                                  true\n                                )\n                              }),\n                              _vm._v(\" \"),\n                              _c(\"ValidationProvider\", {\n                                attrs: {\n                                  rules: \"required\",\n                                  \"custom-messages\": {\n                                    required:\n                                      \"network.connection.ipv6.messages.prefix\"\n                                  }\n                                },\n                                scopedSlots: _vm._u(\n                                  [\n                                    {\n                                      key: \"default\",\n                                      fn: function(ref) {\n                                        var errors = ref.errors\n                                        var touched = ref.touched\n                                        var valid = ref.valid\n                                        return [\n                                          _c(\"CInput\", {\n                                            attrs: {\n                                              label: _vm.$t(\n                                                \"network.connection.ipv6.prefix\"\n                                              ),\n                                              \"is-valid\": touched\n                                                ? valid\n                                                : null,\n                                              \"invalid-feedback\": _vm.$t(\n                                                errors[0]\n                                              )\n                                            },\n                                            model: {\n                                              value: address.prefix,\n                                              callback: function($$v) {\n                                                _vm.$set(\n                                                  address,\n                                                  \"prefix\",\n                                                  _vm._n($$v)\n                                                )\n                                              },\n                                              expression: \"address.prefix\"\n                                            }\n                                          })\n                                        ]\n                                      }\n                                    }\n                                  ],\n                                  null,\n                                  true\n                                )\n                              }),\n                              _vm._v(\" \"),\n                              _c(\"ValidationProvider\", {\n                                scopedSlots: _vm._u(\n                                  [\n                                    {\n                                      key: \"default\",\n                                      fn: function(ref) {\n                                        var errors = ref.errors\n                                        var touched = ref.touched\n                                        var valid = ref.valid\n                                        return [\n                                          _c(\"CInput\", {\n                                            attrs: {\n                                              label: _vm.$t(\n                                                \"network.connection.ipv6.gateway\"\n                                              ),\n                                              \"is-valid\": touched\n                                                ? valid\n                                                : null,\n                                              \"invalid-feedback\": _vm.$t(\n                                                errors[0]\n                                              )\n                                            },\n                                            model: {\n                                              value: address.gateway,\n                                              callback: function($$v) {\n                                                _vm.$set(\n                                                  address,\n                                                  \"gateway\",\n                                                  $$v\n                                                )\n                                              },\n                                              expression: \"address.gateway\"\n                                            }\n                                          })\n                                        ]\n                                      }\n                                    }\n                                  ],\n                                  null,\n                                  true\n                                )\n                              }),\n                              _vm._v(\" \"),\n                              _c(\n                                \"div\",\n                                { staticClass: \"form-group\" },\n                                [\n                                  _c(\n                                    \"CButton\",\n                                    {\n                                      attrs: { color: \"danger\" },\n                                      on: {\n                                        click: function($event) {\n                                          return _vm.deleteIpv6Address(index)\n                                        }\n                                      }\n                                    },\n                                    [\n                                      _vm._v(\n                                        \"\\n\\t\\t\\t\\t\\t\\t\\t\" +\n                                          _vm._s(\n                                            _vm.$t(\n                                              \"network.connection.ipv6.addresses.remove\"\n                                            )\n                                          ) +\n                                          \"\\n\\t\\t\\t\\t\\t\\t\"\n                                      )\n                                    ]\n                                  ),\n                                  _vm._v(\" \"),\n                                  index ===\n                                  _vm.configuration.ipv6.addresses.length - 1\n                                    ? _c(\n                                        \"CButton\",\n                                        {\n                                          attrs: { color: \"success\" },\n                                          on: { click: _vm.addIpv6Address }\n                                        },\n                                        [\n                                          _vm._v(\n                                            \"\\n\\t\\t\\t\\t\\t\\t\\t\" +\n                                              _vm._s(\n                                                _vm.$t(\n                                                  \"network.connection.ipv6.addresses.add\"\n                                                )\n                                              ) +\n                                              \"\\n\\t\\t\\t\\t\\t\\t\"\n                                          )\n                                        ]\n                                      )\n                                    : _vm._e()\n                                ],\n                                1\n                              )\n                            ],\n                            1\n                          )\n                        }),\n                        _vm._v(\" \"),\n                        _c(\n                          \"div\",\n                          { staticClass: \"form-group\" },\n                          [\n                            _vm.configuration.ipv6.addresses.length === 0\n                              ? _c(\n                                  \"CButton\",\n                                  {\n                                    attrs: { color: \"success\" },\n                                    on: { click: _vm.addIpv6Address }\n                                  },\n                                  [\n                                    _vm._v(\n                                      \"\\n\\t\\t\\t\\t\\t\\t\" +\n                                        _vm._s(\n                                          _vm.$t(\n                                            \"network.connection.ipv6.addresses.add\"\n                                          )\n                                        ) +\n                                        \"\\n\\t\\t\\t\\t\\t\"\n                                    )\n                                  ]\n                                )\n                              : _vm._e()\n                          ],\n                          1\n                        ),\n                        _vm._v(\" \"),\n                        _vm._l(_vm.configuration.ipv6.dns, function(\n                          address,\n                          index\n                        ) {\n                          return _c(\n                            \"div\",\n                            { key: index },\n                            [\n                              _c(\"ValidationProvider\", {\n                                attrs: {\n                                  rules: \"required\",\n                                  \"custom-messages\": {\n                                    required:\n                                      \"network.connection.ipv6.messages.dns\"\n                                  }\n                                },\n                                scopedSlots: _vm._u(\n                                  [\n                                    {\n                                      key: \"default\",\n                                      fn: function(ref) {\n                                        var errors = ref.errors\n                                        var touched = ref.touched\n                                        var valid = ref.valid\n                                        return [\n                                          _c(\"CInput\", {\n                                            attrs: {\n                                              label: _vm.$t(\n                                                \"network.connection.ipv6.dns.address\"\n                                              ),\n                                              \"is-valid\": touched\n                                                ? valid\n                                                : null,\n                                              \"invalid-feedback\": _vm.$t(\n                                                errors[0]\n                                              )\n                                            },\n                                            model: {\n                                              value: address.address,\n                                              callback: function($$v) {\n                                                _vm.$set(\n                                                  address,\n                                                  \"address\",\n                                                  $$v\n                                                )\n                                              },\n                                              expression: \"address.address\"\n                                            }\n                                          })\n                                        ]\n                                      }\n                                    }\n                                  ],\n                                  null,\n                                  true\n                                )\n                              }),\n                              _vm._v(\" \"),\n                              _c(\n                                \"div\",\n                                { staticClass: \"form-group\" },\n                                [\n                                  _c(\n                                    \"CButton\",\n                                    {\n                                      attrs: { color: \"danger\" },\n                                      on: {\n                                        click: function($event) {\n                                          return _vm.deleteIpv6Dns(index)\n                                        }\n                                      }\n                                    },\n                                    [\n                                      _vm._v(\n                                        \"\\n\\t\\t\\t\\t\\t\\t\\t\" +\n                                          _vm._s(\n                                            _vm.$t(\n                                              \"network.connection.ipv6.dns.remove\"\n                                            )\n                                          ) +\n                                          \"\\n\\t\\t\\t\\t\\t\\t\"\n                                      )\n                                    ]\n                                  ),\n                                  _vm._v(\" \"),\n                                  index ===\n                                  _vm.configuration.ipv6.dns.length - 1\n                                    ? _c(\n                                        \"CButton\",\n                                        {\n                                          attrs: { color: \"success\" },\n                                          on: { click: _vm.addIpv6Dns }\n                                        },\n                                        [\n                                          _vm._v(\n                                            \"\\n\\t\\t\\t\\t\\t\\t\\t\" +\n                                              _vm._s(\n                                                _vm.$t(\n                                                  \"network.connection.ipv6.dns.add\"\n                                                )\n                                              ) +\n                                              \"\\n\\t\\t\\t\\t\\t\\t\"\n                                          )\n                                        ]\n                                      )\n                                    : _vm._e()\n                                ],\n                                1\n                              )\n                            ],\n                            1\n                          )\n                        }),\n                        _vm._v(\" \"),\n                        _vm.configuration.ipv6.dns.length === 0\n                          ? _c(\n                              \"div\",\n                              { staticClass: \"form-group\" },\n                              [\n                                _c(\n                                  \"CButton\",\n                                  {\n                                    attrs: { color: \"success\" },\n                                    on: { click: _vm.addIpv6Dns }\n                                  },\n                                  [\n                                    _vm._v(\n                                      \"\\n\\t\\t\\t\\t\\t\\t\" +\n                                        _vm._s(\n                                          _vm.$t(\n                                            \"network.connection.ipv6.dns.add\"\n                                          )\n                                        ) +\n                                        \"\\n\\t\\t\\t\\t\\t\"\n                                    )\n                                  ]\n                                )\n                              ],\n                              1\n                            )\n                          : _vm._e()\n                      ],\n                      2\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"CButton\",\n                      {\n                        attrs: {\n                          type: \"submit\",\n                          color: \"primary\",\n                          disabled: invalid\n                        }\n                      },\n                      [\n                        _vm._v(\n                          \"\\n\\t\\t\\t\\t\" + _vm._s(_vm.submitButton) + \"\\n\\t\\t\\t\"\n                        )\n                      ]\n                    )\n                  ],\n                  1\n                )\n              ]\n            }\n          }\n        ])\n      })\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ConnectionForm.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ConnectionForm.vue?vue&type=script&lang=js&\"","<template>\n\t<CCard body-wrapper>\n\t\t<ValidationObserver v-slot='{ invalid }'>\n\t\t\t<CForm @submit.prevent='handleSubmit'>\n\t\t\t\t<ValidationProvider\n\t\t\t\t\tv-slot='{ errors, touched, valid }'\n\t\t\t\t\trules='required'\n\t\t\t\t\t:custom-messages='{required: \"network.connection.form.messages.instance\"}'\n\t\t\t\t>\n\t\t\t\t\t<CInput\n\t\t\t\t\t\tv-model='configuration.name'\n\t\t\t\t\t\t:label='$t(\"network.connection.name\")'\n\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t/>\n\t\t\t\t</ValidationProvider>\n\t\t\t\t<fieldset>\n\t\t\t\t\t<legend>{{ $t('network.connection.ipv4.title') }}</legend>\n\t\t\t\t\t<ValidationProvider\n\t\t\t\t\t\tv-slot='{ errors, touched, valid}'\n\t\t\t\t\t\trules='required'\n\t\t\t\t\t\t:custom-messages='{required: \"network.connection.ipv4.messages.method\"}'\n\t\t\t\t\t>\n\t\t\t\t\t\t<CSelect\n\t\t\t\t\t\t\t:value.sync='configuration.ipv4.method'\n\t\t\t\t\t\t\t:label='$t(\"network.connection.ipv4.method\")'\n\t\t\t\t\t\t\t:options='ipv4Methods'\n\t\t\t\t\t\t\t:placeholder='$t(\"network.connection.ipv4.methods.null\")'\n\t\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ValidationProvider>\n\t\t\t\t\t<div\n\t\t\t\t\t\tv-for='(address, index) in configuration.ipv4.addresses'\n\t\t\t\t\t\t:key='index'\n\t\t\t\t\t>\n\t\t\t\t\t\t<ValidationProvider\n\t\t\t\t\t\t\tv-slot='{ errors, touched, valid}'\n\t\t\t\t\t\t\trules='required'\n\t\t\t\t\t\t\t:custom-messages='{required: \"network.connection.ipv4.messages.address\"}'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<CInput\n\t\t\t\t\t\t\t\tv-model='address.address'\n\t\t\t\t\t\t\t\t:label='$t(\"network.connection.ipv4.address\")'\n\t\t\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</ValidationProvider>\n\t\t\t\t\t\t<ValidationProvider\n\t\t\t\t\t\t\tv-slot='{ errors, touched, valid}'\n\t\t\t\t\t\t\trules='required'\n\t\t\t\t\t\t\t:custom-messages='{required: \"network.connection.ipv4.messages.mask\"}'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<CInput\n\t\t\t\t\t\t\t\tv-model='address.mask'\n\t\t\t\t\t\t\t\t:label='$t(\"network.connection.ipv4.mask\")'\n\t\t\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</ValidationProvider>\n\t\t\t\t\t\t<div class='form-group'>\n\t\t\t\t\t\t\t<CButton color='danger' @click='deleteIpv4Address(index)'>\n\t\t\t\t\t\t\t\t{{ $t('network.connection.ipv4.addresses.remove') }}\n\t\t\t\t\t\t\t</CButton>\n\t\t\t\t\t\t\t<CButton\n\t\t\t\t\t\t\t\tv-if='index === (configuration.ipv4.addresses.length - 1)'\n\t\t\t\t\t\t\t\tcolor='success'\n\t\t\t\t\t\t\t\t@click='addIpv4Address'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{{ $t('network.connection.ipv4.addresses.add') }}\n\t\t\t\t\t\t\t</CButton>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='form-group'>\n\t\t\t\t\t\t<CButton\n\t\t\t\t\t\t\tv-if='configuration.ipv4.addresses.length === 0'\n\t\t\t\t\t\t\tcolor='success'\n\t\t\t\t\t\t\t@click='addIpv4Address'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{{ $t('network.connection.ipv4.addresses.add') }}\n\t\t\t\t\t\t</CButton>\n\t\t\t\t\t</div>\n\t\t\t\t\t<ValidationProvider\n\t\t\t\t\t\tv-slot='{ errors, touched, valid}'\n\t\t\t\t\t\t:rules='configuration.ipv4.method === \"manual\" ? \"required\" : \"\"'\n\t\t\t\t\t\t:custom-messages='{required: \"network.connection.ipv4.messages.gateway\"}'\n\t\t\t\t\t>\n\t\t\t\t\t\t<CInput\n\t\t\t\t\t\t\tv-model='configuration.ipv4.gateway'\n\t\t\t\t\t\t\t:label='$t(\"network.connection.ipv4.gateway\")'\n\t\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ValidationProvider>\n\t\t\t\t\t<div v-for='(address, index) in configuration.ipv4.dns' :key='index'>\n\t\t\t\t\t\t<ValidationProvider\n\t\t\t\t\t\t\tv-slot='{ errors, touched, valid}'\n\t\t\t\t\t\t\trules='required'\n\t\t\t\t\t\t\t:custom-messages='{required: \"network.connection.ipv4.messages.dns\"}'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<CInput\n\t\t\t\t\t\t\t\tv-model='address.address'\n\t\t\t\t\t\t\t\t:label='$t(\"network.connection.ipv4.dns.address\")'\n\t\t\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</ValidationProvider>\n\t\t\t\t\t\t<div class='form-group'>\n\t\t\t\t\t\t\t<CButton color='danger' @click='deleteIpv4Dns(index)'>\n\t\t\t\t\t\t\t\t{{ $t('network.connection.ipv4.dns.remove') }}\n\t\t\t\t\t\t\t</CButton>\n\t\t\t\t\t\t\t<CButton\n\t\t\t\t\t\t\t\tv-if='index === (configuration.ipv4.dns.length - 1)'\n\t\t\t\t\t\t\t\tcolor='success'\n\t\t\t\t\t\t\t\t@click='addIpv4Dns'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{{ $t('network.connection.ipv4.dns.add') }}\n\t\t\t\t\t\t\t</CButton>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div v-if='configuration.ipv4.dns.length === 0' class='form-group'>\n\t\t\t\t\t\t<CButton color='success' @click='addIpv4Dns'>\n\t\t\t\t\t\t\t{{ $t('network.connection.ipv4.dns.add') }}\n\t\t\t\t\t\t</CButton>\n\t\t\t\t\t</div>\n\t\t\t\t</fieldset>\n\t\t\t\t<fieldset>\n\t\t\t\t\t<legend>{{ $t('network.connection.ipv6.title') }}</legend>\n\t\t\t\t\t<ValidationProvider\n\t\t\t\t\t\tv-slot='{ errors, touched, valid}'\n\t\t\t\t\t\trules='required'\n\t\t\t\t\t\t:custom-messages='{required: \"network.connection.ipv6.messages.method\"}'\n\t\t\t\t\t>\n\t\t\t\t\t\t<CSelect\n\t\t\t\t\t\t\t:value.sync='configuration.ipv6.method'\n\t\t\t\t\t\t\t:label='$t(\"network.connection.ipv6.method\")'\n\t\t\t\t\t\t\t:options='ipv6Methods'\n\t\t\t\t\t\t\t:placeholder='$t(\"network.connection.ipv6.methods.null\")'\n\t\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ValidationProvider>\n\t\t\t\t\t<div\n\t\t\t\t\t\tv-for='(address, index) in configuration.ipv6.addresses'\n\t\t\t\t\t\t:key='index'\n\t\t\t\t\t>\n\t\t\t\t\t\t<ValidationProvider\n\t\t\t\t\t\t\tv-slot='{ errors, touched, valid}'\n\t\t\t\t\t\t\trules='required'\n\t\t\t\t\t\t\t:custom-messages='{required: \"network.connection.ipv6.messages.address\"}'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<CInput\n\t\t\t\t\t\t\t\tv-model='address.address'\n\t\t\t\t\t\t\t\t:label='$t(\"network.connection.ipv6.address\")'\n\t\t\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</ValidationProvider>\n\t\t\t\t\t\t<ValidationProvider\n\t\t\t\t\t\t\tv-slot='{ errors, touched, valid}'\n\t\t\t\t\t\t\trules='required'\n\t\t\t\t\t\t\t:custom-messages='{required: \"network.connection.ipv6.messages.prefix\"}'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<CInput\n\t\t\t\t\t\t\t\tv-model.number='address.prefix'\n\t\t\t\t\t\t\t\t:label='$t(\"network.connection.ipv6.prefix\")'\n\t\t\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</ValidationProvider>\n\t\t\t\t\t\t<ValidationProvider\n\t\t\t\t\t\t\tv-slot='{ errors, touched, valid}'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<CInput\n\t\t\t\t\t\t\t\tv-model='address.gateway'\n\t\t\t\t\t\t\t\t:label='$t(\"network.connection.ipv6.gateway\")'\n\t\t\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</ValidationProvider>\n\t\t\t\t\t\t<div class='form-group'>\n\t\t\t\t\t\t\t<CButton color='danger' @click='deleteIpv6Address(index)'>\n\t\t\t\t\t\t\t\t{{ $t('network.connection.ipv6.addresses.remove') }}\n\t\t\t\t\t\t\t</CButton>\n\t\t\t\t\t\t\t<CButton\n\t\t\t\t\t\t\t\tv-if='index === (configuration.ipv6.addresses.length - 1)'\n\t\t\t\t\t\t\t\tcolor='success'\n\t\t\t\t\t\t\t\t@click='addIpv6Address'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{{ $t('network.connection.ipv6.addresses.add') }}\n\t\t\t\t\t\t\t</CButton>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='form-group'>\n\t\t\t\t\t\t<CButton\n\t\t\t\t\t\t\tv-if='configuration.ipv6.addresses.length === 0'\n\t\t\t\t\t\t\tcolor='success'\n\t\t\t\t\t\t\t@click='addIpv6Address'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{{ $t('network.connection.ipv6.addresses.add') }}\n\t\t\t\t\t\t</CButton>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div\n\t\t\t\t\t\tv-for='(address, index) in configuration.ipv6.dns'\n\t\t\t\t\t\t:key='index'\n\t\t\t\t\t>\n\t\t\t\t\t\t<ValidationProvider\n\t\t\t\t\t\t\tv-slot='{ errors, touched, valid}'\n\t\t\t\t\t\t\trules='required'\n\t\t\t\t\t\t\t:custom-messages='{required: \"network.connection.ipv6.messages.dns\"}'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<CInput\n\t\t\t\t\t\t\t\tv-model='address.address'\n\t\t\t\t\t\t\t\t:label='$t(\"network.connection.ipv6.dns.address\")'\n\t\t\t\t\t\t\t\t:is-valid='touched ? valid : null'\n\t\t\t\t\t\t\t\t:invalid-feedback='$t(errors[0])'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</ValidationProvider>\n\t\t\t\t\t\t<div class='form-group'>\n\t\t\t\t\t\t\t<CButton color='danger' @click='deleteIpv6Dns(index)'>\n\t\t\t\t\t\t\t\t{{ $t('network.connection.ipv6.dns.remove') }}\n\t\t\t\t\t\t\t</CButton>\n\t\t\t\t\t\t\t<CButton\n\t\t\t\t\t\t\t\tv-if='index === (configuration.ipv6.dns.length - 1)'\n\t\t\t\t\t\t\t\tcolor='success'\n\t\t\t\t\t\t\t\t@click='addIpv6Dns'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{{ $t('network.connection.ipv6.dns.add') }}\n\t\t\t\t\t\t\t</CButton>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div v-if='configuration.ipv6.dns.length === 0' class='form-group'>\n\t\t\t\t\t\t<CButton color='success' @click='addIpv6Dns'>\n\t\t\t\t\t\t\t{{ $t('network.connection.ipv6.dns.add') }}\n\t\t\t\t\t\t</CButton>\n\t\t\t\t\t</div>\n\t\t\t\t</fieldset>\n\t\t\t\t<CButton type='submit' color='primary' :disabled='invalid'>\n\t\t\t\t\t{{ submitButton }}\n\t\t\t\t</CButton>\n\t\t\t</CForm>\n\t\t</ValidationObserver>\n\t</CCard>\n</template>\n\n<script>\nimport {CButton, CCard, CForm, CInput, CSelect} from '@coreui/vue';\nimport {extend, ValidationObserver, ValidationProvider} from 'vee-validate';\nimport {required} from 'vee-validate/dist/rules';\nimport NetworkConnectionService from '../../services/NetworkConnectionService';\n\nexport default {\n\tname: 'ConnectionForm',\n\tcomponents: {\n\t\tCButton,\n\t\tCCard,\n\t\tCForm,\n\t\tCInput,\n\t\tCSelect,\n\t\tValidationObserver,\n\t\tValidationProvider,\n\t},\n\tprops: {\n\t\tuuid: {\n\t\t\ttype: String,\n\t\t\trequired: false,\n\t\t\tdefault: null,\n\t\t},\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tconfiguration: {\n\t\t\t\tid: undefined,\n\t\t\t\tipv4: {\n\t\t\t\t\taddresses: [],\n\t\t\t\t\tdns: [],\n\t\t\t\t\tgateway: undefined,\n\t\t\t\t\tmethod: undefined,\n\t\t\t\t},\n\t\t\t\tipv6: {\n\t\t\t\t\taddresses: [],\n\t\t\t\t\tdns: [],\n\t\t\t\t\tmethod: undefined,\n\t\t\t\t}\n\t\t\t},\n\t\t};\n\t},\n\tcomputed: {\n\t\tipv4Methods() {\n\t\t\tconst methods = ['auto', 'disabled', 'link-local', 'manual', 'shared'];\n\t\t\treturn methods.map(\n\t\t\t\t(method) => ({\n\t\t\t\t\tvalue: method,\n\t\t\t\t\tlabel: this.$t('network.connection.ipv4.methods.' + method),\n\t\t\t\t})\n\t\t\t);\n\t\t},\n\t\tipv6Methods() {\n\t\t\tconst methods = [\n\t\t\t\t'auto', 'disabled', 'dhcp', 'ignore', 'link-local', 'manual', 'shared',\n\t\t\t];\n\t\t\treturn methods.map((method) =>\n\t\t\t\t({\n\t\t\t\t\tvalue: method,\n\t\t\t\t\tlabel: this.$t('network.connection.ipv6.methods.' + method),\n\t\t\t\t})\n\t\t\t);\n\t\t},\n\t\tsubmitButton() {\n\t\t\treturn this.$route.path === '/network/add' ?\n\t\t\t\tthis.$t('forms.add') : this.$t('forms.save');\n\t\t},\n\t},\n\tcreated() {\n\t\tthis.$store.commit('spinner/SHOW');\n\t\textend('required', required);\n\t\tNetworkConnectionService.get(this.uuid)\n\t\t\t.then((response) => {\n\t\t\t\tthis.configuration = response.data;\n\t\t\t\tthis.$store.commit('spinner/HIDE');\n\t\t\t});\n\t},\n\tmethods: {\n\t\taddIpv4Address() {\n\t\t\tthis.configuration.ipv4.addresses.push({address: null, mask: null});\n\t\t},\n\t\taddIpv4Dns() {\n\t\t\tthis.configuration.ipv4.dns.push({address: null});\n\t\t},\n\t\tdeleteIpv4Address(index) {\n\t\t\tthis.configuration.ipv4.addresses.splice(index, 1);\n\t\t},\n\t\tdeleteIpv4Dns(index) {\n\t\t\tthis.configuration.ipv4.dns.splice(index, 1);\n\t\t},\n\t\taddIpv6Address() {\n\t\t\tthis.configuration.ipv6.addresses.push({address: null, mask: null});\n\t\t},\n\t\taddIpv6Dns() {\n\t\t\tthis.configuration.ipv6.dns.push({address: null});\n\t\t},\n\t\tdeleteIpv6Address(index) {\n\t\t\tthis.configuration.ipv6.addresses.splice(index, 1);\n\t\t},\n\t\tdeleteIpv6Dns(index) {\n\t\t\tthis.configuration.ipv6.dns.splice(index, 1);\n\t\t},\n\t\thandleSubmit() {\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\tNetworkConnectionService.edit(this.uuid, this.configuration)\n\t\t\t\t.then(() => {\n\t\t\t\t\tNetworkConnectionService.connect(this.uuid).then(() => {\n\t\t\t\t\t\tthis.$toast.success(\n\t\t\t\t\t\t\tthis.$t('network.connection.messages.edit.success').toString()\n\t\t\t\t\t\t);\n\t\t\t\t\t\tthis.$store.commit('spinner/HIDE');\n\t\t\t\t\t});\n\t\t\t\t}).catch(() => {\n\t\t\t\t\tthis.$toast.error(\n\t\t\t\t\t\tthis.$t('network.connection.messages.edit.failure').toString()\n\t\t\t\t\t);\n\t\t\t\t\tthis.$store.commit('spinner/HIDE');\n\t\t\t\t});\n\t\t}\n\t},\n\tmetaInfo: {\n\t\ttitle: 'network.ethernet.edit',\n\t},\n};\n</script>\n","import { render, staticRenderFns } from \"./ConnectionForm.vue?vue&type=template&id=6d424596&\"\nimport script from \"./ConnectionForm.vue?vue&type=script&lang=js&\"\nexport * from \"./ConnectionForm.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('6d424596')) {\n      api.createRecord('6d424596', component.options)\n    } else {\n      api.reload('6d424596', component.options)\n    }\n    module.hot.accept(\"./ConnectionForm.vue?vue&type=template&id=6d424596&\", function () {\n      api.rerender('6d424596', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/pages/Network/ConnectionForm.vue\"\nexport default component.exports","import axios from 'axios';\nimport { authorizationHeader } from '../helpers/authorizationHeader';\n/**\n * Network interface state enum\n */\nexport var InterfaceState;\n(function (InterfaceState) {\n    InterfaceState[\"CONNECTED\"] = \"connected\";\n    InterfaceState[\"CONNECTING\"] = \"connecting\";\n    InterfaceState[\"CONFIGURING\"] = \"connecting (configuring)\";\n    InterfaceState[\"DEACTIVATING\"] = \"deactivating\";\n    InterfaceState[\"DISCONNECTED\"] = \"disconnected\";\n    InterfaceState[\"FAILED\"] = \"connection failed\";\n    InterfaceState[\"IP_CONFIG\"] = \"connecting (getting IP configuration)\";\n    InterfaceState[\"IP_CHECK\"] = \"connecting (checking IP connectivity)\";\n    InterfaceState[\"NEED_AUTH\"] = \"connecting (need authentication)\";\n    InterfaceState[\"PREPARE\"] = \"connecting (prepare)\";\n    InterfaceState[\"SECONDARIES\"] = \"connecting (starting secondary connections)\";\n    InterfaceState[\"UNAVAILABLE\"] = \"unavailable\";\n    InterfaceState[\"UNMANAGED\"] = \"unmanaged\";\n    InterfaceState[\"UNKNOWN\"] = \"unknown\";\n})(InterfaceState || (InterfaceState = {}));\n/**\n * Network interface type enum\n */\nexport var InterfaceType;\n(function (InterfaceType) {\n    InterfaceType[\"BOND\"] = \"bond\";\n    InterfaceType[\"BRIDGE\"] = \"bridge\";\n    InterfaceType[\"DUMMY\"] = \"dummy\";\n    InterfaceType[\"ETHERNET\"] = \"ethernet\";\n    InterfaceType[\"LOOPBACK\"] = \"loopback\";\n    InterfaceType[\"TUN\"] = \"tun\";\n    InterfaceType[\"VLAN\"] = \"vlan\";\n    InterfaceType[\"WIFI\"] = \"wifi\";\n    InterfaceType[\"WIFI_P2P\"] = \"wifi-p2p\";\n})(InterfaceType || (InterfaceType = {}));\n/**\n * Network interface service\n */\nvar NetworkInterfaceService = /** @class */ (function () {\n    function NetworkInterfaceService() {\n    }\n    /**\n     * Lists available network interfaces\n     * @param type Network interface type\n     */\n    NetworkInterfaceService.prototype.list = function (type) {\n        if (type === void 0) { type = null; }\n        var config = { headers: authorizationHeader() };\n        if (type !== null) {\n            Object.assign(config, { params: { type: type } });\n        }\n        return axios.get('network/interfaces', config);\n    };\n    return NetworkInterfaceService;\n}());\nexport default new NetworkInterfaceService();\n","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    _vm._l(_vm.interfaces, function(iface) {\n      return _c(\n        \"CCard\",\n        { key: iface.name },\n        [\n          _c(\n            \"CCardHeader\",\n            { staticClass: \"d-flex\" },\n            [\n              _vm._v(\"\\n\\t\\t\\t\" + _vm._s(iface.name) + \"\\n\\t\\t\\t\"),\n              _c(\n                \"CBadge\",\n                {\n                  staticClass: \"ml-auto\",\n                  attrs: { color: _vm.getStatusBadgeColor(iface.state) }\n                },\n                [_vm._v(\"\\n\\t\\t\\t\\t\" + _vm._s(iface.state) + \"\\n\\t\\t\\t\")]\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"CCardBody\",\n            [\n              _c(\"EthernetConnections\", {\n                attrs: {\n                  connections: _vm.connections,\n                  \"interface-name\": iface.name\n                },\n                on: { updateConnection: _vm.getConnections }\n              })\n            ],\n            1\n          )\n        ],\n        1\n      )\n    }),\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"CDataTable\", {\n    attrs: {\n      items: _vm.connections,\n      fields: _vm.fields,\n      \"column-filter\": true,\n      \"items-per-page\": 20,\n      pagination: true,\n      striped: true,\n      sorter: { external: false, resetable: true }\n    },\n    scopedSlots: _vm._u([\n      {\n        key: \"actions\",\n        fn: function(ref) {\n          var item = ref.item\n          return [\n            _c(\n              \"td\",\n              { staticClass: \"col-actions\" },\n              [\n                item.interfaceName !== _vm.interfaceName\n                  ? _c(\n                      \"CButton\",\n                      {\n                        attrs: { color: \"success\", size: \"sm\" },\n                        on: {\n                          click: function($event) {\n                            return _vm.connect(item)\n                          }\n                        }\n                      },\n                      [\n                        _c(\"CIcon\", {\n                          attrs: { content: _vm.$options.icons.connect }\n                        }),\n                        _vm._v(\n                          \"\\n\\t\\t\\t\\t\" +\n                            _vm._s(_vm.$t(\"network.table.connect\")) +\n                            \"\\n\\t\\t\\t\"\n                        )\n                      ],\n                      1\n                    )\n                  : _c(\n                      \"CButton\",\n                      {\n                        attrs: { color: \"danger\", size: \"sm\" },\n                        on: {\n                          click: function($event) {\n                            return _vm.disconnect(item)\n                          }\n                        }\n                      },\n                      [\n                        _c(\"CIcon\", {\n                          attrs: { content: _vm.$options.icons.disconnect }\n                        }),\n                        _vm._v(\n                          \"\\n\\t\\t\\t\\t\" +\n                            _vm._s(_vm.$t(\"network.table.disconnect\")) +\n                            \"\\n\\t\\t\\t\"\n                        )\n                      ],\n                      1\n                    ),\n                _vm._v(\" \"),\n                _c(\n                  \"CButton\",\n                  {\n                    attrs: {\n                      color: \"primary\",\n                      to: \"/network/edit/\" + item.uuid,\n                      size: \"sm\"\n                    }\n                  },\n                  [\n                    _c(\"CIcon\", {\n                      attrs: { content: _vm.$options.icons.edit }\n                    }),\n                    _vm._v(\n                      \"\\n\\t\\t\\t\\t\" +\n                        _vm._s(_vm.$t(\"table.actions.edit\")) +\n                        \"\\n\\t\\t\\t\"\n                    )\n                  ],\n                  1\n                )\n              ],\n              1\n            )\n          ]\n        }\n      }\n    ])\n  })\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./EthernetConnections.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./EthernetConnections.vue?vue&type=script&lang=js&\"","<template>\n\t<CDataTable\n\t\t:items='connections'\n\t\t:fields='fields'\n\t\t:column-filter='true'\n\t\t:items-per-page='20'\n\t\t:pagination='true'\n\t\t:striped='true'\n\t\t:sorter='{ external: false, resetable: true }'\n\t>\n\t\t<template #actions='{item}'>\n\t\t\t<td class='col-actions'>\n\t\t\t\t<CButton\n\t\t\t\t\tv-if='item.interfaceName !== interfaceName'\n\t\t\t\t\tcolor='success'\n\t\t\t\t\tsize='sm'\n\t\t\t\t\t@click='connect(item)'\n\t\t\t\t>\n\t\t\t\t\t<CIcon :content='$options.icons.connect' />\n\t\t\t\t\t{{ $t('network.table.connect') }}\n\t\t\t\t</CButton>\n\t\t\t\t<CButton\n\t\t\t\t\tv-else\n\t\t\t\t\tcolor='danger'\n\t\t\t\t\tsize='sm'\n\t\t\t\t\t@click='disconnect(item)'\n\t\t\t\t>\n\t\t\t\t\t<CIcon :content='$options.icons.disconnect' />\n\t\t\t\t\t{{ $t('network.table.disconnect') }}\n\t\t\t\t</CButton>\n\t\t\t\t<CButton\n\t\t\t\t\tcolor='primary'\n\t\t\t\t\t:to='\"/network/edit/\" + item.uuid'\n\t\t\t\t\tsize='sm'\n\t\t\t\t>\n\t\t\t\t\t<CIcon :content='$options.icons.edit' />\n\t\t\t\t\t{{ $t('table.actions.edit') }}\n\t\t\t\t</CButton>\n\t\t\t</td>\n\t\t</template>\n\t</CDataTable>\n</template>\n\n<script>\nimport {CButton, CDataTable, CIcon} from '@coreui/vue/src';\nimport {cilLink, cilLinkBroken, cilPencil, cilPlus, cilTrash} from '@coreui/icons';\nimport NetworkConnectionService from '../../services/NetworkConnectionService';\n\nexport default {\n\tname: 'EthernetConnections',\n\tcomponents: {\n\t\tCButton,\n\t\tCDataTable,\n\t\tCIcon,\n\t},\n\tprops: {\n\t\tinterfaceName: {\n\t\t\ttype: [String, null],\n\t\t\trequired: false,\n\t\t\tdefault: null,\n\t\t},\n\t\tconnections: {\n\t\t\ttype: [Array, null,],\n\t\t\trequired: true,\n\t\t}\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\tkey: 'name',\n\t\t\t\t\tlabel: this.$t('network.connection.name'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: 'actions',\n\t\t\t\t\tlabel: this.$t('table.actions.title'),\n\t\t\t\t\tsorter: false,\n\t\t\t\t\tfilter: false,\n\t\t\t\t},\n\t\t\t],\n\t\t};\n\t},\n\tmethods: {\n\t\tconnect(connection) {\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\tNetworkConnectionService.connect(connection.uuid, this.interfaceName)\n\t\t\t\t.then(() => {\n\t\t\t\t\tthis.$store.commit('spinner/HIDE');\n\t\t\t\t\tthis.$toast.success(\n\t\t\t\t\t\tthis.$t(\n\t\t\t\t\t\t\t'network.connection.messages.connect.success',\n\t\t\t\t\t\t\t{interface: this.interfaceName, connection: connection.name}\n\t\t\t\t\t\t).toString());\n\t\t\t\t\tthis.$emit('updateConnection');\n\t\t\t\t})\n\t\t\t\t.catch(() => this.$store.commit('spinner/HIDE'));\n\t\t},\n\t\tdisconnect(connection) {\n\t\t\tthis.$store.commit('spinner/SHOW');\n\t\t\tNetworkConnectionService.disconnect(connection.uuid)\n\t\t\t\t.then(() => {\n\t\t\t\t\tthis.$store.commit('spinner/HIDE');\n\t\t\t\t\tthis.$toast.success(\n\t\t\t\t\t\tthis.$t(\n\t\t\t\t\t\t\t'network.connection.messages.disconnect.success',\n\t\t\t\t\t\t\t{interface: this.interfaceName, connection: connection.name}\n\t\t\t\t\t\t).toString());\n\t\t\t\t\tthis.$emit('updateConnection');\n\t\t\t\t})\n\t\t\t\t.catch(() => this.$store.commit('spinner/HIDE'));\n\t\t}\n\t},\n\ticons: {\n\t\tadd: cilPlus,\n\t\tconnect: cilLink,\n\t\tdelete: cilTrash,\n\t\tdisconnect: cilLinkBroken,\n\t\tedit: cilPencil,\n\t},\n};\n</script>\n","import { render, staticRenderFns } from \"./EthernetConnections.vue?vue&type=template&id=df970668&\"\nimport script from \"./EthernetConnections.vue?vue&type=script&lang=js&\"\nexport * from \"./EthernetConnections.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('df970668')) {\n      api.createRecord('df970668', component.options)\n    } else {\n      api.reload('df970668', component.options)\n    }\n    module.hot.accept(\"./EthernetConnections.vue?vue&type=template&id=df970668&\", function () {\n      api.rerender('df970668', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/components/Network/EthernetConnections.vue\"\nexport default component.exports","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./EthernetInterfaces.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??ref--3!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./EthernetInterfaces.vue?vue&type=script&lang=js&\"","<template>\n\t<div>\n\t\t<CCard v-for='iface of interfaces' :key='iface.name'>\n\t\t\t<CCardHeader class='d-flex'>\n\t\t\t\t{{ iface.name }}\n\t\t\t\t<CBadge :color='getStatusBadgeColor(iface.state)' class='ml-auto'>\n\t\t\t\t\t{{ iface.state }}\n\t\t\t\t</CBadge>\n\t\t\t</CCardHeader>\n\t\t\t<CCardBody>\n\t\t\t\t<EthernetConnections\n\t\t\t\t\t:connections='connections'\n\t\t\t\t\t:interface-name='iface.name'\n\t\t\t\t\t@updateConnection='getConnections'\n\t\t\t\t/>\n\t\t\t</CCardBody>\n\t\t</CCard>\n\t</div>\n</template>\n\n<script>\nimport {CBadge, CCard, CCardBody, CCardHeader} from '@coreui/vue/src';\nimport NetworkConnectionService, {ConnectionType} from '../../services/NetworkConnectionService';\nimport NetworkInterfaceService, {InterfaceState, InterfaceType} from '../../services/NetworkInterfaceService';\nimport EthernetConnections from '../../components/Network/EthernetConnections';\n\nexport default {\n\tname: 'EthernetInterfaces',\n\tcomponents: {\n\t\tEthernetConnections,\n\t\tCBadge,\n\t\tCCard,\n\t\tCCardBody,\n\t\tCCardHeader,\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tconnections: [],\n\t\t\tinterfaces: [],\n\t\t};\n\t},\n\tcreated() {\n\t\tNetworkInterfaceService.list(InterfaceType.ETHERNET)\n\t\t\t.then((response) => {\n\t\t\t\tthis.interfaces = response.data;\n\t\t\t});\n\t\tthis.getConnections();\n\t},\n\tmethods: {\n\t\tgetConnections() {\n\t\t\treturn NetworkConnectionService.list(ConnectionType.ETHERNET)\n\t\t\t\t.then((response) => {\n\t\t\t\t\tthis.connections = response.data;\n\t\t\t\t});\n\t\t},\n\t\tgetStatusBadgeColor(status) {\n\t\t\tswitch (status) {\n\t\t\t\tcase InterfaceState.CONNECTED:\n\t\t\t\t\treturn 'success';\n\t\t\t\tcase InterfaceState.FAILED:\n\t\t\t\t\treturn 'danger';\n\t\t\t\tdefault:\n\t\t\t\t\treturn 'warning';\n\t\t\t}\n\t\t},\n\t},\n\tmetaInfo: {\n\t\ttitle: 'network.ethernet.title',\n\t},\n};\n</script>\n","import { render, staticRenderFns } from \"./EthernetInterfaces.vue?vue&type=template&id=3235ace5&\"\nimport script from \"./EthernetInterfaces.vue?vue&type=script&lang=js&\"\nexport * from \"./EthernetInterfaces.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('3235ace5')) {\n      api.createRecord('3235ace5', component.options)\n    } else {\n      api.reload('3235ace5', component.options)\n    }\n    module.hot.accept(\"./EthernetInterfaces.vue?vue&type=template&id=3235ace5&\", function () {\n      api.rerender('3235ace5', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/pages/Network/EthernetInterfaces.vue\"\nexport default component.exports","import Vue from 'vue';\nimport VueRouter from 'vue-router';\nimport CloudDisambiguation from '../pages/Cloud/CloudDisambiguation.vue';\nimport AzureCreator from '../pages/Cloud/AzureCreator.vue';\nimport AwsCreator from '../pages/Cloud/AwsCreator.vue';\nimport HexioCreator from '../pages/Cloud/HexioCreator.vue';\nimport IbmCreator from '../pages/Cloud/IbmCreator.vue';\nimport InteliGlueCreator from '../pages/Cloud/InteliGlueCreator.vue';\nimport PixlaControl from '../pages/Cloud/PixlaControl.vue';\nimport GatewayDisambiguation from '../pages/Gateway/GatewayDisambiguation.vue';\nimport GatewayInfo from '../pages/Gateway/GatewayInfo.vue';\nimport DaemonLogViewer from '../pages/Gateway/DaemonLogViewer.vue';\nimport DaemonMode from '../pages/Gateway/DaemonMode.vue';\nimport PowerControl from '../pages/Gateway/PowerControl.vue';\nimport ServiceControl from '../pages/Gateway/ServiceControl.vue';\nimport SignIn from '../components/SignIn.vue';\nimport IqrfNetDisambiguation from '../pages/IqrfNet/IqrfNetDisambiguation.vue';\nimport DeviceEnumeration from '../pages/IqrfNet/DeviceEnumeration.vue';\nimport NetworkManager from '../pages/IqrfNet/NetworkManager.vue';\nimport SendJsonRequest from '../pages/IqrfNet/SendJsonRequest.vue';\nimport SendDpaPacket from '../pages/IqrfNet/SendDpaPacket.vue';\nimport StandardManager from '../pages/IqrfNet/StandardManager.vue';\nimport TrConfiguration from '../pages/IqrfNet/TrConfiguration.vue';\nimport TrUpload from '../pages/IqrfNet/TrUpload.vue';\nimport ConfigDisambiguation from '../pages/Config/ConfigDisambiguation.vue';\nimport ConfigMigration from '../pages/Config/ConfigMigration.vue';\nimport TranslatorConfig from '../pages/Config/TranslatorConfig.vue';\nimport ControllerConfig from '../pages/Config/ControllerConfig.vue';\nimport MenderConfig from '../pages/Config/MenderConfig.vue';\nimport IqrfInfo from '../pages/Config/IqrfInfo.vue';\nimport IqrfRepository from '../pages/Config/IqrfRepository.vue';\nimport IqrfCdc from '../pages/Config/IqrfCdc.vue';\nimport IqrfDpa from '../pages/Config/IqrfDpa.vue';\nimport IqrfSpi from '../pages/Config/IqrfSpi.vue';\nimport IqrfUart from '../pages/Config/IqrfUart.vue';\nimport JsonMngMetaDataApi from '../pages/Config/JsonMngMetaDataApi.vue';\nimport JsonRawApi from '../pages/Config/JsonRawApi.vue';\nimport JsonSplitter from '../pages/Config/JsonSplitter.vue';\nimport MonitorForm from '../pages/Config/MonitorForm.vue';\nimport MonitorList from '../pages/Config/MonitorList.vue';\nimport MqMessagingForm from '../pages/Config/MqMessagingForm.vue';\nimport MqMessagingTable from '../pages/Config/MqMessagingTable.vue';\nimport MqttMessagingForm from '../pages/Config/MqttMessagingForm.vue';\nimport MqttMessagingTable from '../pages/Config/MqttMessagingTable.vue';\nimport UdpMessagingForm from '../pages/Config/UdpMessagingForm.vue';\nimport UdpMessagingTable from '../pages/Config/UdpMessagingTable.vue';\nimport TracerList from '../pages/Config/TracerList.vue';\nimport TracerForm from '../pages/Config/TracerForm.vue';\nimport MainConfiguration from '../pages/Config/MainConfiguration.vue';\nimport ComponentList from '../pages/Config/ComponentList.vue';\nimport ComponentForm from '../pages/Config/ComponentForm.vue';\nimport IqmeshServices from '../pages/Config/IqmeshServices.vue';\nimport WebsocketInterfaceForm from '../pages/Config/WebsocketInterfaceForm.vue';\nimport WebsocketMessagingForm from '../pages/Config/WebsocketMessagingForm.vue';\nimport WebsocketServiceForm from '../pages/Config/WebsocketServiceForm.vue';\nimport WebsocketList from '../pages/Config/WebsocketList.vue';\nimport SchedulerList from '../pages/Config/SchedulerList.vue';\nimport SchedulerForm from '../pages/Config/SchedulerForm.vue';\nimport UserAdd from '../pages/Core/UserAdd.vue';\nimport UserEdit from '../pages/Core/UserEdit.vue';\nimport UserList from '../pages/Core/UserList.vue';\nimport ApiKeyList from '../pages/Core/ApiKeyList.vue';\nimport ApiKeyForm from '../pages/Core/ApiKeyForm.vue';\nimport NetworkDisambiguation from '../pages/Network/NetworkDisambiguation.vue';\nimport ConnectionForm from '../pages/Network/ConnectionForm.vue';\nimport EthernetInterfaces from '../pages/Network/EthernetInterfaces.vue';\nimport i18n from '../i18n';\nimport store from '../store';\nVue.use(VueRouter);\nvar routes = [\n    {\n        component: SignIn,\n        name: 'signIn',\n        path: '/sign/in',\n    },\n    {\n        path: '/',\n        component: {\n            render: function (c) {\n                return c('router-view');\n            }\n        },\n        children: [\n            {\n                path: '/cloud',\n                component: {\n                    render: function (c) {\n                        return c('router-view');\n                    }\n                },\n                children: [\n                    {\n                        component: CloudDisambiguation,\n                        path: '',\n                        meta: { title: 'cloud.title' }\n                    },\n                    {\n                        component: AzureCreator,\n                        path: 'azure',\n                        meta: { title: 'cloud.msAzure.form.title' }\n                    },\n                    {\n                        component: AwsCreator,\n                        path: 'aws',\n                        meta: { title: 'cloud.amazonAws.form.title' }\n                    },\n                    {\n                        component: HexioCreator,\n                        path: 'hexio',\n                        meta: { title: 'cloud.hexio.form.title' }\n                    },\n                    {\n                        component: IbmCreator,\n                        path: 'ibm-cloud',\n                        meta: { title: 'cloud.ibmCloud.form.title' }\n                    },\n                    {\n                        component: InteliGlueCreator,\n                        path: 'inteli-glue',\n                        meta: { title: 'cloud.intelimentsInteliGlue.form.title' },\n                    },\n                    {\n                        component: PixlaControl,\n                        path: 'pixla',\n                        meta: { title: 'cloud.pixla.title' },\n                    },\n                ]\n            },\n            {\n                path: '/config',\n                component: {\n                    render: function (c) {\n                        return c('router-view');\n                    }\n                },\n                children: [\n                    {\n                        component: ConfigDisambiguation,\n                        path: '',\n                        meta: { title: 'config.title' }\n                    },\n                    {\n                        component: MainConfiguration,\n                        path: 'main',\n                        meta: { title: 'config.main.title' }\n                    },\n                    {\n                        path: 'component',\n                        component: {\n                            render: function (c) {\n                                return c('router-view');\n                            }\n                        },\n                        children: [\n                            {\n                                path: '',\n                                component: ComponentList,\n                                meta: { title: 'config.components.title' }\n                            },\n                            {\n                                component: ComponentForm,\n                                path: 'add',\n                                meta: { title: 'config.components.add' }\n                            },\n                            {\n                                component: ComponentForm,\n                                path: 'edit/:component',\n                                props: true,\n                                meta: { title: 'config.components.edit' }\n                            },\n                        ],\n                    },\n                    {\n                        component: IqrfCdc,\n                        path: 'iqrf-cdc',\n                        meta: { title: 'config.iqrfCdc.title' }\n                    },\n                    {\n                        component: IqrfDpa,\n                        path: 'iqrf-dpa',\n                        meta: { title: 'config.iqrfDpa.title' }\n                    },\n                    {\n                        component: IqrfInfo,\n                        path: 'iqrf-info',\n                        meta: { title: 'config.iqrfInfo.title' }\n                    },\n                    {\n                        component: IqmeshServices,\n                        path: 'iqmesh',\n                        meta: { title: 'config.iqmesh.title' }\n                    },\n                    {\n                        component: IqrfRepository,\n                        path: 'iqrf-repository',\n                        meta: { title: 'config.iqrfRepository.title' }\n                    },\n                    {\n                        component: IqrfSpi,\n                        path: 'iqrf-spi',\n                        meta: { title: 'config.iqrfSpi.title' }\n                    },\n                    {\n                        component: IqrfUart,\n                        path: 'iqrf-uart',\n                        meta: { title: 'config.iqrfUart.title' }\n                    },\n                    {\n                        component: JsonRawApi,\n                        path: 'json-raw-api',\n                        meta: { title: 'config.jsonRawApi.title' }\n                    },\n                    {\n                        component: JsonMngMetaDataApi,\n                        path: 'json-mng-meta-data-api',\n                        meta: { title: 'config.jsonMngMetaDataApi.title' }\n                    },\n                    {\n                        component: JsonSplitter,\n                        path: 'json-splitter',\n                        meta: { title: 'config.jsonSplitter.title' }\n                    },\n                    {\n                        path: 'monitor',\n                        component: {\n                            render: function (c) {\n                                return c('router-view');\n                            }\n                        },\n                        children: [\n                            {\n                                path: '',\n                                component: MonitorList,\n                                meta: { title: 'config.monitor.title' }\n                            },\n                            {\n                                component: MonitorForm,\n                                path: 'add',\n                                meta: { title: 'config.monitor.add' }\n                            },\n                            {\n                                component: MonitorForm,\n                                path: 'edit/:instance',\n                                props: true,\n                                meta: { title: 'config.monitor.edit' }\n                            },\n                        ],\n                    },\n                    {\n                        path: 'scheduler',\n                        component: {\n                            render: function (c) {\n                                return c('router-view');\n                            }\n                        },\n                        children: [\n                            {\n                                path: '',\n                                component: SchedulerList,\n                                meta: { title: 'config.scheduler.title' }\n                            },\n                            {\n                                path: 'add',\n                                component: SchedulerForm,\n                                meta: { title: 'config.scheduler.add' }\n                            },\n                            {\n                                path: 'edit/:id',\n                                component: SchedulerForm,\n                                props: function (route) {\n                                    var id = Number.parseInt(route.params.id, 10);\n                                    if (Number.isNaN(id)) {\n                                        return 0;\n                                    }\n                                    return { id: id };\n                                },\n                                meta: { title: 'config.scheduler.edit' }\n                            }\n                        ]\n                    },\n                    {\n                        path: 'mq',\n                        component: {\n                            render: function (c) {\n                                return c('router-view');\n                            }\n                        },\n                        children: [\n                            {\n                                path: '',\n                                component: MqMessagingTable,\n                                meta: { title: 'config.mq.title' }\n                            },\n                            {\n                                component: MqMessagingForm,\n                                path: 'add',\n                                meta: { title: 'config.mq.add' }\n                            },\n                            {\n                                component: MqMessagingForm,\n                                path: 'edit/:instance',\n                                props: true,\n                                meta: { title: 'config.mq.edit' }\n                            },\n                        ],\n                    },\n                    {\n                        path: 'mqtt',\n                        component: {\n                            render: function (c) {\n                                return c('router-view');\n                            }\n                        },\n                        children: [\n                            {\n                                path: '',\n                                component: MqttMessagingTable,\n                                meta: { title: 'config.mqtt.title' }\n                            },\n                            {\n                                component: MqttMessagingForm,\n                                path: 'add',\n                                meta: { title: 'config.mqtt.add' }\n                            },\n                            {\n                                component: MqttMessagingForm,\n                                path: 'edit/:instance',\n                                props: true,\n                                meta: { title: 'config.mqtt.edit' }\n                            },\n                        ],\n                    },\n                    {\n                        path: 'udp',\n                        component: {\n                            render: function (c) {\n                                return c('router-view');\n                            }\n                        },\n                        children: [\n                            {\n                                path: '',\n                                component: UdpMessagingTable,\n                                meta: { title: 'config.udp.title' }\n                            },\n                            {\n                                component: UdpMessagingForm,\n                                path: 'add',\n                                meta: { title: 'config.udp.add' }\n                            },\n                            {\n                                component: UdpMessagingForm,\n                                path: 'edit/:instance',\n                                props: true,\n                                meta: { title: 'config.udp.edit' }\n                            },\n                        ],\n                    },\n                    {\n                        path: 'websocket',\n                        component: {\n                            render: function (c) {\n                                return c('router-view');\n                            }\n                        },\n                        children: [\n                            {\n                                path: '',\n                                component: WebsocketList,\n                                meta: { title: 'config.websocket.title' }\n                            },\n                            {\n                                component: WebsocketInterfaceForm,\n                                path: 'add',\n                                meta: { title: 'config.websocket.interface.add' }\n                            },\n                            {\n                                component: WebsocketMessagingForm,\n                                path: 'add-messaging',\n                                meta: { title: 'config.websocket.messaging.add' }\n                            },\n                            {\n                                component: WebsocketServiceForm,\n                                path: 'add-service',\n                                meta: { title: 'config.websocket.service.add' }\n                            },\n                            {\n                                component: WebsocketInterfaceForm,\n                                path: 'edit/:instance',\n                                props: true,\n                                meta: { title: 'config.websocket.interface.edit' }\n                            },\n                            {\n                                component: WebsocketMessagingForm,\n                                path: 'edit-messaging/:instance',\n                                props: true,\n                                meta: { title: 'config.websocket.service.edit' }\n                            },\n                            {\n                                component: WebsocketServiceForm,\n                                path: 'edit-service/:instance',\n                                props: true,\n                                meta: { title: 'config.websocket.service.edit' }\n                            },\n                        ],\n                    },\n                    {\n                        path: 'tracer',\n                        component: {\n                            render: function (c) {\n                                return c('router-view');\n                            },\n                        },\n                        children: [\n                            {\n                                path: '',\n                                component: TracerList,\n                                meta: { title: 'config.tracer.title' }\n                            },\n                            {\n                                component: TracerForm,\n                                path: 'add',\n                                meta: { title: 'config.tracer.add' }\n                            },\n                            {\n                                component: TracerForm,\n                                path: 'edit/:instance',\n                                props: true,\n                                meta: { title: 'config.tracer.edit' }\n                            },\n                        ],\n                    },\n                    {\n                        component: ConfigMigration,\n                        path: 'migration',\n                        meta: { title: 'config.migration.title' }\n                    },\n                    {\n                        component: MenderConfig,\n                        path: 'mender',\n                        meta: { title: 'config.mender.description' }\n                    },\n                    {\n                        component: TranslatorConfig,\n                        path: 'translator',\n                        meta: { title: 'translatorConfig.description' }\n                    },\n                    {\n                        component: ControllerConfig,\n                        path: 'controller',\n                        meta: { title: 'controllerConfig.description' }\n                    },\n                ]\n            },\n            {\n                path: '/gateway',\n                component: {\n                    render: function (c) {\n                        return c('router-view');\n                    }\n                },\n                children: [\n                    {\n                        component: GatewayDisambiguation,\n                        path: '',\n                        meta: { title: 'gateway.title' }\n                    },\n                    {\n                        component: GatewayInfo,\n                        path: 'info',\n                        meta: { title: 'gateway.info.title' },\n                    },\n                    {\n                        component: DaemonLogViewer,\n                        path: 'log',\n                        meta: { title: 'gateway.log.title' },\n                    },\n                    {\n                        component: DaemonMode,\n                        path: 'change-mode',\n                        meta: { title: 'gateway.mode.title' },\n                    },\n                    {\n                        component: PowerControl,\n                        path: 'power',\n                        meta: { title: 'gateway.power.title' },\n                    },\n                ]\n            },\n            {\n                component: ServiceControl,\n                name: 'serviceControl',\n                path: '/service/:serviceName',\n                props: true,\n                meta: { title: 'service.%serviceName%.title' },\n            },\n            {\n                path: '/iqrfnet',\n                component: {\n                    render: function (c) {\n                        return c('router-view');\n                    }\n                },\n                children: [\n                    {\n                        component: IqrfNetDisambiguation,\n                        path: '',\n                        meta: { title: 'iqrfnet.title' }\n                    },\n                    {\n                        component: DeviceEnumeration,\n                        path: 'enumeration/:address',\n                        props: function (route) {\n                            var address = Number.parseInt(route.params.address, 10);\n                            if (Number.isNaN(address)) {\n                                return 0;\n                            }\n                            return { address: address };\n                        },\n                        meta: { title: 'iqrfnet.enumeration.title' },\n                    },\n                    {\n                        component: NetworkManager,\n                        path: 'network',\n                        meta: { title: 'iqrfnet.networkManager.title' }\n                    },\n                    {\n                        component: StandardManager,\n                        path: 'standard',\n                        meta: { title: 'iqrfnet.standard.title' }\n                    },\n                    {\n                        component: SendDpaPacket,\n                        path: 'send-raw',\n                        meta: { title: 'iqrfnet.sendPacket.title' },\n                    },\n                    {\n                        component: SendJsonRequest,\n                        path: 'send-json',\n                        meta: { title: 'iqrfnet.sendJson.title' }\n                    },\n                    {\n                        component: TrConfiguration,\n                        path: 'tr-config/:address',\n                        props: function (route) {\n                            var address = Number.parseInt(route.params.address, 10);\n                            if (Number.isNaN(address)) {\n                                return 0;\n                            }\n                            return { address: address };\n                        },\n                        meta: { title: 'iqrfnet.trConfiguration.title' }\n                    },\n                    {\n                        component: TrUpload,\n                        path: 'tr-upload',\n                        meta: { title: 'iqrfnet.trUpload.title' }\n                    },\n                ]\n            },\n            {\n                path: '/network',\n                component: {\n                    render: function (c) {\n                        return c('router-view');\n                    }\n                },\n                children: [\n                    {\n                        component: NetworkDisambiguation,\n                        path: '',\n                        meta: { title: 'network.title' }\n                    },\n                    {\n                        component: EthernetInterfaces,\n                        path: 'ethernet',\n                        meta: { title: 'network.ethernet.title' }\n                    },\n                    {\n                        component: ConnectionForm,\n                        path: 'edit/:uuid',\n                        props: true,\n                        meta: { title: 'network.ethernet.edit' }\n                    },\n                ]\n            },\n            {\n                path: '/user',\n                component: {\n                    render: function (c) {\n                        return c('router-view');\n                    }\n                },\n                meta: { title: 'core.user.title' },\n                children: [\n                    {\n                        component: UserList,\n                        path: '',\n                        meta: { title: 'core.user.title' },\n                    },\n                    {\n                        component: UserAdd,\n                        path: 'add',\n                        meta: { title: 'core.user.add.title' },\n                    },\n                    {\n                        component: UserEdit,\n                        path: 'edit/:userId',\n                        props: function (route) {\n                            var userId = Number.parseInt(route.params.userId, 10);\n                            if (Number.isNaN(userId)) {\n                                return 0;\n                            }\n                            return { userId: userId };\n                        },\n                        meta: { title: 'core.user.edit.title' },\n                    },\n                ]\n            },\n            {\n                path: '/api-key',\n                component: {\n                    render: function (c) {\n                        return c('router-view');\n                    }\n                },\n                children: [\n                    {\n                        path: '',\n                        component: ApiKeyList,\n                        meta: { title: 'core.apiKey.title' }\n                    },\n                    {\n                        component: ApiKeyForm,\n                        path: 'add',\n                        meta: { title: 'core.apiKey.add' }\n                    },\n                    {\n                        component: ApiKeyForm,\n                        path: 'edit/:keyId',\n                        props: function (route) {\n                            var keyId = Number.parseInt(route.params.keyId, 10);\n                            if (Number.isNaN(keyId)) {\n                                return 0;\n                            }\n                            return { keyId: keyId };\n                        },\n                        meta: { title: 'core.apiKey.edit' }\n                    }\n                ]\n            },\n            {\n                path: '*',\n                name: 'legacyComponent',\n                component: {\n                    // @ts-ignore\n                    metaInfo: { titleTemplate: null },\n                },\n            },\n        ],\n    },\n];\nvar router = new VueRouter({\n    mode: 'history',\n    routes: routes\n});\nfunction metaTranslate(route, type) {\n    var text = '';\n    if (route.meta[type]) {\n        var parts = route.meta[type].split('%');\n        if (parts.length === 1) {\n            text = i18n.t(route.meta[type]).toString();\n        }\n        else {\n            text = i18n.t(parts[0] + route.params[parts[1]] + parts[2]).toString();\n        }\n    }\n    return text;\n}\nrouter.beforeEach(function (to, from, next) {\n    if (!to.path.startsWith('/install/') && to.name !== 'signIn' &&\n        !store.getters['user/isLoggedIn']) {\n        store.dispatch('user/signOut').then(function () {\n            next('/sign/in');\n        });\n        return;\n    }\n    if (to.name === 'legacyComponent') {\n        if (from.name !== null) {\n            location.replace(to.fullPath);\n        }\n        else {\n            next();\n        }\n        return;\n    }\n    var titleEl = document.getElementById('title');\n    if (titleEl !== null && to.meta.title !== undefined) {\n        titleEl.innerText = metaTranslate(to, 'title');\n    }\n    var content = document.getElementById('content');\n    if (content !== null) {\n        content.remove();\n    }\n    var flashes = document.getElementById('snippet--flashes');\n    if (flashes !== null && from.name !== null) {\n        flashes.remove();\n    }\n    next();\n});\nexport default router;\n","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\")\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","<template>\n\t\n</template>\n\n<script>\nexport default {\n\tname: 'App'\n};\n</script>\n\n<style scoped>\n\n</style>\n","import mod from \"-!../../node_modules/babel-loader/lib/index.js??ref--3!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/babel-loader/lib/index.js??ref--3!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=6a6fa670&scoped=true&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"6a6fa670\",\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('6a6fa670')) {\n      api.createRecord('6a6fa670', component.options)\n    } else {\n      api.reload('6a6fa670', component.options)\n    }\n    module.hot.accept(\"./App.vue?vue&type=template&id=6a6fa670&scoped=true&\", function () {\n      api.rerender('6a6fa670', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/components/App.vue\"\nexport default component.exports","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"c-app\" },\n    [\n      _c(\"LoadingSpinner\"),\n      _vm._v(\" \"),\n      _c(\"TheSidebar\"),\n      _vm._v(\" \"),\n      _c(\n        \"CWrapper\",\n        [\n          _c(\"TheHeader\"),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"c-body\" }, [\n            _c(\n              \"main\",\n              { staticClass: \"c-main\" },\n              [\n                _c(\"CContainer\", { attrs: { fluid: \"\" } }, [\n                  _c(\"div\", { staticClass: \"fade-in\" }, [_vm._t(\"default\")], 2)\n                ])\n              ],\n              1\n            )\n          ])\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _vm.enabled\n    ? _c(\"div\", { staticClass: \"loading\" }, [\n        _c(\"div\", { staticClass: \"loading-group\" }, [\n          _c(\"div\", { staticClass: \"spinner\" }),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"loading-text\" }, [\n            _vm._v(\"\\n\\t\\t\\t\" + _vm._s(_vm.text) + \"\\n\\t\\t\")\n          ])\n        ])\n      ])\n    : _vm._e()\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport Vue from 'vue';\nimport { mapGetters } from 'vuex';\nexport default Vue.extend({\n    name: 'LoadingSpinner',\n    computed: __assign({}, mapGetters({\n        enabled: 'spinner/isEnabled',\n        text: 'spinner/text',\n    })),\n});\n","import mod from \"-!../../node_modules/ts-loader/index.js??ref--1!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./LoadingSpinner.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/ts-loader/index.js??ref--1!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./LoadingSpinner.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./LoadingSpinner.vue?vue&type=template&id=e0752284&scoped=true&\"\nimport script from \"./LoadingSpinner.vue?vue&type=script&lang=ts&\"\nexport * from \"./LoadingSpinner.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./LoadingSpinner.vue?vue&type=style&index=0&id=e0752284&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"e0752284\",\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('e0752284')) {\n      api.createRecord('e0752284', component.options)\n    } else {\n      api.reload('e0752284', component.options)\n    }\n    module.hot.accept(\"./LoadingSpinner.vue?vue&type=template&id=e0752284&scoped=true&\", function () {\n      api.rerender('e0752284', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/components/LoadingSpinner.vue\"\nexport default component.exports","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"CHeader\",\n    { attrs: { fixed: false, \"color-scheme\": \"dark\" } },\n    [\n      _c(\"CToggler\", {\n        staticClass: \"ml-3 d-lg-none\",\n        attrs: { \"in-header\": \"\" },\n        on: {\n          click: function($event) {\n            return _vm.$store.commit(\"sidebar/toggleSidebarMobile\")\n          }\n        }\n      }),\n      _vm._v(\" \"),\n      _c(\"CToggler\", {\n        staticClass: \"ml-3 d-md-down-none\",\n        attrs: { \"in-header\": \"\" },\n        on: {\n          click: function($event) {\n            return _vm.$store.commit(\"sidebar/toggleSidebarDesktop\")\n          }\n        }\n      }),\n      _vm._v(\" \"),\n      _c(\n        \"CHeaderBrand\",\n        { staticClass: \"mx-auto d-lg-none\", attrs: { to: \"/\" } },\n        [\n          _c(\"img\", {\n            attrs: { src: \"/img/logo-big.svg\", alt: _vm.$t(\"core.title\") }\n          })\n        ]\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"CHeaderNav\",\n        { staticClass: \"ml-auto mr-3\" },\n        [\n          _vm.$store.getters[\"user/isLoggedIn\"]\n            ? _c(\n                \"CDropdown\",\n                {\n                  staticClass: \"c-header-nav-items\",\n                  attrs: {\n                    \"in-nav\": true,\n                    placement: \"bottom-end\",\n                    \"add-menu-classes\": \"pt-0\"\n                  },\n                  scopedSlots: _vm._u(\n                    [\n                      {\n                        key: \"toggler\",\n                        fn: function() {\n                          return [\n                            _c(\n                              \"CHeaderNavLink\",\n                              { staticClass: \"dropdown-toggle\" },\n                              [\n                                _vm._v(\n                                  \"\\n\\t\\t\\t\\t\\t\" +\n                                    _vm._s(_vm.$store.getters[\"user/getName\"]) +\n                                    \"\\n\\t\\t\\t\\t\"\n                                )\n                              ]\n                            )\n                          ]\n                        },\n                        proxy: true\n                      }\n                    ],\n                    null,\n                    false,\n                    2615873522\n                  )\n                },\n                [\n                  _vm._v(\" \"),\n                  _c(\n                    \"CDropdownItem\",\n                    { on: { click: _vm.signOut } },\n                    [\n                      _c(\"CIcon\", {\n                        attrs: { content: _vm.$options.icons.cilLockLocked }\n                      }),\n                      _vm._v(\n                        \"\\n\\t\\t\\t\\t\" +\n                          _vm._s(_vm.$t(\"core.sign.out.title\")) +\n                          \"\\n\\t\\t\\t\"\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            : _vm._e()\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import mod from \"-!../../node_modules/babel-loader/lib/index.js??ref--3!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TheHeader.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/babel-loader/lib/index.js??ref--3!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TheHeader.vue?vue&type=script&lang=js&\"","<template>\n\t<CHeader :fixed='false' color-scheme='dark'>\n\t\t<CToggler\n\t\t\tin-header\n\t\t\tclass='ml-3 d-lg-none'\n\t\t\t@click='$store.commit(\"sidebar/toggleSidebarMobile\")'\n\t\t/>\n\t\t<CToggler\n\t\t\tin-header\n\t\t\tclass='ml-3 d-md-down-none'\n\t\t\t@click='$store.commit(\"sidebar/toggleSidebarDesktop\")'\n\t\t/>\n\t\t<CHeaderBrand class='mx-auto d-lg-none' to='/'>\n\t\t\t<img\n\t\t\t\tsrc='/img/logo-big.svg'\n\t\t\t\t:alt='$t(\"core.title\")'\n\t\t\t>\n\t\t</CHeaderBrand>\n\t\t<CHeaderNav class='ml-auto mr-3'>\n\t\t\t<CDropdown\n\t\t\t\tv-if='$store.getters[\"user/isLoggedIn\"]'\n\t\t\t\t:in-nav='true'\n\t\t\t\tclass='c-header-nav-items'\n\t\t\t\tplacement='bottom-end'\n\t\t\t\tadd-menu-classes='pt-0'\n\t\t\t>\n\t\t\t\t<template #toggler>\n\t\t\t\t\t<CHeaderNavLink class='dropdown-toggle'>\n\t\t\t\t\t\t{{ $store.getters['user/getName'] }}\n\t\t\t\t\t</CHeaderNavLink>\n\t\t\t\t</template>\n\t\t\t\t<CDropdownItem @click='signOut'>\n\t\t\t\t\t<CIcon :content='$options.icons.cilLockLocked' />\n\t\t\t\t\t{{ $t('core.sign.out.title') }}\n\t\t\t\t</CDropdownItem>\n\t\t\t</CDropdown>\n\t\t</CHeaderNav>\n\t</CHeader>\n</template>\n\n<script>\nimport {\n\tCDropdown,\n\tCHeader,\n\tCHeaderBrand,\n\tCHeaderNav,\n\tCHeaderNavLink,\n\tCIcon,\n\tCToggler\n} from '@coreui/vue/src';\n\nimport {cilLockLocked} from '@coreui/icons';\n\nexport default {\n\tname: 'TheHeader',\n\tcomponents: {\n\t\tCDropdown,\n\t\tCHeader,\n\t\tCHeaderBrand,\n\t\tCHeaderNav,\n\t\tCHeaderNavLink,\n\t\tCIcon,\n\t\tCToggler,\n\t},\n\ticons: {\n\t\tcilLockLocked,\n\t},\n\tmethods: {\n\t\tsignOut() {\n\t\t\tthis.$store.dispatch('user/signOut')\n\t\t\t\t.then(() => {\n\t\t\t\t\tlocation.replace('/sign/in');\n\t\t\t\t\tthis.$toast.success(this.$t('core.sign.out.message').toString());\n\t\t\t\t});\n\t\t}\n\t}\n};\n</script>\n","import { render, staticRenderFns } from \"./TheHeader.vue?vue&type=template&id=71d0b6ed&\"\nimport script from \"./TheHeader.vue?vue&type=script&lang=js&\"\nexport * from \"./TheHeader.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('71d0b6ed')) {\n      api.createRecord('71d0b6ed', component.options)\n    } else {\n      api.reload('71d0b6ed', component.options)\n    }\n    module.hot.accept(\"./TheHeader.vue?vue&type=template&id=71d0b6ed&\", function () {\n      api.rerender('71d0b6ed', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/components/TheHeader.vue\"\nexport default component.exports","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"CSidebar\",\n    {\n      attrs: { fixed: \"\", minimize: _vm.minimize, show: _vm.show },\n      on: {\n        \"update:show\": function(value) {\n          return _vm.$store.commit(\"sidebar/set\", [\"show\", value])\n        }\n      }\n    },\n    [\n      _c(\n        \"CSidebarBrand\",\n        { staticClass: \"d-md-down-none\", attrs: { to: \"/\" } },\n        [\n          _c(\"img\", {\n            staticClass: \"c-sidebar-brand-full\",\n            attrs: { src: \"/img/logo-big.svg\", alt: _vm.$t(\"core.title\") }\n          }),\n          _vm._v(\" \"),\n          _c(\"img\", {\n            staticClass: \"c-sidebar-brand-minimized\",\n            attrs: { src: \"/img/logo-small.svg\", alt: _vm.$t(\"core.title\") }\n          })\n        ]\n      ),\n      _vm._v(\" \"),\n      _c(\"CRenderFunction\", {\n        attrs: { flat: \"\", \"content-to-render\": _vm.getNav }\n      }),\n      _vm._v(\" \"),\n      _c(\"CSidebarMinimizer\", {\n        staticClass: \"d-md-down-none\",\n        nativeOn: {\n          click: function($event) {\n            return _vm.$store.commit(\"sidebar/set\", [\"minimize\", !_vm.minimize])\n          }\n        }\n      })\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import mod from \"-!../../node_modules/babel-loader/lib/index.js??ref--3!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TheSidebar.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/babel-loader/lib/index.js??ref--3!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TheSidebar.vue?vue&type=script&lang=js&\"","<template>\n\t<CSidebar\n\t\tfixed\n\t\t:minimize='minimize'\n\t\t:show='show'\n\t\t@update:show='(value) => $store.commit(\"sidebar/set\", [\"show\", value])'\n\t>\n\t\t<CSidebarBrand class='d-md-down-none' to='/'>\n\t\t\t<img class='c-sidebar-brand-full' src='/img/logo-big.svg' :alt='$t(\"core.title\")'>\n\t\t\t<img class='c-sidebar-brand-minimized' src='/img/logo-small.svg' :alt='$t(\"core.title\")'>\n\t\t</CSidebarBrand>\n\t\t<CRenderFunction flat :content-to-render='getNav' />\n\t\t<CSidebarMinimizer\n\t\t\tclass='d-md-down-none'\n\t\t\t@click.native='$store.commit(\"sidebar/set\", [\"minimize\", !minimize])'\n\t\t/>\n\t</CSidebar>\n</template>\n\n<script>\nimport {\n\tCRenderFunction,\n\tCSidebar,\n\tCSidebarBrand,\n\tCSidebarMinimizer,\n} from '@coreui/vue/src';\nimport {\n\tcibGrafana,\n\tcibNodeRed,\n\tcilBook,\n\tcilCloud,\n\tcilLan,\n\tcilLockLocked,\n\tcilStorage,\n\tcilSettings,\n\tcilToggleOff,\n\tcilUser,\n\tcilWifiSignal4,\n} from '@coreui/icons';\n\nexport default {\n\tname: 'TheSidebar',\n\tcomponents: {\n\t\tCRenderFunction,\n\t\tCSidebar,\n\t\tCSidebarBrand,\n\t\tCSidebarMinimizer,\n\t},\n\tcomputed: {\n\t\tshow() {\n\t\t\treturn this.$store.state.sidebar.show;\n\t\t},\n\t\tminimize() {\n\t\t\treturn this.$store.state.sidebar.minimize;\n\t\t},\n\t\tgetNav() {\n\t\t\tconst data = [\n\t\t\t\t{\n\t\t\t\t\t_name: 'CSidebarNav',\n\t\t\t\t\t_children: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t_name: 'CSidebarNavDropdown',\n\t\t\t\t\t\t\tname: this.$t('gateway.title'),\n\t\t\t\t\t\t\tto: '/gateway/',\n\t\t\t\t\t\t\troute: '/gateway/',\n\t\t\t\t\t\t\ticon: {content: cilStorage},\n\t\t\t\t\t\t\troles: ['power', 'normal'],\n\t\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: this.$t('gateway.info.title'),\n\t\t\t\t\t\t\t\t\tto: '/gateway/info/',\n\t\t\t\t\t\t\t\t\troles: ['power', 'normal'],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: this.$t('gateway.log.title'),\n\t\t\t\t\t\t\t\t\tto: '/gateway/log/',\n\t\t\t\t\t\t\t\t\troles: ['power', 'normal'],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: this.$t('gateway.mode.title'),\n\t\t\t\t\t\t\t\t\tto: '/gateway/change-mode/',\n\t\t\t\t\t\t\t\t\troles: ['power', 'normal'],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: this.$t('service.iqrf-gateway-daemon.title'),\n\t\t\t\t\t\t\t\t\tto: '/service/iqrf-gateway-daemon/',\n\t\t\t\t\t\t\t\t\troles: ['power', 'normal'],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: this.$t('service.ssh.title'),\n\t\t\t\t\t\t\t\t\tto: '/service/ssh/',\n\t\t\t\t\t\t\t\t\tfeature: 'ssh',\n\t\t\t\t\t\t\t\t\troles: ['power', 'normal'],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: this.$t('service.unattended-upgrades.title'),\n\t\t\t\t\t\t\t\t\tto: '/service/unattended-upgrades/',\n\t\t\t\t\t\t\t\t\tfeature: 'unattendedUpgrades',\n\t\t\t\t\t\t\t\t\troles: ['power', 'normal'],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t/*{\n\t\t\t\t\t\t\t\t\tname: this.$t('gateway.updater.title'),\n\t\t\t\t\t\t\t\t\tto: '/gateway/updater/',\n\t\t\t\t\t\t\t\t\tfeature: 'updater',\n\t\t\t\t\t\t\t\t\troles: ['power', 'normal'],\n\t\t\t\t\t\t\t\t},*/\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: this.$t('gateway.power.title'),\n\t\t\t\t\t\t\t\t\tto: '/gateway/power/',\n\t\t\t\t\t\t\t\t\troles: ['power', 'normal'],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t_name: 'CSidebarNavDropdown',\n\t\t\t\t\t\t\tname: this.$t('config.title'),\n\t\t\t\t\t\t\tto: '/config/',\n\t\t\t\t\t\t\troute: '/config/',\n\t\t\t\t\t\t\ticon: {content: cilSettings},\n\t\t\t\t\t\t\troles: ['power', 'normal'],\n\t\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: this.$t('config.main.title'),\n\t\t\t\t\t\t\t\t\tto: '/config/main/',\n\t\t\t\t\t\t\t\t\troles: ['power'],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: this.$t('config.components.title'),\n\t\t\t\t\t\t\t\t\tto: '/config/component/',\n\t\t\t\t\t\t\t\t\troles: ['power'],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: this.$t('config.selectedComponents.title'),\n\t\t\t\t\t\t\t\t\tto: '/config/component/',\n\t\t\t\t\t\t\t\t\troles: ['normal'],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: this.$t('config.iqrfSpi.title'),\n\t\t\t\t\t\t\t\t\tto: '/config/iqrf-spi/',\n\t\t\t\t\t\t\t\t\tcomponent: 'iqrf::IqrfSpi',\n\t\t\t\t\t\t\t\t\troles: ['power', 'normal'],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: this.$t('config.iqrfCdc.title'),\n\t\t\t\t\t\t\t\t\tto: '/config/iqrf-cdc/',\n\t\t\t\t\t\t\t\t\tcomponent: 'iqrf::IqrfCdc',\n\t\t\t\t\t\t\t\t\troles: ['power', 'normal'],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: this.$t('config.iqrfUart.title'),\n\t\t\t\t\t\t\t\t\tto: '/config/iqrf-uart/',\n\t\t\t\t\t\t\t\t\tcomponent: 'iqrf::IqrfUart',\n\t\t\t\t\t\t\t\t\troles: ['power', 'normal'],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: this.$t('config.iqrfDpa.title'),\n\t\t\t\t\t\t\t\t\tto: '/config/iqrf-dpa/',\n\t\t\t\t\t\t\t\t\troles: ['power', 'normal'],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: this.$t('config.iqrfRepository.title'),\n\t\t\t\t\t\t\t\t\tto: '/config/iqrf-repository/',\n\t\t\t\t\t\t\t\t\troles: ['power', 'normal'],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: this.$t('config.iqrfInfo.title'),\n\t\t\t\t\t\t\t\t\tto: '/config/iqrf-info/',\n\t\t\t\t\t\t\t\t\troles: ['power', 'normal'],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: this.$t('config.iqmesh.title'),\n\t\t\t\t\t\t\t\t\tto: '/config/iqmesh/',\n\t\t\t\t\t\t\t\t\troles: ['power'],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: this.$t('config.mqtt.title'),\n\t\t\t\t\t\t\t\t\tto: '/config/mqtt/',\n\t\t\t\t\t\t\t\t\troles: ['power', 'normal'],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: this.$t('config.websocket.title'),\n\t\t\t\t\t\t\t\t\tto: '/config/websocket/',\n\t\t\t\t\t\t\t\t\troles: ['power', 'normal'],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: this.$t('config.mq.title'),\n\t\t\t\t\t\t\t\t\tto: '/config/mq/',\n\t\t\t\t\t\t\t\t\troles: ['power', 'normal'],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: this.$t('config.udp.title'),\n\t\t\t\t\t\t\t\t\tto: '/config/udp/',\n\t\t\t\t\t\t\t\t\troles: ['power', 'normal'],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: this.$t('config.jsonRawApi.title'),\n\t\t\t\t\t\t\t\t\tto: '/config/json-raw-api/',\n\t\t\t\t\t\t\t\t\troles: ['power'],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: this.$t('config.jsonMngMetaDataApi.title'),\n\t\t\t\t\t\t\t\t\tto: '/config/json-mng-meta-data-api/',\n\t\t\t\t\t\t\t\t\troles: ['power', 'normal'],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: this.$t('config.jsonSplitter.title'),\n\t\t\t\t\t\t\t\t\tto: '/config/json-splitter/',\n\t\t\t\t\t\t\t\t\troles: ['power'],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: this.$t('config.scheduler.title'),\n\t\t\t\t\t\t\t\t\tto: '/config/scheduler/',\n\t\t\t\t\t\t\t\t\troles: ['power', 'normal'],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: this.$t('config.tracer.title'),\n\t\t\t\t\t\t\t\t\tto: '/config/tracer/',\n\t\t\t\t\t\t\t\t\troles: ['power', 'normal'],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: this.$t('config.monitor.title'),\n\t\t\t\t\t\t\t\t\tto: '/config/monitor/',\n\t\t\t\t\t\t\t\t\troles: ['power', 'normal'],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: this.$t('config.migration.title'),\n\t\t\t\t\t\t\t\t\tto: '/config/migration/',\n\t\t\t\t\t\t\t\t\troles: ['power', 'normal'],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: this.$t('translatorConfig.title'),\n\t\t\t\t\t\t\t\t\tto: '/config/translator/',\n\t\t\t\t\t\t\t\t\tfeature: 'iqrfGatewayTranslator',\n\t\t\t\t\t\t\t\t\troles: ['power', 'normal'],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: this.$t('controllerConfig.title'),\n\t\t\t\t\t\t\t\t\tto: '/config/controller/',\n\t\t\t\t\t\t\t\t\tfeature: 'iqrfGatewayController',\n\t\t\t\t\t\t\t\t\troles: ['power', 'normal'],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: this.$t('config.mender.title'),\n\t\t\t\t\t\t\t\t\tto: '/config/mender/',\n\t\t\t\t\t\t\t\t\tfeature: 'mender',\n\t\t\t\t\t\t\t\t\troles: ['power', 'normal']\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t_name: 'CSidebarNavDropdown',\n\t\t\t\t\t\t\tname: this.$t('iqrfnet.title'),\n\t\t\t\t\t\t\tto: '/iqrfnet/',\n\t\t\t\t\t\t\troute: '/iqrfnet/',\n\t\t\t\t\t\t\ticon: {content: cilWifiSignal4},\n\t\t\t\t\t\t\troles: ['power', 'normal'],\n\t\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: this.$t('iqrfnet.sendPacket.title'),\n\t\t\t\t\t\t\t\t\tto: '/iqrfnet/send-raw/',\n\t\t\t\t\t\t\t\t\troles: ['power', 'normal'],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: this.$t('iqrfnet.sendJson.title'),\n\t\t\t\t\t\t\t\t\tto: '/iqrfnet/send-json/',\n\t\t\t\t\t\t\t\t\troles: ['power', 'normal'],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: this.$t('iqrfnet.trUpload.title'),\n\t\t\t\t\t\t\t\t\tto: '/iqrfnet/tr-upload/',\n\t\t\t\t\t\t\t\t\tfeature: 'trUpload',\n\t\t\t\t\t\t\t\t\troles: ['power', 'normal'],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: this.$t('iqrfnet.trConfiguration.title'),\n\t\t\t\t\t\t\t\t\tto: '/iqrfnet/tr-config/0',\n\t\t\t\t\t\t\t\t\troles: ['power', 'normal'],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: this.$t('iqrfnet.networkManager.title'),\n\t\t\t\t\t\t\t\t\tto: '/iqrfnet/network/',\n\t\t\t\t\t\t\t\t\troles: ['power', 'normal'],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: this.$t('iqrfnet.standard.title'),\n\t\t\t\t\t\t\t\t\tto: '/iqrfnet/standard/',\n\t\t\t\t\t\t\t\t\troles: ['power', 'normal'],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t_name: 'CSidebarNavDropdown',\n\t\t\t\t\t\t\tname: this.$t('network.title'),\n\t\t\t\t\t\t\tto: '/network/',\n\t\t\t\t\t\t\troute: '/network/',\n\t\t\t\t\t\t\tfeature: 'networkManager',\n\t\t\t\t\t\t\ticon: {content: cilLan},\n\t\t\t\t\t\t\troles: ['power', 'normal'],\n\t\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: this.$t('network.ethernet.title'),\n\t\t\t\t\t\t\t\t\tto: '/network/ethernet',\n\t\t\t\t\t\t\t\t\troles: ['power', 'normal'],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t_name: 'CSidebarNavDropdown',\n\t\t\t\t\t\t\tname: this.$t('cloud.title'),\n\t\t\t\t\t\t\tto: '/cloud/',\n\t\t\t\t\t\t\troute: '/cloud/',\n\t\t\t\t\t\t\ticon: {content: cilCloud},\n\t\t\t\t\t\t\troles: ['power', 'normal'],\n\t\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: this.$t('cloud.ibmCloud.title'),\n\t\t\t\t\t\t\t\t\tto: '/cloud/ibm-cloud/',\n\t\t\t\t\t\t\t\t\troles: ['power', 'normal'],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: this.$t('cloud.msAzure.title'),\n\t\t\t\t\t\t\t\t\tto: '/cloud/azure/',\n\t\t\t\t\t\t\t\t\troles: ['power', 'normal'],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: this.$t('cloud.amazonAws.title'),\n\t\t\t\t\t\t\t\t\tto: '/cloud/aws/',\n\t\t\t\t\t\t\t\t\troles: ['power', 'normal'],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: this.$t('cloud.hexio.title'),\n\t\t\t\t\t\t\t\t\tto: '/cloud/hexio/',\n\t\t\t\t\t\t\t\t\troles: ['power', 'normal'],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: this.$t('cloud.intelimentsInteliGlue.title'),\n\t\t\t\t\t\t\t\t\tto: '/cloud/inteli-glue/',\n\t\t\t\t\t\t\t\t\troles: ['power', 'normal'],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: this.$t('cloud.pixla.title'),\n\t\t\t\t\t\t\t\t\tto: '/cloud/pixla/',\n\t\t\t\t\t\t\t\t\tfeature: 'pixla',\n\t\t\t\t\t\t\t\t\troles: ['power', 'normal'],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t_name: 'CSidebarNavItem',\n\t\t\t\t\t\t\tname: this.$t('core.grafana.title'),\n\t\t\t\t\t\t\thref: this.$store.getters['features/configuration']('grafana').url,\n\t\t\t\t\t\t\ttarget: '_blank',\n\t\t\t\t\t\t\tfeature: 'grafana',\n\t\t\t\t\t\t\ticon: {content: cibGrafana},\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t_name: 'CSidebarNavDropdown',\n\t\t\t\t\t\t\tname: this.$t('core.nodeRed.title'),\n\t\t\t\t\t\t\tfeature: 'nodeRed',\n\t\t\t\t\t\t\ticon: {content: cibNodeRed},\n\t\t\t\t\t\t\troles: ['power', 'normal'],\n\t\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: this.$t('core.nodeRed.workflow.title'),\n\t\t\t\t\t\t\t\t\thref: this.$store.getters['features/configuration']('nodeRed').url,\n\t\t\t\t\t\t\t\t\ttarget: '_blank',\n\t\t\t\t\t\t\t\t\troles: ['power', 'normal'],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: this.$t('core.nodeRed.dashboard.title'),\n\t\t\t\t\t\t\t\t\thref: this.$store.getters['features/configuration']('nodeRed').url + 'ui/',\n\t\t\t\t\t\t\t\t\ttarget: '_blank',\n\t\t\t\t\t\t\t\t\troles: ['power', 'normal'],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t_name: 'CSidebarNavItem',\n\t\t\t\t\t\t\tname: this.$t('core.supervisor.title'),\n\t\t\t\t\t\t\thref: this.$store.getters['features/configuration']('supervisord').url,\n\t\t\t\t\t\t\ttarget: '_blank',\n\t\t\t\t\t\t\tfeature: 'supervisord',\n\t\t\t\t\t\t\ticon: {content: cilToggleOff},\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t_name: 'CSidebarNavItem',\n\t\t\t\t\t\t\tname: this.$t('core.user.title'),\n\t\t\t\t\t\t\tto: '/user/',\n\t\t\t\t\t\t\ticon: {content: cilUser},\n\t\t\t\t\t\t\troles: ['power', 'normal'],\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t_name: 'CSidebarNavItem',\n\t\t\t\t\t\t\tname: this.$t('core.apiKey.title'),\n\t\t\t\t\t\t\tto: '/api-key/',\n\t\t\t\t\t\t\ticon: {content: cilLockLocked},\n\t\t\t\t\t\t\troles: ['power', 'normal']\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t_name: 'CSidebarNavItem',\n\t\t\t\t\t\t\tname: this.$t('core.documentation.title'),\n\t\t\t\t\t\t\thref: this.$store.getters['features/configuration']('docs').url,\n\t\t\t\t\t\t\ttarget: '_blank',\n\t\t\t\t\t\t\tfeature: 'docs',\n\t\t\t\t\t\t\ticon: {content: cilBook},\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t];\n\t\t\treturn data.filter((element) => {\n\t\t\t\telement._children = element._children.filter((element) => {\n\t\t\t\t\tif (element.roles !== undefined &&\n\t\t\t\t\t\t\t!element.roles.includes(this.$store.getters['user/getRole'])) {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t\tif (element.feature !== undefined &&\n\t\t\t\t\t\t\t!this.$store.getters['features/isEnabled'](element.feature)) {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t\tif (element.items) {\n\t\t\t\t\t\telement.items = element.items.filter((element) => {\n\t\t\t\t\t\t\tif (element.roles !== undefined &&\n\t\t\t\t\t\t\t\t\t!element.roles.includes(this.$store.getters['user/getRole'])) {\n\t\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (element.feature !== undefined &&\n\t\t\t\t\t\t\t\t\t!this.$store.getters['features/isEnabled'](element.feature)) {\n\t\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn element;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn element;\n\t\t\t\t});\n\t\t\t\treturn element;\n\t\t\t});\n\t\t}\n\t},\n};\n</script>\n","import { render, staticRenderFns } from \"./TheSidebar.vue?vue&type=template&id=6bd688ac&\"\nimport script from \"./TheSidebar.vue?vue&type=script&lang=js&\"\nexport * from \"./TheSidebar.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('6bd688ac')) {\n      api.createRecord('6bd688ac', component.options)\n    } else {\n      api.reload('6bd688ac', component.options)\n    }\n    module.hot.accept(\"./TheSidebar.vue?vue&type=template&id=6bd688ac&\", function () {\n      api.rerender('6bd688ac', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/components/TheSidebar.vue\"\nexport default component.exports","import mod from \"-!../../node_modules/babel-loader/lib/index.js??ref--3!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TheDashboard.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/babel-loader/lib/index.js??ref--3!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TheDashboard.vue?vue&type=script&lang=js&\"","<template>\n\t<div class='c-app'>\n\t\t<LoadingSpinner />\n\t\t<TheSidebar />\n\t\t<CWrapper>\n\t\t\t<TheHeader />\n\t\t\t<div class='c-body'>\n\t\t\t\t<main class='c-main'>\n\t\t\t\t\t<CContainer fluid>\n\t\t\t\t\t\t<div class='fade-in'>\n\t\t\t\t\t\t\t<slot />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</CContainer>\n\t\t\t\t</main>\n\t\t\t</div>\n\t\t</CWrapper>\n\t</div>\n</template>\n\n<script>\nimport {CContainer, CWrapper} from '@coreui/vue';\nimport LoadingSpinner from './LoadingSpinner';\nimport TheHeader from './TheHeader';\nimport TheSidebar from './TheSidebar';\n\nexport default {\n\tname: 'TheDashboard',\n\tcomponents: {\n\t\tCContainer,\n\t\tCWrapper,\n\t\tLoadingSpinner,\n\t\tTheHeader,\n\t\tTheSidebar,\n\t},\n};\n</script>\n","import { render, staticRenderFns } from \"./TheDashboard.vue?vue&type=template&id=655c8438&\"\nimport script from \"./TheDashboard.vue?vue&type=script&lang=js&\"\nexport * from \"./TheDashboard.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('655c8438')) {\n      api.createRecord('655c8438', component.options)\n    } else {\n      api.reload('655c8438', component.options)\n    }\n    module.hot.accept(\"./TheDashboard.vue?vue&type=template&id=655c8438&\", function () {\n      api.rerender('655c8438', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/components/TheDashboard.vue\"\nexport default component.exports","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"CCard\",\n    { attrs: { \"body-wrapper\": \"\" } },\n    [\n      _c(\n        \"CListGroup\",\n        [\n          _c(\"CListGroupItem\", { attrs: { to: \"/gateway/\" } }, [\n            _c(\"header\", { staticClass: \"list-group-item-heading\" }, [\n              _vm._v(\n                \"\\n\\t\\t\\t\\t\" + _vm._s(_vm.$t(\"gateway.title\")) + \"\\n\\t\\t\\t\"\n              )\n            ]),\n            _vm._v(\" \"),\n            _c(\"p\", { staticClass: \"list-group-item-text\" }, [\n              _vm._v(\n                \"\\n\\t\\t\\t\\t\" +\n                  _vm._s(_vm.$t(\"gateway.description\")) +\n                  \"\\n\\t\\t\\t\"\n              )\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\"CListGroupItem\", { attrs: { to: \"/config/\" } }, [\n            _c(\"header\", { staticClass: \"list-group-item-heading\" }, [\n              _vm._v(\"\\n\\t\\t\\t\\t\" + _vm._s(_vm.$t(\"config.title\")) + \"\\n\\t\\t\\t\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"p\", { staticClass: \"list-group-item-text\" }, [\n              _vm._v(\n                \"\\n\\t\\t\\t\\t\" + _vm._s(_vm.$t(\"config.description\")) + \"\\n\\t\\t\\t\"\n              )\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\"CListGroupItem\", { attrs: { to: \"/iqrfnet/\" } }, [\n            _c(\"header\", { staticClass: \"list-group-item-heading\" }, [\n              _vm._v(\n                \"\\n\\t\\t\\t\\t\" + _vm._s(_vm.$t(\"iqrfnet.title\")) + \"\\n\\t\\t\\t\"\n              )\n            ]),\n            _vm._v(\" \"),\n            _c(\"p\", { staticClass: \"list-group-item-text\" }, [\n              _vm._v(\n                \"\\n\\t\\t\\t\\t\" +\n                  _vm._s(_vm.$t(\"iqrfnet.description\")) +\n                  \"\\n\\t\\t\\t\"\n              )\n            ])\n          ]),\n          _vm._v(\" \"),\n          _vm.$store.getters[\"features/isEnabled\"](\"networkManager\")\n            ? _c(\"CListGroupItem\", { attrs: { to: \"/network/\" } }, [\n                _c(\"header\", { staticClass: \"list-group-item-heading\" }, [\n                  _vm._v(\n                    \"\\n\\t\\t\\t\\t\" + _vm._s(_vm.$t(\"network.title\")) + \"\\n\\t\\t\\t\"\n                  )\n                ]),\n                _vm._v(\" \"),\n                _c(\"p\", { staticClass: \"list-group-item-text\" }, [\n                  _vm._v(\n                    \"\\n\\t\\t\\t\\t\" +\n                      _vm._s(_vm.$t(\"network.description\")) +\n                      \"\\n\\t\\t\\t\"\n                  )\n                ])\n              ])\n            : _vm._e(),\n          _vm._v(\" \"),\n          _c(\"CListGroupItem\", { attrs: { to: \"/cloud/\" } }, [\n            _c(\"header\", { staticClass: \"list-group-item-heading\" }, [\n              _vm._v(\"\\n\\t\\t\\t\\t\" + _vm._s(_vm.$t(\"cloud.title\")) + \"\\n\\t\\t\\t\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"p\", { staticClass: \"list-group-item-text\" }, [\n              _vm._v(\n                \"\\n\\t\\t\\t\\t\" + _vm._s(_vm.$t(\"cloud.description\")) + \"\\n\\t\\t\\t\"\n              )\n            ])\n          ]),\n          _vm._v(\" \"),\n          _vm.$store.getters[\"features/isEnabled\"](\"grafana\")\n            ? _c(\n                \"CListGroupItem\",\n                {\n                  attrs: {\n                    href: _vm.$store.getters[\"features/configuration\"](\n                      \"grafana\"\n                    ).url,\n                    target: \"_blank\"\n                  }\n                },\n                [\n                  _c(\"header\", { staticClass: \"list-group-item-heading\" }, [\n                    _vm._v(\n                      \"\\n\\t\\t\\t\\t\" +\n                        _vm._s(_vm.$t(\"core.grafana.title\")) +\n                        \"\\n\\t\\t\\t\"\n                    )\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"p\", { staticClass: \"list-group-item-text\" }, [\n                    _vm._v(\n                      \"\\n\\t\\t\\t\\t\" +\n                        _vm._s(_vm.$t(\"core.grafana.description\")) +\n                        \"\\n\\t\\t\\t\"\n                    )\n                  ])\n                ]\n              )\n            : _vm._e(),\n          _vm._v(\" \"),\n          _vm.$store.getters[\"features/isEnabled\"](\"nodeRed\")\n            ? _c(\n                \"CListGroupItem\",\n                {\n                  attrs: {\n                    href: _vm.$store.getters[\"features/configuration\"](\n                      \"nodeRed\"\n                    ).url,\n                    target: \"_blank\"\n                  }\n                },\n                [\n                  _c(\"header\", { staticClass: \"list-group-item-heading\" }, [\n                    _vm._v(\n                      \"\\n\\t\\t\\t\\t\" +\n                        _vm._s(_vm.$t(\"core.nodeRed.workflow.title\")) +\n                        \"\\n\\t\\t\\t\"\n                    )\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"p\", { staticClass: \"list-group-item-text\" }, [\n                    _vm._v(\n                      \"\\n\\t\\t\\t\\t\" +\n                        _vm._s(_vm.$t(\"core.nodeRed.workflow.description\")) +\n                        \"\\n\\t\\t\\t\"\n                    )\n                  ])\n                ]\n              )\n            : _vm._e(),\n          _vm._v(\" \"),\n          _vm.$store.getters[\"features/isEnabled\"](\"nodeRed\")\n            ? _c(\n                \"CListGroupItem\",\n                {\n                  attrs: {\n                    href:\n                      _vm.$store.getters[\"features/configuration\"](\"nodeRed\")\n                        .url + \"ui/\",\n                    target: \"_blank\"\n                  }\n                },\n                [\n                  _c(\"header\", { staticClass: \"list-group-item-heading\" }, [\n                    _vm._v(\n                      \"\\n\\t\\t\\t\\t\" +\n                        _vm._s(_vm.$t(\"core.nodeRed.dashboard.title\")) +\n                        \"\\n\\t\\t\\t\"\n                    )\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"p\", { staticClass: \"list-group-item-text\" }, [\n                    _vm._v(\n                      \"\\n\\t\\t\\t\\t\" +\n                        _vm._s(_vm.$t(\"core.nodeRed.dashboard.description\")) +\n                        \"\\n\\t\\t\\t\"\n                    )\n                  ])\n                ]\n              )\n            : _vm._e(),\n          _vm._v(\" \"),\n          _vm.$store.getters[\"features/isEnabled\"](\"supervisord\")\n            ? _c(\n                \"CListGroupItem\",\n                {\n                  attrs: {\n                    href: _vm.$store.getters[\"features/configuration\"](\n                      \"supervisord\"\n                    ).url,\n                    target: \"_blank\"\n                  }\n                },\n                [\n                  _c(\"header\", { staticClass: \"list-group-item-heading\" }, [\n                    _vm._v(\n                      \"\\n\\t\\t\\t\\t\" +\n                        _vm._s(_vm.$t(\"core.supervisor.title\")) +\n                        \"\\n\\t\\t\\t\"\n                    )\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"p\", { staticClass: \"list-group-item-text\" }, [\n                    _vm._v(\n                      \"\\n\\t\\t\\t\\t\" +\n                        _vm._s(_vm.$t(\"core.supervisor.description\")) +\n                        \"\\n\\t\\t\\t\"\n                    )\n                  ])\n                ]\n              )\n            : _vm._e(),\n          _vm._v(\" \"),\n          _c(\"CListGroupItem\", { attrs: { to: \"/user/\" } }, [\n            _c(\"header\", { staticClass: \"list-group-item-heading\" }, [\n              _vm._v(\n                \"\\n\\t\\t\\t\\t\" + _vm._s(_vm.$t(\"core.user.title\")) + \"\\n\\t\\t\\t\"\n              )\n            ]),\n            _vm._v(\" \"),\n            _c(\"p\", { staticClass: \"list-group-item-text\" }, [\n              _vm._v(\n                \"\\n\\t\\t\\t\\t\" +\n                  _vm._s(_vm.$t(\"core.user.description\")) +\n                  \"\\n\\t\\t\\t\"\n              )\n            ])\n          ]),\n          _vm._v(\" \"),\n          _vm.$store.getters[\"features/isEnabled\"](\"docs\")\n            ? _c(\n                \"CListGroupItem\",\n                {\n                  attrs: {\n                    href: _vm.$store.getters[\"features/configuration\"](\"docs\")\n                      .url,\n                    target: \"_blank\"\n                  }\n                },\n                [\n                  _c(\"header\", { staticClass: \"list-group-item-heading\" }, [\n                    _vm._v(\n                      \"\\n\\t\\t\\t\\t\" +\n                        _vm._s(_vm.$t(\"core.documentation.title\")) +\n                        \"\\n\\t\\t\\t\"\n                    )\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"p\", { staticClass: \"list-group-item-text\" }, [\n                    _vm._v(\n                      \"\\n\\t\\t\\t\\t\" +\n                        _vm._s(_vm.$t(\"core.documentation.description\")) +\n                        \"\\n\\t\\t\\t\"\n                    )\n                  ])\n                ]\n              )\n            : _vm._e()\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import Vue from 'vue';\nimport { CCard, CListGroup, CListGroupItem } from '@coreui/vue/src';\nexport default Vue.extend({\n    name: 'MainDisambiguation',\n    components: {\n        CCard: CCard,\n        CListGroup: CListGroup,\n        CListGroupItem: CListGroupItem\n    },\n});\n","import mod from \"-!../../node_modules/ts-loader/index.js??ref--1!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MainDisambiguation.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/ts-loader/index.js??ref--1!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MainDisambiguation.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./MainDisambiguation.vue?vue&type=template&id=df00ba80&\"\nimport script from \"./MainDisambiguation.vue?vue&type=script&lang=ts&\"\nexport * from \"./MainDisambiguation.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/roman/gitlab/iqrf/iqrf-gateway-webapp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('df00ba80')) {\n      api.createRecord('df00ba80', component.options)\n    } else {\n      api.reload('df00ba80', component.options)\n    }\n    module.hot.accept(\"./MainDisambiguation.vue?vue&type=template&id=df00ba80&\", function () {\n      api.rerender('df00ba80', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/components/MainDisambiguation.vue\"\nexport default component.exports","/**\n * Copyright 2017 MICRORISC s.r.o.\n * Copyright 2017-2019 IQRF Tech s.r.o.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport axios from 'axios';\nimport CoreuiVue from '@coreui/vue/src';\nimport * as Sentry from '@sentry/browser';\nimport { Vue as VueIntegration } from '@sentry/integrations/dist/vue';\nimport Vue from 'vue';\nimport VueMeta from 'vue-meta';\n// @ts-ignore\nimport VueNativeSock from 'vue-native-websocket';\nimport VueToast from 'vue-toast-notification';\nimport Clipboard from 'v-clipboard';\nimport store from './store';\nimport router from './router';\nimport i18n from './i18n';\nimport '../css/app.scss';\nimport 'vue-toast-notification/dist/theme-sugar.css';\nimport 'vue-datetime/dist/vue-datetime.css';\nimport App from './components/App.vue';\nimport TheDashboard from './components/TheDashboard.vue';\nimport MainDisambiguation from './components/MainDisambiguation.vue';\nSentry.init({\n    dsn: 'https://435ee2b55f994e5f85e21a9ca93ea7a7@sentry.iqrf.org/5',\n    integrations: [new VueIntegration({ Vue: Vue, attachProps: true, logErrors: true })],\n});\nstore.commit('SOCKET_ONCLOSE');\nstore.commit('spinner/HIDE');\nVue.prototype.$appName = 'IQRF Gateway Webapp';\nvar isHttps = location.protocol === 'https:';\nvar hostname = window.location.hostname;\nvar isLocalhost = ['localhost', '127.0.0.1', '[::1]'].includes(hostname);\nvar wsApi = (isHttps ? 'wss://' : 'ws://') + window.location.hostname + (isLocalhost ? ':1338' : '/ws');\nVue.use(VueNativeSock, wsApi, {\n    store: store,\n    format: 'json',\n    reconnection: true,\n});\nVue.use(CoreuiVue);\nVue.use(VueMeta);\nVue.use(VueToast, {\n    position: 'top',\n    duration: 10000\n});\nVue.use(Clipboard);\naxios.defaults.baseURL = '//' + window.location.host + '/api/v0/';\naxios.defaults.timeout = 30000;\naxios.interceptors.response.use(function (response) {\n    return response;\n}, function (error) {\n    if (error.response === undefined) {\n        // TODO: Add Network error toaster notification\n        return Promise.reject(error);\n    }\n    if (error.response.status === 401) {\n        store.dispatch('user/signOut')\n            .then(function () {\n            location.replace('/sign/in');\n        });\n    }\n    return Promise.reject(error);\n});\nnew Vue({\n    el: '#app',\n    components: {\n        App: App,\n        TheDashboard: TheDashboard,\n        MainDisambiguation: MainDisambiguation,\n    },\n    router: router,\n    store: store,\n    i18n: i18n,\n    metaInfo: {\n        titleTemplate: function (titleChunk) {\n            return (titleChunk ? i18n.t(titleChunk).toString() + \" | \" : '') +\n                i18n.t('core.title').toString();\n        }\n    },\n});\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ResourceUsage.vue?vue&type=style&index=0&id=6ed3f697&scoped=true&lang=css&\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"9f045b6e\", content, false, {});\n// Hot Module Replacement\nif(module.hot) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ResourceUsage.vue?vue&type=style&index=0&id=6ed3f697&scoped=true&lang=css&\", function() {\n     var newContent = require(\"!!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ResourceUsage.vue?vue&type=style&index=0&id=6ed3f697&scoped=true&lang=css&\");\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/mini-css-extract-plugin/dist/loader.js!../../node_modules/css-loader/dist/cjs.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SignIn.vue?vue&type=style&index=0&id=7b84bbc3&scoped=true&lang=css&\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"0498fb9a\", content, false, {});\n// Hot Module Replacement\nif(module.hot) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../../node_modules/mini-css-extract-plugin/dist/loader.js!../../node_modules/css-loader/dist/cjs.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SignIn.vue?vue&type=style&index=0&id=7b84bbc3&scoped=true&lang=css&\", function() {\n     var newContent = require(\"!!../../node_modules/mini-css-extract-plugin/dist/loader.js!../../node_modules/css-loader/dist/cjs.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SignIn.vue?vue&type=style&index=0&id=7b84bbc3&scoped=true&lang=css&\");\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DeviceEnumeration.vue?vue&type=style&index=0&id=7b8817a0&scoped=true&lang=css&\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"7b132150\", content, false, {});\n// Hot Module Replacement\nif(module.hot) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DeviceEnumeration.vue?vue&type=style&index=0&id=7b8817a0&scoped=true&lang=css&\", function() {\n     var newContent = require(\"!!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DeviceEnumeration.vue?vue&type=style&index=0&id=7b8817a0&scoped=true&lang=css&\");\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/sass-loader/dist/cjs.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DevicesInfo.vue?vue&type=style&index=0&id=22f61cec&scoped=true&lang=scss&\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"3449c1ff\", content, false, {});\n// Hot Module Replacement\nif(module.hot) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/sass-loader/dist/cjs.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DevicesInfo.vue?vue&type=style&index=0&id=22f61cec&scoped=true&lang=scss&\", function() {\n     var newContent = require(\"!!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/sass-loader/dist/cjs.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DevicesInfo.vue?vue&type=style&index=0&id=22f61cec&scoped=true&lang=scss&\");\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NetworkManager.vue?vue&type=style&index=0&id=9bbbfec0&scoped=true&lang=css&\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"5dbd6372\", content, false, {});\n// Hot Module Replacement\nif(module.hot) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NetworkManager.vue?vue&type=style&index=0&id=9bbbfec0&scoped=true&lang=css&\", function() {\n     var newContent = require(\"!!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NetworkManager.vue?vue&type=style&index=0&id=9bbbfec0&scoped=true&lang=css&\");\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BinaryOutputManager.vue?vue&type=style&index=0&id=1e7284a8&scoped=true&lang=css&\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"f3b35bc8\", content, false, {});\n// Hot Module Replacement\nif(module.hot) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BinaryOutputManager.vue?vue&type=style&index=0&id=1e7284a8&scoped=true&lang=css&\", function() {\n     var newContent = require(\"!!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BinaryOutputManager.vue?vue&type=style&index=0&id=1e7284a8&scoped=true&lang=css&\");\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SensorManager.vue?vue&type=style&index=0&id=09a96214&scoped=true&lang=css&\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"a9bcff4c\", content, false, {});\n// Hot Module Replacement\nif(module.hot) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SensorManager.vue?vue&type=style&index=0&id=09a96214&scoped=true&lang=css&\", function() {\n     var newContent = require(\"!!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SensorManager.vue?vue&type=style&index=0&id=09a96214&scoped=true&lang=css&\");\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/mini-css-extract-plugin/dist/loader.js!../../node_modules/css-loader/dist/cjs.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/sass-loader/dist/cjs.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./LoadingSpinner.vue?vue&type=style&index=0&id=e0752284&scoped=true&lang=scss&\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"42e34533\", content, false, {});\n// Hot Module Replacement\nif(module.hot) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../../node_modules/mini-css-extract-plugin/dist/loader.js!../../node_modules/css-loader/dist/cjs.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/sass-loader/dist/cjs.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./LoadingSpinner.vue?vue&type=style&index=0&id=e0752284&scoped=true&lang=scss&\", function() {\n     var newContent = require(\"!!../../node_modules/mini-css-extract-plugin/dist/loader.js!../../node_modules/css-loader/dist/cjs.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/sass-loader/dist/cjs.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./LoadingSpinner.vue?vue&type=style&index=0&id=e0752284&scoped=true&lang=scss&\");\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}"],"sourceRoot":""}